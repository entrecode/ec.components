var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AceComponent.html",[0,0.31,1,1.322]],["body/components/AceComponent.html",[0,0.473,1,1.937,2,0.898,3,0.162,4,0.167,5,0.644,6,1.579,7,0.86,8,0.831,9,1.292,10,0.127,11,2.729,12,0.346,13,2.668,14,5.55,15,4.029,16,2.304,17,1.64,18,4.404,19,4.722,20,1.905,21,2.207,22,2.606,23,2.671,24,0.701,25,1.56,26,0.007,27,2.085,28,3.153,29,2.584,30,3.153,31,2.584,32,0.892,33,2.248,34,1.892,35,2.973,36,5.763,37,1.237,38,4.722,39,0.326,40,0.576,41,3.952,42,1.609,43,3.628,44,3.628,45,1.397,46,1.609,47,2.888,48,1.865,49,2.973,50,3.058,51,2.486,52,1.726,53,3.099,54,0.731,55,3.437,56,3.159,57,3.001,58,3.099,59,4.077,60,4.722,61,4.722,62,2.861,63,3.246,64,3.491,65,1.216,66,6.671,67,8.899,68,0.774,69,1.668,70,1.193,71,3.063,72,1.382,73,2.557,74,6.476,75,4.956,76,5.304,77,5.304,78,3.246,79,3.338,80,6.476,81,3.063,82,3.063,83,3.412,84,0.956,85,2.793,86,3.243,87,2.918,88,1.099,89,1.223,90,1.813,91,3.063,92,4.722,93,5.304,94,3.063,95,2.973,96,3.063,97,3.614,98,1.851,99,3.243,100,1.008,101,1.01,102,0.713,103,2.973,104,3.063,105,4.722,106,3.063,107,4.25,108,3.868,109,4.722,110,4.722,111,3.063,112,4.722,113,2.973,114,3.063,115,3.243,116,2.434,117,1.789,118,2.104,119,4.206,120,2.345,121,0.972,122,2.345,123,2.606,124,1.236,125,3.614,126,3.063,127,1.697,128,3.063,129,1.668,130,3.063,131,1.987,132,3.063,133,2.557,134,3.063,135,2.861,136,3.868,137,3.063,138,1.652,139,1.731,140,2.345,141,2.345,142,1.21,143,1.398,144,2.345,145,1.731,146,3.614,147,1.856,148,2.345,149,2.345,150,2.104,151,1.731,152,0.256,153,1.385,154,0.274,155,1.236,156,0.94,157,2.729,158,3.063,159,3.063,160,3.063,161,2.729,162,2.509,163,2.729,164,2.509,165,2.345,166,0.583,167,0.112,168,0.127,169,4.722,170,4.722,171,3.063,172,3.063,173,5.304,174,3.063,175,3.614,176,2.729,177,5.134,178,3.063,179,5.763,180,3.063,181,3.099,182,3.063,183,1.374,184,3.868,185,3.063,186,1.495,187,3.063,188,1.007,189,3.063,190,3.063,191,3.614,192,3.063,193,1.731,194,1.928,195,3.063,196,2.345,197,3.063,198,0.592,199,0.961,200,0.655,201,1.292,202,1.787,203,0.86,204,0.86,205,0.776,206,1.819,207,0.776,208,0.817,209,0.725,210,0.803,211,0.817,212,2.163,213,0.817,214,1.318,215,1.819,216,0.817,217,1.291,218,2.233,219,0.817,220,0.817,221,0.86,222,0.803,223,1.326,224,0.817,225,0.86,226,0.803,227,0.86,228,0.789,229,0.776,230,1.618,231,1.618,232,0.789,233,0.803,234,0.803,235,0.789,236,0.86,237,0.817,238,0.817,239,1.964,240,0.817,241,0.803,242,0.817,243,0.817,244,0.817,245,0.803,246,0.86,247,0.789,248,0.817,249,0.86,250,0.803,251,0.86,252,0.803,253,0.789,254,0.961,255,0.86,256,0.803,257,0.86,258,0.789,259,0.803,260,0.86,261,0.803,262,0.86,263,0.737,264,0.86,265,0.803,266,1.41,267,0.86,268,0.789,269,0.86,270,0.803,271,0.86,272,0.776,273,0.86,274,0.803,275,0.789,276,0.803,277,0.763,278,0.86,279,0.803,280,0.86,281,0.803,282,0.86,283,0.776,284,0.86,285,0.789,286,0.803,287,0.86,288,0.803,289,0.831,290,0.86,291,0.789,292,0.803,293,1.789,294,0.803,295,0.817,296,0.666,297,0.817,298,0.817,299,0.803,300,0.817,301,0.817,302,0.817,303,0.86,304,0.789,305,0.803,306,0.86,307,0.803,308,0.831,309,0.803,310,0.86,311,0.803,312,0.86,313,0.817,314,0.803,315,0.803,316,0.86,317,0.803,318,0.86,319,0.803,320,0.86,321,0.803,322,0.75,323,0.75,324,0.776,325,0.86,326,0.789,327,0.86,328,0.789,329,0.86,330,0.789,331,0.86,332,0.789,333,0.86,334,0.789,335,0.845,336,0.86,337,0.789,338,0.845,339,0.86,340,0.002,341,0.003,342,0.002]],["title/modules/AceModule.html",[343,1.155,344,3.646]],["body/modules/AceModule.html",[1,2.63,3,0.351,4,0.362,10,0.274,25,2.668,26,0.007,27,3.842,28,4.762,29,4.762,30,4.762,31,5.077,32,1.436,152,0.318,154,0.595,156,2.038,166,1.263,167,0.295,168,0.274,198,1.285,340,0.004,341,0.005,342,0.004,343,1.52,344,7.013,345,2.623,346,2.516,347,3.588,348,2.739,349,3.511,350,5.918,351,5.918,352,5.918,353,5.918,354,5.918,355,5.33,356,3.405,357,2.568,358,2.279,359,5.918,360,4.563,361,2.719,362,2.323,363,6.642,364,5.918,365,6.642]],["title/interfaces/Action.html",[366,1.345,367,2.529]],["body/interfaces/Action.html",[0,0.439,3,0.289,4,0.298,5,1.151,10,0.226,17,1.386,20,2.884,22,3.232,26,0.007,32,0.847,33,1.231,34,1.041,39,0.582,40,0.872,42,1.578,46,1.023,52,2.25,57,2.536,68,0.783,69,1.862,84,0.908,102,0.946,123,3.599,152,0.309,154,0.49,166,1.041,167,0.309,168,0.226,188,1.474,205,1.81,217,1.249,254,1.717,304,1.841,340,0.004,341,0.005,342,0.004,357,2.116,366,1.906,367,4.65,368,2.361,369,4.189,370,3.64,371,4.137,372,4.618,373,3.623,374,6.459,375,1.647,376,3.911,377,4.876,378,5.471,379,4.876,380,3.487,381,1.537,382,4.691,383,5.471,384,4.822,385,3.445,386,1.537,387,2.161,388,2.995,389,2.031,390,6.52,391,4.876,392,2.161,393,3.911,394,4.483,395,4.876,396,4.876,397,1.41,398,4.876,399,4.876,400,4.876,401,4.876,402,4.876,403,4.483,404,4.876,405,4.876,406,4.876,407,4.876,408,6.368,409,7.092,410,4.876,411,4.876,412,4.876,413,4.909,414,4.483,415,4.876,416,4.876,417,4.876,418,4.876,419,4.876,420,4.876,421,4.189,422,4.876,423,6.368,424,4.652,425,2.995,426,2.67,427,4.483,428,4.876,429,4.876,430,3.954,431,4.876,432,3.685,433,4.876,434,3.198,435,4.876,436,4.189,437,4.876,438,4.876,439,4.876,440,3.445,441,4.876,442,4.876,443,4.876,444,4.876]],["title/interfaces/ActionbarConfig.html",[366,1.345,383,3.862]],["body/interfaces/ActionbarConfig.html",[0,0.454,3,0.304,4,0.314,5,1.21,10,0.238,17,1.457,20,3.289,22,3.338,26,0.007,32,0.89,33,1.294,34,1.094,42,1.608,46,1.076,52,2.293,57,2.666,68,0.493,69,1.692,84,0.955,123,3.687,152,0.315,154,0.515,166,1.094,167,0.315,168,0.238,188,1.502,205,1.87,217,1.29,254,1.17,304,1.902,340,0.004,341,0.005,342,0.004,357,2.225,366,1.968,367,4.311,368,2.482,369,4.403,370,2.482,371,3.889,372,3.148,373,3.289,374,5.651,375,1.19,376,4.04,377,5.126,378,5.651,379,5.126,380,3.977,381,1.616,382,4.845,383,6.24,384,4.939,385,3.622,386,1.616,387,2.272,388,3.148,389,2.135,390,6.677,391,5.126,392,2.272,393,4.04,394,4.712,395,5.126,396,5.126,397,1.482,398,5.126,399,5.126,400,5.126,401,5.126,402,5.126,403,4.712,404,5.126,405,5.126,406,5.126,407,5.126,408,6.578,409,7.263,410,5.126,411,5.126,412,5.126,413,5.071,414,4.712,415,5.126,416,5.126,417,5.126,418,5.126,419,5.126,420,5.126,421,4.403,422,5.126,423,6.578,424,4.764,425,3.148,426,2.807,427,4.712,428,5.126,429,5.126,430,4.157,431,5.126,432,3.806,433,5.126,434,3.362,435,5.126,436,4.403,437,5.126,438,5.126,439,5.126,440,3.622,441,5.126,442,5.126,443,5.126,444,5.126]],["title/components/AdminEntryInputComponent.html",[0,0.31,207,1.278]],["body/components/AdminEntryInputComponent.html",[0,0.482,1,1.051,2,1.098,3,0.212,4,0.219,5,0.844,7,1.127,8,1.088,10,0.166,12,0.453,20,2.33,21,2.328,24,0.918,26,0.007,32,0.621,33,2.27,34,1.912,37,1.513,39,0.426,40,0.705,42,1.611,45,0.926,46,1.786,47,3.391,48,2.244,49,3.636,50,4.879,51,2.918,52,1.973,53,5.653,54,0.894,63,3.71,64,4.099,68,0.78,70,1.174,72,1.08,84,0.666,89,0.847,90,1.256,100,0.832,101,1.03,102,0.589,118,2.756,119,4.522,120,3.071,121,0.974,122,3.071,127,1.513,129,1.034,131,1.772,139,2.267,140,3.071,141,3.071,142,1.585,143,1.71,144,3.071,145,2.267,146,4.42,147,2.431,148,3.071,149,3.071,150,2.756,151,4.614,152,0.271,154,0.359,156,1.231,167,0.147,168,0.166,198,0.776,199,1.175,200,0.858,202,2.042,203,1.127,204,1.127,205,1.016,206,2.078,207,1.874,208,1.07,209,1.933,210,1.051,211,1.07,212,2.364,213,1.07,214,1.548,215,2.078,216,1.07,217,1.427,218,2.419,219,1.07,220,1.07,221,1.127,222,1.051,223,1.622,224,1.07,225,1.127,226,1.051,227,1.127,228,1.034,229,1.016,230,1.908,231,1.9,232,1.034,233,1.051,234,1.051,235,1.034,236,1.127,237,1.07,238,1.07,239,2.202,240,1.07,241,1.051,242,1.07,243,1.07,244,1.07,245,1.051,246,1.127,247,1.034,248,1.07,249,1.127,250,1.051,251,1.127,252,1.051,253,1.034,254,1.175,255,1.127,256,1.051,257,1.127,258,1.034,259,1.051,260,1.127,261,1.051,262,1.127,263,0.966,264,1.127,265,1.051,266,1.656,267,1.127,268,1.034,269,1.127,270,1.051,271,1.127,272,1.016,273,1.127,274,1.051,275,1.034,276,1.051,277,0.999,278,1.127,279,1.051,280,1.127,281,1.051,282,1.127,283,1.016,284,1.127,285,1.034,286,1.051,287,1.127,288,1.051,289,1.088,290,1.127,291,1.034,292,1.051,293,1.938,294,1.051,295,1.07,296,0.873,297,1.07,298,1.07,299,1.051,300,1.07,301,1.07,302,1.07,303,1.127,304,1.034,305,1.051,306,1.127,307,1.051,308,1.088,309,1.051,310,1.127,311,1.051,312,1.127,313,1.07,314,1.051,315,1.051,316,1.127,317,1.051,318,1.127,319,1.051,320,1.127,321,1.051,322,0.982,323,0.982,324,1.016,325,1.127,326,1.034,327,1.127,328,1.034,329,1.127,330,1.034,331,1.127,332,1.034,333,1.127,334,1.034,335,1.107,336,1.127,337,1.034,338,1.107,339,1.127,340,0.003,341,0.004,342,0.003,389,2.143,392,1.585,445,5.901,446,5.901,447,2.899,448,3.16,449,3.636,450,2.895,451,4.42,452,5.145,453,6.423,454,3.375,455,3.499,456,4.173,457,5.145,458,5.145,459,5.775,460,4.173,461,4.42,462,3.052,463,0.789,464,2.13,465,3.097,466,5.775,467,6.766,468,1.772,469,3.286,470,3.286,471,3.286,472,4.73,473,4.73,474,3.499]],["title/directives/AssetDirective.html",[200,1.08,324,1.278]],["body/directives/AssetDirective.html",[3,0.267,4,0.275,5,1.793,9,2.128,10,0.209,12,0.57,17,1.715,23,3.544,24,1.155,26,0.007,32,1.048,33,1.524,39,0.536,40,0.827,42,1.641,46,1.677,54,1.048,56,3.987,65,1.745,68,0.811,69,1.764,70,1.201,72,0.944,84,1.124,89,0.994,90,1.098,100,0.976,101,0.795,102,0.691,117,2.566,133,3.367,138,2.369,143,2.42,152,0.299,154,0.452,166,0.96,167,0.185,168,0.209,188,1.428,199,1.027,200,1.636,201,2.128,209,2.157,214,2.259,323,1.235,324,1.715,340,0.003,341,0.004,342,0.003,371,4.255,373,2.036,375,1.401,392,1.993,397,1.3,462,3.619,463,0.993,464,2.678,465,3.367,468,2.228,474,4.951,475,1.731,476,4.496,477,4.618,478,6.774,479,6.774,480,8.967,481,4.525,482,5.905,483,5.525,484,6.16,485,2.566,486,5.835,487,6.774,488,3.395,489,5.018,490,5.046,491,2.256,492,4.338,493,5.548,494,5.046,495,5.046,496,4.894,497,5.046,498,2.733,499,5.046,500,5.046,501,3.827,502,6.035,503,5.046,504,3.063,505,2.922,506,6.035,507,1.951,508,5.046,509,4.446,510,5.046,511,3.707,512,5.046,513,4.133,514,3.312,515,5.046,516,5.046,517,3.466,518,5.046,519,3.057,520,5.046,521,5.046,522,2.851,523,5.046,524,2.006,525,3.466,526,3.466,527,3.312,528,3.862,529,6.774,530,7.282,531,3.862,532,3.646,533,5.046,534,1.745,535,3.862,536,2.851,537,3.312,538,4.133,539,5.548,540,5.046,541,5.046,542,5.046]],["title/components/AssetgroupSelectComponent.html",[0,0.31,210,1.322]],["body/components/AssetgroupSelectComponent.html",[0,0.436,1,1.145,2,1.167,3,0.231,4,0.238,5,0.919,7,1.227,8,1.185,10,0.181,17,1.554,21,1.106,22,3.207,24,1,26,0.007,33,2.277,34,1.919,37,1.608,39,0.464,40,0.749,42,1.613,45,0.7,46,1.147,54,0.949,57,3.564,65,1.581,68,0.739,69,1.513,70,1.134,84,0.725,89,0.641,90,0.951,100,0.63,101,1.034,102,0.446,121,0.933,127,1.608,129,1.125,143,2.277,152,0.224,154,0.391,167,0.16,168,0.181,198,0.845,199,1.248,200,0.935,202,2.122,203,1.227,204,1.227,205,1.106,206,2.16,207,1.106,208,1.165,209,1.034,210,2.015,211,2.386,212,2.423,213,1.165,214,1.623,215,2.16,216,1.165,217,1.467,218,2.473,219,1.165,220,1.165,221,1.227,222,1.145,223,1.723,224,1.165,225,1.227,226,1.145,227,1.227,228,1.125,229,1.106,230,1.791,231,1.992,232,1.125,233,1.145,234,1.145,235,1.125,236,1.227,237,1.165,238,1.165,239,2.275,240,1.165,241,1.145,242,1.165,243,1.165,244,1.165,245,1.145,246,1.227,247,1.125,248,1.165,249,1.227,250,1.145,251,1.227,252,1.145,253,1.125,254,1.709,255,1.227,256,1.145,257,1.227,258,1.125,259,1.145,260,1.227,261,1.145,262,1.227,263,1.052,264,1.227,265,1.145,266,1.736,267,1.227,268,1.125,269,1.227,270,1.145,271,1.227,272,1.106,273,1.227,274,1.145,275,1.125,276,1.145,277,1.088,278,1.227,279,1.145,280,1.227,281,1.145,282,1.227,283,1.106,284,1.227,285,1.125,286,1.145,287,1.227,288,1.145,289,1.185,290,1.227,291,1.125,292,1.145,293,1.981,294,1.145,295,1.165,296,0.951,297,1.165,298,1.165,299,1.145,300,1.165,301,1.165,302,1.165,303,1.227,304,1.125,305,1.145,306,1.227,307,1.145,308,1.185,309,1.145,310,1.227,311,1.145,312,1.227,313,1.165,314,1.145,315,1.145,316,1.227,317,1.145,318,1.227,319,1.145,320,1.227,321,1.145,322,1.069,323,1.069,324,1.106,325,1.227,326,1.125,327,1.227,328,1.125,329,1.227,330,1.125,331,1.227,332,1.125,333,1.227,334,1.125,335,1.206,336,1.227,337,1.125,338,1.206,339,1.227,340,0.003,341,0.004,342,0.003,375,1.591,392,1.725,463,0.859,485,2.324,524,1.817,543,8.08,544,7.428,545,3.579,546,5.467,547,5.057,548,4.654,549,7.691,550,7.092,551,4.176,552,3.46,553,5.808,554,4.369,555,5.467,556,4.369,557,4.369,558,4.369,559,4.369,560,3.893,561,3.893,562,3.893,563,3.157,564,2.252,565,1.622,566,2.751,567,3.157,568,4.369,569,4.369,570,4.696,571,3.586]],["title/guards/AuthGuard.html",[572,3.862,573,3.862]],["body/guards/AuthGuard.html",[3,0.331,4,0.342,10,0.259,12,0.707,17,1.586,26,0.007,32,0.969,39,0.666,40,0.764,54,1.205,68,0.667,70,0.987,72,1.585,73,2.474,84,1.039,86,5.351,89,0.919,100,0.903,101,0.735,102,0.639,142,2.474,152,0.334,154,0.561,156,1.922,167,0.229,168,0.259,188,1.361,275,1.614,340,0.004,341,0.005,342,0.004,373,2.527,462,3.658,463,1.232,464,3.325,465,3.673,468,2.766,524,2.307,572,5.963,573,5.963,574,6.264,575,7.554,576,5.581,577,5.629,578,4.719,579,6.001,580,4.401,581,3.528,582,5.528,583,4.854,584,4.719,585,3.61,586,7.266,587,7.618,588,4.137,589,4.012,590,6.264,591,6.264,592,5.113,593,3.523,594,2.226,595,3.539,596,4.854,597,3.14,598,3.943,599,4.111,600,6.264,601,5.131,602,4.111,603,1.457,604,2.641,605,2.474,606,5.581,607,5.131,608,6.264,609,6.264,610,6.264,611,7.791,612,6.264,613,6.264,614,5.581,615,6.264,616,6.264,617,6.264]],["title/modules/AuthModule.html",[343,1.155,618,3.646]],["body/modules/AuthModule.html",[2,1.46,3,0.323,4,0.334,10,0.253,12,0.691,25,2.771,26,0.007,152,0.353,154,0.548,155,2.468,156,1.878,167,0.281,168,0.253,188,1.069,198,1.183,272,2.468,288,2.554,289,1.659,305,2.554,340,0.004,341,0.005,342,0.004,343,1.919,345,2.416,346,2.317,347,3.459,348,2.523,349,3.384,355,5.224,356,3.237,357,2.366,358,2.099,361,2.584,362,2.685,426,2.985,477,3.456,573,5.875,618,7.184,619,5.45,620,5.45,621,5.45,622,5.45,623,5.45,624,7.077,625,5.404,626,5.011,627,5.082,628,4.337,629,5.875,630,3.649,631,2.766,632,5.546,633,6.061,634,5.272,635,6.839,636,4.682,637,5.45,638,6.118,639,4.682,640,5.45,641,5.011,642,6.118,643,6.118,644,6.118,645,6.118,646,6.118]],["title/injectables/AuthService.html",[594,1.442,625,2.949]],["body/injectables/AuthService.html",[3,0.328,4,0.188,10,0.143,12,0.39,25,2.049,26,0.007,27,3.418,32,0.96,34,0.984,39,0.367,44,3.256,45,0.829,46,1.544,54,1.408,55,2.745,68,0.663,69,1.892,70,1.133,87,2.043,88,1.921,89,1.354,100,1.258,101,1.025,102,0.928,117,1.308,121,0.681,133,2.72,138,1.809,152,0.252,154,0.309,166,1.179,167,0.126,168,0.143,188,1.705,209,2.299,275,1.9,289,2.239,293,1.395,296,1.125,308,2.001,340,0.002,341,0.003,342,0.005,357,2,386,1.934,397,0.89,456,4.481,460,5.594,462,2.557,463,0.679,465,3.057,468,1.525,489,3.395,491,1.901,492,2.745,507,3.192,534,0.89,536,4.769,579,3.904,592,3.395,594,1.478,604,1.456,605,1.364,606,3.077,625,3.023,627,2.092,628,1.951,647,1.562,648,3.077,649,4.237,650,2.923,651,3.395,652,6.136,653,5.994,654,4.237,655,2.83,656,3.904,657,4.747,658,5.08,659,4.237,660,5.926,661,4.237,662,5.525,663,3.737,664,2.409,665,5.641,666,2.83,667,4.609,668,4.609,669,4.609,670,5.173,671,4.237,672,5.173,673,6.202,674,4.609,675,7.376,676,6.887,677,5.173,678,5.173,679,3.077,680,4.374,681,3.454,682,3.134,683,4.609,684,5.173,685,3.454,686,5.525,687,6.766,688,4.609,689,3.454,690,5.173,691,3.454,692,1.92,693,6.887,694,4.26,695,3.454,696,8.441,697,3.192,698,3.36,699,3.454,700,2.745,701,5.641,702,3.134,703,5.173,704,3.454,705,4.52,706,2.829,707,3.454,708,6.761,709,6.898,710,5.173,711,3.454,712,3.454,713,5.173,714,3.454,715,5.173,716,3.454,717,3.959,718,2.666,719,3.077,720,3.454,721,4.609,722,2.266,723,2.174,724,1.685,725,6.887,726,6.887,727,5.173,728,3.454,729,3.454,730,5.641,731,5.173,732,5.173,733,5.173,734,3.454,735,6.202,736,5.641,737,3.454,738,3.454,739,6.202,740,3.454,741,3.959,742,3.077,743,3.454,744,3.395,745,3.454,746,3.454,747,3.454,748,3.454,749,3.454,750,5.173,751,3.077,752,5.173,753,3.454,754,3.134,755,3.454,756,3.134,757,3.395,758,3.454,759,5.173,760,5.173,761,3.454,762,3.454,763,3.454,764,3.256,765,5.173,766,5.173,767,3.553,768,5.173,769,5.173,770,3.134,771,5.173,772,5.173,773,5.173,774,5.173,775,3.454,776,3.454,777,3.454,778,5.173,779,3.454,780,3.454,781,3.454,782,3.454,783,3.454,784,3.454,785,3.454,786,3.454,787,3.454,788,3.454,789,1.282,790,3.077,791,2.174,792,3.077,793,3.454]],["title/modules/CalendarModule.html",[343,1.155,794,3.312]],["body/modules/CalendarModule.html",[2,1.414,3,0.307,4,0.317,10,0.24,12,0.656,25,2.706,26,0.007,27,4.03,54,0.9,68,0.701,70,0.737,89,0.853,100,0.838,101,0.683,102,0.593,152,0.339,154,0.521,166,1.106,167,0.272,168,0.24,188,1.016,198,1.124,220,2.58,224,2.58,248,2.58,281,2.536,340,0.004,341,0.005,342,0.004,343,1.875,345,2.296,346,2.202,347,3.378,348,2.397,349,3.305,356,3.134,357,2.248,358,1.995,361,1.957,362,2.6,593,3.361,628,4.199,630,3.533,631,2.629,632,5.92,656,5.746,794,6.509,795,5.18,796,5.18,797,5.18,798,6.993,799,5.18,800,4.679,801,5.105,802,5.18,803,7.433,804,4.067,805,5.814,806,5.814,807,5.814,808,5.814,809,5.814,810,5.814,811,5.814,812,5.18,813,6.088,814,5.814,815,6.088,816,5.814,817,6.088,818,5.18,819,5.18,820,5.814,821,3.522,822,3.285,823,5.18,824,5.814,825,5.814,826,5.814]],["title/classes/Collection.html",[168,0.209,827,3.312]],["body/classes/Collection.html",[3,0.184,4,0.189,10,0.144,12,0.392,26,0.007,32,1.469,39,0.929,40,0.634,45,1.38,46,1.451,52,2.521,54,0.804,68,0.785,70,1.154,84,1.227,88,2.172,89,1.336,90,1.609,98,1.485,100,1.26,101,1.026,102,0.913,121,1.133,138,1.216,152,0.127,166,1.406,167,0.127,168,0.215,183,1.512,188,1.477,217,1.087,340,0.002,341,0.003,342,0.002,358,1.192,375,2.011,397,2.251,463,0.684,475,1.192,498,2.984,507,2.01,534,1.78,565,1.929,592,4.534,593,3.124,596,4.627,597,1.742,598,4.349,666,3.406,692,3.522,717,2.66,827,6.249,828,2.458,829,3.096,830,6.225,831,5.197,832,4.564,833,4.085,834,3.266,835,5.197,836,5.197,837,6.909,838,4.257,839,4.257,840,5.197,841,5.197,842,2.936,843,5.197,844,5.197,845,4.63,846,5.687,847,5.104,848,4.257,849,6.225,850,2.885,851,3.037,852,3.475,853,3.57,854,7.646,855,3.475,856,4.085,857,5.197,858,5.197,859,6.08,860,3.617,861,3.475,862,4.185,863,3.78,864,4.534,865,6.909,866,5.197,867,5.197,868,3.475,869,5.197,870,3.978,871,3.272,872,5.197,873,3.475,874,5.197,875,5.197,876,3.475,877,5.197,878,5.197,879,3.475,880,3.475,881,2.605,882,5.197,883,3.475,884,5.197,885,5.197,886,3.475,887,4.037,888,5.197,889,5.197,890,3.475,891,5.197,892,3.475,893,3.475,894,3.475,895,3.475,896,2.387,897,1.844,898,3.475,899,3.475,900,3.475,901,3.475,902,3.475,903,3.371,904,3.475,905,3.475,906,3.475,907,2.281,908,1.572,909,3.978,910,6.225,911,5.197,912,5.197,913,3.475,914,1.844,915,3.475,916,3.475,917,3.096,918,6.909,919,7.396,920,6.225,921,8.044,922,3.475,923,3.475,924,3.475,925,3.475,926,3.096,927,3.475,928,3.475,929,3.475,930,3.475]],["title/classes/Config.html",[168,0.209,386,1.417]],["body/classes/Config.html",[3,0.33,4,0.34,10,0.258,12,0.705,26,0.007,39,0.663,40,0.949,45,1,46,1.583,54,1.203,68,0.725,69,1.854,70,0.985,73,3.499,88,2.162,89,1.242,100,0.9,101,0.733,102,0.863,117,2.945,121,0.821,167,0.228,168,0.321,188,1.358,340,0.004,341,0.005,342,0.004,384,3.782,386,2.81,389,2.885,491,1.723,507,2.414,564,3.218,585,3.603,605,3.343,697,3.832,804,3.416,828,2.465,931,5.562,932,7.543,933,5.95,934,6.243,935,5.562,936,3.761,937,6.243,938,3.575,939,6.367,940,6.926,941,4.106,942,6.926,943,6.367,944,6.926,945,4.543,946,6.926,947,4.254,948,5.113,949,5.113,950,6.243,951,6.243,952,6.243,953,7.774,954,8.466,955,6.243]],["title/components/CrudComponent.html",[0,0.31,222,1.322]],["body/components/CrudComponent.html",[0,0.353,1,0.8,2,0.896,3,0.161,4,0.166,5,1.469,7,0.857,8,0.828,9,1.287,10,0.126,12,0.345,17,1.193,21,0.773,22,2.6,24,0.699,26,0.007,32,1.142,33,2.248,34,1.891,37,1.234,39,0.324,40,0.575,42,1.306,45,0.755,46,1.663,52,2.118,54,1.19,57,2.996,65,1.213,68,0.746,69,1.374,70,1.145,72,0.881,75,3.605,84,0.781,88,1.096,89,1.196,90,1.025,100,1.007,101,1.034,102,0.849,117,3.209,121,0.85,124,2.818,127,1.694,129,0.786,131,1.984,143,2.278,152,0.319,153,1.381,154,0.274,156,1.984,166,0.581,167,0.112,168,0.126,183,1.673,188,1.388,198,0.591,199,1.315,200,0.653,201,1.287,202,1.784,203,0.857,204,0.857,205,0.773,206,1.815,207,0.773,208,0.814,209,0.722,210,0.8,211,0.814,212,2.16,213,0.814,214,1.316,215,1.815,216,0.814,217,1.6,218,2.231,219,0.814,220,0.814,221,0.857,222,1.934,223,1.323,224,0.814,225,0.857,226,0.8,227,0.857,228,0.786,229,0.773,230,1.839,231,1.615,232,0.786,233,0.8,234,0.8,235,0.786,236,0.857,237,0.814,238,0.814,239,1.961,240,1.723,241,0.8,242,0.814,243,1.723,244,0.814,245,0.8,246,0.857,247,0.786,248,0.814,249,0.857,250,0.8,251,0.857,252,0.8,253,0.786,254,0.958,255,0.857,256,0.8,257,0.857,258,0.786,259,0.8,260,0.857,261,0.8,262,0.857,263,1.556,264,0.857,265,0.8,266,1.408,267,0.857,268,0.786,269,0.857,270,0.8,271,0.857,272,0.773,273,0.857,274,0.8,275,0.786,276,0.8,277,0.76,278,0.857,279,0.8,280,0.857,281,0.8,282,0.857,283,0.773,284,0.857,285,0.786,286,0.8,287,0.857,288,0.8,289,0.828,290,0.857,291,0.786,292,0.8,293,1.787,294,0.8,295,0.814,296,0.664,297,0.814,298,0.814,299,0.8,300,0.814,301,0.814,302,0.814,303,0.857,304,0.786,305,0.8,306,0.857,307,0.8,308,0.828,309,0.8,310,0.857,311,0.8,312,0.857,313,0.814,314,0.8,315,0.8,316,0.857,317,0.8,318,0.857,319,0.8,320,0.857,321,0.8,322,0.747,323,0.747,324,0.773,325,0.857,326,0.786,327,0.857,328,0.786,329,0.857,330,0.786,331,0.857,332,0.786,333,0.857,334,0.786,335,0.843,336,0.857,337,0.786,338,0.843,339,0.857,340,0.002,341,0.003,342,0.002,358,1.616,373,1.232,375,0.974,376,3.537,381,0.857,386,1.615,389,2.739,393,3.146,397,1.213,462,1.942,463,0.926,464,1.62,465,2.553,468,1.348,477,2.661,484,5.046,485,1.784,504,2.13,511,1.671,524,1.703,581,1.181,588,3.408,589,2.923,595,1.725,605,3.287,625,3.778,627,3.484,692,2.399,724,1.49,744,2.004,908,3.764,936,1.181,938,2.32,956,2.72,957,3.858,958,3.235,959,3.858,960,3.858,961,3.605,962,4.71,963,3.052,964,3.484,965,3.146,966,4.196,967,5.751,968,3.158,969,4.844,970,5.241,971,3.858,972,4.71,973,4.71,974,4.71,975,3.62,976,3.361,977,4.495,978,3.62,979,3.652,980,3.249,981,2.092,982,2.5,983,5.721,984,4.71,985,4.082,986,3.053,987,3.858,988,4.196,989,2.661,990,3.053,991,4.71,992,3.053,993,3.053,994,2.726,995,5.649,996,3.053,997,2.428,998,4.196,999,3.053,1000,2.428,1001,4.71,1002,3.053,1003,3.605,1004,3.858,1005,4.71,1006,3.053,1007,3.154,1008,4.71,1009,3.053,1010,4.71,1011,3.053,1012,4.71,1013,3.053,1014,2.239,1015,3.073,1016,4.71,1017,3.053,1018,3.605,1019,3.403,1020,3.053,1021,3.235,1022,2.964,1023,2.965,1024,3.053,1025,3.053,1026,1.62,1027,2.501,1028,1.85,1029,2.72,1030,2.337,1031,2.004,1032,2.004,1033,3.053,1034,3.053,1035,3.053,1036,3.053,1037,2.206,1038,3.053,1039,2.72,1040,4.196,1041,2.337,1042,2.72,1043,3.053,1044,3.053,1045,3.053,1046,3.053,1047,3.053,1048,3.053,1049,2.72,1050,3.053,1051,3.053,1052,3.053,1053,3.053,1054,3.053,1055,2.501,1056,3.053,1057,2.72,1058,3.053,1059,3.053,1060,2.853,1061,2.298,1062,4.155,1063,3.053,1064,2.097,1065,3.403,1066,3.053,1067,1.922,1068,1.922,1069,2.097,1070,2.097,1071,3.053,1072,2.004,1073,4.196]],["title/interfaces/CrudConfig.html",[366,1.345,985,2.949]],["body/interfaces/CrudConfig.html",[0,0.496,3,0.204,4,0.211,10,0.274,12,0.437,20,2.269,26,0.007,32,1.498,34,1.07,39,0.411,40,0.686,48,1.499,54,1.32,66,4.305,68,0.832,69,1.835,72,1.651,73,2.221,87,2.221,102,1.018,121,0.74,152,0.242,156,1.187,167,0.142,183,1.636,211,1.499,214,1.287,217,1.49,230,1.873,254,1.797,263,1.751,283,1.843,296,1.891,322,1.781,340,0.003,341,0.004,342,0.003,366,1.031,368,1.669,375,2.057,380,3.233,381,1.086,387,3.368,389,2.088,484,5.828,486,4.408,492,4.281,496,4.064,498,3.254,511,3.078,514,3.691,534,1.449,551,4.158,571,3.287,583,3.981,585,2.607,588,3.935,692,2.869,701,6.606,718,2.899,754,4.408,756,4.015,757,4.35,789,3.165,804,3.078,832,2.673,834,2.221,881,2.819,908,2.543,965,3.078,968,3.647,985,4.252,987,4.607,1014,4.3,1074,3.447,1075,2.435,1076,5.625,1077,5.625,1078,7.276,1079,7.276,1080,7.276,1081,7.276,1082,8.066,1083,7.276,1084,7.276,1085,5.257,1086,6.483,1087,7.276,1088,7.276,1089,6.483,1090,5.369,1091,7.276,1092,7.276,1093,7.276,1094,7.276,1095,6.483,1096,7.276,1097,7.276,1098,3.863,1099,5.011,1100,3.863,1101,5.625,1102,4.775,1103,5.569,1104,2.744,1105,2.543,1106,1.967,1107,3.647,1108,5.293,1109,2.819,1110,3.863,1111,5.625,1112,5.011,1113,3.691,1114,3.981,1115,4.064,1116,5.011,1117,4.305,1118,3.078,1119,4.252,1120,5.011,1121,4.064,1122,3.541,1123,5.625,1124,4.305,1125,4.305,1126,4.607,1127,5.625,1128,2.607,1129,6.483,1130,6.483,1131,4.408,1132,7.276,1133,5.011,1134,5.625,1135,3.541,1136,2.819,1137,3.691,1138,3.287,1139,5.011,1140,4.607,1141,3.691,1142,4.607,1143,4.305,1144,5.625,1145,4.607,1146,3.691,1147,5.625,1148,2.673,1149,5.011,1150,3.869]],["title/modules/DataModule.html",[343,1.155,1151,3.466]],["body/modules/DataModule.html",[3,0.225,4,0.233,10,0.176,25,2.514,26,0.007,27,2.664,54,0.66,70,0.541,89,0.626,100,0.615,101,0.501,102,0.435,117,2.286,152,0.358,154,0.382,155,1.722,156,1.31,166,0.812,167,0.221,168,0.176,188,0.746,198,0.825,207,2.217,217,1.33,222,2.415,228,2.255,229,2.217,230,1.89,237,2.494,238,2.457,240,2.457,241,2.452,242,2.494,243,2.457,244,2.494,328,2.374,330,2.374,340,0.003,341,0.004,342,0.003,343,0.976,345,1.685,346,1.616,347,2.887,348,1.76,349,2.825,355,5.206,356,2.545,357,1.65,358,1.464,360,3.41,361,2.031,362,2.111,446,3.083,463,0.839,595,2.411,618,6.658,630,2.868,631,1.93,632,5.059,634,4.145,636,3.266,653,5.726,656,3.799,657,3.266,658,3.495,663,4.36,724,2.944,801,4.145,947,2.335,979,4.71,1027,3.495,1028,2.585,1030,4.619,1031,3.961,1032,2.801,1151,6.922,1152,3.802,1153,3.802,1154,3.802,1155,3.802,1156,3.802,1157,6.658,1158,6.329,1159,6.048,1160,5.726,1161,6.023,1162,4.872,1163,3.802,1164,3.802,1165,6.035,1166,4.268,1167,5.377,1168,5.377,1169,3.266,1170,3.083,1171,4.268,1172,4.268,1173,3.802,1174,4.268,1175,3.656,1176,3.656,1177,3.083,1178,3.495,1179,2.931,1180,5.377,1181,4.619,1182,4.268,1183,4.268,1184,2.931,1185,3.802,1186,4.268,1187,3.495,1188,3.802,1189,3.802,1190,3.802,1191,4.268]],["title/components/DatetimeComponent.html",[0,0.31,226,1.322]],["body/components/DatetimeComponent.html",[0,0.475,1,1.015,2,1.071,3,0.205,4,0.211,5,0.815,7,1.088,8,1.051,9,1.633,10,0.16,12,0.437,17,1.426,18,5.475,21,0.981,24,0.886,25,1.86,26,0.007,27,2.486,28,3.629,29,3.081,30,3.629,31,3.081,32,1.249,33,2.269,34,1.911,37,1.475,39,0.412,40,0.687,42,1.595,43,4.176,45,1.167,46,1.24,47,2.822,54,0.871,58,4.778,59,5.08,62,3.411,65,1.45,68,0.713,69,1.107,70,1.147,72,1.053,84,0.934,88,1.31,89,1.068,90,1.584,95,3.545,98,1.609,100,0.956,101,1.037,102,0.676,103,3.545,113,3.545,117,2.133,121,1.018,124,1.563,127,1.475,129,0.998,131,1.728,139,4.82,152,0.266,153,1.752,154,0.347,155,1.563,167,0.142,168,0.16,193,2.189,194,2.439,198,0.749,199,1.145,200,0.829,201,1.633,202,2.009,203,1.088,204,1.088,205,0.981,206,2.045,207,0.981,208,1.033,209,0.917,210,1.015,211,1.033,212,2.338,213,1.033,214,1.518,215,2.045,216,1.033,217,1.41,218,2.396,219,1.033,220,1.941,221,1.088,222,1.015,223,1.581,224,1.033,225,1.088,226,2.115,227,1.088,228,0.998,229,0.981,230,1.735,231,1.863,232,0.998,233,1.015,234,1.015,235,0.998,236,1.088,237,1.033,238,1.033,239,2.172,240,1.033,241,1.015,242,1.033,243,1.033,244,1.033,245,1.015,246,1.088,247,0.998,248,1.033,249,1.088,250,1.015,251,1.088,252,1.015,253,0.998,254,1.145,255,1.088,256,1.015,257,1.088,258,0.998,259,1.015,260,1.088,261,1.015,262,1.088,263,0.932,264,1.088,265,1.015,266,1.624,267,1.088,268,0.998,269,1.088,270,1.015,271,1.088,272,0.981,273,1.088,274,1.015,275,0.998,276,1.015,277,0.964,278,1.088,279,1.015,280,1.088,281,1.015,282,1.088,283,0.981,284,1.088,285,0.998,286,1.015,287,1.088,288,1.015,289,1.051,290,1.088,291,0.998,292,1.015,293,1.919,294,1.015,295,1.033,296,0.843,297,1.033,298,1.033,299,1.015,300,1.033,301,1.033,302,1.033,303,1.088,304,0.998,305,1.015,306,1.088,307,1.015,308,1.051,309,1.015,310,1.088,311,1.015,312,1.088,313,1.033,314,1.015,315,1.015,316,1.088,317,1.015,318,1.088,319,1.015,320,1.088,321,1.015,322,0.948,323,0.948,324,0.981,325,1.088,326,0.998,327,1.088,328,0.998,329,1.088,330,0.998,331,1.088,332,0.998,333,1.088,334,0.998,335,1.069,336,1.088,337,0.998,338,1.069,339,1.088,340,0.003,341,0.004,342,0.003,375,1.506,448,3.081,551,3.987,692,2.09,800,4.869,821,5.482,822,4.114,997,2.902,1108,3.695,1192,3.452,1193,4.778,1194,5.016,1195,5.631,1196,3.876,1197,6.633,1198,4.612,1199,6.633,1200,5.016,1201,3.874,1202,4.255,1203,3.695,1204,3.874,1205,5.631,1206,3.874,1207,3.874,1208,5.631,1209,3.874,1210,6.487,1211,3.874,1212,4.612,1213,3.874,1214,4.612,1215,3.874,1216,2.048,1217,5.631,1218,3.874,1219,3.874,1220,3.874,1221,5.016,1222,3.874,1223,5.016,1224,5.631,1225,3.545,1226,2.799,1227,2.189,1228,3.874,1229,2.661]],["title/pipes/DatetimePipe.html",[798,3.646,1230,2.601]],["body/pipes/DatetimePipe.html",[3,0.336,4,0.347,10,0.263,12,0.718,17,1.612,24,1.456,26,0.007,32,0.985,45,1.532,52,2.098,54,0.985,68,0.545,69,1.94,70,0.807,72,1.471,88,1.831,89,0.934,100,0.917,101,1.003,102,0.649,121,0.837,142,3.107,152,0.312,154,0.57,166,1.211,167,0.233,168,0.263,188,1.492,340,0.004,341,0.005,342,0.004,507,2.461,605,3.107,650,4.446,692,2.92,798,5.685,821,5.174,832,3.74,853,5.404,936,3.043,981,2.316,982,3.043,1193,5.164,1225,4.954,1226,4.599,1230,4.056,1231,4.599,1232,5.671,1233,5.404,1234,4.446,1235,5.404,1236,4.954,1237,6.366,1238,7.016,1239,8.167,1240,6.366,1241,7.869,1242,5.685,1243,4.599,1244,4.007,1245,6.366,1246,6.366,1247,5.671,1248,6.366,1249,6.366,1250,6.366,1251,6.366,1252,6.366,1253,6.366,1254,6.366]],["title/interfaces/Day.html",[366,1.345,1255,4.133]],["body/interfaces/Day.html",[0,0.32,3,0.184,4,0.19,10,0.144,12,0.394,17,0.883,22,2.357,23,2.415,26,0.007,32,1.281,33,0.785,34,0.663,37,0.914,39,0.916,40,0.636,42,1.636,46,1.294,57,1.617,68,0.791,69,1.778,73,2.058,84,1.229,87,2.464,88,1.808,89,0.765,90,1.612,98,1.783,102,0.706,138,3.014,143,2.193,152,0.271,154,0.313,166,1.409,167,0.191,168,0.321,183,1.516,186,3.044,188,1.604,281,0.914,296,1.134,340,0.002,341,0.003,342,0.002,366,1.663,368,1.505,375,1.853,397,1.343,454,2.039,498,2.989,524,1.847,534,1.343,596,4.053,597,1.749,692,1.934,697,2.149,800,3.281,818,3.108,819,5.559,821,5.561,823,7.893,828,1.378,833,4.095,834,1.378,863,2.852,871,2.196,903,3.044,908,1.578,976,4.707,981,1.269,982,2.015,994,1.471,997,2.687,1015,3.29,1098,2.396,1106,1.823,1108,2.289,1136,1.749,1169,2.67,1194,4.643,1196,2.039,1200,7.793,1203,2.289,1216,1.896,1223,7.793,1225,5.329,1226,2.521,1229,3.58,1243,2.521,1244,2.196,1255,7.868,1256,3.108,1257,7.408,1258,3.929,1259,6.924,1260,7.408,1261,5.532,1262,8.618,1263,4.269,1264,3.766,1265,6.6,1266,8.859,1267,6.24,1268,3.766,1269,2.857,1270,2.396,1271,2.289,1272,3.489,1273,2.857,1274,3.489,1275,5.559,1276,5.212,1277,6.067,1278,2.766,1279,5.212,1280,3.489,1281,2.67,1282,1.909,1283,3.489,1284,3.489,1285,3.489,1286,7.772,1287,2.67,1288,3.489,1289,3.489,1290,3.489,1291,2.857,1292,3.489,1293,2.67,1294,4.269,1295,1.798,1296,3.489,1297,3.489,1298,3.489,1299,3.489,1300,3.489,1301,3.489,1302,6.922,1303,3.489,1304,3.489,1305,3.489,1306,4.643,1307,3.489,1308,3.489,1309,3.489,1310,3.489,1311,3.489,1312,3.489,1313,3.489,1314,3.489,1315,7.772,1316,5.212,1317,6.24,1318,5.212,1319,6.24,1320,5.212,1321,3.489,1322,3.489,1323,3.489,1324,3.489,1325,3.489,1326,7.408,1327,3.489,1328,3.489,1329,3.489,1330,3.489,1331,3.489,1332,3.489,1333,6.922,1334,3.489,1335,5.212,1336,5.212,1337,4.285,1338,3.489,1339,3.489,1340,3.489,1341,3.489,1342,3.489,1343,5.212,1344,3.489,1345,3.489,1346,5.212,1347,2.521,1348,2.521,1349,1.617,1350,3.489,1351,3.489,1352,3.489,1353,3.489,1354,3.489,1355,3.489,1356,3.489,1357,3.489,1358,5.212,1359,3.489,1360,3.489,1361,3.489,1362,5.11,1363,3.489,1364,3.489,1365,3.489,1366,3.489,1367,3.489,1368,3.489,1369,3.489,1370,3.489,1371,6.24,1372,6.24,1373,3.489,1374,6.24,1375,3.489,1376,3.489,1377,3.489,1378,3.489,1379,5.212,1380,3.489,1381,3.489,1382,3.489,1383,3.489,1384,3.108,1385,6.24,1386,3.489,1387,2.857,1388,3.108,1389,2.113,1390,3.108,1391,3.489,1392,3.489,1393,5.669,1394,5.212,1395,3.489,1396,3.489,1397,3.489,1398,3.489,1399,3.489,1400,3.766,1401,3.489,1402,3.489,1403,3.489,1404,2.521,1405,3.489,1406,3.489,1407,3.489,1408,3.489,1409,3.489,1410,3.489,1411,3.489,1412,3.489,1413,3.489,1414,2.196,1415,3.489,1416,2.67,1417,3.489,1418,3.489,1419,3.489,1420,3.489,1421,3.489,1422,3.489]],["title/components/DefaultEntryInputComponent.html",[0,0.31,228,1.3]],["body/components/DefaultEntryInputComponent.html",[0,0.478,1,1.027,2,1.08,3,0.207,4,0.214,5,1.405,7,1.101,8,1.063,10,0.162,12,0.443,20,2.292,21,2.318,24,0.897,26,0.007,32,0.607,33,2.268,34,1.91,37,1.488,39,0.417,40,0.693,42,1.657,45,0.91,46,1.781,47,3.347,48,2.392,49,3.576,50,4.859,51,2.881,52,1.952,53,5.617,54,0.879,63,3.67,64,4.046,68,0.768,70,1.16,72,1.062,84,0.651,89,0.833,90,1.236,100,0.819,101,1.024,102,0.579,117,2.773,118,2.693,119,4.497,120,3.001,121,1.126,122,3.001,127,1.488,129,1.01,131,1.743,139,2.215,140,3.001,141,3.001,142,1.548,143,1.682,144,3.001,145,2.215,146,4.347,147,2.375,148,3.001,149,3.001,150,2.693,151,4.578,152,0.244,154,0.351,156,1.203,167,0.143,168,0.162,198,0.758,199,1.155,200,0.839,202,2.021,203,1.101,204,1.101,205,0.993,206,2.056,207,0.993,208,1.045,209,0.928,210,1.027,211,1.045,212,2.347,213,1.045,214,1.528,215,2.056,216,1.045,217,1.416,218,2.404,219,1.045,220,1.045,221,1.101,222,1.027,223,1.595,224,1.045,225,1.101,226,1.027,227,1.101,228,1.886,229,0.993,230,1.912,231,1.876,232,1.01,233,1.027,234,1.027,235,1.01,236,1.101,237,1.045,238,1.045,239,2.182,240,1.045,241,1.027,242,1.045,243,1.045,244,1.045,245,1.027,246,1.101,247,1.01,248,1.045,249,1.101,250,1.027,251,1.101,252,1.027,253,1.01,254,1.155,255,1.101,256,1.027,257,1.101,258,1.01,259,1.027,260,1.101,261,1.027,262,1.101,263,0.944,264,1.101,265,1.027,266,1.635,267,1.101,268,1.01,269,1.101,270,1.027,271,1.101,272,0.993,273,1.101,274,1.027,275,1.01,276,1.027,277,0.976,278,1.101,279,1.027,280,1.101,281,1.027,282,1.101,283,0.993,284,1.101,285,1.01,286,1.027,287,1.101,288,1.027,289,1.063,290,1.101,291,1.01,292,1.027,293,1.926,294,1.027,295,1.045,296,0.853,297,1.045,298,1.045,299,1.027,300,1.045,301,1.045,302,1.045,303,1.101,304,1.01,305,1.027,306,1.101,307,1.027,308,1.063,309,1.027,310,1.101,311,1.027,312,1.101,313,1.045,314,1.027,315,1.027,316,1.101,317,1.027,318,1.101,319,1.027,320,1.101,321,1.027,322,0.96,323,0.96,324,0.993,325,1.101,326,1.01,327,1.101,328,1.01,329,1.101,330,1.01,331,1.101,332,1.01,333,1.101,334,1.01,335,1.082,336,1.101,337,1.01,338,1.082,339,1.101,340,0.003,341,0.004,342,0.003,382,4.805,389,2.108,392,1.548,445,5.615,447,2.833,448,3.108,449,3.576,450,2.847,461,4.347,462,3.019,463,0.771,464,2.081,465,3.069,468,1.731,470,3.212,471,5.997,472,4.652,473,4.652,474,3.441,491,2.021,505,2.45,513,4.652,534,2.205,1109,3.67,1128,2.632,1176,4.708,1263,4.652,1423,3.921,1424,6.679,1425,4.652,1426,4.847,1427,3.728,1428,5.029]],["title/components/DefaultEntryOutputComponent.html",[0,0.31,229,1.278]],["body/components/DefaultEntryOutputComponent.html",[0,0.539,1,1.218,2,1.218,3,0.246,4,0.254,5,0.978,7,1.306,8,1.261,10,0.192,12,0.525,21,1.177,24,1.064,26,0.006,33,2.281,34,1.923,37,1.679,39,0.494,40,0.782,42,0.869,48,2.384,52,2.384,68,0.549,70,0.812,101,1.03,121,1.176,127,1.679,129,1.198,152,0.234,154,0.417,167,0.17,168,0.192,198,0.899,199,1.303,200,0.995,202,2.18,203,1.306,204,1.306,205,1.177,206,2.219,207,1.177,208,1.24,209,1.1,210,1.218,211,1.24,212,2.465,213,1.24,214,1.677,215,2.219,216,1.24,217,1.496,218,2.511,219,1.24,220,1.24,221,1.306,222,1.218,223,1.799,224,1.24,225,1.306,226,1.218,227,1.306,228,1.198,229,2.001,230,1.938,231,2.059,232,1.198,233,1.218,234,1.218,235,1.198,236,1.306,237,1.24,238,1.24,239,2.327,240,1.24,241,1.218,242,1.24,243,1.24,244,1.24,245,1.218,246,1.306,247,1.198,248,1.24,249,1.306,250,1.218,251,1.306,252,1.218,253,1.198,254,1.303,255,1.306,256,1.218,257,1.306,258,1.198,259,1.218,260,1.306,261,1.218,262,1.306,263,1.119,264,1.306,265,1.218,266,1.794,267,1.306,268,1.198,269,1.306,270,1.218,271,1.306,272,1.177,273,1.306,274,1.218,275,1.198,276,1.218,277,1.158,278,1.306,279,1.218,280,1.306,281,1.218,282,1.306,283,1.177,284,1.306,285,1.198,286,1.218,287,1.306,288,1.218,289,1.261,290,1.306,291,1.198,292,1.218,293,2.012,294,1.218,295,1.24,296,1.012,297,1.24,298,1.24,299,1.218,300,1.24,301,1.24,302,1.24,303,1.306,304,1.198,305,1.218,306,1.306,307,1.218,308,1.261,309,1.218,310,1.306,311,1.218,312,1.306,313,1.24,314,1.218,315,1.218,316,1.306,317,1.218,318,1.306,319,1.218,320,1.306,321,1.218,322,1.138,323,1.138,324,1.177,325,1.306,326,1.198,327,1.306,328,1.198,329,1.306,330,1.198,331,1.306,332,1.198,333,1.306,334,1.198,335,1.283,336,1.306,337,1.198,338,1.283,339,1.306,340,0.003,341,0.004,342,0.003,381,1.306,445,5.297,448,3.506,449,4.034,450,3.212,471,3.808,472,5.248,473,5.248,474,3.881,524,2.719,655,3.506,1176,4.441,1263,5.248,1349,2.969,1429,3.808,1430,5.708,1431,4.143,1432,4.143,1433,5.248]],["title/components/DefaultInputComponent.html",[0,0.31,21,1.278]],["body/components/DefaultInputComponent.html",[0,0.475,1,1.012,2,1.069,3,0.204,4,0.211,5,0.813,6,1.991,7,1.085,8,1.048,10,0.16,12,0.436,17,1.423,21,1.841,23,1.79,24,0.884,26,0.007,32,0.869,33,2.267,34,1.909,35,3.537,37,1.472,39,0.411,40,0.686,42,1.556,45,0.9,46,1.754,47,3.872,48,2.411,49,4.169,50,4.613,51,3.332,52,2.354,53,5.07,54,0.869,63,4.273,64,4.405,68,0.73,70,1.119,72,1.36,84,0.932,89,0.824,90,1.222,100,0.81,101,1.02,102,0.573,118,3.859,121,1.143,127,1.472,129,0.995,131,2.232,139,3.741,142,2.219,143,2.288,145,3.175,147,4.012,150,3.859,151,4.365,152,0.295,154,0.346,155,1.559,167,0.141,168,0.16,183,1.124,198,0.747,199,1.143,200,0.826,202,2.007,203,1.085,204,1.085,205,0.978,206,2.042,207,0.978,208,1.03,209,0.914,210,1.012,211,1.03,212,2.336,213,1.03,214,1.515,215,2.042,216,1.03,217,1.408,218,2.394,219,1.03,220,1.03,221,1.085,222,1.012,223,1.578,224,1.03,225,1.085,226,1.012,227,1.085,228,0.995,229,0.978,230,1.734,231,1.86,232,0.995,233,1.012,234,1.012,235,0.995,236,1.085,237,1.03,238,1.03,239,2.17,240,1.03,241,1.012,242,1.03,243,1.03,244,1.03,245,1.012,246,1.085,247,0.995,248,1.03,249,1.085,250,1.012,251,1.085,252,1.012,253,0.995,254,1.143,255,1.085,256,1.012,257,1.085,258,0.995,259,1.012,260,1.085,261,1.012,262,1.085,263,0.93,264,1.085,265,1.012,266,1.621,267,1.085,268,0.995,269,1.085,270,1.012,271,1.085,272,0.978,273,1.085,274,1.012,275,0.995,276,1.012,277,0.962,278,1.085,279,1.012,280,1.085,281,1.012,282,1.085,283,0.978,284,1.085,285,0.995,286,1.012,287,1.085,288,1.012,289,1.048,290,1.085,291,0.995,292,1.012,293,1.918,294,1.012,295,1.03,296,0.84,297,1.03,298,1.03,299,1.012,300,1.03,301,1.03,302,1.03,303,1.085,304,0.995,305,1.012,306,1.085,307,1.012,308,1.048,309,1.012,310,1.085,311,1.012,312,1.085,313,1.03,314,1.012,315,1.012,316,1.085,317,1.012,318,1.085,319,1.012,320,1.085,321,1.012,322,0.946,323,0.946,324,0.978,325,1.085,326,0.995,327,1.085,328,0.995,329,1.085,330,0.995,331,1.085,332,0.995,333,1.085,334,0.995,335,1.066,336,1.085,337,0.995,338,1.066,339,1.085,340,0.003,341,0.004,342,0.003,381,1.085,392,1.526,440,2.432,447,2.791,448,3.075,449,3.537,450,2.816,461,4.301,463,0.76,488,2.816,629,4.301,702,3.404,1433,4.602,1434,7.327,1435,6.847,1436,5.006,1437,5.069,1438,5.9,1439,3.863,1440,5.619,1441,3.863,1442,3.863,1443,3.863,1444,3.863,1445,5.619,1446,3.863,1447,3.863,1448,3.863,1449,3.164,1450,3.863,1451,3.164,1452,3.863,1453,3.863,1454,3.863,1455,2.535,1456,7.272,1457,7.272,1458,5.619,1459,5.619,1460,1.936,1461,3.442]],["title/components/DefaultOutputComponent.html",[0,0.31,232,1.3]],["body/components/DefaultOutputComponent.html",[0,0.439,1,1.162,2,1.179,3,0.234,4,0.242,5,0.933,7,1.246,8,1.203,10,0.183,12,0.501,21,1.123,24,1.015,26,0.007,33,2.278,34,1.92,37,1.625,39,0.471,40,0.757,42,1.337,48,2.425,52,2.425,68,0.531,70,0.786,101,1.017,121,1.11,127,1.625,129,1.143,150,4.259,152,0.227,154,0.397,167,0.162,168,0.183,198,0.858,199,1.262,200,0.949,202,2.137,203,1.246,204,1.246,205,1.123,206,2.174,207,1.123,208,1.183,209,1.05,210,1.162,211,1.183,212,2.433,213,1.183,214,1.636,215,2.174,216,1.183,217,1.475,218,2.482,219,1.183,220,1.183,221,1.246,222,1.162,223,1.742,224,1.183,225,1.246,226,1.162,227,1.246,228,1.143,229,1.123,230,1.798,231,2.008,232,1.994,233,1.162,234,1.162,235,1.143,236,1.246,237,1.183,238,1.183,239,2.288,240,1.183,241,1.162,242,1.183,243,1.183,244,1.183,245,1.162,246,1.246,247,1.143,248,1.183,249,1.246,250,1.162,251,1.246,252,1.162,253,1.143,254,1.262,255,1.246,256,1.162,257,1.246,258,1.143,259,1.162,260,1.246,261,1.162,262,1.246,263,1.068,264,1.246,265,1.162,266,1.75,267,1.246,268,1.143,269,1.246,270,1.162,271,1.246,272,1.123,273,1.246,274,1.162,275,1.143,276,1.162,277,1.104,278,1.246,279,1.162,280,1.246,281,1.162,282,1.246,283,1.123,284,1.246,285,1.143,286,1.162,287,1.246,288,1.162,289,1.203,290,1.246,291,1.143,292,1.162,293,1.989,294,1.162,295,1.183,296,0.965,297,1.183,298,1.183,299,1.162,300,1.183,301,1.183,302,1.183,303,1.246,304,1.143,305,1.162,306,1.246,307,1.162,308,1.203,309,1.162,310,1.246,311,1.162,312,1.246,313,1.183,314,1.162,315,1.162,316,1.246,317,1.162,318,1.246,319,1.162,320,1.246,321,1.162,322,1.086,323,1.086,324,1.123,325,1.246,326,1.143,327,1.246,328,1.143,329,1.246,330,1.143,331,1.246,332,1.143,333,1.246,334,1.143,335,1.224,336,1.246,337,1.143,338,1.224,339,1.246,340,0.003,341,0.004,342,0.003,381,1.246,387,2.449,448,3.393,449,3.904,524,2.292,655,3.393,718,3.197,1202,3.624,1429,3.634,1430,5.525,1431,3.952,1432,3.952,1433,7.859,1434,5.856,1462,5.472,1463,6.202,1464,3.026,1465,4.436,1466,4.436,1467,7.742,1468,4.481]],["title/directives/DropzoneDirective.html",[200,1.08,326,1.3]],["body/directives/DropzoneDirective.html",[3,0.303,4,0.313,10,0.237,12,0.647,24,1.312,26,0.007,32,1.375,33,1.658,39,0.609,42,1.378,45,0.919,46,1.072,65,1.898,68,0.697,70,1.172,84,0.952,100,0.827,101,0.673,102,0.585,121,0.755,123,3.885,127,2.251,143,2.544,152,0.21,154,0.514,167,0.21,168,0.336,188,1.501,200,1.838,323,1.404,326,1.898,340,0.004,341,0.005,342,0.004,375,1.524,397,2.413,463,1.128,485,2.791,522,5.138,524,2.182,564,3.798,566,4.638,604,2.418,860,3.445,994,3.622,1136,4.885,1170,6.571,1196,4.757,1229,5.591,1337,5.591,1460,3.693,1469,5.11,1470,6.564,1471,7.368,1472,8.886,1473,5.639,1474,7.368,1475,5.061,1476,8.591,1477,9.094,1478,5.11,1479,5.735,1480,5.324,1481,5.735,1482,6.564,1483,7.368,1484,5.735,1485,8.591,1486,5.735,1487,7.368,1488,5.591,1489,5.735,1490,5.735,1491,6.571,1492,5.735,1493,5.735,1494,5.735,1495,5.735,1496,4.144,1497,5.11,1498,5.11,1499,5.735,1500,5.735,1501,5.591,1502,7.917,1503,5.735,1504,5.735,1505,5.735,1506,5.735,1507,5.735,1508,5.735,1509,5.735]],["title/components/DynamicRackComponent.html",[0,0.31,233,1.322]],["body/components/DynamicRackComponent.html",[0,0.454,1,1.235,2,1.23,3,0.249,4,0.257,5,0.992,7,1.324,8,1.278,10,0.195,12,0.532,21,1.194,24,1.078,26,0.007,33,2.282,34,1.926,37,1.695,42,0.881,48,1.724,68,0.404,70,0.597,72,1.608,85,2.79,100,0.679,101,1.053,102,0.481,121,0.851,127,1.695,129,1.214,131,1.985,152,0.237,154,0.422,167,0.172,168,0.195,198,0.912,199,1.316,200,1.58,202,2.193,203,1.324,204,1.324,205,1.194,206,2.231,207,1.194,208,1.257,209,1.115,210,1.235,211,1.257,212,2.474,213,1.257,214,1.689,215,2.231,216,1.257,217,1.567,218,2.519,219,1.257,220,1.257,221,1.324,222,1.235,223,1.816,224,1.257,225,1.324,226,1.235,227,1.324,228,1.214,229,1.194,230,1.825,231,2.073,232,1.214,233,2.082,234,1.235,235,2.047,236,1.324,237,1.257,238,1.257,239,2.338,240,1.257,241,1.235,242,1.257,243,1.257,244,1.257,245,1.235,246,1.324,247,1.214,248,1.257,249,1.324,250,1.235,251,1.324,252,1.235,253,1.214,254,1.316,255,1.324,256,1.235,257,1.324,258,1.214,259,1.235,260,1.324,261,1.235,262,1.324,263,1.134,264,1.324,265,1.235,266,1.807,267,1.324,268,1.214,269,1.324,270,1.235,271,1.324,272,1.194,273,1.324,274,1.235,275,1.214,276,1.235,277,1.173,278,1.324,279,1.235,280,1.324,281,1.235,282,1.324,283,1.194,284,1.324,285,1.214,286,1.235,287,1.324,288,1.235,289,1.278,290,1.324,291,1.214,292,1.235,293,2.018,294,1.235,295,1.257,296,1.025,297,1.257,298,1.257,299,1.235,300,1.257,301,1.257,302,1.257,303,1.324,304,1.214,305,1.235,306,1.324,307,1.235,308,1.278,309,1.235,310,1.324,311,1.235,312,1.324,313,1.257,314,1.235,315,1.235,316,1.324,317,1.235,318,1.324,319,1.235,320,1.324,321,1.235,322,1.154,323,1.154,324,1.194,325,1.324,326,1.214,327,1.324,328,1.214,329,1.324,330,1.214,331,1.324,332,1.214,333,1.324,334,1.214,335,1.301,336,1.324,337,1.214,338,1.301,339,1.324,340,0.003,341,0.004,342,0.003,463,1.452,604,1.987,789,2.4,1015,3.074,1106,1.649,1349,2.997,1510,5.297,1511,5.297,1512,4.199,1513,5.297,1514,6.468,1515,4.199,1516,6.583,1517,4.714,1518,4.95,1519,5.297,1520,5.297,1521,5.762,1522,5.297,1523,4.714,1524,4.714,1525,4.714]],["title/components/DynamicSlotComponent.html",[0,0.31,234,1.322]],["body/components/DynamicSlotComponent.html",[0,0.513,1,1.122,2,1.449,3,0.226,4,0.233,5,0.901,7,1.202,8,1.161,10,0.177,12,0.483,21,1.084,24,0.979,26,0.007,33,2.276,34,1.92,37,1.585,39,0.455,40,0.738,42,0.8,45,0.686,46,1.131,48,2.225,52,1.612,54,0.936,68,0.75,70,0.966,72,1.638,85,2.609,87,2.388,88,1.407,89,0.628,100,0.872,101,1.046,102,0.617,121,1.058,124,1.727,127,1.585,129,1.103,131,1.856,138,2.115,152,0.221,153,1.936,154,0.384,166,1.334,167,0.157,168,0.177,188,0.748,198,0.828,199,1.23,200,1.5,202,2.103,203,1.202,204,1.202,205,1.084,206,2.14,207,1.084,208,1.141,209,1.013,210,1.122,211,1.141,212,2.409,213,1.141,214,1.605,215,2.14,216,1.141,217,1.53,218,2.46,219,1.141,220,1.141,221,1.202,222,1.122,223,1.698,224,1.141,225,1.202,226,1.122,227,1.202,228,1.103,229,1.084,230,1.782,231,1.97,232,1.103,233,1.122,234,1.997,235,2.071,236,1.202,237,1.141,238,1.141,239,2.258,240,1.141,241,1.122,242,1.141,243,1.141,244,1.141,245,1.122,246,1.202,247,1.103,248,1.141,249,1.202,250,1.122,251,1.202,252,1.122,253,1.103,254,1.23,255,1.202,256,1.122,257,1.202,258,1.103,259,1.122,260,1.202,261,1.122,262,1.202,263,1.03,264,1.202,265,1.122,266,1.717,267,1.202,268,1.103,269,1.202,270,1.122,271,1.202,272,1.084,273,1.202,274,1.122,275,1.103,276,1.122,277,1.066,278,1.202,279,1.122,280,1.202,281,1.122,282,1.202,283,1.084,284,1.202,285,1.103,286,1.122,287,1.202,288,1.122,289,1.161,290,1.202,291,1.103,292,1.122,293,1.971,294,1.122,295,1.141,296,0.931,297,1.141,298,1.141,299,1.122,300,1.141,301,1.141,302,1.141,303,1.202,304,1.103,305,1.122,306,1.202,307,1.122,308,1.161,309,1.122,310,1.202,311,1.122,312,1.202,313,1.141,314,1.122,315,1.122,316,1.202,317,1.122,318,1.202,319,1.122,320,1.202,321,1.122,322,1.048,323,1.048,324,1.084,325,1.202,326,1.103,327,1.202,328,1.103,329,1.202,330,1.103,331,1.202,332,1.103,333,1.202,334,1.103,335,1.181,336,1.202,337,1.963,338,1.181,339,1.202,340,0.003,341,0.004,342,0.003,392,1.691,463,1.379,477,3.417,697,2.892,789,2.245,1015,3.622,1106,2.115,1349,2.803,1510,6.585,1513,4.954,1515,3.814,1516,6.818,1518,4.629,1519,5.744,1520,4.954,1521,5.388,1522,4.954,1526,5.809,1527,3.814,1528,5.368,1529,4.954,1530,6.585,1531,4.954,1532,6.048,1533,4.954,1534,6.242,1535,4.281,1536,6.585,1537,4.281,1538,4.954,1539,4.954,1540,4.954,1541,3.814,1542,4.281,1543,4.281,1544,4.281,1545,4.281,1546,4.281,1547,4.281]],["title/directives/EntriesDirective.html",[200,1.08,328,1.3]],["body/directives/EntriesDirective.html",[0,0.269,3,0.231,4,0.239,5,0.921,9,1.847,10,0.181,12,0.494,17,1.556,23,3.291,24,1.002,26,0.007,32,1.255,33,1.383,34,0.833,39,0.465,40,0.75,42,1.572,45,1.138,46,1.675,54,0.951,55,2.324,56,3.756,65,1.583,68,0.777,69,1.209,70,1.219,72,1.328,88,1.791,89,1.331,90,1.675,100,0.886,101,0.722,102,0.627,117,3.392,121,0.934,133,3.202,138,2.693,152,0.322,154,0.392,156,1.886,166,0.833,167,0.16,168,0.181,183,1.274,188,1.508,199,0.891,200,1.315,201,1.847,217,1.24,263,1.709,323,1.072,328,1.583,340,0.003,341,0.004,342,0.003,373,1.767,375,1.593,386,1.726,397,1.829,462,3.174,463,1.209,464,2.324,465,3.04,468,1.934,475,1.503,477,4.35,481,4.582,483,5.13,486,5.092,488,3.081,492,3.262,496,4.441,509,4.034,511,3.363,528,3.352,531,3.352,532,3.164,536,2.474,539,6.306,564,2.258,581,1.694,589,3.666,603,1.43,605,3.409,832,4.188,909,5.435,963,3.769,968,3.666,980,4.581,981,2.95,982,3.135,1018,7.333,1037,3.164,1057,3.902,1060,2.653,1072,4.66,1107,3.559,1109,4.548,1548,3.902,1549,5.476,1550,6.859,1551,6.859,1552,6.859,1553,5.338,1554,6.859,1555,6.146,1556,6.326,1557,6.146,1558,4.38,1559,4.38,1560,4.221,1561,4.034,1562,5.476,1563,6.146,1564,4.38,1565,4.38,1566,4.38,1567,7.699,1568,4.38,1569,4.704,1570,4.38,1571,4.38,1572,4.38,1573,4.38,1574,4.38,1575,4.38,1576,6.146,1577,4.38,1578,4.38,1579,4.66,1580,4.38,1581,4.38,1582,4.034,1583,4.38,1584,3.902,1585,4.38,1586,2.874,1587,3.902,1588,4.38,1589,7.101,1590,6.146,1591,3.352,1592,4.38,1593,4.38,1594,4.38,1595,3.587,1596,3.902,1597,7.101,1598,2.757,1599,4.38,1600,6.326,1601,7.699,1602,7.101,1603,4.38,1604,4.38,1605,4.38,1606,4.38,1607,4.38,1608,4.38,1609,4.38,1610,4.38]],["title/directives/EntryDirective.html",[200,1.08,330,1.3]],["body/directives/EntryDirective.html",[3,0.269,4,0.278,5,1.799,9,2.147,10,0.21,12,0.575,17,1.726,23,3.56,24,1.165,26,0.007,32,1.055,33,1.533,34,0.969,39,0.541,40,0.832,42,1.646,46,1.646,54,1.055,56,4.002,65,1.756,68,0.807,69,1.614,70,1.21,72,1.436,84,0.845,89,1,90,1.108,100,0.734,101,0.598,102,0.519,117,3.404,133,3.377,138,2.384,143,2.429,152,0.313,154,0.456,156,2.092,167,0.186,168,0.21,188,1.433,199,1.036,200,1.643,201,2.147,230,1.998,263,1.849,323,1.247,330,1.756,340,0.003,341,0.005,342,0.003,371,3.98,373,2.055,375,1.41,397,1.312,462,3.383,463,1.341,464,2.703,465,3.24,468,2.249,474,4.97,475,1.747,477,4.635,481,4.77,483,5.551,484,6.179,485,2.582,486,5.785,488,3.416,491,1.881,492,3.617,496,4.925,498,2.75,501,3.851,504,3.082,505,2.94,506,6.072,509,4.473,511,3.73,513,4.172,514,3.342,524,2.018,528,3.898,531,3.898,532,3.68,536,2.877,539,5.583,581,1.969,589,3.867,605,2.011,963,4.077,968,3.867,980,4.832,981,3.111,982,3.307,1037,3.68,1060,3.085,1072,3.342,1549,6.072,1579,3.342,1586,3.342,1598,3.206,1600,4.538,1611,4.538,1612,7.682,1613,6.292,1614,6.816,1615,5.093,1616,5.093,1617,5.093,1618,5.093,1619,5.093,1620,5.093,1621,5.093,1622,5.093,1623,5.093,1624,5.093,1625,5.093,1626,5.093,1627,6.816,1628,5.093,1629,5.093,1630,4.538,1631,5.093,1632,5.093,1633,5.093]],["title/components/EntryListPopComponent.html",[0,0.31,241,1.322]],["body/components/EntryListPopComponent.html",[0,0.361,1,0.827,2,0.919,3,0.167,4,0.172,5,0.664,7,1.356,8,0.856,10,0.13,12,0.356,17,1.223,20,1.949,21,0.799,23,2.72,24,0.722,26,0.007,32,1.242,33,2.251,34,1.897,37,1.266,39,0.335,40,0.589,41,1.782,42,1.326,45,1.054,46,1.73,52,1.288,54,0.747,56,3.208,65,1.244,68,0.792,69,1.294,70,1.208,72,1.097,78,2.421,79,2.49,84,0.523,87,1.907,88,0.734,89,1.142,90,1.542,100,1.078,101,1.03,102,0.762,116,2.49,117,2.685,119,4.522,121,0.984,123,4.009,124,1.273,127,1.959,129,0.813,143,2.099,152,0.274,153,1.427,154,0.283,156,0.968,166,0.6,167,0.115,168,0.309,186,2.356,188,0.844,198,0.61,199,0.983,200,0.675,202,1.815,203,0.886,204,0.886,205,0.799,206,1.847,207,0.799,208,0.841,209,0.746,210,0.827,211,0.841,212,2.185,213,0.841,214,1.343,215,1.847,216,0.841,217,1.715,218,2.254,219,0.841,220,0.841,221,0.886,222,0.827,223,1.356,224,0.841,225,0.886,226,0.827,227,0.886,228,0.813,229,0.799,230,1.804,231,1.648,232,0.813,233,0.827,234,0.827,235,0.813,236,0.886,237,0.841,238,0.841,239,1.991,240,0.841,241,1.723,242,0.841,243,0.841,244,0.841,245,0.827,246,0.886,247,0.813,248,0.841,249,0.886,250,0.827,251,0.886,252,0.827,253,0.813,254,1.338,255,0.886,256,0.827,257,0.886,258,0.813,259,0.827,260,0.886,261,0.827,262,0.886,263,0.759,264,0.886,265,0.827,266,1.437,267,0.886,268,0.813,269,0.886,270,0.827,271,0.886,272,0.799,273,0.886,274,0.827,275,0.813,276,0.827,277,0.785,278,0.886,279,0.827,280,0.886,281,0.827,282,0.886,283,0.799,284,0.886,285,0.813,286,0.827,287,0.886,288,0.827,289,0.856,290,0.886,291,2.341,292,0.827,293,1.806,294,0.827,295,0.841,296,0.686,297,0.841,298,0.841,299,0.827,300,0.841,301,0.841,302,1.753,303,0.886,304,0.813,305,0.827,306,0.886,307,0.827,308,0.856,309,0.827,310,0.886,311,0.827,312,0.886,313,0.841,314,0.827,315,0.827,316,0.886,317,0.827,318,0.886,319,0.827,320,0.886,321,0.827,322,0.772,323,0.772,324,0.799,325,0.886,326,0.813,327,0.886,328,0.813,329,0.886,330,0.813,331,0.886,332,0.813,333,0.886,334,0.813,335,0.871,336,0.886,337,0.813,338,0.871,339,0.886,340,0.002,341,0.003,342,0.002,375,0.999,376,3.879,381,0.886,386,1.648,387,2.318,393,4.091,397,1.694,413,3.317,414,2.584,434,2.823,445,6.519,463,0.95,485,1.829,507,1.868,524,1.43,534,1.826,564,2.49,565,1.793,566,3.041,578,2.926,593,2.184,724,1.539,842,3.715,860,2.223,862,1.911,887,1.844,896,3.317,908,3.63,947,1.726,975,4.463,976,1.844,978,4.14,979,4.005,985,3.43,994,2.036,1000,1.626,1014,4.289,1018,2.414,1026,1.674,1030,6.906,1032,2.07,1037,2.279,1061,3.208,1069,2.167,1070,2.167,1122,3.695,1136,3.901,1258,1.539,1460,2.942,1473,3.697,1475,3.317,1488,2.167,1496,2.279,1579,2.07,1586,2.07,1634,2.414,1635,3.697,1636,4.807,1637,4.908,1638,3.852,1639,3.49,1640,4.83,1641,3.49,1642,2.79,1643,3.49,1644,3.317,1645,4.24,1646,3.155,1647,4.303,1648,2.811,1649,2.811,1650,2.584,1651,2.414,1652,2.167,1653,2.414,1654,1.782,1655,2.279,1656,2.414,1657,2.279,1658,2.167,1659,2.414,1660,2.811,1661,2.414,1662,4.316,1663,3.852,1664,4.303,1665,2.811,1666,2.279,1667,2.414,1668,2.07,1669,6.576,1670,3.155,1671,2.811,1672,3.697,1673,3.155,1674,4.303,1675,2.414,1676,3.49,1677,2.279,1678,2.414,1679,1.674,1680,1.986,1681,2.279,1682,2.279,1683,2.414,1684,2.563,1685,2.279,1686,2.414,1687,2.811,1688,2.584,1689,2.811,1690,2.811,1691,4.303,1692,2.584,1693,2.414,1694,2.279,1695,2.279,1696,2.414,1697,2.414,1698,2.279,1699,2.584,1700,2.414,1701,3.155,1702,3.155,1703,2.584,1704,2.279,1705,2.414,1706,2.811,1707,3.155,1708,3.155,1709,3.155]],["title/injectables/EntryService.html",[594,1.442,1160,3.466]],["body/injectables/EntryService.html",[0,0.347,3,0.206,4,0.212,10,0.161,12,0.44,15,1.681,26,0.007,32,1.2,39,0.414,40,0.812,45,1.541,46,1.244,48,1.507,52,2.224,54,0.875,68,0.776,69,1.782,70,1.104,72,1.365,78,2.834,79,2.914,83,4.085,84,1.341,88,2.196,89,1.278,98,2.589,100,1.232,101,1.003,102,0.871,117,3.299,121,0.744,131,1.196,133,2.883,142,2.233,152,0.296,154,0.349,166,1.388,167,0.143,168,0.161,183,1.133,188,1.622,193,2.201,230,1.936,293,1.642,296,1.859,340,0.003,341,0.004,342,0.003,367,2.834,371,1.762,375,0.806,381,1.094,386,2.177,389,1.446,397,1.456,421,5.093,455,3.425,462,3.01,463,0.766,464,2.068,465,2.883,468,1.72,488,2.834,491,1.075,501,4.568,507,2.186,519,4.031,536,2.201,552,1.901,564,2.914,565,1.446,584,3.425,594,1.616,597,1.953,604,1.643,647,1.762,694,3.875,697,3.852,718,3.996,744,4.367,756,2.36,757,2.557,764,2.453,789,3.001,834,3.193,856,5.087,881,1.953,887,3.304,914,3.532,936,2.573,938,2.281,941,3.383,965,3.094,994,3.078,1105,2.557,1106,1.363,1109,3.885,1110,2.676,1131,2.36,1160,3.883,1216,2.057,1414,4.596,1579,5.087,1586,2.557,1630,3.471,1679,3.001,1710,3.471,1711,2.687,1712,3.883,1713,3.883,1714,3.194,1715,2.62,1716,3.71,1717,3.71,1718,4.998,1719,5.979,1720,5.037,1721,4.631,1722,3.246,1723,3.896,1724,4.631,1725,3.896,1726,3.304,1727,4.114,1728,4.631,1729,4.125,1730,7.301,1731,3.896,1732,3.194,1733,5.654,1734,3.896,1735,5.654,1736,3.896,1737,4.327,1738,4.631,1739,3.896,1740,3.425,1741,3.889,1742,5.654,1743,8.342,1744,3.896,1745,4.327,1746,3.883,1747,5.037,1748,3.883,1749,5.654,1750,6.654,1751,3.896,1752,3.896,1753,2.676,1754,5.654,1755,3.896,1756,3.896,1757,3.896,1758,2.982,1759,3.896,1760,2.815,1761,3.191,1762,3.896,1763,3.76,1764,3.896,1765,3.896,1766,3.896,1767,3.191,1768,3.896,1769,5.654,1770,3.896,1771,3.896,1772,3.896,1773,5.654,1774,6.654,1775,5.45,1776,3.191,1777,3.191,1778,3.191,1779,3.896,1780,3.896,1781,3.471,1782,5.654,1783,4.631,1784,3.896,1785,2.815,1786,3.896,1787,4.808,1788,6.654,1789,3.191,1790,3.191,1791,3.191,1792,3.191,1793,3.191,1794,6.349,1795,2.453,1796,2.557,1797,3.191,1798,3.896,1799,5.654,1800,3.896,1801,3.896,1802,3.896,1803,3.896,1804,3.896,1805,5.037,1806,3.471,1807,3.896]],["title/components/ErrorComponent.html",[0,0.31,245,1.322]],["body/components/ErrorComponent.html",[0,0.438,1,1.156,2,1.175,3,0.233,4,0.241,5,0.928,7,1.239,8,1.196,10,0.182,12,0.498,17,1.564,21,1.117,22,3.223,23,3.304,24,1.009,26,0.007,33,2.278,34,1.92,37,1.619,39,0.469,42,1.333,54,0.956,56,3.768,57,3.579,65,1.591,68,0.529,70,1.03,89,1.046,90,1.551,98,1.765,100,0.636,101,1.067,102,0.45,117,2.34,121,0.813,127,1.619,129,1.136,152,0.226,154,0.395,166,0.839,167,0.161,168,0.182,188,0.771,198,0.853,199,1.257,200,0.944,202,2.131,203,1.239,204,1.239,205,1.117,206,2.169,207,1.117,208,1.176,209,1.044,210,1.156,211,1.176,212,2.429,213,1.176,214,1.631,215,2.169,216,1.176,217,1.542,218,2.479,219,1.176,220,1.176,221,1.239,222,1.868,223,1.735,224,1.176,225,1.239,226,1.156,227,1.239,228,1.136,229,1.117,230,1.849,231,2.002,232,1.136,233,1.156,234,1.156,235,1.136,236,1.239,237,1.176,238,1.176,239,2.283,240,1.176,241,1.156,242,1.176,243,1.176,244,1.176,245,2.024,246,1.239,247,1.136,248,1.176,249,1.239,250,1.156,251,1.239,252,1.156,253,1.136,254,1.257,255,1.239,256,1.156,257,1.239,258,1.136,259,1.156,260,1.239,261,1.156,262,1.239,263,1.062,264,1.239,265,1.156,266,1.745,267,1.239,268,1.136,269,1.239,270,1.156,271,1.239,272,1.117,273,1.239,274,1.156,275,1.136,276,1.156,277,1.098,278,1.239,279,1.156,280,1.239,281,1.156,282,1.239,283,1.117,284,1.239,285,1.136,286,1.156,287,1.239,288,1.156,289,1.196,290,1.239,291,1.136,292,1.156,293,1.986,294,1.156,295,1.176,296,0.96,297,1.176,298,1.176,299,1.156,300,1.176,301,1.176,302,1.176,303,1.239,304,1.136,305,1.156,306,1.239,307,1.156,308,1.196,309,1.156,310,1.239,311,1.156,312,1.239,313,1.176,314,1.156,315,1.156,316,1.239,317,1.156,318,1.239,319,1.156,320,1.239,321,1.156,322,1.08,323,1.08,324,1.117,325,1.239,326,1.136,327,1.239,328,1.136,329,1.239,330,1.136,331,1.239,332,1.136,333,1.239,334,1.136,335,1.217,336,1.239,337,1.136,338,1.217,339,1.239,340,0.003,341,0.004,342,0.003,358,2.119,462,1.819,463,0.868,581,3.514,582,4.925,604,1.86,834,3.486,957,5.059,958,4.243,959,5.059,960,5.059,961,4.728,981,2.247,982,2.986,1202,3.61,1244,2.777,1271,2.895,1414,3.889,1808,3.93,1809,6.177,1810,3.187,1811,6.177,1812,4.411,1813,4.411,1814,6.177,1815,4.411,1816,4.411,1817,5.503,1818,4.411,1819,4.411,1820,4.411,1821,4.411,1822,4.411,1823,4.411,1824,4.411,1825,4.411,1826,6.177,1827,4.411]],["title/classes/Field.html",[48,1.345,168,0.209]],["body/classes/Field.html",[0,0.494,2,0.662,3,0.184,4,0.19,10,0.144,17,1.317,26,0.007,32,1.333,39,0.37,40,0.635,42,1.582,45,1.46,48,2.553,51,2.244,52,1.661,54,1.145,55,2.761,65,1.781,68,0.828,69,1.893,70,1.225,72,1.165,73,2.922,84,0.577,88,1.807,89,1.299,100,0.898,101,1.011,102,1.007,121,0.909,131,2.717,152,0.127,166,0.989,167,0.127,168,0.342,188,1.356,217,1.478,254,1.058,340,0.002,341,0.003,342,0.002,371,3.346,375,1.922,386,2.455,387,3.535,389,1.931,397,2.073,424,2.034,426,3.788,463,0.684,475,1.194,491,1.436,492,3.669,498,2.099,504,1.574,505,1.501,507,2.012,517,3.573,524,2.047,534,1.34,551,4.148,567,3.759,651,3.414,664,2.179,697,2.145,718,4.265,828,1.374,846,3.275,881,2.607,897,1.847,936,3.461,938,1.404,941,2.411,1007,3.373,1014,2.473,1098,3.573,1104,1.698,1106,3.012,1114,2.846,1128,1.613,1138,3.04,1140,5.662,1141,2.284,1148,1.654,1235,3.573,1277,2.85,1278,4.699,1282,2.846,1295,2.682,1349,3.598,1426,2.846,1464,2.538,1642,1.654,1680,3.275,1719,4.261,1722,2.538,1727,2.761,1828,3.1,1829,5.281,1830,5.664,1831,5.103,1832,4.658,1833,4.768,1834,4.501,1835,5.066,1836,5.55,1837,6.23,1838,4.856,1839,5.55,1840,4.658,1841,5.664,1842,5.103,1843,5.202,1844,6.913,1845,6.913,1846,5.202,1847,5.202,1848,3.48,1849,4.635,1850,4.635,1851,3.48,1852,3.48,1853,5.202,1854,3.48,1855,3.48,1856,3.48,1857,4.635,1858,3.982,1859,3.414,1860,3.759,1861,3.48,1862,3.48,1863,4.261,1864,4.261,1865,4.352,1866,3.48,1867,4.635,1868,3.48,1869,3.48,1870,5.202,1871,3.982,1872,3.48,1873,3.573,1874,3.48,1875,3.48,1876,3.48,1877,5.202,1878,3.759,1879,3.48,1880,3.48,1881,3.48,1882,6.359,1883,3.48,1884,3.573,1885,3.48,1886,3.48,1887,3.48,1888,3.48,1889,3.48,1890,5.202,1891,3.48,1892,7.764,1893,3.48,1894,3.48,1895,5.202,1896,3.48,1897,3.1,1898,5.202,1899,3.48,1900,2.191,1901,3.48,1902,3.48,1903,3.1,1904,2.108,1905,2.663,1906,4.635,1907,3.48,1908,3.409,1909,3.922,1910,3.48,1911,2.663,1912,3.48,1913,3.48,1914,3.1,1915,3.1,1916,3.48,1917,2.284,1918,3.48,1919,3.1,1920,3.1,1921,4.635,1922,4.635,1923,2.663,1924,3.48,1925,4.635,1926,3.48,1927,3.48,1928,3.151,1929,3.48,1930,2.514,1931,3.1,1932,3.48,1933,3.1,1934,2.663,1935,3.1,1936,2.39,1937,3.1,1938,3.1,1939,4.261,1940,3.48,1941,3.48,1942,3.1,1943,6.23,1944,4.635,1945,5.202,1946,3.48]],["title/interfaces/FieldConfig.html",[366,1.345,1119,2.949]],["body/interfaces/FieldConfig.html",[3,0.387,4,0.399,10,0.303,12,0.827,26,0.007,48,2.418,69,1.684,70,0.928,131,2.627,152,0.268,167,0.268,217,1.495,340,0.005,341,0.006,342,0.005,366,1.952,368,3.158,386,2.056,389,3.177,941,3.967,945,5.002,1003,6.552,1075,4.61,1119,5.002,1715,3.967,1829,6.251,1897,6.524,1938,6.524,1947,7.626,1948,7.323]],["title/interfaces/FileOptions.html",[366,1.345,1090,3.177]],["body/interfaces/FileOptions.html",[0,0.21,3,0.181,4,0.187,10,0.331,12,0.386,26,0.007,32,1.238,39,0.364,40,0.627,46,1.684,48,0.912,52,2.133,68,0.746,69,1.713,70,0.434,72,1.374,84,1.494,88,1.435,89,0.754,98,0.978,102,0.918,117,1.296,121,0.45,131,1.893,133,3.16,135,3.112,142,1.351,143,2.03,152,0.319,154,0.307,166,1.565,167,0.226,168,0.141,183,1.794,188,1.686,209,1.215,214,2.12,217,1.197,230,0.696,253,0.881,254,0.696,293,1.387,296,0.744,322,2.159,340,0.002,341,0.003,342,0.002,366,1.827,367,1.715,368,1.476,370,2.957,371,1.547,372,2.811,375,1.825,381,0.961,386,1.925,397,1.892,424,1.999,425,3.374,432,1.764,450,1.715,455,3.736,462,2.543,463,0.673,465,2.028,468,1.511,482,4.953,488,1.715,501,1.933,504,1.547,519,2.073,525,4.708,526,2.35,536,2.902,547,2.902,548,5.628,570,2.619,571,5.415,584,2.073,592,2.245,594,1.468,603,0.796,605,2.707,650,1.933,664,1.197,680,3.484,692,2.289,694,3.273,723,2.154,724,2.506,741,2.619,756,3.736,764,2.154,770,3.112,789,1.27,832,2.931,834,2.028,860,1.296,881,1.715,903,2.506,908,2.789,938,1.38,941,1.586,947,4.02,965,1.872,1023,3.234,1090,4.625,1100,2.35,1105,1.547,1106,2.398,1107,4.22,1109,2.575,1114,1.872,1121,2.472,1128,1.586,1138,1.999,1148,2.931,1162,3.002,1184,2.35,1216,2.243,1426,2.811,1455,2.245,1561,2.245,1679,2.726,1711,1.626,1712,2.35,1713,2.35,1714,1.933,1715,1.586,1716,2.245,1717,2.245,1718,3.484,1726,3.604,1748,2.35,1753,2.35,1758,2.619,1763,4.359,1787,4.456,1908,1.872,1949,2.619,1950,6.554,1951,6.319,1952,6.017,1953,6.017,1954,6.017,1955,6.017,1956,3.234,1957,4.207,1958,4.207,1959,4.207,1960,3.711,1961,3.931,1962,4.207,1963,4.207,1964,4.207,1965,2.802,1966,4.456,1967,2.472,1968,2.802,1969,2.802,1970,3.528,1971,2.154,1972,2.619,1973,4.72,1974,2.472,1975,2.802,1976,2.802,1977,2.472,1978,2.802,1979,2.802,1980,5.051,1981,2.802,1982,5.051,1983,2.802,1984,2.802,1985,2.802,1986,2.472,1987,2.802,1988,2.802,1989,2.802,1990,2.802,1991,2.619,1992,2.802,1993,4.953,1994,2.35,1995,2.802,1996,4.207,1997,2.802,1998,4.207,1999,4.207,2000,2.802,2001,2.802,2002,2.802,2003,2.802,2004,4.207,2005,2.802,2006,2.619,2007,2.802,2008,2.35,2009,2.802,2010,6.319,2011,2.802,2012,2.802,2013,2.802,2014,2.802,2015,2.802,2016,5.051,2017,2.619,2018,2.802,2019,2.802,2020,4.207,2021,2.802,2022,4.207,2023,4.207,2024,4.207,2025,4.207,2026,5.051,2027,4.207,2028,4.207,2029,4.207,2030,2.472,2031,2.619,2032,2.802,2033,2.802,2034,2.802,2035,4.207,2036,2.802,2037,2.802,2038,2.802,2039,2.802,2040,2.802,2041,2.802,2042,2.802,2043,2.802,2044,2.802,2045,2.35,2046,2.802,2047,5.051,2048,2.802,2049,2.802,2050,2.35,2051,4.207,2052,2.802,2053,2.802,2054,2.802,2055,2.619,2056,2.802,2057,2.802,2058,2.802,2059,2.802,2060,2.802,2061,2.802,2062,2.802,2063,2.802,2064,2.802,2065,2.802,2066,2.802,2067,2.802,2068,2.802,2069,2.35,2070,2.802,2071,2.802,2072,2.802,2073,2.472,2074,2.802,2075,2.802,2076,2.802]],["title/injectables/FileService.html",[547,2.851,594,1.442]],["body/injectables/FileService.html",[0,0.272,3,0.149,4,0.154,10,0.309,12,0.318,26,0.007,32,1.323,39,0.299,40,0.54,45,1.239,46,1.811,48,1.179,52,1.991,54,0.685,68,0.756,69,1.632,70,1.145,72,1.335,84,1.489,88,1.661,89,1.27,90,0.613,98,1.264,100,1.196,101,0.974,102,0.86,117,1.067,121,1.071,131,1.677,133,3.33,135,3.75,142,1.747,143,2.114,152,0.304,154,0.252,166,1.471,167,0.2,168,0.116,183,1.589,188,1.653,209,1.465,214,2.092,217,1.175,230,0.9,253,1.14,254,0.9,293,1.229,296,0.962,322,2.197,340,0.002,341,0.003,342,0.002,366,1.456,367,2.218,370,2.902,371,1.274,372,1.541,375,1.392,381,0.791,386,2.005,397,2.049,424,1.646,425,2.989,432,1.452,450,2.218,455,3.75,462,2.944,463,0.87,464,1.495,465,2.444,468,1.244,482,3.947,488,2.218,501,2.5,504,2.001,507,1.711,519,2.68,522,3.087,525,4.904,526,1.935,536,3.087,547,3.087,548,5.931,570,3.386,571,5.344,584,2.68,592,2.904,594,1.264,603,0.655,605,2.444,647,1.274,650,1.592,664,0.985,680,4.219,692,2.771,694,2.899,723,1.774,724,2.158,741,2.156,756,3.309,764,1.774,770,2.68,789,1.642,832,2.597,834,2.157,860,1.676,881,2.218,903,2.158,908,3.042,938,1.785,941,1.306,947,4.086,965,2.421,1023,3.439,1090,5.007,1100,3.039,1105,2.001,1106,1.547,1107,4.339,1109,3.103,1114,2.421,1121,3.947,1128,1.306,1138,1.646,1148,3.393,1162,3.617,1184,1.935,1216,2.447,1426,3.387,1455,1.849,1561,2.904,1679,3.285,1711,2.103,1712,3.039,1713,3.039,1714,2.5,1715,2.05,1716,2.904,1717,2.904,1718,4.219,1726,3.193,1748,3.039,1753,1.935,1758,2.156,1763,4.765,1787,3.947,1908,1.541,1949,2.156,1950,5.07,1951,3.624,1952,4.475,1953,4.475,1954,4.475,1955,4.475,1956,1.774,1957,2.307,1958,2.307,1959,2.307,1960,2.035,1961,2.156,1962,2.307,1963,2.307,1964,3.624,1965,2.307,1966,5.158,1967,2.035,1968,2.307,1969,2.307,1970,3.039,1971,1.774,1972,2.156,1973,4.738,1974,2.035,1975,5.07,1976,4.475,1977,3.197,1978,4.475,1979,4.475,1980,5.07,1981,4.475,1982,5.07,1983,3.624,1984,3.624,1985,3.624,1986,3.197,1987,4.475,1988,3.624,1989,3.624,1990,3.624,1991,3.386,1992,3.624,1993,5.158,1994,3.752,1995,3.624,1996,3.624,1997,2.307,1998,3.624,1999,3.624,2000,2.307,2001,3.624,2002,2.307,2003,2.307,2004,3.624,2005,2.307,2006,2.156,2007,2.307,2008,1.935,2009,2.307,2010,6.334,2011,3.624,2012,4.475,2013,2.307,2014,2.307,2015,3.624,2016,4.475,2017,2.156,2018,2.307,2019,2.307,2020,3.624,2021,2.307,2022,3.624,2023,3.624,2024,3.624,2025,3.624,2026,4.475,2027,3.624,2028,3.624,2029,3.624,2030,2.035,2031,3.386,2032,2.307,2033,2.307,2034,2.307,2035,3.624,2036,2.307,2037,2.307,2038,3.624,2039,3.624,2040,4.475,2041,2.307,2042,2.307,2043,2.307,2044,2.307,2045,1.935,2046,2.307,2047,4.475,2048,2.307,2049,2.307,2050,1.935,2051,3.624,2052,2.307,2053,2.307,2054,2.307,2055,2.156,2056,2.307,2057,2.307,2058,2.307,2059,2.307,2060,2.307,2061,2.307,2062,2.307,2063,2.307,2064,3.624,2065,3.624,2066,2.307,2067,2.307,2068,3.624,2069,3.039,2070,3.624,2071,3.624,2072,3.624,2073,2.035,2074,2.307,2075,2.307,2076,2.307,2077,4.424,2078,4.424,2079,4.424,2080,4.424,2081,3.942,2082,4.424,2083,4.424,2084,3.942,2085,4.424,2086,2.817,2087,2.817,2088,2.817,2089,2.817,2090,2.817,2091,2.817,2092,2.817,2093,2.817,2094,2.817,2095,2.817,2096,2.817,2097,2.817,2098,2.817,2099,2.817,2100,2.817,2101,2.817]],["title/modules/FilesModule.html",[343,1.155,1157,3.646]],["body/modules/FilesModule.html",[3,0.268,4,0.276,10,0.21,25,2.532,26,0.007,152,0.357,154,0.454,155,2.045,156,1.556,167,0.185,168,0.21,198,0.981,210,2.514,211,1.351,213,2.529,214,1.754,216,2.529,217,1.187,219,2.557,252,2.485,253,1.306,254,1.382,313,2.557,314,1.328,319,2.514,321,2.485,322,1.241,324,2.402,326,2.443,334,2.443,340,0.003,341,0.004,342,0.003,343,1.16,345,2.002,346,1.92,347,3.16,348,2.09,349,3.092,355,4.966,356,2.865,357,1.96,358,1.739,360,3.839,361,2.287,362,2.377,544,4.152,547,4.966,563,3.663,630,3.23,631,2.292,634,4.667,1028,3.071,1031,4.459,1157,7.279,1158,6.037,1159,6.225,1181,6.267,1185,4.517,1187,4.152,2102,4.517,2103,4.517,2104,5.07,2105,4.517,2106,4.517,2107,5.07,2108,3.88,2109,3.663,2110,3.327,2111,4.517,2112,4.517,2113,4.517,2114,4.517,2115,5.07,2116,5.07,2117,4.517,2118,4.152,2119,4.152,2120,4.517]],["title/interfaces/Focus.html",[63,2.529,366,1.345]],["body/interfaces/Focus.html",[3,0.394,4,0.406,10,0.308,26,0.006,39,0.792,40,1.055,49,5.919,54,1.338,63,4.334,64,5.695,68,0.638,70,0.944,89,1.093,143,2.784,152,0.273,154,0.668,167,0.273,340,0.005,341,0.006,342,0.005,366,1.986,368,3.214,2121,6.639,2122,7.452]],["title/directives/FocusDirective.html",[200,1.08,332,1.3]],["body/directives/FocusDirective.html",[3,0.355,4,0.367,10,0.278,17,2.06,22,3.956,24,1.538,26,0.007,33,1.968,39,0.714,42,1.636,54,1.259,57,4.213,64,5.507,65,2.096,68,0.749,70,1.18,89,1.194,90,1.77,100,0.969,101,0.789,102,0.686,123,4.111,127,2.132,143,2.59,152,0.246,154,0.602,167,0.246,168,0.278,200,1.741,323,1.646,332,2.096,340,0.004,341,0.005,342,0.004,375,1.81,463,1.322,604,2.835,860,2.547,1437,6.696,1553,4.073,1830,6.696,2123,5.99,2124,7.625,2125,6.723,2126,8.136,2127,6.723,2128,6.723,2129,6.723,2130,5.507,2131,6.723,2132,6.723,2133,6.723,2134,6.723,2135,6.723,2136,6.723]],["title/interfaces/FormConfig.html",[366,1.345,2137,3.862]],["body/interfaces/FormConfig.html",[3,0.365,4,0.376,10,0.285,12,0.779,20,3.334,26,0.007,32,1.419,39,0.733,40,1.008,68,0.757,69,1.74,102,0.971,152,0.252,167,0.252,340,0.005,341,0.005,342,0.005,366,1.839,368,2.976,375,1.969,387,3.264,1007,4.032,1026,3.662,1075,4.344,1102,6.018,1141,5.424,1727,4.386,1729,5.297,2137,7.019,2138,6.148,2139,6.769,2140,8.17,2141,9.171,2142,8.17,2143,6.325,2144,7.019,2145,6.325,2146,5.652]],["title/modules/FormModule.html",[343,1.155,2147,3.466]],["body/modules/FormModule.html",[3,0.274,4,0.283,10,0.214,21,2.322,25,2.562,26,0.007,27,3.424,50,4.696,121,0.908,152,0.357,154,0.465,155,2.094,166,0.987,167,0.252,168,0.214,198,1.004,226,2.494,232,2.362,247,2.452,317,2.494,340,0.003,341,0.005,342,0.003,343,1.187,345,2.049,346,1.965,347,3.197,348,2.14,349,3.128,356,2.91,357,2.007,358,1.78,360,3.899,361,2.323,362,1.815,630,3.28,631,2.346,633,5.603,656,4.882,794,5.807,813,4.25,815,4.25,817,4.25,1007,2.532,1175,3.143,1177,3.749,1179,3.564,1227,2.932,1435,3.972,1449,4.25,1462,3.972,2147,6.913,2148,4.623,2149,4.623,2150,4.623,2151,4.623,2152,4.623,2153,6.878,2154,6.878,2155,6.538,2156,6.247,2157,6.247,2158,5.36,2159,5.807,2160,5.807,2161,4.623,2162,4.25,2163,5.189,2164,4.623,2165,5.189,2166,5.189,2167,4.25,2168,3.749,2169,5.189,2170,5.189,2171,4.25,2172,4.25,2173,4.623,2174,5.189,2175,5.189,2176,5.189,2177,5.189]],["title/injectables/FormService.html",[50,2.678,594,1.442]],["body/injectables/FormService.html",[3,0.233,4,0.241,10,0.183,12,0.499,16,3.481,26,0.007,32,1.196,39,0.47,40,0.755,45,1.387,46,1.718,47,4.077,48,2.621,50,3.282,51,3.733,54,0.957,68,0.741,69,0.869,70,1.137,73,2.442,75,4.733,84,1.35,85,2.667,88,1.961,89,1.388,90,0.961,100,1.273,101,1.037,102,0.901,121,0.581,131,3.054,139,4.031,147,4.682,152,0.298,154,0.396,155,1.783,166,1.603,167,0.162,168,0.183,188,1.605,247,1.991,340,0.003,341,0.004,342,0.003,366,1.649,375,0.914,381,1.241,386,2.17,387,3.487,389,2.295,392,1.745,397,2.095,426,3.017,463,0.869,491,1.219,505,2.667,552,3.017,564,2.278,581,2.759,594,1.767,647,1.998,664,1.545,698,3.017,718,3.188,789,2.648,828,2.442,862,3.746,914,3.787,981,2.811,982,3.145,1064,5.587,1106,1.545,1196,2.582,1244,2.782,1347,4.468,1426,3.384,1427,2.9,1711,2.939,1714,3.494,1732,2.496,1810,3.192,1865,3.893,2178,3.936,2179,6.184,2180,3.282,2181,6.184,2182,6.184,2183,6.184,2184,6.184,2185,6.184,2186,6.184,2187,6.184,2188,4.419,2189,6.184,2190,4.419,2191,4.058,2192,6.184,2193,4.419,2194,6.184,2195,6.184,2196,4.419,2197,6.184,2198,4.419,2199,6.184,2200,7.35,2201,7.135,2202,6.184,2203,4.419,2204,6.184,2205,4.419,2206,5.065,2207,5.51,2208,5.065,2209,6.184,2210,4.419,2211,7.729,2212,7.135,2213,4.419,2214,5.51,2215,3.936,2216,4.419,2217,7.135,2218,4.419,2219,4.419,2220,3.382,2221,4.419,2222,3.936,2223,4.419,2224,4.419,2225,6.184,2226,6.184,2227,4.419,2228,4.419,2229,4.419,2230,3.619,2231,3.936,2232,4.419,2233,4.419,2234,4.419,2235,4.419,2236,4.419,2237,4.419,2238,4.419,2239,4.419,2240,4.419,2241,4.419,2242,3.936,2243,4.419,2244,4.419,2245,4.419,2246,6.184]],["title/injectables/GeocodeService.html",[594,1.442,2247,3.312]],["body/injectables/GeocodeService.html",[3,0.283,4,0.292,10,0.221,12,0.604,13,3.979,26,0.007,39,0.569,42,1.564,46,1.747,54,1.09,68,0.716,70,1.102,84,1.306,88,2.077,89,1.309,100,1.253,101,1.02,102,0.886,127,2.192,133,3.304,152,0.318,154,0.479,165,4.095,166,1.497,167,0.196,168,0.221,188,1.559,202,1.477,209,1.667,266,2.286,340,0.005,341,0.005,342,0.005,450,2.682,463,1.052,498,2.841,594,2.013,597,3.53,604,2.256,605,2.113,647,2.419,804,3.854,856,5.167,914,2.84,1137,5.49,1145,5.768,1270,3.675,1470,6.275,1480,5.089,1638,4.622,1732,3.023,2247,4.622,2248,4.767,2249,5.49,2250,7.043,2251,7.043,2252,7.043,2253,7.043,2254,7.043,2255,7.043,2256,5.351,2257,8.366,2258,8.106,2259,5.351,2260,7.043,2261,7.043,2262,5.351,2263,7.119,2264,7.043,2265,5.351,2266,5.768,2267,7.744,2268,5.768,2269,5.351,2270,7.043,2271,5.351,2272,7.043,2273,7.043,2274,5.351,2275,7.043,2276,7.043,2277,4.382,2278,5.351,2279,5.351,2280,5.351,2281,5.351,2282,5.351,2283,5.351,2284,5.351,2285,5.39,2286,5.351,2287,5.351,2288,7.043,2289,4.382,2290,6.275,2291,5.351,2292,6.275,2293,5.351,2294,5.351,2295,5.351,2296,5.351,2297,5.351,2298,4.382,2299,4.767,2300,5.351,2301,6.275,2302,5.351,2303,5.351,2304,5.351,2305,5.351,2306,5.351,2307,5.351,2308,5.351,2309,5.351,2310,5.351,2311,5.351]],["title/pipes/GroupPipe.html",[1230,2.601,1233,3.466]],["body/pipes/GroupPipe.html",[3,0.361,4,0.373,10,0.282,12,0.771,17,1.73,24,1.563,26,0.007,45,1.552,51,3.543,52,2.348,54,1.057,68,0.585,69,1.733,70,0.866,72,1.536,88,1.911,89,1.002,100,0.985,101,1.034,102,0.697,142,3.244,152,0.301,154,0.612,167,0.25,168,0.282,188,1.539,340,0.005,341,0.005,342,0.005,381,1.919,650,4.641,692,3.47,832,4.344,853,5.642,936,3.672,1230,4.235,1231,4.936,1233,6.278,1234,4.641,1235,5.642,1236,4.301,1242,5.935,2312,6.086,2313,8.215,2314,6.832,2315,6.832,2316,6.832]],["title/injectables/HistoryService.html",[594,1.442,1161,3.646]],["body/injectables/HistoryService.html",[3,0.24,4,0.395,10,0.188,12,0.513,26,0.007,39,0.483,40,0.769,45,1.317,46,1.742,54,0.976,68,0.804,69,1.749,70,1.159,84,0.754,88,2.029,89,1.062,90,0.988,98,2.235,100,1.127,101,0.918,102,0.798,121,1.081,133,1.794,138,2.205,152,0.33,154,0.407,156,1.394,166,1.377,167,0.166,168,0.188,186,3.076,188,1.435,293,2.096,296,1.575,340,0.003,341,0.004,342,0.003,370,3.374,373,1.833,388,3.45,397,1.624,453,7.143,463,1.24,469,3.72,486,3.819,511,3.45,537,2.981,538,3.72,580,2.566,581,2.438,589,3.716,594,1.802,595,2.566,647,2.054,650,4.419,663,5.651,694,5.041,756,2.752,757,2.981,791,2.86,804,3.45,834,3.089,842,4.091,860,2.388,896,4.33,938,1.833,941,4.318,970,5.755,977,5.342,980,4.419,1060,2.752,1109,3.16,1136,3.16,1161,5.651,1414,5.354,1579,5.723,1586,2.981,1598,3.969,1718,5.165,1753,3.12,1787,4.555,2317,4.047,2318,5.617,2319,5.164,2320,5.617,2321,6.305,2322,8.217,2323,5.931,2324,6.305,2325,7.241,2326,4.047,2327,6.305,2328,6.305,2329,4.543,2330,5.617,2331,6.305,2332,8.504,2333,4.543,2334,8.721,2335,4.543,2336,5.164,2337,5.651,2338,5.987,2339,4.543,2340,4.543,2341,5.617,2342,5.164,2343,4.543,2344,4.543,2345,4.543,2346,6.305,2347,4.543,2348,4.543,2349,4.543,2350,4.047,2351,6.305,2352,4.543,2353,4.543,2354,8.721,2355,4.543,2356,4.543,2357,4.543,2358,6.305,2359,7.241,2360,4.543,2361,4.543,2362,4.543,2363,5.617,2364,6.305,2365,4.543,2366,6.305,2367,4.543,2368,6.305,2369,6.305,2370,4.543,2371,4.543]],["title/components/IconComponent.html",[0,0.31,250,1.322]],["body/components/IconComponent.html",[0,0.48,1,1.042,2,1.091,3,0.21,4,0.217,5,0.836,6,2.049,7,1.116,8,1.078,9,1.676,10,0.164,12,0.449,17,1.453,21,1.007,22,3.043,23,3.119,24,0.909,26,0.007,33,2.27,34,1.915,35,3.611,37,1.503,39,0.422,40,0.7,42,1.258,54,0.888,56,3.595,57,3.415,65,1.478,68,0.576,69,1.128,70,1.032,86,3.94,88,0.925,89,0.988,90,1.464,100,0.573,101,1.116,102,0.405,121,0.885,127,1.503,129,1.024,138,2.733,152,0.286,154,0.356,167,0.246,168,0.278,198,0.769,199,1.499,200,0.85,201,1.676,202,2.034,203,1.116,204,1.116,205,1.007,206,2.069,207,1.007,208,1.06,209,0.941,210,1.042,211,1.06,212,2.357,213,1.06,214,1.54,215,2.069,216,1.06,217,1.422,218,2.413,219,1.06,220,1.06,221,1.116,222,1.042,223,1.611,224,1.06,225,1.116,226,1.042,227,1.116,228,1.024,229,1.007,230,1.748,231,1.89,232,1.024,233,1.042,234,1.042,235,1.024,236,1.116,237,1.06,238,1.06,239,2.194,240,1.06,241,1.042,242,1.06,243,1.06,244,1.06,245,1.042,246,1.116,247,1.024,248,1.06,249,1.116,250,1.931,251,1.116,252,1.042,253,1.024,254,1.167,255,1.116,256,1.042,257,1.116,258,1.024,259,1.042,260,1.116,261,1.042,262,1.116,263,0.957,264,1.116,265,1.042,266,1.647,267,1.116,268,1.024,269,1.116,270,1.042,271,1.116,272,1.007,273,1.116,274,1.042,275,1.024,276,1.042,277,0.99,278,1.116,279,1.042,280,1.116,281,1.042,282,1.116,283,1.007,284,1.116,285,1.024,286,1.042,287,1.116,288,1.042,289,1.078,290,1.116,291,1.024,292,1.042,293,1.933,294,1.042,295,1.06,296,0.865,297,1.06,298,1.06,299,1.042,300,1.06,301,1.06,302,1.06,303,1.116,304,1.024,305,1.042,306,1.116,307,1.042,308,1.078,309,1.042,310,1.116,311,1.042,312,1.116,313,1.06,314,1.042,315,1.042,316,1.116,317,1.042,318,1.116,319,1.042,320,1.116,321,1.042,322,0.973,323,0.973,324,1.007,325,1.116,326,1.024,327,1.116,328,1.024,329,1.116,330,1.024,331,1.116,332,1.024,333,1.116,334,1.024,335,1.097,336,1.116,337,1.024,338,1.097,339,1.116,340,0.003,341,0.005,342,0.003,392,2.265,424,3.352,463,0.782,475,1.364,491,1.097,505,2.474,534,1.478,566,2.502,580,3.802,583,3.139,593,2.594,602,2.609,604,1.676,661,3.256,700,2.11,832,1.889,981,2.448,1103,3.042,1271,4.417,1349,1.842,1389,2.408,1460,1.992,1461,3.541,1838,6.37,1878,2.872,1908,4.455,2372,3.541,2373,5.901,2374,7.169,2375,4.919,2376,5.324,2377,5.11,2378,3.611,2379,3.611,2380,6.73,2381,5.736,2382,3.975,2383,6.353,2384,5.736,2385,3.975,2386,3.975,2387,3.975,2388,3.975,2389,3.94,2390,5.736,2391,3.975,2392,3.042,2393,2.799,2394,5.11,2395,5.736,2396,5.736,2397,3.975,2398,3.975,2399,5.736,2400,3.975,2401,2.502,2402,3.541,2403,3.541,2404,5.736,2405,3.975,2406,3.975,2407,3.975,2408,2.502,2409,3.975,2410,5.736,2411,5.736,2412,3.975,2413,5.11,2414,3.975]],["title/modules/IconModule.html",[343,1.155,2158,3.057]],["body/modules/IconModule.html",[3,0.372,4,0.384,10,0.291,25,2.948,26,0.007,152,0.338,154,0.631,167,0.258,168,0.291,198,1.362,250,2.599,340,0.005,341,0.006,342,0.005,343,1.611,345,2.781,346,2.667,347,3.68,348,2.903,349,3.6,356,3.527,357,2.723,358,2.416,361,2.37,362,2.926,630,3.976,631,3.184,2158,5.935,2383,6.568,2402,6.273,2415,6.273,2416,6.273,2417,6.273,2418,6.273,2419,7.042,2420,7.042]],["title/injectables/IconService.html",[594,1.442,2383,3.466]],["body/injectables/IconService.html",[3,0.264,4,0.272,9,2.105,10,0.206,12,0.563,20,2.713,26,0.007,34,1.547,39,0.53,40,0.82,45,1.457,46,1.672,54,1.041,68,0.823,69,1.861,70,1.207,72,1.422,87,3.455,88,1.893,89,1.334,90,1.77,100,1.31,101,1.129,102,0.927,107,4.413,119,4.877,121,1.225,135,3.024,138,2.971,152,0.298,154,0.447,167,0.183,168,0.206,201,2.105,340,0.003,341,0.004,342,0.003,491,1.856,534,2.453,594,1.922,647,2.257,700,4.318,717,3.82,801,6.395,804,3.679,941,3.116,981,3.548,982,3.719,1244,3.142,1711,4.037,1796,3.276,1838,5.34,1908,4.893,1960,4.858,2373,6.245,2374,8.011,2375,3.142,2377,5.991,2383,4.619,2403,4.447,2421,4.447,2422,5.147,2423,6.725,2424,6.725,2425,5.991,2426,5.991,2427,4.992,2428,5.991,2429,6.775,2430,4.992,2431,5.991,2432,4.992,2433,4.992,2434,6.009,2435,5.991,2436,4.992,2437,5.991,2438,5.508,2439,5.147,2440,5.508,2441,4.992,2442,4.447,2443,4.992,2444,4.447,2445,4.992,2446,7.249,2447,4.992,2448,6.775,2449,4.447,2450,4.447,2451,4.992,2452,4.992,2453,4.619,2454,4.619,2455,4.992,2456,4.992]],["title/directives/ImageDirective.html",[200,1.08,334,1.3]],["body/directives/ImageDirective.html",[3,0.264,4,0.272,5,1.415,10,0.206,12,0.563,17,1.703,20,2.014,23,3.524,24,1.142,26,0.007,32,1.041,33,1.513,39,0.53,40,0.82,42,1.636,45,0.8,46,1.521,54,1.041,56,3.97,65,1.732,68,0.797,69,1.847,70,1.18,72,1.422,84,0.828,89,1.194,90,1.463,100,1.173,101,0.955,102,0.83,121,0.657,123,4.043,127,1.762,135,4.074,152,0.311,154,0.447,167,0.183,168,0.206,188,1.528,199,1.015,200,1.627,214,2.108,253,2.373,323,1.222,324,1.703,334,1.732,335,2.246,340,0.003,341,0.004,342,0.003,371,3.841,375,1.391,392,1.971,397,1.959,424,3.93,425,2.731,432,4.378,462,3.355,463,0.982,464,2.649,465,3.354,468,2.204,475,1.713,477,4.597,481,4.508,482,5.879,483,4.858,486,4.607,491,1.856,502,5.991,507,1.93,525,5.834,526,3.428,528,3.82,530,5.991,531,3.82,532,3.606,571,2.917,605,1.971,682,4.074,687,3.82,770,3.024,1118,5.139,1763,2.82,1966,6.461,1967,3.606,2114,4.447,2457,4.447,2458,6.725,2459,5.991,2460,6.228,2461,9.212,2462,6.725,2463,8.494,2464,6.725,2465,4.992,2466,5.991,2467,4.992,2468,7.249,2469,4.992,2470,5.147,2471,4.992,2472,6.725,2473,5.147,2474,6.725,2475,4.992,2476,6.725,2477,6.725,2478,4.992,2479,6.725,2480,4.992,2481,4.992,2482,4.992,2483,4.992,2484,7.605,2485,4.992,2486,4.992,2487,4.992,2488,6.725,2489,4.992,2490,4.992,2491,5.508,2492,4.992,2493,6.725,2494,4.992,2495,4.992,2496,4.992,2497,6.725,2498,4.992]],["title/components/ImageSelectPopComponent.html",[0,0.31,252,1.322]],["body/components/ImageSelectPopComponent.html",[0,0.407,1,0.716,2,0.821,3,0.144,4,0.149,5,0.575,7,1.213,8,0.741,10,0.113,12,0.308,17,1.094,20,1.742,21,0.692,22,2.422,24,0.625,26,0.007,32,1.248,33,2.237,34,1.884,37,1.132,39,0.29,40,0.527,41,1.543,42,1.239,45,1.319,46,1.741,54,0.668,57,2.82,65,1.568,68,0.77,69,0.849,70,1.184,72,1.239,78,2.164,79,2.226,84,0.453,85,1.863,87,1.705,88,0.636,89,0.973,90,1.324,93,3.537,100,0.877,101,0.966,102,0.621,116,2.226,119,4.377,121,1.082,123,3.888,124,1.102,127,1.846,129,0.704,131,2.348,143,1.962,152,0.258,153,1.235,154,0.245,156,0.838,166,1.565,167,0.1,168,0.291,186,2.107,188,1.063,196,3.305,198,0.528,199,0.878,200,0.584,202,1.679,203,0.767,204,0.767,205,0.692,206,1.709,207,0.692,208,0.728,209,0.646,210,0.716,211,0.728,212,2.072,213,0.728,214,1.392,215,1.709,216,0.728,217,1.231,218,2.149,219,0.728,220,0.728,221,0.767,222,0.716,223,1.213,224,0.728,225,0.767,226,0.716,227,0.767,228,1.379,229,0.692,230,1.641,231,1.504,232,0.704,233,0.716,234,0.716,235,0.704,236,0.767,237,0.728,238,0.728,239,1.861,240,0.728,241,0.716,242,0.728,243,0.728,244,0.728,245,0.716,246,0.767,247,1.379,248,0.728,249,0.767,250,0.716,251,0.767,252,1.595,253,2.24,254,1.979,255,0.767,256,0.716,257,0.767,258,0.704,259,0.716,260,0.767,261,0.716,262,0.767,263,1.465,264,0.767,265,0.716,266,1.311,267,0.767,268,0.704,269,0.767,270,0.716,271,0.767,272,0.692,273,0.767,274,0.716,275,0.704,276,0.716,277,0.68,278,0.767,279,0.716,280,0.767,281,0.716,282,0.767,283,0.692,284,0.767,285,0.704,286,0.716,287,0.767,288,0.716,289,0.741,290,0.767,291,2.281,292,0.716,293,1.721,294,0.716,295,0.728,296,0.594,297,0.728,298,0.728,299,0.716,300,0.728,301,0.728,302,0.728,303,0.767,304,0.704,305,0.716,306,0.767,307,0.716,308,0.741,309,0.716,310,0.767,311,0.716,312,0.767,313,0.728,314,0.716,315,0.716,316,0.767,317,0.716,318,0.767,319,0.716,320,0.767,321,0.716,322,0.669,323,0.669,324,0.692,325,0.767,326,0.704,327,0.767,328,0.704,329,0.767,330,0.704,331,0.767,332,0.704,333,0.767,334,0.704,335,1.478,336,0.767,337,0.704,338,0.754,339,0.767,340,0.002,341,0.003,342,0.002,373,2.16,375,1.108,376,3.627,381,0.767,387,2.617,389,1.014,393,3.856,397,1.568,432,4.06,462,2.733,463,0.849,465,2.617,468,1.206,485,1.636,498,2.16,507,1.67,524,1.279,534,1.901,536,2.44,547,4.557,548,4.35,563,1.974,565,1.603,578,2.616,583,2.363,694,1.45,770,1.655,842,3.438,860,1.035,862,1.655,870,3.305,887,1.597,968,1.953,976,2.524,981,2.685,982,2.563,994,1.821,997,3.804,1000,1.408,1014,4.173,1061,2.969,1118,2.363,1122,3.371,1136,3.699,1142,4.386,1175,1.655,1176,1.655,1216,1.571,1258,1.333,1278,3.518,1389,2.616,1428,1.876,1460,2.684,1468,3.12,1473,3.305,1475,2.966,1488,1.876,1496,1.974,1634,2.091,1635,3.305,1637,4.603,1639,3.12,1641,3.12,1642,2.545,1643,3.12,1644,2.966,1645,3.869,1650,2.238,1651,2.091,1652,1.876,1653,2.091,1654,1.543,1655,1.974,1656,2.091,1657,1.974,1658,1.876,1659,2.091,1661,2.091,1662,2.834,1663,3.514,1665,2.434,1666,1.974,1667,2.091,1668,1.793,1671,2.434,1675,2.091,1676,3.12,1677,1.974,1678,2.091,1679,1.45,1680,1.72,1681,1.974,1682,1.974,1683,2.091,1684,2.292,1685,1.974,1686,2.091,1688,3.537,1689,2.434,1692,2.238,1693,2.091,1694,1.974,1695,1.974,1696,2.091,1697,2.091,1699,2.238,1700,2.091,1840,1.72,1993,1.974,2030,1.974,2081,5.905,2119,7.121,2137,4.099,2142,2.434,2499,7.746,2500,4.318,2501,3.537,2502,8.228,2503,6.628,2504,5.355,2505,5.355,2506,2.238,2507,3.847,2508,4.318,2509,3.847,2510,2.732,2511,2.732,2512,2.434,2513,2.434,2514,4.318,2515,2.732,2516,2.732,2517,2.732,2518,2.434,2519,2.732,2520,6.628,2521,2.732,2522,2.091,2523,6.086,2524,2.732,2525,2.732,2526,2.732,2527,4.318,2528,4.318,2529,4.318,2530,3.537,2531,4.318,2532,4.318,2533,2.732,2534,2.732,2535,2.732,2536,2.732,2537,2.238,2538,2.732,2539,2.732,2540,2.238,2541,2.732,2542,6.628,2543,2.732,2544,4.318,2545,2.732,2546,2.732,2547,2.732,2548,4.318,2549,2.732,2550,2.732,2551,2.732,2552,2.732,2553,2.732,2554,2.732,2555,2.732,2556,2.434,2557,2.732,2558,2.732,2559,2.091,2560,2.732,2561,1.793,2562,1.495,2563,2.732,2564,2.524,2565,4.318,2566,4.318,2567,2.732,2568,2.732,2569,2.732,2570,4.318]],["title/components/InputComponent.html",[0,0.31,129,1.3]],["body/components/InputComponent.html",[0,0.554,1,0.729,2,1.031,3,0.147,4,0.152,5,1.14,7,0.782,8,0.755,10,0.115,12,0.314,15,1.89,17,1.11,18,3.412,20,1.768,21,1.373,23,2.512,24,0.637,25,1.448,26,0.007,27,1.935,28,2.966,29,2.398,30,2.966,31,2.398,32,1.192,33,2.239,34,1.886,37,1.148,39,0.296,40,0.535,42,1.767,43,3.412,44,3.412,45,1.384,46,0.819,47,3.971,48,2.404,49,3.871,51,3.321,52,2.241,54,0.678,55,3.263,56,2.138,58,2.876,59,3.871,62,2.655,63,3.56,65,1.129,68,0.789,69,0.862,70,1.187,72,1.481,84,1.233,85,2.885,87,1.099,88,0.648,89,1.162,90,1.675,95,2.759,97,3.354,98,1.757,99,3.01,100,1.024,101,1.043,102,0.724,103,2.759,113,2.759,115,3.01,116,2.259,117,1.66,118,3.01,119,2.794,121,1.067,124,1.123,127,1.148,129,1.984,131,2.65,138,1.896,139,2.476,143,2.346,145,2.476,147,4.303,152,0.26,154,0.249,155,1.123,162,3.589,166,0.833,167,0.102,168,0.115,181,2.876,188,0.765,191,2.13,193,1.572,194,2.759,198,0.538,199,0.891,200,1.16,202,1.697,203,0.782,204,0.782,205,0.705,206,1.727,207,0.705,208,0.742,209,0.659,210,0.729,211,0.742,212,2.087,213,0.742,214,1.24,215,1.727,216,0.742,217,1.345,218,2.162,219,0.742,220,0.742,221,0.782,222,0.729,223,1.231,224,0.742,225,0.782,226,0.729,227,0.782,228,0.717,229,0.705,230,1.566,231,1.522,232,0.717,233,0.729,234,1.948,235,1.584,236,0.782,237,0.742,238,0.742,239,1.878,240,0.742,241,0.729,242,0.742,243,0.742,244,0.742,245,0.729,246,0.782,247,0.717,248,0.742,249,0.782,250,0.729,251,0.782,252,0.729,253,0.717,254,0.891,255,0.782,256,0.729,257,0.782,258,0.717,259,0.729,260,0.782,261,0.729,262,0.782,263,0.67,264,0.782,265,0.729,266,1.327,267,0.782,268,0.717,269,0.782,270,0.729,271,0.782,272,0.705,273,0.782,274,0.729,275,0.717,276,0.729,277,0.693,278,0.782,279,0.729,280,0.782,281,0.729,282,0.782,283,0.705,284,0.782,285,0.717,286,0.729,287,0.782,288,0.729,289,0.755,290,0.782,291,0.717,292,0.729,293,1.732,294,0.729,295,0.742,296,0.605,297,0.742,298,0.742,299,0.729,300,0.742,301,0.742,302,0.742,303,0.782,304,0.717,305,0.729,306,0.782,307,0.729,308,0.755,309,0.729,310,0.782,311,0.729,312,0.782,313,0.742,314,0.729,315,0.729,316,0.782,317,0.729,318,0.782,319,0.729,320,0.782,321,0.729,322,0.681,323,0.681,324,0.705,325,0.782,326,0.717,327,0.782,328,0.717,329,0.782,330,0.717,331,0.782,332,0.717,333,0.782,334,0.717,335,0.768,336,0.782,337,1.129,338,0.768,339,0.782,340,0.002,341,0.003,342,0.002,370,1.89,375,0.906,381,0.782,386,1.995,425,1.523,426,1.358,434,3.168,448,2.398,477,1.572,485,1.66,486,4.051,505,1.89,507,1.076,524,1.605,534,1.129,552,2.138,585,2.031,697,1.807,822,2.476,860,1.66,903,2.138,914,1.477,936,2.874,994,2.995,997,3.831,1015,2.576,1104,2.138,1106,0.973,1125,3.354,1175,1.686,1176,1.686,1196,3.168,1198,3.589,1212,3.589,1214,4.439,1216,1.972,1229,3.01,1269,2.279,1270,1.911,1349,2.031,1435,2.13,1451,5.818,1513,3.589,1516,4.148,1526,3.916,1529,3.589,1530,4.439,1531,3.589,1533,2.279,1534,3.589,1536,3.589,1538,2.279,1539,2.279,1540,2.279,1732,1.572,1829,3.557,1840,2.759,1944,3.904,2214,4.829,2378,2.759,2379,2.759,2401,1.752,2491,2.279,2509,3.904,2571,2.479,2572,5.42,2573,6.148,2574,5.477,2575,4.439,2576,2.783,2577,3.904,2578,2.783,2579,3.354,2580,2.783,2581,6.328,2582,2.876,2583,2.783,2584,3.904,2585,2.783,2586,2.783,2587,2.783,2588,2.783,2589,3.904,2590,4.382,2591,2.783,2592,3.904,2593,2.783,2594,4.382,2595,2.783,2596,2.783,2597,2.783,2598,2.783,2599,3.589,2600,2.783,2601,2.783,2602,2.783,2603,2.783,2604,2.783,2605,2.479,2606,2.783,2607,3.166,2608,4.382,2609,3.166,2610,4.382,2611,4.382,2612,2.759,2613,4.382,2614,4.382,2615,4.382,2616,2.783,2617,4.382,2618,2.783,2619,2.783,2620,2.783,2621,3.904,2622,3.589,2623,2.479,2624,2.479,2625,2.279,2626,2.479,2627,7.433,2628,2.783,2629,2.783,2630,2.783,2631,4.382,2632,3.904,2633,2.783,2634,2.783,2635,6.148,2636,6.688,2637,4.382,2638,2.783,2639,2.783,2640,2.783,2641,2.783,2642,2.783,2643,2.783,2644,4.382,2645,2.783,2646,2.783,2647,2.783,2648,2.783,2649,2.783,2650,2.783,2651,2.783,2652,2.479,2653,4.382,2654,2.783,2655,2.783,2656,2.783,2657,2.783,2658,2.783,2659,2.783,2660,2.783]],["title/components/InputErrorsComponent.html",[0,0.31,256,1.322]],["body/components/InputErrorsComponent.htmltitle/modules/IoModule.html",[343,1.155,2155,3.466]],["body/modules/IoModule.html",[3,0.324,4,0.334,10,0.253,25,2.538,26,0.007,42,1.145,129,2.53,152,0.35,154,0.549,155,2.471,167,0.224,168,0.253,198,1.185,233,2.554,234,2.554,235,1.979,256,2.574,285,2.53,337,2.511,340,0.004,341,0.005,342,0.004,343,1.401,345,2.419,346,2.32,347,3.461,348,2.525,349,3.386,356,3.239,357,2.368,358,2.101,360,4.34,361,2.062,362,2.687,630,3.651,631,2.77,633,6.064,1511,5.016,1526,4.425,1528,4.688,1541,5.457,2155,6.862,2625,5.016,2662,5.016,2684,5.457,2685,5.457,2686,5.457,2687,6.125,2688,6.125,2689,6.125,2690,6.125,2691,6.125]],["title/classes/Item.html",[52,1.345,168,0.209]],["body/classes/Item.html",[3,0.139,4,0.144,10,0.109,12,0.298,13,2.373,24,0.961,26,0.007,32,0.81,39,0.28,40,0.974,45,1.56,46,1.456,48,1.12,51,3.14,52,2.479,54,0.923,68,0.753,69,1.822,70,1.169,72,1.218,73,1.658,84,1.254,88,2.117,89,1.414,90,1.298,99,1.812,100,1.229,101,1.049,102,0.889,121,0.913,133,1.658,138,1.469,142,1.658,152,0.096,166,1.384,167,0.096,168,0.174,186,2.911,188,1.683,296,0.914,340,0.002,341,0.003,342,0.002,367,3.479,371,2.946,373,1.694,375,1.436,386,2.612,387,1.042,388,3.265,389,1.942,397,1.082,425,3.797,426,4.046,434,4.254,463,0.519,475,0.905,491,1.159,504,1.899,505,1.138,507,2.023,514,1.731,524,2.237,534,1.946,537,1.731,538,2.16,552,2.049,564,1.36,585,2.765,664,1.83,682,2.544,692,2.418,697,3.471,718,1.36,757,3.916,828,2.066,832,1.254,833,3.434,850,1.222,854,6.537,897,3.458,914,3.167,936,3.751,938,3.346,947,2.298,1026,1.4,1049,4.662,1102,2.756,1104,2.049,1105,1.899,1110,2.885,1119,1.541,1128,1.222,1139,2.35,1236,4.101,1278,2.777,1337,1.812,1349,3.373,1501,1.812,1518,3.214,1560,1.812,1569,3.214,1582,2.756,1654,2.373,1663,1.731,1715,2.425,1721,3.44,1722,2.049,1729,4.757,1732,2.373,1737,3.214,1745,3.214,1746,2.885,1795,3.756,1849,3.742,1850,3.742,1873,2.885,1878,3.034,1882,4.887,1904,2.544,1906,6.485,1908,3.565,1909,5.875,1911,4.567,1919,2.35,1920,2.35,1921,3.742,1922,3.742,1923,4.005,1925,5.316,1928,2.544,1933,2.35,1934,3.214,2337,1.906,2338,3.214,2473,3.214,2522,2.019,2561,1.731,2612,2.644,2692,2.35,2693,4.2,2694,4.2,2695,5.316,2696,5.967,2697,5.967,2698,5.967,2699,5.967,2700,4.2,2701,5.967,2702,4.2,2703,4.2,2704,4.2,2705,2.638,2706,4.311,2707,4.2,2708,2.638,2709,4.2,2710,4.2,2711,2.638,2712,4.2,2713,4.2,2714,2.638,2715,4.2,2716,2.638,2717,9.099,2718,4.2,2719,2.638,2720,4.2,2721,2.638,2722,3.742,2723,2.885,2724,2.638,2725,6.183,2726,2.638,2727,2.638,2728,4.2,2729,4.2,2730,2.638,2731,4.2,2732,2.638,2733,2.638,2734,4.2,2735,2.638,2736,4.2,2737,2.638,2738,4.2,2739,2.638,2740,4.2,2741,4.2,2742,4.2,2743,2.638,2744,3.756,2745,5.967,2746,4.2,2747,2.638,2748,4.2,2749,5.233,2750,4.2,2751,2.638,2752,3.214,2753,2.638,2754,5.967,2755,2.638,2756,2.885,2757,3.44,2758,3.742,2759,5.967,2760,5.967,2761,4.2,2762,6.515,2763,4.2,2764,2.638,2765,2.638,2766,2.638,2767,2.16,2768,2.16,2769,2.638,2770,2.35,2771,2.638,2772,6.94,2773,2.638,2774,2.638,2775,2.638,2776,2.638,2777,2.638,2778,2.638,2779,2.638,2780,2.638,2781,2.638,2782,4.2,2783,2.638,2784,4.2,2785,4.2,2786,4.2,2787,2.638,2788,2.638,2789,2.16,2790,2.638,2791,2.638,2792,2.638,2793,2.638,2794,2.638,2795,2.638,2796,2.638,2797,2.638,2798,2.638,2799,6.515,2800,4.2,2801,2.638,2802,2.638,2803,2.638,2804,2.638,2805,4.2,2806,2.638,2807,2.638,2808,2.638,2809,4.2,2810,4.2,2811,4.2,2812,5.233,2813,2.638,2814,2.638,2815,4.662,2816,2.638,2817,2.638,2818,2.638,2819,2.638,2820,2.638,2821,2.638,2822,2.638,2823,4.2,2824,2.638,2825,2.638,2826,2.638,2827,2.638,2828,2.638,2829,2.638,2830,2.35,2831,2.638,2832,5.967,2833,2.35,2834,4.2,2835,2.638,2836,2.638,2837,2.638,2838,2.638,2839,2.638,2840,2.638,2841,4.2,2842,2.638,2843,2.638,2844,4.2,2845,2.638,2846,2.638,2847,2.638,2848,2.638,2849,2.638,2850,2.638,2851,2.638,2852,2.638,2853,2.019,2854,2.638,2855,2.638]],["title/interfaces/ItemConfig.html",[366,1.345,1729,2.851]],["body/interfaces/ItemConfig.html",[3,0.276,4,0.285,10,0.216,12,0.59,26,0.007,39,0.556,40,1.011,45,1.112,48,2.21,52,2.619,68,0.834,69,1.885,72,1.782,73,3.628,85,2.992,99,5.694,102,1.006,133,2.739,142,2.739,152,0.254,167,0.191,168,0.287,217,1.212,340,0.003,341,0.005,342,0.003,366,1.394,368,2.255,372,3.795,373,3.577,386,1.948,387,3.274,388,4.852,389,3.077,426,4.581,534,2.135,552,3.384,564,3.575,593,3.137,602,4.552,697,3.21,718,3.575,828,3.502,832,4.215,854,6.79,907,5.819,908,3.137,936,3.429,938,2.798,948,5.681,1026,2.775,1075,3.292,1104,3.384,1106,2.9,1119,4.845,1125,5.309,1149,6.18,1202,4.054,1238,5.309,1264,5.012,1282,3.795,1349,3.215,1638,4.552,1722,3.384,1729,4.684,1908,4.852,1909,3.292,1937,4.658,2208,5.681,2522,6.345,2592,6.18,2612,4.367,2706,5.012,2789,6.79,2856,4.658,2857,6.936,2858,6.18,2859,7.386,2860,8.29,2861,6.18,2862,6.936,2863,6.936,2864,7.784,2865,6.936,2866,6.936,2867,6.936,2868,6.936,2869,6.936,2870,6.936,2871,5.309]],["title/interfaces/KeyAction.html",[366,1.345,2872,3.862]],["body/interfaces/KeyAction.html",[3,0.39,4,0.313,10,0.237,12,0.97,26,0.007,32,1.26,39,0.61,40,0.9,42,1.074,45,1.182,46,1.074,52,1.531,63,2.878,65,1.479,68,0.761,69,1.843,90,1.249,102,0.752,151,3.244,152,0.298,154,0.514,166,1.092,167,0.27,168,0.237,186,4.618,188,1.423,296,1.249,340,0.004,341,0.005,342,0.004,366,1.531,367,4.308,368,2.476,373,2.316,375,1.188,387,3.216,392,2.267,397,2.214,426,4.193,582,3.478,587,7.039,589,3.683,594,2.107,595,3.244,936,2.22,941,4.119,970,5.127,1107,4.082,1268,4.148,1337,3.943,1480,4.148,1501,3.943,2230,4.702,2853,4.394,2872,6.803,2873,4.702,2874,5.115,2875,4.702,2876,5.115,2877,5.115,2878,5.115,2879,4.702,2880,6.569,2881,6.569,2882,5.115,2883,7.256,2884,5.115,2885,5.115,2886,6.569,2887,5.115,2888,5.115,2889,5.115,2890,5.115,2891,4.394,2892,6.569,2893,5.115,2894,5.115,2895,5.115,2896,6.569,2897,4.702,2898,5.115,2899,5.115,2900,5.115,2901,5.115,2902,5.115,2903,5.115,2904,5.115,2905,5.115,2906,5.115,2907,5.115,2908,5.115,2909,5.115,2910,5.115,2911,5.115,2912,5.115,2913,5.115,2914,5.115,2915,5.115,2916,5.115,2917,5.115,2918,5.115,2919,5.115,2920,5.115,2921,5.115,2922,5.115]],["title/injectables/KeycommandsService.html",[151,2.851,594,1.442]],["body/injectables/KeycommandsService.html",[3,0.347,4,0.263,10,0.2,12,0.545,26,0.007,32,1.157,39,0.513,40,0.802,42,1.398,45,1.466,46,1.57,52,1.753,54,1.018,63,2.421,65,1.244,68,0.792,69,1.775,70,1.219,89,1.324,90,1.963,100,1.319,101,1.074,102,0.933,121,1.14,151,3.715,152,0.274,154,0.433,166,0.918,167,0.241,168,0.2,186,4.622,188,1.306,296,1.051,340,0.003,341,0.004,342,0.003,366,1.287,367,2.421,372,2.643,373,1.948,375,0.999,387,3.422,392,1.907,397,2.284,463,0.95,507,2.891,582,2.926,587,3.956,589,4.184,594,1.879,595,2.729,647,2.184,697,2.711,804,2.643,936,2.543,941,3.047,970,5.76,1107,4.209,1118,2.643,1268,4.751,1337,3.317,1480,3.489,1501,3.317,2230,3.956,2422,5.033,2853,3.696,2872,6.906,2873,3.956,2874,4.303,2875,6.124,2876,6.661,2877,6.661,2878,6.661,2879,3.956,2880,5.858,2881,5.858,2882,4.303,2883,6.661,2884,4.303,2885,4.303,2886,5.858,2887,4.303,2888,4.303,2889,4.303,2890,4.303,2891,3.696,2892,5.858,2893,4.303,2894,4.303,2895,5.858,2896,5.858,2897,3.956,2898,5.858,2899,5.858,2900,4.303,2901,6.661,2902,5.858,2903,4.303,2904,4.303,2905,5.858,2906,4.303,2907,4.303,2908,4.303,2909,4.303,2910,4.303,2911,4.303,2912,4.303,2913,4.303,2914,4.303,2915,5.858,2916,4.303,2917,5.858,2918,4.303,2919,4.303,2920,5.858,2921,4.303,2922,4.303,2923,5.858,2924,6.576,2925,6.576,2926,6.576,2927,5.033,2928,6.576,2929,6.576,2930,4.303,2931,6.576,2932,4.83,2933,4.83,2934,4.83,2935,4.83,2936,4.83,2937,4.83,2938,4.83,2939,4.83,2940,4.83,2941,4.83,2942,4.83,2943,4.83,2944,6.576]],["title/components/ListComponent.html",[0,0.31,258,1.3]],["body/components/ListComponent.html",[0,0.332,1,0.727,2,1.028,3,0.147,4,0.151,5,1.138,7,0.779,8,0.752,9,1.169,10,0.115,12,0.313,17,1.107,21,0.702,23,2.506,24,0.634,26,0.007,32,1.149,33,2.238,34,1.881,37,0.727,39,0.817,40,0.533,42,1.593,45,1.268,46,1.248,51,1.196,52,2.348,54,0.676,55,2.87,56,2.132,63,2.19,65,1.126,68,0.766,70,1.186,72,1.326,76,2.271,84,1.276,85,2.333,88,1.428,89,1.161,90,1.615,98,1.249,100,1.022,101,1.051,102,0.757,121,0.878,127,1.145,129,0.714,138,2.146,143,2.399,145,3.467,152,0.259,154,0.248,167,0.101,168,0.115,183,1.573,188,1.239,196,5.11,198,0.536,199,1.1,200,0.593,201,1.842,202,1.693,203,0.779,204,0.779,205,0.702,206,1.723,207,0.702,208,0.739,209,0.656,210,0.727,211,0.739,212,2.084,213,0.739,214,1.237,215,1.723,216,0.739,217,1.693,218,2.16,219,0.739,220,0.739,221,0.779,222,0.727,223,1.227,224,0.739,225,0.779,226,0.727,227,0.779,228,0.714,229,0.702,230,1.565,231,1.519,232,0.714,233,0.727,234,0.727,235,0.714,236,0.779,237,0.739,238,0.739,239,1.875,240,0.739,241,0.727,242,0.739,243,0.739,244,0.739,245,0.727,246,0.779,247,0.714,248,0.739,249,0.779,250,0.727,251,0.779,252,0.727,253,0.714,254,0.889,255,0.779,256,0.727,257,0.779,258,1.827,259,0.727,260,0.779,261,0.727,262,0.779,263,0.667,264,0.779,265,0.727,266,1.324,267,0.779,268,0.714,269,0.779,270,0.727,271,0.779,272,0.702,273,0.779,274,0.727,275,0.714,276,0.727,277,0.69,278,0.779,279,0.727,280,0.779,281,0.727,282,0.779,283,0.702,284,0.779,285,0.714,286,0.727,287,0.779,288,0.727,289,0.752,290,0.779,291,0.714,292,0.727,293,1.73,294,0.727,295,0.739,296,1.176,297,0.739,298,0.739,299,0.727,300,0.739,301,0.739,302,0.739,303,0.779,304,0.714,305,0.727,306,0.779,307,0.727,308,0.752,309,0.727,310,0.779,311,0.727,312,0.779,313,0.739,314,0.727,315,0.727,316,0.779,317,0.727,318,0.779,319,0.727,320,0.779,321,0.727,322,0.679,323,0.679,324,0.702,325,0.779,326,0.714,327,0.779,328,0.714,329,0.779,330,0.714,331,0.779,332,0.714,333,0.779,334,0.714,335,0.765,336,0.779,337,0.714,338,0.765,339,0.779,340,0.002,341,0.003,342,0.002,370,1.196,375,0.904,376,3.653,380,3.952,381,1.227,386,2.222,387,2.135,389,1.029,392,1.095,393,3.653,397,1.72,413,4.585,430,4.434,434,3.16,436,3.345,463,0.545,475,0.951,485,1.655,498,2.182,507,1.69,511,1.517,524,1.817,692,2.007,724,1.353,789,1.029,827,5.513,832,3.927,847,1.567,860,2.324,863,1.517,903,1.353,908,4.047,909,2.122,936,1.072,958,3.001,975,3.404,976,3.16,994,1.842,997,3.826,1007,2.994,1026,1.472,1028,1.68,1041,4.139,1069,1.905,1070,1.905,1098,3.001,1106,1.528,1108,4.654,1141,2.868,1148,2.57,1216,1.009,1234,2.469,1258,2.638,1294,3.579,1295,2.253,1348,4.434,1349,2.506,1436,2.471,1464,2.132,1491,2.004,1553,4.044,1654,2.469,1705,2.122,1727,2.319,1732,1.567,1781,3.893,1903,2.471,1904,1.68,2130,2.271,2207,3.893,2378,2.751,2379,2.751,2401,1.746,2599,3.579,2756,1.905,2871,2.122,2891,3.345,2945,2.471,2946,4.37,2947,4.37,2948,3.579,2949,3.579,2950,5.467,2951,4.818,2952,5.408,2953,3.893,2954,6.136,2955,6.136,2956,6.136,2957,4.37,2958,5.026,2959,5.408,2960,4.659,2961,5.557,2962,4.429,2963,2.471,2964,4.381,2965,4.37,2966,2.773,2967,2.773,2968,2.773,2969,2.773,2970,2.773,2971,2.773,2972,2.773,2973,2.773,2974,2.773,2975,3.893,2976,2.773,2977,2.773,2978,3.893,2979,2.773,2980,4.37,2981,3.893,2982,4.37,2983,3.893,2984,3.893,2985,4.37,2986,2.773,2987,2.773,2988,2.773,2989,2.773,2990,3.345,2991,4.37,2992,2.773,2993,2.773,2994,3.345,2995,4.37,2996,4.37,2997,4.37,2998,2.773,2999,2.773,3000,4.37,3001,2.773,3002,2.773,3003,2.773,3004,2.471,3005,2.471,3006,2.773,3007,2.773,3008,2.773,3009,2.773,3010,6.676,3011,2.773,3012,2.122,3013,2.773,3014,2.773,3015,2.773,3016,4.37,3017,2.773,3018,4.37,3019,2.773,3020,2.271,3021,2.773,3022,4.37,3023,2.471,3024,2.773,3025,2.773,3026,2.471,3027,2.773,3028,4.37,3029,2.773,3030,3.893,3031,2.773,3032,2.773,3033,2.471,3034,2.773,3035,2.471,3036,2.773,3037,2.773,3038,2.773,3039,6.318,3040,2.773,3041,2.773,3042,2.773,3043,2.471,3044,2.471,3045,2.773,3046,2.773,3047,2.773,3048,2.773,3049,4.37,3050,2.773,3051,2.773,3052,2.773,3053,4.37,3054,4.37,3055,6.136,3056,2.773]],["title/interfaces/ListConfig.html",[366,1.345,380,2.462]],["body/interfaces/ListConfig.html",[3,0.213,4,0.22,10,0.166,12,0.455,20,2.336,26,0.007,32,1.489,34,1.101,39,0.428,40,0.905,42,1.083,48,1.544,52,1.807,68,0.837,69,1.865,73,2.287,88,1.347,98,1.655,101,0.68,102,1.019,121,0.975,138,2.025,152,0.248,167,0.147,217,1.663,254,1.855,340,0.003,341,0.004,342,0.003,366,1.074,368,1.737,373,3.299,375,2.049,380,2.825,386,2.082,397,1.492,426,2.825,432,4.215,481,3.073,483,5.356,492,3.935,498,3.807,524,1.714,534,2.221,583,4.876,603,2.006,692,2.149,718,2.985,754,3.508,804,4.056,828,2.287,832,4.289,881,2.902,908,2.618,936,2.867,941,3.79,945,3.384,975,3.645,997,2.985,1007,3.617,1014,2.752,1021,5.092,1026,2.137,1075,2.535,1085,5.356,1086,6.605,1095,6.605,1104,2.825,1112,5.159,1113,3.8,1114,3.168,1115,5.356,1126,4.743,1136,3.716,1141,4.865,1202,3.384,1216,2.106,1265,5.159,1278,3.073,1281,4.432,1295,4.444,1349,3.436,1427,3.8,1642,3.524,1654,3.272,1703,6.072,1704,5.356,1726,3.384,1727,4.919,1729,3.831,1884,3.977,1911,4.432,1923,5.674,1936,3.977,2140,6.605,2146,4.743,2564,4.332,2706,4.184,2752,4.432,2960,3.508,2962,6.698,3012,4.432,3057,3.588,3058,7.414,3059,6.605,3060,5.356,3061,6.605,3062,7.414,3063,5.674,3064,7.414,3065,6.259,3066,6.698,3067,7.414,3068,7.414,3069,5.791,3070,5.159,3071,5.159,3072,5.791,3073,5.791,3074,4.743,3075,4.743,3076,5.791,3077,6.072,3078,5.159,3079,4.743,3080,5.159,3081,5.791,3082,3.588]],["title/injectables/ListConfigService.html",[594,1.442,2964,3.312]],["body/injectables/ListConfigService.html",[3,0.295,4,0.305,10,0.231,26,0.007,32,0.865,39,0.594,40,0.884,45,1.289,46,1.504,48,1.932,54,1.121,68,0.728,69,1.099,70,1.165,89,1.325,90,1.851,100,1.302,101,1.06,102,0.921,152,0.265,154,0.501,166,1.772,167,0.204,168,0.231,188,1.606,217,1.714,340,0.004,341,0.005,342,0.004,381,1.57,386,2.645,397,1.44,425,3.059,426,3.536,534,2.071,580,3.158,594,2.071,647,2.528,914,2.967,936,2.802,941,4.319,1061,2.727,1281,4.278,1746,5.523,2964,4.756,3078,6.456,3080,4.98,3083,7.132,3084,4.278,3085,8.042,3086,7.247,3087,7.247,3088,7.247,3089,7.247,3090,7.247,3091,5.59,3092,7.247,3093,5.59,3094,7.247,3095,5.59,3096,7.247,3097,5.59,3098,7.247,3099,5.59,3100,7.247,3101,5.59,3102,5.59,3103,5.59,3104,5.59,3105,7.247,3106,4.98,3107,7.247,3108,5.59,3109,5.59,3110,5.59,3111,8.042,3112,5.59,3113,7.247,3114,5.59,3115,5.59,3116,7.247,3117,5.59,3118,5.59,3119,7.247,3120,5.59,3121,5.59,3122,5.59,3123,7.247,3124,5.59,3125,5.59,3126,5.59]],["title/components/ListHeaderComponent.html",[0,0.31,259,1.322]],["body/components/ListHeaderComponent.html",[0,0.427,1,0.79,2,0.887,3,0.159,4,0.164,5,0.635,7,0.847,8,0.818,10,0.125,12,0.34,17,1.182,21,0.764,23,2.645,24,0.69,26,0.007,32,1.136,33,2.247,34,1.891,37,1.223,39,0.321,40,0.569,42,1.551,44,1.899,45,1.177,46,1.579,47,3.219,48,2.421,54,0.883,56,2.277,65,1.202,68,0.734,70,1.165,72,0.564,85,2.77,88,1.494,89,1.217,90,1.767,100,1.17,101,1.066,102,0.861,121,0.614,124,1.217,127,1.223,129,1.654,131,1.971,138,1.996,152,0.269,153,1.364,154,0.27,166,0.887,167,0.11,168,0.125,188,1.419,198,0.583,199,0.949,200,0.645,202,1.773,203,0.847,204,0.847,205,0.764,206,1.804,207,0.764,208,0.804,209,0.714,210,0.79,211,0.804,212,2.151,213,0.804,214,1.306,215,1.804,216,0.804,217,1.669,218,2.222,219,0.804,220,0.804,221,0.847,222,0.79,223,1.31,224,0.804,225,0.847,226,0.79,227,0.847,228,0.777,229,0.764,230,1.609,231,1.603,232,0.777,233,0.79,234,0.79,235,0.777,236,0.847,237,0.804,238,0.804,239,1.951,240,0.804,241,0.79,242,0.804,243,0.804,244,0.804,245,0.79,246,0.847,247,1.654,248,0.804,249,0.847,250,0.79,251,0.847,252,0.79,253,0.777,254,0.949,255,0.847,256,0.79,257,0.847,258,0.777,259,1.683,260,0.847,261,0.79,262,0.847,263,0.726,264,0.847,265,0.79,266,1.397,267,0.847,268,0.777,269,0.847,270,0.79,271,0.847,272,0.764,273,0.847,274,0.79,275,0.777,276,0.79,277,0.751,278,0.847,279,0.79,280,0.847,281,0.79,282,0.847,283,0.764,284,0.847,285,0.777,286,0.79,287,0.847,288,0.79,289,0.818,290,0.847,291,1.654,292,0.79,293,1.78,294,0.79,295,0.804,296,1.241,297,0.804,298,0.804,299,0.79,300,0.804,301,0.804,302,0.804,303,0.847,304,0.777,305,0.79,306,0.847,307,0.79,308,0.818,309,0.79,310,0.847,311,0.79,312,0.847,313,0.804,314,0.79,315,0.79,316,0.847,317,0.79,318,0.847,319,0.79,320,0.847,321,0.79,322,0.738,323,0.738,324,0.764,325,0.847,326,0.777,327,0.847,328,0.777,329,0.847,330,0.777,331,0.847,332,0.777,333,0.847,334,0.777,335,0.832,336,0.847,337,0.777,338,0.832,339,0.847,340,0.002,341,0.003,342,0.002,375,0.624,376,3.801,380,3.736,381,0.847,386,1.31,389,2.578,392,1.191,393,3.801,397,1.47,430,4.123,436,4.368,440,1.899,463,0.593,475,1.035,481,1.601,504,1.364,507,1.166,534,0.777,552,1.472,580,1.704,583,3.123,602,1.98,702,1.827,724,1.472,789,1.119,896,3.205,908,3.578,936,2.484,995,2.309,1007,2.277,1014,3.053,1120,4.157,1136,2.339,1141,3.062,1216,1.697,1234,1.704,1261,3.205,1271,1.98,1278,1.601,1295,4.277,1387,3.822,1426,1.65,1679,2.477,1727,4.065,1740,1.827,1830,2.309,1832,3.593,1838,3.745,1840,1.899,1841,2.309,1858,4.368,1859,3.062,1864,2.471,1873,2.072,1882,2.471,1905,3.571,1930,2.179,1991,2.309,2073,2.179,2143,3.571,2215,2.687,2330,4.157,2373,2.072,2378,2.938,2379,2.938,2401,1.899,2564,1.763,2574,2.471,2599,3.822,2665,1.763,2963,2.687,2964,4.558,2990,2.309,3005,2.687,3035,2.687,3083,7.071,3127,7.567,3128,2.687,3129,3.571,3130,4.666,3131,5.707,3132,6.946,3133,5.707,3134,5.707,3135,5.707,3136,6.423,3137,4.666,3138,4.666,3139,4.666,3140,4.666,3141,6.423,3142,4.666,3143,4.666,3144,4.666,3145,4.666,3146,3.016,3147,3.016,3148,3.571,3149,3.822,3150,3.016,3151,4.666,3152,3.016,3153,3.822,3154,3.822,3155,4.666,3156,3.016,3157,4.666,3158,3.016,3159,4.666,3160,3.016,3161,3.016,3162,3.016,3163,4.666,3164,3.016,3165,4.666,3166,3.016,3167,4.666,3168,3.016,3169,4.666,3170,3.016,3171,3.016,3172,3.016,3173,4.666,3174,3.016,3175,3.016,3176,3.016,3177,2.471,3178,3.016,3179,2.471,3180,3.016,3181,4.666,3182,2.687,3183,3.016,3184,3.016,3185,5.707,3186,6.423,3187,3.016,3188,3.016,3189,3.016,3190,3.016,3191,3.016,3192,3.016,3193,5.707,3194,3.016,3195,3.016,3196,3.016,3197,3.016,3198,2.687,3199,3.016,3200,7.345,3201,3.016,3202,3.016,3203,4.666,3204,3.016,3205,3.016,3206,3.016,3207,3.016,3208,3.016,3209,3.016,3210,4.666,3211,3.016,3212,3.016,3213,3.016,3214,3.016,3215,3.016,3216,3.016,3217,3.016,3218,3.016,3219,3.016,3220,3.016,3221,3.016,3222,7.345,3223,3.016]],["title/components/ListItemsComponent.html",[0,0.31,261,1.322]],["body/components/ListItemsComponent.html",[0,0.395,1,0.964,2,1.031,3,0.194,4,0.201,5,0.774,7,1.033,8,0.997,10,0.152,12,0.415,17,1.372,21,0.931,23,2.983,24,0.841,26,0.007,32,1.099,33,2.264,34,1.907,37,1.42,39,0.391,40,0.661,42,1.532,46,1.013,47,2.717,52,2.529,54,0.839,56,3.465,65,1.396,68,0.735,70,1.135,72,1.013,84,0.61,85,3.064,88,1.261,89,1.042,90,1.179,100,0.928,101,1.025,102,0.835,121,0.713,127,1.42,129,0.947,138,1.896,143,2.103,145,3.062,152,0.235,154,0.329,167,0.135,168,0.152,186,3.14,188,0.947,198,0.711,199,1.103,200,0.787,202,1.96,203,1.033,204,1.033,205,0.931,206,1.995,207,0.931,208,0.98,209,0.87,210,0.964,211,0.98,212,2.301,213,0.98,214,1.473,215,1.995,216,0.98,217,1.683,218,2.361,219,0.98,220,0.98,221,1.033,222,0.964,223,1.522,224,0.98,225,1.033,226,0.964,227,1.033,228,0.947,229,0.931,230,1.71,231,1.808,232,0.947,233,0.964,234,0.964,235,0.947,236,1.033,237,0.98,238,0.98,239,2.127,240,0.98,241,0.964,242,0.98,243,0.98,244,0.98,245,0.964,246,1.033,247,0.947,248,0.98,249,1.033,250,0.964,251,1.033,252,0.964,253,0.947,254,1.103,255,1.033,256,0.964,257,1.033,258,0.947,259,0.964,260,1.033,261,2.076,262,1.033,263,0.885,264,1.033,265,0.964,266,1.575,267,1.033,268,0.947,269,1.033,270,0.964,271,1.033,272,0.931,273,1.033,274,0.964,275,0.947,276,0.964,277,0.916,278,1.033,279,0.964,280,1.033,281,0.964,282,1.033,283,0.931,284,1.033,285,0.947,286,0.964,287,1.033,288,0.964,289,0.997,290,1.033,291,0.947,292,0.964,293,1.892,294,0.964,295,0.98,296,0.8,297,0.98,298,0.98,299,0.964,300,0.98,301,0.98,302,0.98,303,1.033,304,0.947,305,0.964,306,1.033,307,0.964,308,0.997,309,0.964,310,1.033,311,0.964,312,1.033,313,0.98,314,0.964,315,0.964,316,1.033,317,0.964,318,1.033,319,0.964,320,1.033,321,0.964,322,0.9,323,0.9,324,0.931,325,1.033,326,0.947,327,1.033,328,0.947,329,1.033,330,0.947,331,1.033,332,0.947,333,1.033,334,0.947,335,1.015,336,1.033,337,0.947,338,1.015,339,1.033,340,0.002,341,0.004,342,0.002,375,1.331,376,4.144,381,1.033,392,1.452,393,3.886,413,4.421,430,5.132,463,0.723,485,2.053,524,1.605,583,2.966,592,3.557,692,2.636,700,2.876,832,4.207,842,3.062,860,2.868,907,3.557,908,3.947,909,4.148,975,4.052,995,5.436,1007,2.644,1041,4.148,1069,3.723,1070,2.526,1128,2.512,1148,2.576,1202,3.167,1271,3.557,1295,2.794,1460,3.56,1501,2.526,1553,3.283,1679,2.876,1705,2.815,1860,3.916,2378,3.412,2379,3.412,2401,2.315,2725,4.829,2853,2.815,2891,4.148,2951,5.734,2953,4.829,2960,3.283,2962,5.272,2975,4.829,2978,4.829,3039,3.276,3043,4.829,3044,3.276,3083,6.924,3148,4.148,3149,4.439,3224,7.41,3225,3.276,3226,5.42,3227,5.42,3228,5.42,3229,5.42,3230,7.103,3231,3.677,3232,5.42,3233,3.677,3234,3.677,3235,4.829,3236,5.42,3237,3.677,3238,3.677,3239,3.677,3240,3.677,3241,5.42,3242,5.42,3243,3.677,3244,5.42,3245,3.677,3246,3.677,3247,3.677,3248,3.276,3249,3.677,3250,3.677,3251,3.677]],["title/modules/ListModule.html",[343,1.155,3252,3.466]],["body/modules/ListModule.html",[3,0.3,4,0.31,10,0.235,25,2.677,26,0.007,152,0.356,154,0.509,155,2.292,166,1.081,167,0.268,168,0.235,198,1.099,217,1.416,258,2.485,259,2.528,261,2.528,286,2.528,302,2.572,340,0.004,341,0.005,342,0.004,343,1.3,345,2.244,346,2.152,347,3.342,348,2.343,349,3.27,356,3.088,357,2.197,358,1.949,361,2.465,362,1.987,630,3.481,631,2.569,634,5.03,724,2.772,1028,3.442,1233,6.626,2147,6.626,2157,5.953,2158,5.495,2160,5.953,2168,4.105,2171,4.654,2172,4.654,2964,5.953,3127,4.654,3224,4.654,3252,6.905,3253,5.062,3254,5.062,3255,5.682,3256,5.062,3257,5.062,3258,5.062,3259,5.062,3260,5.682,3261,5.682,3262,5.682,3263,5.682,3264,5.682,3265,5.062,3266,5.682]],["title/components/LoaderComponent.html",[0,0.31,263,1.214]],["body/components/LoaderComponent.html",[0,0.389,1,0.936,2,1.332,3,0.189,4,0.195,5,1.331,7,1.003,8,0.969,9,1.506,10,0.148,12,0.403,21,0.905,24,0.817,26,0.007,32,0.553,33,2.262,34,1.906,37,1.39,39,0.38,40,0.647,42,0.668,45,0.85,54,0.821,68,0.542,70,1.029,72,1.466,76,4.345,78,2.659,79,2.735,84,0.88,88,1.741,89,0.928,90,1.154,100,0.765,101,1,102,0.541,116,3.61,121,0.984,123,3.167,127,1.835,129,0.92,133,3.553,135,3.214,138,1.855,142,2.765,152,0.231,154,0.32,156,1.096,166,0.679,167,0.194,168,0.219,188,0.624,198,0.691,199,1.287,200,0.764,201,1.506,202,1.933,203,1.003,204,1.003,205,0.905,206,1.967,207,0.905,208,0.952,209,0.845,210,0.936,211,0.952,212,2.279,213,0.952,214,1.448,215,1.967,216,0.952,217,1.369,218,2.341,219,0.952,220,0.952,221,1.003,222,0.936,223,1.49,224,0.952,225,1.003,226,0.936,227,1.003,228,0.92,229,0.905,230,1.696,231,1.777,232,0.92,233,0.936,234,0.936,235,0.92,236,1.003,237,0.952,238,0.952,239,2.101,240,0.952,241,0.936,242,0.952,243,0.952,244,0.952,245,0.936,246,1.003,247,0.92,248,0.952,249,1.003,250,0.936,251,1.003,252,0.936,253,0.92,254,1.079,255,1.003,256,0.936,257,1.003,258,0.92,259,0.936,260,1.003,261,0.936,262,1.003,263,1.953,264,1.003,265,0.936,266,1.549,267,1.003,268,0.92,269,1.003,270,0.936,271,1.003,272,0.905,273,1.003,274,0.936,275,0.92,276,0.936,277,0.889,278,1.003,279,0.936,280,1.003,281,0.936,282,1.003,283,0.905,284,1.003,285,0.92,286,0.936,287,1.003,288,0.936,289,0.969,290,1.003,291,0.92,292,0.936,293,1.876,294,0.936,295,0.952,296,0.777,297,0.952,298,0.952,299,0.936,300,0.952,301,0.952,302,0.952,303,1.003,304,0.92,305,0.936,306,1.003,307,0.936,308,0.969,309,0.936,310,1.003,311,0.936,312,1.003,313,0.952,314,0.936,315,0.936,316,1.003,317,0.936,318,1.003,319,0.936,320,1.003,321,0.936,322,0.874,323,0.874,324,0.905,325,1.003,326,0.92,327,1.003,328,0.92,329,1.003,330,0.92,331,1.003,332,0.92,333,1.003,334,0.92,335,0.986,336,1.003,337,0.92,338,0.986,339,1.003,340,0.002,341,0.004,342,0.002,358,1.226,367,1.791,375,0.739,381,1.003,385,5.457,397,1.63,424,2.088,463,0.703,475,1.226,481,2.815,488,2.659,491,1.746,504,1.615,511,4.441,534,1.366,565,1.326,580,2.018,581,2.051,603,0.831,604,2.237,605,3.614,664,1.249,687,2.734,822,3.575,827,4.91,828,1.411,864,3.481,897,1.896,938,2.825,968,4.331,977,4.093,1000,1.841,1007,3.96,1061,3.96,1117,2.734,1128,1.656,1136,2.659,1138,3.1,1261,3.644,1460,4.179,1642,3.858,1684,2.815,1711,1.698,1715,2.458,1717,3.481,1835,2.249,1884,3.644,1900,2.249,1917,2.344,1934,2.734,1961,4.06,2045,3.644,2143,4.06,2191,2.344,2285,2.734,2298,5.183,2301,4.726,2323,6.128,2378,3.34,2379,3.34,2401,2.249,2501,2.926,2530,2.926,2723,3.644,2994,2.734,3079,5.183,3267,3.183,3268,5.305,3269,5.305,3270,4.726,3271,4.06,3272,5.305,3273,5.305,3274,8.518,3275,6.239,3276,3.572,3277,5.305,3278,3.572,3279,5.305,3280,3.572,3281,4.726,3282,3.572,3283,5.305,3284,5.305,3285,5.305,3286,3.572,3287,3.572,3288,5.305,3289,3.572,3290,2.926,3291,3.572,3292,5.36,3293,2.344,3294,5.305,3295,3.572,3296,3.572,3297,5.305,3298,3.572,3299,6.328,3300,3.572,3301,2.344,3302,5.305,3303,6.328,3304,6.328,3305,3.572,3306,3.572,3307,3.572,3308,2.926,3309,3.572,3310,3.572,3311,3.572,3312,2.926,3313,3.572,3314,2.926,3315,2.734,3316,3.572,3317,3.572,3318,3.572,3319,5.305,3320,3.572,3321,3.572,3322,3.572,3323,3.572,3324,2.926,3325,5.305,3326,3.572,3327,3.572]],["title/modules/LoaderModule.html",[343,1.155,2159,3.312]],["body/modules/LoaderModule.html",[3,0.372,4,0.384,10,0.291,25,2.948,26,0.007,152,0.338,154,0.631,167,0.258,168,0.291,198,1.362,263,2.387,340,0.005,341,0.006,342,0.005,343,1.611,345,2.781,346,2.667,347,3.68,348,2.903,349,3.6,356,3.527,357,2.723,358,2.416,361,2.37,362,2.926,630,3.976,631,3.184,977,5.589,2159,6.429,3328,6.273,3329,6.273,3330,6.273,3331,6.273,3332,7.042,3333,5.767,3334,7.042]],["title/injectables/LoaderService.html",[594,1.442,977,2.949]],["body/injectables/LoaderService.html",[3,0.334,4,0.345,10,0.262,12,0.714,26,0.007,39,0.673,40,0.957,45,1.014,54,1.213,68,0.729,70,1.08,72,1.665,87,3.096,88,2.199,89,1.15,90,1.377,97,6.001,100,1.13,101,0.92,102,0.8,121,0.833,133,3.772,152,0.287,154,0.567,167,0.232,168,0.262,188,1.37,263,2.317,340,0.004,341,0.005,342,0.004,452,6.985,491,2.164,534,2.02,594,2.241,647,2.862,968,4.544,977,4.582,1072,5.591,1128,3.634,1591,4.844,1711,3.727,1884,5.385,2323,6.422,2337,5.665,2607,5.665,2994,4.844,3270,6.985,3275,8.308,3281,6.985,3292,7.137,3333,5.184,3335,5.639,3336,7.841,3337,6.329,3338,6.329,3339,6.329,3340,6.329]],["title/components/LocationMapComponent.html",[0,0.31,265,1.322]],["body/components/LocationMapComponent.html",[0,0.484,1,1.062,2,1.106,3,0.214,4,0.221,5,0.853,6,2.09,7,1.138,8,1.1,10,0.168,12,0.458,21,1.027,24,0.928,26,0.007,32,1.151,33,2.272,34,1.914,35,3.663,37,1.525,39,0.431,42,1.615,45,1.476,54,0.9,65,1.499,68,0.723,70,1.07,84,0.673,87,2.298,89,0.854,90,1.266,98,1.159,100,0.839,101,1.032,102,0.593,121,0.895,127,1.525,129,1.044,131,1.786,143,2.202,152,0.148,154,0.363,166,0.771,167,0.148,168,0.168,181,2.66,188,1.189,196,4.453,198,0.784,199,1.184,200,0.867,202,2.052,203,1.138,204,1.138,205,1.027,206,2.088,207,1.027,208,1.081,209,0.959,210,1.062,211,1.081,212,2.371,213,1.081,214,1.557,215,2.088,216,1.081,217,1.432,218,2.425,219,1.081,220,1.081,221,1.138,222,1.062,223,1.634,224,1.081,225,1.138,226,1.062,227,1.138,228,1.044,229,1.027,230,1.757,231,1.911,232,1.044,233,1.062,234,1.062,235,1.044,236,1.138,237,1.081,238,1.081,239,2.211,240,1.081,241,1.062,242,1.081,243,1.081,244,1.081,245,1.062,246,1.138,247,1.044,248,1.081,249,1.138,250,1.062,251,1.138,252,1.062,253,1.044,254,1.184,255,1.138,256,1.062,257,1.138,258,1.044,259,1.062,260,1.138,261,1.062,262,1.138,263,0.976,264,1.138,265,1.949,266,2.185,267,1.138,268,1.044,269,1.138,270,1.062,271,1.138,272,1.027,273,1.138,274,1.062,275,1.044,276,1.062,277,1.009,278,1.138,279,1.062,280,1.138,281,1.062,282,1.138,283,1.027,284,1.138,285,1.044,286,1.062,287,1.138,288,1.062,289,1.1,290,1.138,291,1.044,292,1.062,293,1.943,294,1.062,295,1.081,296,0.882,297,1.081,298,1.081,299,1.062,300,1.081,301,1.081,302,1.081,303,1.138,304,1.044,305,1.062,306,1.138,307,1.062,308,1.1,309,1.062,310,1.138,311,1.062,312,1.138,313,1.081,314,1.062,315,1.062,316,1.138,317,1.062,318,1.138,319,1.062,320,1.138,321,1.062,322,0.992,323,0.992,324,1.027,325,1.138,326,1.044,327,1.138,328,1.044,329,1.138,330,1.044,331,1.138,332,1.044,333,1.138,334,1.044,335,1.119,336,1.138,337,1.044,338,1.119,339,1.138,340,0.003,341,0.004,342,0.003,375,1.538,485,2.204,498,2.347,524,1.723,534,1.499,552,3.32,804,3.183,949,7.074,994,2.453,997,4.352,1137,3.818,1196,4.346,1216,2.705,1229,3.996,1460,2.032,1591,3.103,1684,3.088,2073,2.929,2249,3.818,2289,5.574,2290,7.015,2292,7.015,2413,7.521,3341,6.61,3342,3.612,3343,6.805,3344,5.818,3345,5.818,3346,5.183,3347,5.818,3348,5.818,3349,4.054,3350,5.183,3351,4.054,3352,8.196,3353,5.818,3354,4.054,3355,5.818,3356,4.054,3357,4.054,3358,5.818,3359,4.054,3360,5.818,3361,5.183,3362,4.054,3363,5.818,3364,4.054,3365,4.054,3366,4.054,3367,4.054,3368,4.054,3369,4.054,3370,5.818,3371,4.054]],["title/modules/LocationModule.html",[343,1.155,3372,3.646]],["body/modules/LocationModule.html",[2,1.573,3,0.313,4,0.324,10,0.245,12,0.67,25,2.874,26,0.007,27,2.62,54,0.918,70,0.752,89,0.871,100,0.855,101,0.697,102,0.605,152,0.348,154,0.532,155,2.394,156,1.821,166,1.432,167,0.275,168,0.245,188,1.036,198,1.148,265,2.53,266,2.024,268,2.487,270,2.53,340,0.004,341,0.005,342,0.004,343,1.99,345,2.343,346,2.247,347,3.411,348,2.446,349,3.337,355,5.184,356,3.175,357,2.294,358,2.036,360,4.254,361,2.535,362,2.633,448,4.12,628,4.254,629,5.763,630,3.579,631,2.683,632,5.976,633,5.44,656,3.735,801,5.171,802,6.708,2247,6.021,2277,4.86,3308,4.86,3372,7.15,3373,5.286,3374,5.286,3375,5.933,3376,5.286,3377,5.286,3378,5.286,3379,7.53,3380,7.999,3381,5.933,3382,5.933,3383,5.933,3384,4.86,3385,5.286,3386,5.933,3387,5.286,3388,5.286,3389,5.933,3390,8.271,3391,5.933,3392,5.933,3393,5.933,3394,5.933,3395,5.933]],["title/components/LocationPickerComponent.html",[0,0.31,268,1.3]],["body/components/LocationPickerComponent.html",[0,0.48,1,0.836,2,0.926,3,0.168,4,0.174,5,0.671,6,1.644,7,0.896,8,0.865,10,0.132,12,0.36,15,2.101,17,1.675,18,4.485,20,1.965,21,2.227,24,0.73,25,1.609,26,0.007,27,2.15,28,3.233,29,2.665,30,3.233,31,2.665,32,1.209,33,2.252,34,1.895,35,3.066,37,1.276,39,0.339,40,0.594,42,1.714,43,3.72,45,1.437,46,1.741,47,3.571,48,1.899,49,3.066,50,4.666,51,2.549,52,1.763,53,5.287,54,0.754,58,3.196,59,4.164,62,2.951,63,3.315,64,3.58,65,1.255,68,0.785,69,0.958,70,1.206,72,0.911,84,0.529,87,1.923,89,1.182,90,1.752,95,3.066,98,1.89,100,1.082,101,1.032,102,0.766,103,3.066,113,3.066,115,3.345,116,2.511,117,1.845,118,2.191,119,4.255,120,2.441,121,0.988,122,2.441,124,1.965,127,1.276,129,1.704,131,2.305,139,4.414,140,2.441,141,2.441,142,1.259,143,1.442,144,2.441,145,1.802,146,3.728,147,1.932,148,2.441,149,2.441,150,2.191,151,4.243,152,0.275,153,1.442,154,0.286,155,1.287,156,0.979,166,0.607,167,0.117,168,0.132,188,0.557,193,1.802,194,2.008,198,0.617,199,0.991,200,0.682,202,1.825,203,0.896,204,0.896,205,0.808,206,1.857,207,0.808,208,0.85,209,0.755,210,0.836,211,0.85,212,2.194,213,0.85,214,1.352,215,1.857,216,0.85,217,1.312,218,2.262,219,0.85,220,0.85,221,0.896,222,0.836,223,1.368,224,0.85,225,0.896,226,0.836,227,0.896,228,0.822,229,0.808,230,1.639,231,1.659,232,0.822,233,0.836,234,0.836,235,0.822,236,0.896,237,0.85,238,0.85,239,2.001,240,0.85,241,0.836,242,0.85,243,0.85,244,0.85,245,0.836,246,0.896,247,0.822,248,0.85,249,0.896,250,0.836,251,0.896,252,0.836,253,0.822,254,0.991,255,0.896,256,0.836,257,0.896,258,0.822,259,0.836,260,0.896,261,0.836,262,0.896,263,0.768,264,0.896,265,1.968,266,2.243,267,0.896,268,1.934,269,0.896,270,1.968,271,0.896,272,0.808,273,0.896,274,0.836,275,0.822,276,0.836,277,0.794,278,0.896,279,0.836,280,0.896,281,0.836,282,0.896,283,0.808,284,0.896,285,0.822,286,0.836,287,0.896,288,0.836,289,0.865,290,0.896,291,0.822,292,0.836,293,1.812,294,0.836,295,0.85,296,0.694,297,0.85,298,0.85,299,0.836,300,0.85,301,0.85,302,0.85,303,0.896,304,0.822,305,0.836,306,0.896,307,0.836,308,0.865,309,0.836,310,0.896,311,0.836,312,0.896,313,0.85,314,0.836,315,0.836,316,0.896,317,0.836,318,0.896,319,0.836,320,0.896,321,0.836,322,0.781,323,0.781,324,0.808,325,0.896,326,0.822,327,0.896,328,0.822,329,0.896,330,0.822,331,0.896,332,0.822,333,0.896,334,0.822,335,0.88,336,0.896,337,0.822,338,0.88,339,0.896,340,0.002,341,0.003,342,0.002,375,1.474,448,2.665,463,0.958,470,2.612,507,1.233,551,3.672,552,2.376,655,2.665,949,6.399,1007,2.376,1135,4.164,1196,3.453,1198,3.989,1212,3.989,1214,3.989,1229,2.191,1239,4.339,1414,3.066,1859,4.675,2247,5.418,2263,3.989,2266,3.989,2267,4.339,2268,3.989,2507,4.339,3341,7.056,3346,4.339,3361,4.339,3384,2.612,3385,2.841,3387,2.841,3396,2.841,3397,4.339,3398,5.909,3399,4.871,3400,6.614,3401,5.909,3402,2.841,3403,4.871,3404,3.189,3405,3.189,3406,3.189,3407,3.189,3408,3.189,3409,3.189,3410,6.614,3411,3.189,3412,3.989,3413,3.189,3414,4.871,3415,3.189,3416,3.189,3417,3.189,3418,3.189,3419,3.189,3420,4.871,3421,3.189,3422,3.189,3423,4.871,3424,3.189,3425,3.189,3426,4.871,3427,4.871,3428,3.189,3429,3.189,3430,5.909,3431,3.189,3432,3.189,3433,3.189,3434,4.871]],["title/components/LocationSearchComponent.html",[0,0.31,270,1.322]],["body/components/LocationSearchComponent.html",[0,0.428,1,1.109,2,1.141,3,0.224,4,0.231,5,0.89,7,1.188,8,1.148,10,0.175,12,0.478,17,1.519,21,1.072,24,0.968,26,0.007,32,0.928,33,2.275,34,1.917,37,1.572,39,0.45,40,0.732,42,1.72,45,1.117,54,0.928,64,4.593,65,1.953,68,0.597,70,1.083,72,1.122,84,0.702,89,0.88,90,1.305,100,0.61,101,1.025,102,0.432,121,0.917,123,3.151,124,1.707,127,1.987,129,1.09,143,2.245,152,0.255,153,1.913,154,0.379,167,0.155,168,0.175,198,0.818,199,1.22,200,0.905,202,2.092,203,1.188,204,1.188,205,1.072,206,2.129,207,1.072,208,1.128,209,1.001,210,1.109,211,1.128,212,2.401,213,1.128,214,1.594,215,2.129,216,1.128,217,1.452,218,2.453,219,1.128,220,1.128,221,1.188,222,1.109,223,1.685,224,1.128,225,1.188,226,1.109,227,1.188,228,1.09,229,1.072,230,1.777,231,1.957,232,1.09,233,1.109,234,1.109,235,1.09,236,1.188,237,1.128,238,1.128,239,2.248,240,1.128,241,1.109,242,1.128,243,1.128,244,1.128,245,1.109,246,1.188,247,1.09,248,1.128,249,1.188,250,1.109,251,1.188,252,1.109,253,1.09,254,1.22,255,1.188,256,1.109,257,1.188,258,1.09,259,1.109,260,1.188,261,1.109,262,1.188,263,1.018,264,1.188,265,1.109,266,2.23,267,1.188,268,1.09,269,1.188,270,1.987,271,1.188,272,1.072,273,1.188,274,1.109,275,1.09,276,1.109,277,1.053,278,1.188,279,1.109,280,1.188,281,1.109,282,1.188,283,1.072,284,1.188,285,1.09,286,1.109,287,1.188,288,1.109,289,1.148,290,1.188,291,1.09,292,1.109,293,1.965,294,1.109,295,1.128,296,0.921,297,1.128,298,1.128,299,1.109,300,1.128,301,1.128,302,1.128,303,1.188,304,1.09,305,1.109,306,1.188,307,1.109,308,1.148,309,1.109,310,1.188,311,1.109,312,1.188,313,1.128,314,1.109,315,1.109,316,1.188,317,1.109,318,1.188,319,1.109,320,1.188,321,1.109,322,1.036,323,1.036,324,1.072,325,1.188,326,1.09,327,1.188,328,1.09,329,1.188,330,1.09,331,1.188,332,1.09,333,1.188,334,1.09,335,1.168,336,1.188,337,1.09,338,1.168,339,1.188,340,0.003,341,0.004,342,0.003,463,0.832,485,2.272,505,2.588,524,1.776,551,4.126,604,1.784,605,1.671,994,2.529,997,4.126,1137,3.937,1196,4.073,1216,2.182,1404,4.334,1437,5.334,1638,4.976,1726,3.506,1795,4.773,1859,5.456,2247,5.732,2249,3.937,2258,7.616,2263,4.913,2289,4.913,3341,6.685,3384,3.466,3402,3.77,3435,3.77,3436,5.999,3437,6.969,3438,5.999,3439,4.232,3440,4.232,3441,5.999,3442,4.232,3443,4.232,3444,5.344,3445,5.999,3446,4.232,3447,3.77,3448,4.232,3449,4.232,3450,4.232,3451,4.232]],["title/components/LoginComponent.html",[0,0.31,272,1.278]],["body/components/LoginComponent.html",[0,0.407,1,1.014,2,1.07,3,0.204,4,0.211,5,0.814,7,1.086,8,1.049,9,1.631,10,0.16,12,0.437,17,1.424,21,0.98,24,0.885,26,0.007,32,0.599,33,2.268,34,1.911,37,1.474,39,0.411,40,0.686,42,1.239,45,0.62,46,1.626,54,0.87,65,1.449,68,0.744,70,1.119,72,1.052,84,0.933,85,2.426,89,0.568,90,0.842,100,0.811,101,1.021,102,0.574,121,0.872,124,1.561,127,1.474,129,0.997,142,2.221,143,2.465,152,0.283,153,1.749,154,0.347,156,1.187,166,0.736,167,0.142,168,0.16,198,0.748,199,1.144,200,0.828,201,1.631,202,2.008,203,1.086,204,1.086,205,0.98,206,2.043,207,0.98,208,1.031,209,1.722,210,1.014,211,1.031,212,2.337,213,1.031,214,1.516,215,2.043,216,1.031,217,1.409,218,2.395,219,1.031,220,1.031,221,1.086,222,1.014,223,1.58,224,1.031,225,1.086,226,1.014,227,1.086,228,0.997,229,0.98,230,1.735,231,1.861,232,0.997,233,1.014,234,1.014,235,0.997,236,1.086,237,1.031,238,1.031,239,2.171,240,1.031,241,1.014,242,1.031,243,1.031,244,1.031,245,1.014,246,1.086,247,0.997,248,1.031,249,1.086,250,1.014,251,1.086,252,1.014,253,0.997,254,1.144,255,1.086,256,1.014,257,1.086,258,0.997,259,1.014,260,1.086,261,1.014,262,1.086,263,1.354,264,1.086,265,1.014,266,1.622,267,1.086,268,0.997,269,1.086,270,1.014,271,1.086,272,1.843,273,1.086,274,1.737,275,2.389,276,1.014,277,0.963,278,1.086,279,1.014,280,1.086,281,1.014,282,1.086,283,0.98,284,1.086,285,0.997,286,1.014,287,1.086,288,1.014,289,1.798,290,1.086,291,0.997,292,1.014,293,1.919,294,1.014,295,1.031,296,0.842,297,1.031,298,1.031,299,1.014,300,1.031,301,1.031,302,1.031,303,1.086,304,0.997,305,1.014,306,1.086,307,1.014,308,1.049,309,1.014,310,1.086,311,1.014,312,1.086,313,1.031,314,1.014,315,1.014,316,1.086,317,1.014,318,1.086,319,1.014,320,1.086,321,1.014,322,0.947,323,0.947,324,0.98,325,1.086,326,0.997,327,1.086,328,0.997,329,1.086,330,0.997,331,1.086,332,0.997,333,1.086,334,0.997,335,1.068,336,1.086,337,0.997,338,1.068,339,1.086,340,0.003,341,0.004,342,0.003,373,2.269,463,1.106,485,2.13,489,5.073,492,2.985,524,1.962,527,2.539,535,2.961,581,3.46,585,2.607,588,4.242,589,3.496,596,4.666,598,4.581,601,4.607,602,3.691,603,1.309,625,5.081,627,4.408,639,2.961,700,2.985,705,3.691,706,3.169,963,3.517,964,4.015,968,3.764,980,4.367,981,2.812,982,2.989,1019,4.064,1022,3.416,1060,3.407,1061,2.744,1062,4.789,1067,2.435,1068,2.435,1106,1.967,1598,2.435,1684,2.985,1878,4.064,2191,3.691,2206,4.607,3452,3.447,3453,5.011,3454,4.607,3455,5.369,3456,5.96,3457,5.625,3458,4.607,3459,3.447,3460,5.625,3461,3.869,3462,5.011,3463,5.011,3464,5.011,3465,3.869,3466,5.011,3467,5.011,3468,3.869,3469,3.869,3470,4.607,3471,3.869,3472,3.869,3473,3.869,3474,3.869,3475,3.169,3476,3.169,3477,3.169,3478,3.447,3479,3.869,3480,3.447,3481,3.869,3482,3.447,3483,3.169,3484,3.169]],["title/components/LoginFormComponent.html",[0,0.31,274,1.322]],["body/components/LoginFormComponent.html",[0,0.478,1,0.827,2,0.919,3,0.167,4,0.172,5,0.664,7,0.886,8,0.856,9,1.331,10,0.13,12,0.356,17,1.224,21,0.799,22,2.655,24,0.722,26,0.007,32,1.204,33,2.251,34,1.894,37,1.266,39,0.335,40,0.59,42,1.571,45,1.287,46,1.539,48,2.239,51,2.084,54,0.748,57,3.049,65,1.245,68,0.705,69,0.95,70,1.173,84,0.802,88,1.124,89,0.965,90,1.051,100,0.846,101,0.986,102,0.599,121,1.083,127,1.266,129,0.813,131,2.854,142,2.598,143,2.305,147,3.557,152,0.285,154,0.283,155,1.273,166,0.6,167,0.115,168,0.13,188,0.844,198,0.61,199,1.194,200,0.675,201,1.331,202,1.815,203,0.886,204,0.886,205,0.799,206,1.847,207,0.799,208,0.841,209,1.557,210,0.827,211,0.841,212,2.186,213,0.841,214,1.343,215,1.847,216,0.841,217,1.307,218,2.255,219,0.841,220,0.841,221,0.886,222,0.827,223,1.357,224,0.841,225,0.886,226,0.827,227,0.886,228,0.813,229,0.799,230,1.633,231,1.649,232,0.813,233,0.827,234,0.827,235,0.813,236,0.886,237,0.841,238,0.841,239,1.991,240,0.841,241,0.827,242,0.841,243,0.841,244,0.841,245,0.827,246,0.886,247,0.813,248,0.841,249,0.886,250,0.827,251,0.886,252,0.827,253,0.813,254,0.983,255,0.886,256,0.827,257,0.886,258,0.813,259,0.827,260,0.886,261,0.827,262,0.886,263,1.583,264,0.886,265,0.827,266,1.437,267,0.886,268,0.813,269,0.886,270,0.827,271,0.886,272,0.799,273,0.886,274,1.724,275,2.384,276,0.827,277,0.786,278,0.886,279,0.827,280,0.886,281,0.827,282,0.886,283,0.799,284,0.886,285,0.813,286,0.827,287,0.886,288,0.827,289,2.278,290,0.886,291,0.813,292,0.827,293,1.806,294,0.827,295,0.841,296,1.051,297,0.841,298,0.841,299,0.827,300,0.841,301,0.841,302,0.841,303,0.886,304,0.813,305,0.827,306,0.886,307,0.827,308,0.856,309,0.827,310,0.886,311,0.827,312,0.886,313,0.841,314,0.827,315,0.827,316,0.886,317,0.827,318,0.886,319,0.827,320,0.886,321,0.827,322,0.773,323,0.773,324,0.799,325,0.886,326,0.813,327,0.886,328,0.813,329,0.886,330,0.813,331,0.886,332,0.813,333,0.886,334,0.813,335,0.871,336,0.886,337,0.813,338,0.871,339,0.886,340,0.002,341,0.003,342,0.002,375,1,387,2.954,463,0.621,475,1.083,485,1.83,488,2.422,492,2.565,501,2.73,504,2.185,524,1.738,551,3.391,581,3.303,583,2.644,588,3.459,593,2.185,597,1.582,682,2.927,705,3.853,828,1.908,833,3.853,860,3.041,938,1.949,963,3.116,968,3.206,981,2.579,982,2.742,989,1.783,994,3.153,1022,2.491,1065,2.281,1072,2.071,1102,4.317,1113,3.171,1114,2.644,1124,3.698,1244,1.987,1347,3.491,1404,3.491,1426,2.644,1491,3.491,1560,3.319,1684,2.565,1873,3.319,2144,5.724,2200,3.958,2670,3.491,3301,3.171,3455,4.464,3470,2.585,3484,2.585,3485,8.284,3486,7.117,3487,2.585,3488,5.861,3489,4.305,3490,4.305,3491,6.317,3492,6.935,3493,5.861,3494,5.861,3495,5.231,3496,6.317,3497,6.317,3498,5.231,3499,5.231,3500,5.231,3501,5.231,3502,3.157,3503,7.479,3504,4.832,3505,4.832,3506,3.157,3507,1.567,3508,4.305,3509,3.157,3510,4.305,3511,3.157,3512,5.388,3513,4.305,3514,3.157,3515,2.812,3516,4.305,3517,4.305,3518,3.157,3519,4.305,3520,3.157,3521,3.157,3522,3.157,3523,3.157,3524,4.305,3525,4.305,3526,3.157,3527,3.698,3528,4.305,3529,4.305,3530,3.157,3531,3.157,3532,4.305,3533,4.305,3534,3.157,3535,2.812,3536,2.812,3537,4.305,3538,3.698,3539,2.812,3540,3.157,3541,3.157,3542,2.812,3543,3.157,3544,2.812,3545,2.812,3546,2.585,3547,3.157,3548,2.812,3549,2.812,3550,2.812,3551,4.305,3552,2.812,3553,2.585,3554,4.305,3555,3.157,3556,3.157,3557,3.157,3558,3.157,3559,2.812,3560,2.812,3561,2.812,3562,2.812,3563,3.157,3564,2.812,3565,2.812,3566,3.958]],["title/pipes/MaxItemsPipe.html",[1230,2.601,2153,3.646]],["body/pipes/MaxItemsPipe.html",[3,0.371,4,0.383,10,0.29,12,0.793,17,1.779,24,1.607,26,0.007,45,1.126,52,2.227,54,1.087,68,0.601,70,0.89,89,1.031,100,1.012,101,1.046,102,0.716,121,0.924,152,0.257,154,0.629,167,0.257,168,0.29,188,1.227,340,0.005,341,0.006,342,0.005,498,3.856,692,3.547,903,4.075,1203,5.85,1230,4.755,1231,5.075,1236,4.422,1242,6.034,1839,8.515,2153,6.034,3567,7.441,3568,6.257,3569,7.441,3570,8.352,3571,8.352,3572,7.024,3573,7.024]],["title/components/MediumEditorComponent.html",[0,0.31,276,1.322]],["body/components/MediumEditorComponent.html",[0,0.464,1,0.955,2,1.024,3,0.193,4,0.199,5,0.767,6,1.879,7,1.024,8,0.989,9,1.537,10,0.151,12,0.411,13,3.043,15,3.988,17,1.364,18,4.032,21,0.923,22,2.896,24,0.834,25,1.779,26,0.007,27,2.378,28,3.504,29,2.947,30,3.504,31,2.947,32,0.833,33,2.264,34,1.906,35,3.39,37,1.411,39,0.387,40,0.657,41,4.263,42,1.411,43,4.032,44,4.75,45,1.416,46,1.197,54,0.833,57,3.278,58,3.534,59,4.453,62,3.262,65,1.387,68,0.733,69,1.059,70,1.155,84,0.893,85,2.323,89,1.107,90,1.718,93,4.411,95,3.39,98,2.021,100,0.776,101,1.005,102,0.549,103,3.39,113,3.39,115,3.699,116,2.776,117,3.095,121,0.93,123,2.896,124,1.471,125,4.122,127,1.853,129,0.939,131,1.653,133,2.793,138,1.884,143,2.094,145,3.043,152,0.259,153,1.649,154,0.327,155,1.471,167,0.133,168,0.151,173,2.986,175,2.79,176,3.248,181,3.534,184,2.986,193,2.06,194,2.295,198,0.705,199,1.096,200,0.78,201,1.537,202,1.952,203,1.024,204,1.024,205,0.923,206,1.986,207,0.923,208,0.972,209,0.863,210,0.955,211,0.972,212,2.294,213,0.972,214,1.465,215,1.986,216,0.972,217,1.38,218,2.355,219,0.972,220,0.972,221,1.024,222,0.955,223,1.512,224,0.972,225,1.024,226,0.955,227,1.024,228,0.939,229,0.923,230,1.706,231,1.798,232,0.939,233,0.955,234,0.955,235,0.939,236,1.024,237,0.972,238,0.972,239,2.119,240,0.972,241,0.955,242,0.972,243,0.972,244,0.972,245,0.955,246,1.024,247,0.939,248,0.972,249,1.024,250,0.955,251,1.024,252,0.955,253,0.939,254,1.096,255,1.024,256,0.955,257,1.024,258,0.939,259,0.955,260,1.024,261,0.955,262,1.024,263,0.877,264,1.024,265,0.955,266,1.567,267,1.024,268,0.939,269,1.024,270,0.955,271,1.024,272,0.923,273,1.024,274,0.955,275,0.939,276,2.07,277,2.226,278,1.024,279,0.955,280,1.024,281,0.955,282,1.024,283,0.923,284,1.024,285,0.939,286,0.955,287,1.024,288,0.955,289,0.989,290,1.024,291,0.939,292,0.955,293,1.887,294,0.955,295,0.972,296,0.793,297,0.972,298,0.972,299,0.955,300,0.972,301,0.972,302,0.972,303,1.024,304,0.939,305,0.955,306,1.024,307,0.955,308,0.989,309,0.955,310,1.024,311,0.955,312,1.024,313,0.972,314,0.955,315,0.955,316,1.024,317,0.955,318,1.024,319,0.955,320,1.024,321,0.955,322,0.892,323,0.892,324,0.923,325,1.024,326,0.939,327,1.024,328,0.939,329,1.024,330,0.939,331,1.024,332,0.939,333,1.024,334,0.939,335,1.006,336,1.024,337,0.939,338,1.006,339,1.024,340,0.002,341,0.004,342,0.002,370,2.323,485,2.04,524,1.595,551,3.89,605,2.529,881,2.699,1037,2.634,1107,3.782,1595,2.986,1942,3.248,2948,4.411,2949,4.411,3020,2.986,3574,7.521,3575,7.521,3576,3.248,3577,5.385,3578,5.385,3579,5.385,3580,5.705,3581,6.404,3582,5.385,3583,6.301,3584,6.404,3585,3.646,3586,3.646,3587,7.546,3588,3.646,3589,3.646,3590,3.646,3591,4.798,3592,3.646,3593,3.646,3594,3.646,3595,3.646,3596,3.646,3597,3.646,3598,3.646,3599,3.646,3600,3.646,3601,3.646,3602,3.646,3603,3.646,3604,3.646,3605,3.646,3606,3.646,3607,3.646,3608,3.646,3609,2.986,3610,3.646,3611,3.646,3612,3.646,3613,3.646]],["title/modules/MediumEditorModule.html",[343,1.155,3614,3.646]],["body/modules/MediumEditorModule.html",[3,0.355,4,0.367,10,0.278,25,2.688,26,0.007,27,3.863,28,4.787,29,4.787,30,4.787,31,5.094,32,1.441,152,0.32,154,0.602,166,1.279,167,0.298,168,0.278,198,1.3,276,2.626,277,1.674,340,0.004,341,0.005,342,0.004,343,1.538,345,2.655,346,2.547,347,3.607,348,2.772,349,3.53,356,3.43,357,2.6,358,2.307,361,2.263,362,2.352,630,3.867,631,3.04,3574,5.507,3575,5.507,3614,6.917,3615,5.99,3616,5.99,3617,5.99,3618,5.99,3619,5.99,3620,6.723,3621,5.99,3622,6.723]],["title/components/ModalComponent.html",[0,0.31,279,1.322]],["body/components/ModalComponent.html",[0,0.352,1,0.797,2,0.893,3,0.161,4,0.166,5,1.616,7,1.319,8,0.825,9,1.282,10,0.126,12,0.343,17,1.189,20,1.895,21,0.77,22,2.594,23,2.658,24,0.696,26,0.007,32,1.228,33,2.248,34,1.892,37,1.231,39,0.323,40,0.573,41,1.718,42,1.555,45,1.231,46,1.711,54,0.727,55,2.492,56,3.147,57,2.99,65,1.21,66,6.365,68,0.805,69,1.511,70,1.206,72,0.569,87,2.91,88,1.335,89,1.127,90,1.603,98,1.342,100,0.93,101,0.994,102,0.658,107,3.082,116,3.325,119,4.486,121,1.011,123,3.979,124,1.227,127,1.931,129,0.783,143,0.9,152,0.21,154,0.272,162,3.846,166,0.578,167,0.111,168,0.126,177,5.111,183,1.366,186,2.291,198,0.588,199,0.955,200,0.651,201,1.282,202,1.78,203,0.854,204,0.854,205,0.77,206,1.812,207,0.77,208,0.811,209,0.72,210,0.797,211,0.811,212,2.157,213,0.811,214,1.312,215,1.812,216,0.811,217,1.287,218,2.228,219,0.811,220,0.811,221,0.854,222,0.797,223,1.319,224,0.811,225,0.854,226,0.797,227,0.854,228,0.783,229,0.77,230,1.614,231,1.611,232,0.783,233,0.797,234,0.797,235,0.783,236,0.854,237,0.811,238,0.811,239,1.958,240,0.811,241,0.797,242,0.811,243,0.811,244,0.811,245,0.797,246,0.854,247,0.783,248,0.811,249,0.854,250,0.797,251,0.854,252,0.797,253,0.783,254,0.955,255,0.854,256,0.797,257,0.854,258,0.783,259,0.797,260,0.854,261,0.797,262,0.854,263,0.732,264,0.854,265,0.797,266,1.404,267,0.854,268,0.783,269,0.854,270,0.797,271,0.854,272,0.77,273,0.854,274,0.797,275,0.783,276,0.797,277,0.757,278,0.854,279,1.69,280,0.854,281,0.797,282,0.854,283,0.77,284,0.854,285,0.783,286,0.797,287,0.854,288,0.797,289,0.825,290,0.854,291,2.327,292,0.797,293,1.785,294,0.797,295,0.811,296,0.662,297,0.811,298,0.811,299,0.797,300,0.811,301,0.811,302,0.811,303,0.854,304,0.783,305,0.797,306,0.854,307,0.797,308,0.825,309,0.797,310,0.854,311,0.797,312,0.854,313,0.811,314,0.797,315,0.797,316,0.854,317,0.797,318,0.854,319,0.797,320,0.854,321,0.797,322,0.744,323,0.744,324,0.77,325,0.854,326,0.783,327,0.854,328,0.783,329,0.854,330,0.783,331,0.854,332,0.783,333,0.854,334,0.783,335,0.839,336,0.854,337,0.783,338,0.839,339,0.854,340,0.002,341,0.003,342,0.002,370,2.026,375,0.971,376,3.815,392,1.201,393,4.032,397,1.898,449,4.389,450,2.875,463,0.598,485,1.779,488,2.354,491,0.839,498,1.895,504,2.124,507,1.816,534,1.796,578,2.845,682,3.908,828,2.753,842,3.645,845,4.184,860,1.152,862,3.475,887,1.777,903,1.484,936,1.816,1000,1.568,1014,4.183,1061,3.147,1107,3.694,1114,2.57,1122,3.611,1131,1.842,1133,4.184,1136,3.85,1142,3.846,1148,1.446,1258,2.799,1281,3.594,1282,2.57,1295,3.959,1460,1.524,1475,3.225,1488,2.089,1637,4.758,1639,3.393,1641,3.393,1642,2.727,1643,3.393,1644,3.225,1645,4.145,1651,2.328,1652,2.089,1653,2.328,1654,1.718,1655,2.197,1656,2.328,1657,2.197,1658,2.089,1659,2.328,1661,2.328,1662,5.555,1663,3.765,1664,2.71,1666,2.197,1667,2.328,1668,1.996,1675,2.328,1676,3.393,1677,2.197,1678,2.328,1679,1.614,1680,1.915,1681,5.324,1682,2.197,1683,2.328,1684,2.492,1685,2.197,1686,2.328,1693,2.328,1694,2.197,1695,2.197,1696,2.328,1697,2.328,1700,2.328,1711,2.232,1835,2.956,1905,3.594,1909,4.836,2139,3.846,2375,2.956,2389,3.225,2439,3.594,2506,2.491,2564,3.352,2983,5.111,3153,3.846,3177,3.846,3182,2.71,3315,3.594,3507,1.523,3623,2.71,3624,3.082,3625,2.57,3626,3.594,3627,4.696,3628,4.696,3629,4.184,3630,4.696,3631,4.696,3632,7.934,3633,6.843,3634,4.696,3635,3.041,3636,4.696,3637,4.696,3638,8.142,3639,3.041,3640,3.041,3641,4.696,3642,3.393,3643,3.225,3644,3.041,3645,3.041,3646,3.041,3647,4.696,3648,4.696,3649,4.696,3650,3.041,3651,4.184,3652,3.041,3653,3.041,3654,5.737,3655,4.696,3656,3.041,3657,4.696,3658,4.696,3659,4.696,3660,3.041,3661,4.696,3662,2.71,3663,3.041,3664,3.041,3665,5.111,3666,3.041,3667,3.041,3668,3.041,3669,3.041,3670,2.197,3671,3.041,3672,3.041,3673,3.041,3674,3.041,3675,3.041,3676,3.041,3677,3.041,3678,3.041,3679,3.041,3680,3.041,3681,4.696]],["title/interfaces/ModelConfig.html",[366,1.345,978,3.177]],["body/interfaces/ModelConfig.html",[3,0.383,4,0.396,10,0.3,12,0.819,26,0.007,39,0.771,40,1.039,48,2.27,68,0.621,87,3.362,102,0.868,152,0.265,167,0.265,340,0.005,341,0.006,342,0.005,366,2.409,368,3.129,381,2.037,389,3.46,692,3.16,945,4.975,978,5.36,1032,4.761,1075,4.567,1105,3.85,1119,5.448,1715,3.945,1829,5.587,1904,5.157,3682,4.983,3683,6.973,3684,4.658]],["title/injectables/ModelConfigService.html",[594,1.442,979,2.851]],["body/injectables/ModelConfigService.html",[2,0.884,3,0.159,4,0.164,10,0.124,12,0.642,20,1.875,21,1.177,26,0.007,32,1.404,34,0.571,39,0.319,40,0.567,45,1.175,46,0.869,48,2.162,51,2.005,52,1.708,54,0.719,68,0.772,69,1.832,70,1.069,73,1.836,87,1.836,88,1.993,89,1.322,100,1.138,101,0.927,102,0.845,117,3.479,119,2.396,121,1.155,131,1.966,133,2.53,142,1.836,152,0.309,154,0.269,156,0.921,166,1.629,167,0.11,168,0.235,183,1.863,188,1.496,207,1.177,229,1.177,230,1.41,247,0.773,340,0.002,341,0.003,342,0.002,371,3.134,373,2.796,375,0.962,381,0.843,386,2.747,387,3.331,388,1.642,389,3.01,397,1.785,421,4.354,427,2.458,446,2.169,451,3.558,456,2.169,462,2.346,463,0.914,465,2.894,468,1.325,488,2.33,507,2.2,519,2.816,524,0.889,527,1.97,534,1.888,551,3.302,552,2.776,585,3.212,594,1.329,605,3.119,647,1.357,692,2.378,694,1.593,697,2.346,718,1.547,724,1.464,789,2.72,804,1.642,828,1.836,846,4.033,847,3.619,851,3.125,859,3.193,903,1.464,932,5.068,933,3.558,935,2.674,936,3.355,938,2.584,939,2.458,940,2.674,941,2.637,942,2.674,943,2.458,944,2.674,945,1.754,946,6.174,947,3.113,978,2.926,979,2.626,981,2.07,982,2.477,985,4.842,1003,4.903,1026,1.593,1032,5.438,1064,2.062,1106,1.626,1109,2.33,1119,4.842,1148,2.209,1160,5.426,1162,3.744,1173,2.674,1175,1.818,1176,1.818,1177,2.169,1193,1.97,1235,3.193,1238,2.297,1258,1.464,1278,3.678,1293,3.558,1349,2.969,1426,3.113,1428,5.034,1522,3.807,1579,1.97,1586,1.97,1636,2.458,1698,2.169,1726,2.717,1740,4.198,1741,2.717,1785,2.169,1805,4.141,1832,3.581,1833,3.558,1834,2.169,1840,2.926,1841,3.558,1900,2.926,1956,2.926,1994,4.76,2006,2.297,2222,2.674,2336,3.807,2438,3.807,2459,4.141,2522,2.297,2556,4.141,2564,4.284,2695,4.141,2722,4.141,2756,3.193,2830,2.674,2859,2.674,3060,2.169,3084,2.297,3292,5.304,3314,3.807,3643,2.062,3651,4.141,3682,5.691,3683,3.807,3684,3.505,3685,4.649,3686,3.807,3687,3.807,3688,3.558,3689,5.689,3690,6.406,3691,4.649,3692,4.649,3693,6.406,3694,3.002,3695,4.649,3696,4.649,3697,8.286,3698,3.002,3699,4.141,3700,4.649,3701,4.141,3702,4.649,3703,4.141,3704,4.141,3705,3.807,3706,4.649,3707,4.649,3708,4.649,3709,3.002,3710,4.141,3711,3.002,3712,3.734,3713,4.649,3714,3.002,3715,4.141,3716,4.141,3717,4.649,3718,4.649,3719,4.649,3720,3.002,3721,4.649,3722,3.558,3723,4.649,3724,3.002,3725,3.002,3726,4.649,3727,3.002,3728,4.649,3729,3.002,3730,3.002,3731,3.002,3732,3.002,3733,3.002,3734,3.558,3735,4.649,3736,4.649,3737,3.002,3738,2.674,3739,3.002,3740,4.649,3741,3.002,3742,2.674,3743,3.002,3744,6.811,3745,7.33,3746,2.674,3747,3.002,3748,4.649,3749,4.649,3750,4.649,3751,4.649,3752,3.002,3753,3.002,3754,3.002,3755,3.002,3756,4.649,3757,3.002,3758,2.674,3759,3.002,3760,3.002,3761,6.406,3762,4.649,3763,3.002,3764,3.002,3765,3.002,3766,3.002,3767,3.002,3768,3.002,3769,3.002,3770,3.002,3771,4.649,3772,3.002,3773,3.002,3774,3.002,3775,3.002,3776,3.002,3777,3.002,3778,4.141,3779,4.141,3780,3.002,3781,3.002,3782,3.002,3783,2.674,3784,4.649,3785,4.649,3786,3.002,3787,4.649,3788,3.002,3789,3.002,3790,3.002,3791,3.002,3792,3.002,3793,3.002,3794,3.002,3795,3.002,3796,3.002,3797,3.002,3798,2.458,3799,3.002,3800,3.002,3801,3.002,3802,3.002,3803,4.649,3804,3.002,3805,3.002,3806,4.649,3807,3.002,3808,3.002,3809,3.002,3810,3.002,3811,3.002,3812,2.674,3813,3.002,3814,3.002]],["title/interfaces/ModelConfiguration.html",[366,1.345,3815,4.133]],["body/interfaces/ModelConfiguration.html",[3,0.383,4,0.396,10,0.3,12,0.819,26,0.007,39,0.771,40,1.039,48,2.27,68,0.621,87,3.362,102,0.868,152,0.265,167,0.265,340,0.005,341,0.006,342,0.005,366,2.409,368,3.129,381,2.037,389,3.46,692,3.16,945,4.975,1032,4.761,1105,3.85,1119,5.448,1715,3.945,1829,5.587,1904,5.157,3682,4.983,3683,6.973,3684,4.658,3815,6.973,3816,6.464]],["title/classes/Notification.html",[168,0.209,1022,2.601]],["body/classes/Notification.html",[3,0.416,4,0.291,10,0.221,12,0.888,26,0.007,32,1.089,34,1.338,39,0.568,40,0.859,45,1.128,68,0.839,69,1.755,70,1.218,72,1.316,87,2.779,88,2.076,100,0.77,101,0.628,102,1.006,142,2.779,152,0.196,167,0.196,168,0.221,283,2.2,340,0.004,341,0.005,342,0.004,373,3.67,375,1.456,454,4.113,463,1.548,498,2.84,507,2.722,534,2.378,578,5.066,579,4.431,581,3.788,582,5.264,583,3.851,585,3.262,588,4.353,692,3.104,822,4.446,828,2.111,980,3.976,1007,3.434,1015,3.975,1022,5.085,1061,3.839,1067,4.954,1068,5.47,1136,3.528,1148,3.345,1202,4.113,1264,5.085,1349,3.875,1460,4.355,1561,5.164,1835,4.431,1840,4.431,1936,4.834,1939,4.378,2440,5.765,2584,6.271,3154,5.765,3455,4.431,3665,4.762,3722,5.387,3817,4.762,3818,7.038,3819,7.038,3820,7.038,3821,8.363,3822,5.345,3823,7.038,3824,5.345,3825,5.345,3826,7.038,3827,5.345,3828,5.345,3829,6.271,3830,4.834,3831,5.345,3832,7.038,3833,5.345,3834,7.038,3835,5.345,3836,7.038,3837,5.345,3838,4.762,3839,4.762]],["title/components/NotificationsComponent.html",[0,0.31,283,1.278]],["body/components/NotificationsComponent.html",[0,0.5,1,0.942,2,1.013,3,0.19,4,0.196,5,1.121,7,1.783,8,0.975,9,1.515,10,0.149,12,0.406,17,0.91,21,0.91,24,0.822,26,0.007,32,0.556,33,2.263,34,1.906,37,1.396,39,0.382,40,0.65,42,1.187,45,0.576,46,0.996,65,1.372,68,0.673,70,0.805,73,1.419,84,1.053,85,1.55,88,1.24,100,0.518,101,0.98,102,0.366,121,1.034,127,1.396,129,0.926,138,1.864,152,0.257,154,0.322,164,2.943,167,0.257,168,0.31,188,1.109,198,0.695,199,1.429,200,0.769,201,1.515,202,1.938,203,1.009,204,1.009,205,0.91,206,1.972,207,0.91,208,0.958,209,0.85,210,0.942,211,0.958,212,2.284,213,0.958,214,1.453,215,1.972,216,0.958,217,1.372,218,2.345,219,0.958,220,0.958,221,1.009,222,0.942,223,1.496,224,0.958,225,1.009,226,0.942,227,1.009,228,0.926,229,0.91,230,1.699,231,1.783,232,0.926,233,0.942,234,0.942,235,0.926,236,1.009,237,0.958,238,0.958,239,2.106,240,0.958,241,0.942,242,0.958,243,0.958,244,0.958,245,0.942,246,1.009,247,0.926,248,0.958,249,1.009,250,0.942,251,1.009,252,0.942,253,0.926,254,1.084,255,1.009,256,0.942,257,1.009,258,0.926,259,0.942,260,1.009,261,0.942,262,1.009,263,0.865,264,1.009,265,0.942,266,1.554,267,1.009,268,0.926,269,1.009,270,0.942,271,1.009,272,0.91,273,1.009,274,0.942,275,0.926,276,0.942,277,0.895,278,1.009,279,0.942,280,1.009,281,0.942,282,1.009,283,1.899,284,1.009,285,0.926,286,0.942,287,1.009,288,0.942,289,0.975,290,1.009,291,0.926,292,0.942,293,1.879,294,0.942,295,0.958,296,0.782,297,0.958,298,0.958,299,0.942,300,0.958,301,0.958,302,0.958,303,1.009,304,0.926,305,0.942,306,1.009,307,0.942,308,0.975,309,0.942,310,1.009,311,0.942,312,1.009,313,0.958,314,0.942,315,0.942,316,1.009,317,0.942,318,1.009,319,0.942,320,1.009,321,0.942,322,0.88,323,0.88,324,0.91,325,1.009,326,0.926,327,1.009,328,0.926,329,1.009,330,0.926,331,1.009,332,0.926,333,1.009,334,0.926,335,0.992,336,1.009,337,0.926,338,0.992,339,1.009,340,0.002,341,0.004,342,0.002,343,0.822,366,0.958,373,3.17,381,1.009,385,3.354,440,2.262,463,1.048,475,1.233,491,1.752,498,2.15,534,1.932,581,2.9,582,3.228,585,2.469,588,4.576,589,3.777,604,2.677,607,5.201,664,1.257,692,1.334,697,1.482,702,2.177,744,2.358,754,2.177,767,2.468,822,4.594,827,4.922,828,1.419,846,2.262,864,2.358,897,3.37,903,1.753,936,1.389,964,3.228,980,4.238,1007,3.426,1015,2.532,1022,4.856,1060,3.228,1061,3.833,1062,4.588,1065,2.596,1067,3.997,1068,3.997,1105,1.625,1124,2.75,1128,1.665,1138,2.1,1148,1.708,1210,3.201,1258,1.753,1271,3.497,1282,1.966,1349,1.665,1389,2.177,1400,3.85,1460,3.759,1561,2.358,1668,4.609,1680,3.354,1684,2.828,1711,1.708,1715,2.469,1760,2.596,1835,2.262,1917,4.167,2285,2.75,2326,3.201,2336,2.943,2579,2.75,2582,2.358,2622,2.943,2665,3.711,2670,2.596,2990,4.078,3033,3.201,3074,5.201,3075,2.943,3235,4.747,3290,4.364,3293,3.497,3301,2.358,3308,2.943,3455,3.354,3538,2.75,3712,2.358,3742,4.747,3840,3.201,3841,5.328,3842,5.328,3843,5.328,3844,5.328,3845,3.593,3846,2.943,3847,3.593,3848,2.468,3849,5.328,3850,3.593,3851,6.35,3852,6.35,3853,5.328,3854,3.593,3855,3.593,3856,3.593,3857,3.593,3858,3.201,3859,2.75,3860,3.593,3861,3.593,3862,5.328,3863,3.593,3864,3.593,3865,3.201,3866,2.468,3867,2.75,3868,3.593,3869,3.593,3870,3.593,3871,3.593,3872,3.593,3873,5.328,3874,3.593,3875,3.593,3876,2.943,3877,3.593,3878,1.966,3879,3.593,3880,3.593,3881,3.593,3882,3.201,3883,6.35,3884,3.593,3885,3.593,3886,3.593,3887,3.593,3888,6.35,3889,5.657,3890,3.593,3891,3.593,3892,3.593,3893,3.593,3894,3.593,3895,5.328,3896,3.593,3897,3.201,3898,4.747,3899,3.201,3900,3.593]],["title/modules/NotificationsModule.html",[343,1.155,3901,3.646]],["body/modules/NotificationsModule.html",[3,0.347,4,0.358,10,0.271,25,2.86,26,0.007,27,2.898,152,0.348,154,0.588,167,0.24,168,0.271,198,1.269,245,2.577,283,2.49,340,0.004,341,0.005,342,0.004,343,1.502,345,2.592,346,2.486,347,3.57,348,2.706,349,3.493,356,3.38,357,2.538,358,2.252,361,2.699,362,2.804,397,1.691,589,4.254,630,3.811,631,2.968,656,4.132,2156,6.174,2158,5.699,2162,5.375,2168,4.742,3838,5.847,3882,5.847,3901,7.186,3902,5.847,3903,5.847,3904,6.563,3905,5.847,3906,5.847,3907,6.563,3908,6.563,3909,5.847]],["title/injectables/NotificationsService.html",[589,2.282,594,1.442]],["body/injectables/NotificationsService.html",[2,1.263,3,0.259,4,0.267,10,0.202,12,0.553,25,2.193,26,0.007,27,2.931,32,1.249,34,1.263,39,0.521,40,0.81,45,1.207,46,1.627,54,1.027,68,0.722,70,1.128,84,1.444,85,2.864,89,1.105,90,1.066,100,1.085,101,0.884,102,0.768,107,4.357,121,1.171,133,2.622,145,5.114,152,0.295,154,0.439,161,4.364,165,3.749,166,1.432,167,0.179,168,0.202,188,1.474,340,0.003,341,0.004,342,0.003,343,1.519,375,1.558,440,3.084,463,0.963,488,3.328,491,1.832,498,1.976,507,1.894,534,1.94,579,3.084,582,2.967,583,3.633,588,4.602,589,3.002,594,1.897,596,4.869,597,3.328,598,4.18,605,3.188,647,2.215,654,5.438,655,3.633,656,4.18,686,7.752,770,2.967,789,1.818,822,3.751,847,2.767,856,5.538,863,3.633,994,3.404,1022,5.085,1067,3.084,1128,2.27,1243,3.539,1278,3.524,1400,4.797,1460,4.047,1642,3.838,1711,3.156,1760,4.797,1909,3.084,1986,4.797,2110,3.215,2756,4.56,3074,4.012,3670,3.539,3704,5.915,3839,4.364,3889,4.364,3897,4.364,3898,5.915,3899,4.364,3909,7.752,3910,4.364,3911,6.639,3912,5.081,3913,9.495,3914,6.639,3915,7.532,3916,6.639,3917,8.074,3918,4.898,3919,6.639,3920,6.639,3921,6.639,3922,4.898,3923,6.639,3924,7.193,3925,8.701,3926,6.639,3927,4.898,3928,6.639,3929,4.898,3930,6.639,3931,6.639,3932,4.898,3933,5.438,3934,6.639,3935,4.898,3936,6.169,3937,4.898,3938,4.898,3939,4.898,3940,4.898,3941,4.898,3942,4.898,3943,4.898,3944,4.898,3945,4.898,3946,4.898,3947,4.898,3948,4.898,3949,4.898,3950,4.898,3951,4.898,3952,4.898,3953,4.898,3954,4.898]],["title/components/OutputComponent.html",[0,0.31,285,1.3]],["body/components/OutputComponent.html",[0,0.572,1,1.085,2,1.309,3,0.219,4,0.226,5,1.448,7,1.162,8,1.123,10,0.171,12,0.467,17,1.495,20,2.382,21,1.048,23,3.191,24,0.947,26,0.007,33,2.273,34,1.916,37,1.547,39,0.44,40,0.721,42,1.484,45,0.663,46,1.104,48,2.525,52,2.482,54,0.914,56,3.662,65,1.521,68,0.777,70,1.076,72,1.287,85,2.547,87,1.635,88,1.847,89,0.867,90,0.9,100,0.597,101,1.02,102,0.422,119,3.549,121,1.086,124,1.67,127,1.547,129,1.066,138,1.448,152,0.275,154,0.371,167,0.151,168,0.171,198,0.801,199,1.201,200,0.886,202,2.072,203,1.162,204,1.162,205,1.048,206,2.108,207,1.048,208,1.103,209,0.979,210,1.085,211,1.103,212,2.385,213,1.103,214,1.575,215,2.108,216,1.103,217,1.442,218,2.439,219,1.103,220,1.103,221,1.162,222,1.085,223,1.658,224,1.103,225,1.162,226,1.085,227,1.162,228,1.066,229,1.048,230,1.767,231,1.933,232,2.045,233,1.085,234,2.226,235,1.934,236,1.162,237,1.103,238,1.103,239,2.229,240,1.103,241,1.085,242,1.103,243,1.103,244,1.103,245,1.085,246,1.162,247,1.066,248,1.103,249,1.162,250,1.085,251,1.162,252,1.085,253,1.066,254,1.201,255,1.162,256,1.085,257,1.162,258,1.066,259,1.085,260,1.162,261,1.085,262,1.162,263,0.996,264,1.162,265,1.085,266,1.685,267,1.162,268,1.066,269,1.162,270,1.085,271,1.162,272,1.048,273,1.162,274,1.085,275,1.066,276,1.085,277,1.031,278,1.162,279,1.085,280,1.162,281,1.085,282,1.162,283,1.048,284,1.162,285,1.934,286,1.085,287,1.162,288,1.085,289,1.123,290,1.162,291,1.066,292,1.085,293,1.954,294,1.085,295,1.103,296,0.9,297,1.103,298,1.103,299,1.085,300,1.103,301,1.103,302,1.103,303,1.162,304,1.066,305,1.085,306,1.162,307,1.085,308,1.123,309,1.085,310,1.162,311,1.085,312,1.162,313,1.103,314,1.085,315,1.085,316,1.162,317,1.085,318,1.162,319,1.085,320,1.162,321,1.085,322,1.013,323,1.013,324,1.048,325,1.162,326,1.066,327,1.162,328,1.066,329,1.162,330,1.066,331,1.162,332,1.066,333,1.162,334,1.066,335,1.142,336,1.162,337,1.521,338,1.142,339,1.162,340,0.003,341,0.004,342,0.003,381,1.162,474,3.577,477,2.339,485,2.237,509,3.876,524,2.223,534,1.521,697,2.435,936,2.284,1015,1.967,1106,1.448,1176,2.508,1177,2.991,1451,4.837,1462,3.168,1516,5.269,1526,4.974,1529,4.837,1530,5.639,1531,4.837,1533,3.39,1534,4.837,1536,3.39,1538,3.39,1539,3.39,1540,3.39,2145,4.52,2378,3.718,2379,3.718,2401,2.606,2577,5.261,2581,5.261,2605,3.688,2623,3.688,2624,3.688,2625,3.39,2632,5.261,3955,3.688,3956,5.906,3957,5.261,3958,4.139,3959,4.139,3960,4.139,3961,4.139,3962,5.906,3963,4.139,3964,4.139,3965,4.139]],["title/classes/Pagination.html",[168,0.209,2960,3.057]],["body/classes/Pagination.html",[3,0.182,4,0.188,10,0.142,12,0.389,26,0.007,32,1.241,39,0.366,40,0.63,45,0.992,46,1.446,47,2.588,52,0.918,54,0.799,55,2.74,68,0.747,70,1.192,72,1.158,84,1.283,85,2.227,87,2.039,88,1.8,89,1.391,90,1.943,98,2.357,100,1.156,101,0.942,102,0.86,121,0.969,138,3.005,152,0.189,166,0.655,167,0.126,168,0.256,183,2.598,188,1.543,254,1.05,340,0.002,341,0.003,342,0.002,370,2.227,375,1.6,380,4.115,386,2.573,397,1.33,432,4.496,434,2.013,454,3.017,455,3.128,463,0.678,475,1.182,477,4.66,481,3.287,498,3.944,501,2.917,507,2.395,511,3.388,532,5.795,534,0.887,537,2.261,581,2.66,585,2.393,596,4.032,597,1.727,598,3.25,603,2.288,605,2.445,664,1.205,692,3.237,697,2.129,767,3.546,828,1.36,832,3.812,833,5.536,846,2.169,856,4.835,897,1.828,903,1.681,997,3.546,1026,1.828,1104,1.681,1108,3.388,1128,1.596,1129,4.6,1136,2.588,1148,3.269,1216,1.878,1258,4.255,1261,6.068,1389,2.087,1414,3.25,1455,2.261,1464,2.519,1551,6.128,1552,6.128,1553,4.997,1554,6.128,1582,2.261,1714,3.886,1715,2.393,1884,2.366,1917,2.261,1928,2.087,2055,2.637,2319,2.822,2673,4.6,2674,4.474,2767,2.822,2960,5.586,2990,3.952,3026,5.517,3059,5.517,3082,3.069,3148,3.952,3315,5.265,3569,4.6,3684,2.825,3699,4.6,3710,6.128,3924,6.891,3966,3.069,3967,7.237,3968,9.161,3969,6.879,3970,6.879,3971,5.163,3972,6.128,3973,6.879,3974,5.163,3975,4.6,3976,4.6,3977,5.163,3978,4.02,3979,3.445,3980,5.163,3981,5.163,3982,3.445,3983,3.445,3984,3.445,3985,3.73,3986,4.6,3987,3.445,3988,3.445,3989,3.445,3990,5.163,3991,3.445,3992,3.445,3993,3.445,3994,3.445,3995,5.163,3996,3.445,3997,3.445,3998,3.445,3999,5.163,4000,3.445,4001,5.163,4002,6.128,4003,3.445,4004,5.163,4005,3.445,4006,5.163,4007,5.517,4008,5.163,4009,3.445,4010,5.163,4011,5.163,4012,3.445,4013,3.445,4014,3.445,4015,4.6,4016,3.445,4017,3.445,4018,3.445,4019,8.249,4020,3.445,4021,3.445,4022,3.445,4023,8.835,4024,6.879,4025,7.368,4026,3.445,4027,3.445,4028,6.879,4029,5.163,4030,3.445,4031,3.445,4032,3.445,4033,3.445,4034,5.163,4035,3.445,4036,3.445,4037,3.445]],["title/components/PaginationComponent.html",[0,0.31,286,1.322]],["body/components/PaginationComponent.html",[0,0.474,1,1.009,2,1.066,3,0.204,4,0.21,5,0.81,7,1.082,8,1.045,10,0.159,12,0.435,17,1.42,21,0.976,22,2.99,23,3.064,24,0.881,26,0.007,33,2.268,34,1.91,37,1.469,39,0.409,40,0.684,41,4.907,42,1.358,45,0.617,54,0.868,55,2.976,56,3.543,57,3.365,65,1.444,68,0.69,69,1.103,70,1.101,72,1.358,84,0.93,85,3.132,88,1.305,89,1.066,90,1.438,98,2.075,100,0.808,101,1.02,102,0.572,121,0.738,123,3.49,124,2.667,125,4.292,127,1.469,129,0.992,138,1.347,152,0.266,153,1.742,154,0.345,166,0.733,167,0.141,168,0.273,183,2.112,188,0.98,198,0.745,199,1.141,200,0.824,202,2.004,203,1.082,204,1.082,205,0.976,206,2.039,207,0.976,208,1.027,209,0.912,210,1.009,211,1.027,212,2.334,213,1.027,214,1.513,215,2.039,216,1.027,217,1.407,218,2.392,219,1.027,220,1.027,221,1.082,222,1.009,223,1.575,224,1.027,225,1.082,226,1.009,227,1.082,228,0.992,229,0.976,230,1.733,231,1.857,232,0.992,233,1.009,234,1.009,235,0.992,236,1.082,237,1.027,238,1.027,239,2.167,240,1.027,241,1.009,242,1.027,243,1.027,244,1.027,245,1.009,246,1.082,247,0.992,248,1.027,249,1.082,250,1.009,251,1.082,252,1.009,253,0.992,254,1.141,255,1.082,256,1.009,257,1.082,258,0.992,259,1.009,260,1.082,261,1.009,262,1.082,263,0.927,264,1.082,265,1.009,266,1.618,267,1.082,268,0.992,269,1.082,270,1.009,271,1.082,272,0.976,273,1.082,274,1.009,275,0.992,276,1.009,277,0.959,278,1.082,279,1.009,280,1.082,281,1.009,282,1.082,283,0.976,284,1.082,285,0.992,286,1.903,287,1.082,288,1.009,289,1.045,290,1.082,291,0.992,292,1.009,293,1.916,294,1.009,295,1.027,296,0.838,297,1.027,298,1.027,299,1.009,300,1.027,301,1.027,302,1.027,303,1.082,304,0.992,305,1.009,306,1.082,307,1.009,308,1.045,309,1.009,310,1.082,311,1.009,312,1.082,313,1.027,314,1.009,315,1.009,316,1.082,317,1.009,318,1.082,319,1.009,320,1.082,321,1.009,322,0.943,323,0.943,324,0.976,325,1.082,326,0.992,327,1.082,328,0.992,329,1.082,330,0.992,331,1.082,332,0.992,333,1.082,334,0.992,335,1.063,336,1.082,337,0.992,338,1.063,339,1.082,340,0.003,341,0.004,342,0.003,375,0.797,381,1.082,386,2.334,432,2.891,434,3.277,474,3.397,475,1.322,509,3.68,564,1.986,603,1.934,605,3.43,860,2.124,981,3.288,1007,2.736,1026,2.045,1148,2.665,1258,2.736,1264,4.052,1387,4.593,1716,3.68,2960,5.709,2961,4.777,3030,3.432,3248,3.432,3967,6.596,3975,4.996,4038,3.432,4039,5.608,4040,6.612,4041,5.608,4042,3.853,4043,3.853,4044,5.608,4045,3.853,4046,3.853,4047,4.593,4048,3.853,4049,3.853,4050,3.853,4051,3.853,4052,5.608,4053,5.89,4054,5.608,4055,3.853,4056,5.608,4057,4.996,4058,5.608,4059,5.608,4060,5.608,4061,3.853,4062,5.608,4063,4.996,4064,3.853,4065,5.608,4066,3.853,4067,3.853,4068,5.608,4069,5.608,4070,5.608,4071,5.608,4072,5.608,4073,5.608,4074,5.608,4075,5.608,4076,5.608,4077,5.608,4078,5.608,4079,5.608,4080,5.608,4081,5.608,4082,5.608]],["title/classes/PaginationConfig.html",[168,0.209,2961,3.646]],["body/classes/PaginationConfig.html",[0,0.487,3,0.34,4,0.351,10,0.266,12,0.726,26,0.007,39,0.684,40,0.966,45,1.031,68,0.767,70,1.135,100,0.927,101,0.755,102,0.656,121,0.846,138,2.77,152,0.235,167,0.235,168,0.266,183,2.304,340,0.004,341,0.005,342,0.004,375,1.852,386,2.515,463,1.688,492,4.203,498,3.462,603,1.843,828,2.54,850,4.15,851,3.864,945,4.628,982,2.487,989,4.474,1007,3.864,1075,4.049,1104,3.864,1122,5.637,1202,4.628,1244,4.049,1258,3.864,1261,5.439,1939,5.269,2220,6.061,2473,6.061,2960,4.797,2961,6.643,3967,7.847,3976,7.056,4083,8.192,4084,8.581,4085,8.581,4086,9.486,4087,7.92,4088,6.433,4089,6.486,4090,6.433,4091,4.333,4092,7.92,4093,7.92,4094,7.92]],["title/components/PasswordResetComponent.html",[0,0.31,288,1.322]],["body/components/PasswordResetComponent.html",[0,0.406,1,1.009,2,1.066,3,0.204,4,0.21,5,0.81,7,1.082,8,1.045,9,1.624,10,0.159,12,0.435,17,1.42,21,0.976,24,0.881,26,0.007,32,1.023,33,2.268,34,1.91,37,1.469,39,0.409,40,0.684,42,1.358,45,0.617,46,1.443,48,1.495,54,0.868,65,1.444,68,0.729,69,1.103,70,1.118,72,1.049,84,0.639,85,2.419,89,0.565,90,0.838,100,0.555,101,1,102,0.674,121,0.87,124,1.554,127,1.469,129,0.992,131,2.229,143,2.15,152,0.266,153,1.742,154,0.345,156,1.182,166,0.733,167,0.141,168,0.159,186,2.736,198,0.745,199,1.141,200,0.824,201,1.624,202,2.004,203,1.082,204,1.082,205,0.976,206,2.039,207,0.976,208,1.027,209,1.906,210,1.009,211,1.027,212,2.334,213,1.027,214,1.513,215,2.039,216,1.027,217,1.407,218,2.392,219,1.027,220,1.027,221,1.082,222,1.009,223,1.575,224,1.027,225,1.082,226,1.009,227,1.082,228,0.992,229,0.976,230,1.733,231,1.857,232,0.992,233,1.009,234,1.009,235,0.992,236,1.082,237,1.027,238,1.027,239,2.167,240,1.027,241,1.009,242,1.027,243,1.027,244,1.027,245,1.009,246,1.082,247,0.992,248,1.027,249,1.082,250,1.009,251,1.082,252,1.009,253,0.992,254,1.141,255,1.082,256,1.009,257,1.082,258,0.992,259,1.009,260,1.082,261,1.009,262,1.082,263,1.35,264,1.082,265,1.009,266,1.618,267,1.082,268,0.992,269,1.082,270,1.009,271,1.082,272,0.976,273,1.082,274,1.009,275,0.992,276,1.009,277,0.959,278,1.082,279,1.009,280,1.082,281,1.009,282,1.082,283,0.976,284,1.082,285,0.992,286,1.009,287,1.082,288,1.903,289,2.31,290,1.082,291,0.992,292,1.009,293,1.916,294,1.009,295,1.027,296,0.838,297,1.027,298,1.027,299,1.009,300,1.027,301,1.027,302,1.027,303,1.082,304,0.992,305,1.009,306,1.082,307,1.009,308,1.045,309,1.009,310,1.082,311,1.009,312,1.082,313,1.027,314,1.009,315,1.009,316,1.082,317,1.009,318,1.082,319,1.009,320,1.082,321,1.009,322,0.943,323,0.943,324,0.976,325,1.082,326,0.992,327,1.082,328,0.992,329,1.082,330,0.992,331,1.082,332,0.992,333,1.082,334,0.992,335,1.063,336,1.082,337,0.992,338,1.063,339,1.082,340,0.003,341,0.004,342,0.003,357,3.412,373,2.262,375,1.16,392,1.521,463,0.758,485,2.124,489,4.339,493,4.593,505,2.419,524,1.66,527,2.528,535,2.949,551,3.978,579,4.572,581,2.168,582,2.334,588,4.056,589,3.49,607,4.593,614,3.432,625,4.858,627,4.399,639,2.949,641,7.322,705,5.455,860,2.124,963,3.509,968,3.759,981,2.04,1019,4.052,1067,3.53,1106,1.961,1148,2.665,1598,2.425,1684,2.976,2338,4.292,3455,4.572,3456,4.593,3459,3.432,3477,3.155,3483,3.155,3512,5.948,3566,3.155,3858,3.432,4095,7.965,4096,3.432,4097,5.608,4098,7.861,4099,5.608,4100,5.608,4101,5.608,4102,6.612,4103,5.608,4104,3.853,4105,5.608,4106,3.853,4107,3.853,4108,3.853,4109,7.262,4110,5.608,4111,3.853,4112,3.853,4113,4.996,4114,5.608,4115,4.996,4116,3.853,4117,3.853,4118,3.853,4119,3.853,4120,3.853,4121,3.853,4122,3.853,4123,3.853,4124,3.853,4125,3.853,4126,3.853,4127,3.853,4128,3.853,4129,3.853,4130,5.608]],["title/components/PopComponent.html",[0,0.31,291,1.3]],["body/components/PopComponent.html",[0,0.377,1,0.888,2,0.97,3,0.179,4,0.185,5,0.713,7,1.722,8,0.919,9,1.428,10,0.14,12,0.382,21,0.858,24,0.775,26,0.007,32,1.391,33,2.258,34,1.904,37,1.336,39,0.36,40,0.622,41,2.881,42,1.437,45,0.982,46,1.646,54,0.789,65,1.313,68,0.732,69,1.003,70,1.139,72,1.275,73,2.013,84,0.562,87,2.694,88,1.186,89,1.001,90,1.334,100,0.983,101,1.02,102,0.696,116,3.516,121,1.011,123,3.868,127,2.242,129,0.873,143,2.02,152,0.187,154,0.303,167,0.124,168,0.14,186,3.328,188,0.592,198,0.655,199,1.247,200,0.725,201,1.428,202,1.882,203,0.951,204,0.951,205,0.858,206,1.915,207,0.858,208,0.903,209,0.802,210,0.888,211,0.903,212,2.24,213,0.903,214,1.403,215,1.915,216,0.903,217,1.343,218,2.305,219,0.903,220,0.903,221,0.951,222,0.888,223,1.432,224,0.903,225,0.951,226,0.888,227,0.951,228,0.873,229,0.858,230,1.669,231,1.722,232,0.873,233,0.888,234,0.888,235,0.873,236,0.951,237,0.903,238,0.903,239,2.054,240,0.903,241,0.888,242,0.903,243,0.903,244,0.903,245,0.888,246,0.951,247,0.873,248,0.903,249,0.951,250,0.888,251,0.951,252,0.888,253,0.873,254,1.037,255,0.951,256,0.888,257,0.951,258,0.873,259,0.888,260,0.951,261,0.888,262,0.951,263,0.815,264,0.951,265,0.888,266,1.501,267,0.951,268,0.873,269,0.951,270,0.888,271,0.951,272,0.858,273,0.951,274,0.888,275,0.873,276,0.888,277,0.843,278,0.951,279,0.888,280,0.951,281,0.888,282,0.951,283,0.858,284,0.951,285,0.873,286,0.888,287,0.951,288,0.888,289,0.919,290,0.951,291,1.757,292,0.888,293,1.846,294,0.888,295,0.903,296,0.737,297,0.903,298,0.903,299,0.888,300,0.903,301,0.903,302,0.903,303,0.951,304,0.873,305,0.888,306,0.951,307,0.888,308,0.919,309,0.888,310,0.951,311,0.888,312,0.951,313,0.903,314,0.888,315,0.888,316,0.951,317,0.888,318,0.951,319,0.888,320,0.951,321,0.888,322,0.829,323,0.829,324,0.858,325,0.951,326,0.873,327,0.951,328,0.873,329,0.951,330,0.873,331,0.951,332,0.873,333,0.951,334,0.873,335,0.935,336,0.951,337,0.873,338,0.935,339,0.951,340,0.002,341,0.003,342,0.002,375,1.513,376,3.732,393,3.354,397,2.204,463,0.666,475,1.162,485,1.931,491,0.935,496,2.448,507,1.971,524,1.51,534,1.98,578,3.714,603,0.788,828,1.338,833,2.223,842,3.854,860,2.771,862,3.089,887,2.98,938,1.367,1000,2.628,1014,4.574,1041,3.902,1061,3.891,1105,1.532,1113,2.223,1122,4.839,1136,4.545,1143,2.593,1146,2.223,1258,2.487,1400,2.448,1460,2.555,1475,3.502,1488,2.327,1496,2.448,1497,3.018,1498,3.018,1502,6.517,1553,2.052,1635,3.902,1637,4.492,1639,4.429,1641,3.684,1642,3.791,1643,4.928,1644,4.211,1645,4.928,1652,3.502,1654,3.464,1655,3.684,1657,3.684,1658,4.211,1662,2.223,1663,3.346,1666,2.448,1668,3.346,1676,4.928,1677,3.684,1679,2.706,1680,3.21,1681,3.684,1682,3.684,1684,3.62,1685,3.684,1694,3.684,1695,3.684,1867,3.018,1909,2.133,1917,2.223,2130,2.775,2143,3.902,2375,3.859,2378,3.21,2379,3.21,2401,2.133,2506,2.775,2530,4.176,2582,2.223,2871,2.593,3023,3.018,3293,2.223,3548,3.018,3624,2.223,3626,2.593,3633,3.018,3859,2.593,4113,3.018,4131,3.018,4132,5.099,4133,5.099,4134,5.099,4135,6.821,4136,5.099,4137,5.099,4138,3.388,4139,3.388,4140,3.388,4141,3.388,4142,3.388,4143,3.388,4144,3.388,4145,3.388,4146,3.388,4147,3.388,4148,3.388,4149,3.388,4150,3.388,4151,3.388,4152,3.388,4153,3.388,4154,3.018,4155,3.388,4156,3.388,4157,3.388,4158,3.388,4159,5.099,4160,6.131,4161,3.388,4162,3.388,4163,3.388,4164,3.388,4165,3.388,4166,3.388,4167,5.099,4168,3.388,4169,3.388,4170,5.099,4171,3.388]],["title/modules/PopModule.html",[343,1.155,2156,3.312]],["body/modules/PopModule.html",[3,0.353,4,0.365,10,0.276,25,2.884,26,0.007,152,0.346,154,0.599,166,1.272,167,0.297,168,0.276,198,1.294,279,2.583,291,2.539,340,0.004,341,0.005,342,0.004,343,1.531,345,2.642,346,2.534,347,3.6,348,2.759,349,3.522,356,3.42,357,2.587,358,2.295,361,2.731,362,2.34,630,3.856,631,3.025,1031,4.391,1637,5.523,2156,6.509,2158,5.725,2168,4.834,4154,5.961,4172,5.961,4173,5.961,4174,6.691,4175,5.961,4176,5.961,4177,5.961,4178,6.691,4179,5.961,4180,6.691]],["title/injectables/PopService.html",[594,1.442,1637,2.949]],["body/injectables/PopService.html",[3,0.338,4,0.349,10,0.264,12,0.722,26,0.007,39,0.68,40,0.963,45,1.432,68,0.676,70,1.085,84,1.309,121,1.176,138,2.76,152,0.313,154,0.573,166,1.216,167,0.234,168,0.264,183,1.86,291,1.647,340,0.004,341,0.005,342,0.004,381,1.796,385,6.073,448,4.318,463,1.683,498,2.58,594,2.255,647,2.892,827,6.024,860,2.422,887,4.612,1014,4.549,1031,4.197,1099,7.961,1103,6.04,1122,4.968,1143,6.84,1637,4.612,1658,5.42,1668,5.865,2008,5.42,2564,4.612,2875,6.463,2879,5.238,4181,5.697,4182,9.18,4183,7.891,4184,7.891,4185,8.936,4186,8.559,4187,7.891,4188,6.395,4189,6.395,4190,5.238,4191,6.395,4192,6.395,4193,6.395,4194,6.395,4195,6.395,4196,6.395]],["title/interfaces/ResourceActionbarState.html",[366,1.345,4197,4.133]],["body/interfaces/ResourceActionbarState.html",[0,0.384,3,0.237,4,0.245,5,0.945,10,0.186,17,1.137,20,1.812,22,2.828,26,0.007,32,0.695,33,1.01,34,0.854,39,0.765,40,0.763,42,1.169,46,1.53,52,2.075,57,2.081,68,0.701,69,1.71,84,1.194,102,0.794,107,2.947,123,3.254,133,1.773,143,2.423,152,0.324,154,0.402,156,1.92,166,1.734,167,0.229,168,0.186,188,1.519,205,2.146,209,2.2,254,1.464,258,1.611,292,1.177,293,1.619,340,0.003,341,0.004,342,0.003,366,1.197,367,4.863,368,1.937,370,2.698,371,3.7,372,4.477,373,3.68,374,6.485,375,0.929,376,3.422,378,4.787,381,1.261,382,5.986,385,3.937,387,2.842,388,3.422,390,6.94,393,3.422,394,3.678,397,2.005,403,3.678,434,2.624,462,1.852,463,0.883,465,2.47,468,1.983,481,2.383,511,3.938,517,3.084,524,2.131,536,2.537,565,2.671,581,2.418,589,2.828,603,1.675,680,4.066,694,5.058,697,2.968,698,3.992,722,2.947,723,2.827,724,2.191,751,4.001,789,1.667,903,2.191,914,2.383,980,2.537,1060,2.72,1107,4.444,1235,3.084,1553,3.789,1587,4.001,1596,4.001,1598,2.827,1714,4.623,2815,4.001,2833,4.001,3065,6.263,3324,3.678,3812,4.001,4197,6.375,4198,3.084,4199,3.678,4200,4.001,4201,5.572,4202,7.783,4203,4.491,4204,4.491,4205,4.491,4206,4.491,4207,6.255,4208,4.491,4209,4.491,4210,4.491,4211,4.491,4212,4.491,4213,4.491,4214,4.491,4215,4.491,4216,4.491,4217,4.491,4218,4.491,4219,4.491,4220,4.491,4221,3.678,4222,8.183,4223,4.491,4224,4.491,4225,4.491,4226,7.197,4227,4.491,4228,4.491,4229,4.491,4230,4.491,4231,4.491,4232,4.491,4233,3.678,4234,4.491,4235,4.491,4236,4.491,4237,4.491,4238,4.491,4239,4.491,4240,4.491,4241,4.491,4242,4.491,4243,4.491,4244,4.491,4245,4.491,4246,4.491,4247,4.491,4248,4.491,4249,4.491,4250,4.491]],["title/components/ResourceCrudComponent.html",[0,0.31,294,1.322]],["body/components/ResourceCrudComponent.html",[0,0.362,1,0.831,2,0.922,3,0.168,4,0.173,5,1.495,7,0.89,8,0.86,10,0.131,12,0.358,17,1.228,21,0.803,22,2.662,24,0.725,26,0.007,32,0.75,33,2.252,34,1.894,37,1.271,39,0.337,40,0.592,42,1.401,45,0.508,46,1.541,52,1.293,54,1.206,57,3.056,65,1.249,68,0.76,69,1.398,70,1.16,72,1.233,84,0.977,88,1.534,89,1.144,90,1.435,100,0.849,101,1.042,102,0.82,121,0.935,124,2.867,127,1.728,129,0.817,143,2.49,152,0.321,153,1.434,154,0.284,156,2.024,167,0.116,168,0.131,183,0.922,188,1.152,198,0.613,199,1.341,200,0.678,202,1.82,203,0.89,204,0.89,205,0.803,206,1.852,207,0.803,208,0.845,209,1.95,210,0.831,211,0.845,212,2.189,213,0.845,214,1.347,215,1.852,216,0.845,217,1.589,218,2.258,219,0.845,220,0.845,221,0.89,222,0.831,223,1.362,224,0.845,225,0.89,226,0.831,227,0.89,228,0.817,229,0.803,230,1.636,231,1.653,232,0.817,233,0.831,234,0.831,235,0.817,236,0.89,237,0.845,238,0.845,239,1.995,240,0.845,241,0.831,242,0.845,243,0.845,244,0.845,245,0.831,246,0.89,247,0.817,248,0.845,249,0.89,250,0.831,251,0.89,252,0.831,253,0.817,254,1.341,255,0.89,256,0.831,257,0.89,258,0.817,259,0.831,260,0.89,261,0.831,262,0.89,263,1.587,264,0.89,265,0.831,266,1.441,267,0.89,268,0.817,269,0.89,270,0.831,271,0.89,272,0.803,273,0.89,274,0.831,275,0.817,276,0.831,277,0.789,278,0.89,279,0.831,280,0.89,281,0.831,282,0.89,283,0.803,284,0.89,285,0.817,286,0.831,287,0.89,288,0.831,289,0.86,290,0.89,291,0.817,292,0.831,293,2.103,294,1.963,295,0.845,296,0.69,297,0.845,298,1.997,299,0.831,300,1.758,301,0.845,302,0.845,303,0.89,304,0.817,305,0.831,306,0.89,307,0.831,308,0.86,309,0.831,310,0.89,311,0.831,312,0.89,313,0.845,314,0.831,315,0.831,316,0.89,317,0.831,318,0.89,319,0.831,320,0.89,321,0.831,322,0.776,323,0.776,324,0.803,325,0.89,326,0.817,327,0.89,328,0.817,329,0.89,330,0.817,331,0.89,332,0.817,333,0.89,334,0.817,335,0.875,336,0.89,337,0.817,338,0.875,339,0.89,340,0.002,341,0.003,342,0.002,358,1.664,375,0.656,381,0.89,386,1.653,462,2.428,463,0.954,464,1.683,465,2.604,468,1.4,485,1.837,504,2.193,511,2.653,524,2.219,564,1.635,589,2.982,595,1.792,598,3.053,599,2.081,605,2.604,625,3.854,627,3.567,664,1.696,692,2.447,694,3.771,698,2.873,708,3.972,722,2.081,789,2.984,908,3.803,938,2.867,957,3.972,958,3.331,959,3.972,960,3.972,961,3.711,963,3.125,965,2.653,966,4.32,968,3.213,969,4.663,970,5.294,971,3.972,975,4.473,976,3.441,977,4.556,980,3.327,983,5.82,985,4.152,987,3.972,988,4.32,989,2.74,994,2.78,995,3.711,997,2.5,998,4.32,1000,2.5,1014,3.706,1015,3.134,1019,3.504,1021,3.331,1026,1.683,1028,1.921,1029,2.825,1031,2.081,1039,2.825,1040,4.32,1042,2.825,1069,2.178,1070,2.178,1073,4.32,1102,4.327,1672,3.711,1698,2.291,1971,1.996,2789,3.972,3684,2.653,3830,2.178,4198,6.326,4201,4.32,4251,7.544,4252,2.825,4253,6.594,4254,5.888,4255,4.849,4256,3.171,4257,5.888,4258,4.849,4259,4.849,4260,4.849,4261,3.171,4262,3.171,4263,4.849,4264,3.171,4265,3.171,4266,6.594,4267,3.171,4268,3.171,4269,4.32,4270,3.171,4271,3.171,4272,3.171,4273,3.171,4274,4.849,4275,3.171,4276,3.171,4277,4.849,4278,3.171,4279,3.171,4280,3.171,4281,2.427,4282,3.171,4283,2.825,4284,3.171,4285,3.171,4286,3.171,4287,3.171,4288,3.171,4289,3.171,4290,3.171,4291,3.171]],["title/components/ResourceListPopComponent.html",[0,0.31,299,1.322]],["body/components/ResourceListPopComponent.html",[0,0.365,1,0.842,2,0.931,3,0.17,4,0.175,5,0.676,7,1.375,8,0.871,10,0.133,17,1.24,20,1.975,21,0.813,23,2.75,24,0.735,26,0.007,32,1.249,33,2.253,34,1.899,37,1.283,39,0.341,40,0.597,41,1.815,42,1.408,45,1.064,46,1.735,52,1.305,54,0.758,56,3.238,65,1.261,68,0.801,69,1.167,70,1.213,72,1.11,78,2.454,79,2.524,84,0.812,87,1.934,88,0.747,89,1.105,90,1.555,100,1.03,101,1.021,102,0.729,116,2.524,119,4.539,121,0.991,123,4.023,124,1.296,127,1.973,129,0.827,143,2.39,152,0.275,153,1.452,154,0.288,156,0.986,167,0.117,168,0.311,186,2.389,198,0.621,199,0.996,200,0.687,202,1.832,203,0.902,204,0.902,205,0.813,206,1.864,207,0.813,208,0.856,209,1.571,210,0.842,211,0.856,212,2.199,213,0.856,214,1.358,215,1.864,216,0.856,217,1.717,218,2.267,219,0.856,220,0.856,221,0.902,222,0.842,223,1.375,224,0.856,225,0.902,226,0.842,227,0.902,228,0.827,229,0.813,230,1.642,231,1.667,232,0.827,233,0.842,234,0.842,235,0.827,236,0.902,237,0.856,238,0.856,239,2.007,240,0.856,241,0.842,242,0.856,243,0.856,244,0.856,245,0.842,246,0.902,247,0.827,248,0.856,249,0.902,250,0.842,251,0.902,252,0.842,253,0.827,254,1.35,255,0.902,256,0.842,257,0.902,258,0.827,259,0.842,260,0.902,261,0.842,262,0.902,263,0.773,264,0.902,265,0.842,266,1.453,267,0.902,268,0.827,269,0.902,270,0.842,271,0.902,272,0.813,273,0.902,274,0.842,275,0.827,276,0.842,277,0.8,278,0.902,279,0.842,280,0.902,281,0.842,282,0.902,283,0.813,284,0.902,285,0.827,286,0.842,287,0.902,288,0.842,289,0.871,290,0.902,291,2.348,292,0.842,293,2.036,294,0.842,295,0.856,296,0.699,297,0.856,298,0.856,299,1.739,300,0.856,301,0.856,302,1.77,303,0.902,304,0.827,305,0.842,306,0.902,307,0.842,308,0.871,309,0.842,310,0.902,311,0.842,312,0.902,313,0.856,314,0.842,315,0.842,316,0.902,317,0.842,318,0.902,319,0.842,320,0.902,321,0.842,322,0.786,323,0.786,324,0.813,325,0.902,326,0.827,327,0.902,328,0.827,329,0.902,330,0.827,331,0.902,332,0.827,333,0.902,334,0.827,335,0.886,336,0.902,337,0.827,338,0.886,339,0.902,340,0.002,341,0.003,342,0.002,375,1.013,376,3.91,380,2.895,381,0.902,386,1.667,393,4.12,397,1.71,413,2.206,434,4.176,463,0.963,485,1.855,507,1.893,524,1.757,534,1.841,578,2.966,679,2.861,680,4.673,694,3.15,698,2.895,722,2.108,723,2.022,724,1.567,842,3.75,860,2.248,862,1.946,887,1.877,896,3.363,908,3.651,947,2.679,975,4.499,994,2.065,1000,1.656,1014,4.229,1061,3.238,1069,2.206,1070,2.206,1122,3.736,1136,3.925,1258,1.567,1460,2.974,1473,3.748,1475,3.363,1488,2.206,1496,2.321,1634,2.458,1635,3.748,1636,4.861,1637,4.931,1638,3.895,1639,3.538,1641,3.538,1642,2.821,1643,3.538,1644,3.363,1645,4.288,1647,2.861,1648,2.861,1649,2.861,1650,2.631,1651,2.458,1652,2.206,1653,2.458,1654,1.815,1655,2.321,1656,2.458,1657,2.321,1658,2.206,1659,2.458,1660,2.861,1661,2.458,1662,3.214,1663,3.895,1666,2.321,1667,2.458,1668,2.108,1672,3.748,1674,4.362,1675,2.458,1676,3.538,1677,2.321,1678,2.458,1679,1.705,1680,2.022,1681,2.321,1682,2.321,1683,2.458,1684,2.599,1685,2.321,1686,2.458,1687,2.861,1688,2.631,1690,2.861,1691,4.362,1692,2.631,1693,2.458,1694,2.321,1695,2.321,1696,2.458,1697,2.458,1699,2.631,1700,2.458,1703,2.631,1704,2.321,1705,2.458,1706,2.861,2512,2.861,2513,4.362,4198,6.262,4281,6.978,4283,2.861,4292,5.935,4293,3.212,4294,3.212,4295,3.212,4296,3.212,4297,2.631,4298,3.212]],["title/modules/ResourceModule.html",[343,1.155,1158,3.466]],["body/modules/ResourceModule.html",[3,0.276,4,0.285,10,0.216,25,2.571,26,0.007,152,0.356,154,0.468,155,2.109,156,1.605,167,0.191,168,0.216,198,1.011,208,2.541,217,1.212,292,2.497,293,2.13,294,2.497,295,2.541,296,1.509,297,2.541,298,2.568,299,2.497,300,2.541,301,2.541,340,0.003,341,0.005,342,0.003,343,1.196,345,2.065,346,1.98,347,3.21,348,2.156,349,3.14,355,5.384,356,2.925,357,2.022,358,1.794,360,3.919,361,2.335,362,2.426,630,3.297,631,2.364,634,4.764,680,5.01,723,3.292,724,2.551,1028,3.167,1031,5.108,1158,6.911,1159,6.254,1179,3.591,1181,4.002,1187,4.282,1189,6.18,1718,5.01,1753,3.591,1971,3.292,2108,4.002,2109,3.778,2110,3.431,4199,4.282,4251,4.282,4281,5.957,4299,4.658,4300,4.658,4301,5.229,4302,4.658,4303,4.658,4304,5.229,4305,4.658,4306,5.229,4307,4.658,4308,4.658]],["title/injectables/ResourceService.html",[594,1.442,1718,2.851]],["body/injectables/ResourceService.html",[0,0.324,3,0.187,4,0.193,10,0.146,12,0.399,26,0.007,32,1.358,39,0.376,40,0.768,45,1.524,46,1.461,48,1.404,52,1.986,54,0.815,68,0.788,69,1.797,70,1.112,72,1.303,73,1.397,83,3.805,84,1.342,88,2.188,89,1.269,98,2.566,100,1.224,101,0.997,102,0.866,121,0.693,131,1.086,133,3.085,142,2.08,143,1.048,152,0.311,154,0.317,166,1.197,167,0.193,168,0.146,183,1.029,188,1.627,193,1.999,209,1.967,217,1.099,293,2.209,296,1.809,340,0.002,341,0.003,342,0.002,366,0.943,367,2.64,371,1.6,375,1.442,381,0.994,386,2.093,388,2.882,397,1.795,455,3.811,462,2.874,463,0.696,464,1.878,465,2.752,468,1.562,488,2.64,491,0.976,501,4.414,507,1.368,519,3.811,584,3.191,594,1.505,596,4.077,597,1.773,604,1.492,647,1.6,650,1.999,653,2.43,680,4.21,694,4.81,697,3.794,698,3.947,718,4.171,722,2.322,724,1.726,744,4.129,756,3.191,757,3.456,764,2.227,789,2.899,834,3.728,856,4.89,860,1.995,881,1.773,887,3.078,914,3.699,936,2.695,941,3.453,965,2.882,994,2.939,1004,2.898,1023,3.961,1055,2.898,1105,2.382,1109,3.493,1131,2.143,1216,3.024,1234,1.999,1270,2.43,1414,4.388,1425,2.898,1613,2.898,1679,2.795,1711,2.503,1712,3.617,1713,3.617,1714,2.976,1715,2.441,1716,3.456,1717,3.456,1718,3.555,1719,4.314,1720,4.692,1721,4.314,1722,3.4,1724,4.314,1726,3.677,1727,4.716,1728,4.314,1732,2.976,1737,4.031,1738,4.314,1740,3.191,1741,3.677,1745,4.031,1746,3.617,1748,5.118,1763,2.976,1775,5.153,1776,2.898,1777,2.898,1778,2.898,1783,4.314,1785,2.556,1789,2.898,1790,2.898,1791,2.898,1792,2.898,1793,2.898,1794,6.103,1795,2.227,1796,2.322,1797,2.898,1871,2.708,1970,3.617,1971,2.227,1974,2.556,1977,3.805,3686,2.898,4198,6.103,4297,2.898,4309,2.898,4310,5.267,4311,5.267,4312,3.538,4313,6.21,4314,6.21,4315,3.538,4316,5.605,4317,3.538,4318,4.692,4319,3.538,4320,3.538,4321,4.692,4322,3.538,4323,4.692,4324,4.692,4325,4.692,4326,3.538,4327,4.692,4328,4.692,4329,3.538,4330,3.538,4331,3.152,4332,3.152,4333,3.152,4334,3.152,4335,3.152,4336,4.314,4337,3.152,4338,6.21,4339,3.152,4340,3.152,4341,3.152,4342,3.152,4343,3.152,4344,3.152,4345,3.152,4346,3.152,4347,3.152,4348,3.152,4349,3.152,4350,3.152,4351,3.152,4352,4.692,4353,5.605,4354,3.152,4355,4.692,4356,3.152,4357,3.152]],["title/interfaces/SdkField.html",[366,1.345,4358,4.133]],["body/interfaces/SdkField.html",[3,0.456,4,0.316,10,0.24,12,1.047,26,0.007,32,1.411,39,0.617,40,0.906,45,1.505,48,2.656,68,0.847,69,1.926,72,1.388,121,1.2,167,0.212,230,1.51,340,0.004,341,0.005,342,0.004,366,1.547,368,2.503,370,2.503,373,3.68,375,2.026,386,2.604,450,2.908,519,4.497,552,4.209,664,2.029,666,3.175,697,3.375,859,6.45,997,3.826,1107,3.72,1109,3.72,1426,4.991,1715,3.44,1741,5.042,1763,4.194,1806,6.613,1840,5.742,1860,5.363,1884,5.098,2564,4.338,3682,3.985,3701,5.169,3716,5.169,3778,7.687,3779,7.687,3830,5.098,4358,6.08,4359,5.169,4360,5.169,4361,5.802,4362,7.423,4363,7.423,4364,7.423,4365,7.423,4366,5.681,4367,6.08]],["title/modules/SdkModule.html",[343,1.155,1159,3.312]],["body/modules/SdkModule.html",[3,0.381,4,0.394,10,0.298,25,2.978,26,0.007,152,0.33,154,0.647,167,0.264,168,0.298,198,1.396,340,0.005,341,0.006,342,0.005,343,1.651,345,2.85,346,2.734,347,3.5,348,2.976,349,3.424,356,3.578,357,2.791,358,2.476,360,4.077,361,2.429,362,2.969,465,3.797,1159,6.311,2108,5.524,2109,5.214,2110,4.736,4368,6.43,4369,6.43,4370,7.217,4371,7.217]],["title/injectables/SdkService.html",[465,1.993,594,1.442]],["body/injectables/SdkService.html",[3,0.324,4,0.184,10,0.14,12,0.382,25,1.682,26,0.007,27,3.009,32,1.233,39,0.359,40,0.621,44,4.601,45,1.314,46,1.807,54,0.788,55,4.77,68,0.762,69,1.438,70,1.184,72,0.952,83,3.679,84,1.361,85,3.688,86,3.497,87,2.691,88,1.586,89,1.274,90,0.736,100,1.149,101,0.936,102,0.908,117,2.769,121,1.079,124,1.364,133,3.377,136,2.77,138,3.143,152,0.307,154,0.303,167,0.124,168,0.14,175,3.897,188,1.57,191,2.588,209,2.282,214,1.165,340,0.002,341,0.003,342,0.002,371,2.769,375,1.053,384,4.428,397,1.979,424,2.975,453,2.77,456,4.424,462,2.099,463,0.665,465,2.691,469,2.77,474,3.084,489,5.383,491,1.881,504,2.302,505,2.196,509,3.341,527,2.219,534,1.979,537,3.341,579,5.164,581,1.969,593,2.302,594,1.455,596,3.999,597,1.695,605,2.418,627,3.084,628,2.877,647,1.529,649,4.17,650,4.34,651,3.341,652,6.071,653,6.593,654,4.17,655,2.786,656,3.205,657,5.594,658,4.17,659,4.17,660,5.216,661,4.17,662,4.536,663,3.679,664,2.383,665,5.581,666,2.786,667,4.536,668,4.536,669,4.536,671,4.17,674,3.013,682,3.084,683,4.536,687,3.897,688,4.536,697,1.394,698,3.325,700,2.702,702,3.084,721,7.308,722,2.219,730,5.016,742,3.013,770,2.048,791,5.54,804,1.85,897,2.702,914,1.795,938,2.054,939,4.17,994,2.147,1104,3.325,1216,1.852,1243,2.443,1264,3.679,1282,2.786,1491,3.679,1582,4.019,1598,2.129,1936,4.68,2350,3.013,2562,2.786,3179,4.17,3271,3.897,3315,3.897,3475,5.016,3476,2.77,3688,5.216,3798,4.17,3876,4.17,4098,3.013,4372,3.013,4373,5.092,4374,5.092,4375,5.092,4376,5.092,4377,5.092,4378,6.124,4379,5.456,4380,5.456,4381,6.124,4382,8.203,4383,5.092,4384,5.092,4385,6.124,4386,5.092,4387,3.381,4388,5.092,4389,5.092,4390,3.381,4391,6.124,4392,5.092,4393,3.381,4394,5.092,4395,8.393,4396,5.092,4397,3.381,4398,7.681,4399,5.092,4400,3.381,4401,5.092,4402,3.381,4403,3.381,4404,3.381,4405,3.381,4406,4.536,4407,3.381,4408,5.456,4409,3.381,4410,3.381,4411,3.381,4412,5.092,4413,3.381,4414,4.536,4415,3.381,4416,5.092,4417,5.092,4418,3.381,4419,3.381,4420,3.381,4421,3.381,4422,3.381,4423,3.381,4424,3.381,4425,3.381,4426,3.381,4427,3.381,4428,6.124,4429,3.381,4430,3.381,4431,5.092,4432,3.381,4433,3.381,4434,3.381,4435,6.124,4436,3.381,4437,3.381,4438,3.381,4439,3.381,4440,3.381,4441,5.092,4442,3.381,4443,3.381,4444,3.381,4445,3.381,4446,3.381,4447,5.092,4448,3.381,4449,3.381,4450,3.381,4451,3.381,4452,3.381,4453,3.381,4454,6.815,4455,3.381,4456,5.092,4457,3.381,4458,3.381,4459,3.381,4460,3.381,4461,5.092,4462,3.381]],["title/modules/SelectModule.html",[343,1.155,4463,3.646]],["body/modules/SelectModule.html",[3,0.33,4,0.34,10,0.258,25,2.568,26,0.007,27,3.738,28,4.632,29,4.632,30,4.632,31,4.988,32,1.411,152,0.345,154,0.559,166,1.187,167,0.284,168,0.258,198,1.207,205,2.474,304,2.566,340,0.004,341,0.005,342,0.004,343,1.428,345,2.465,346,2.365,347,3.491,348,2.574,349,3.416,356,3.278,357,2.414,358,2.142,361,2.617,362,2.183,630,3.695,631,2.823,636,4.778,1168,7.543,1169,4.778,1170,4.51,1181,4.778,2159,6.099,2167,5.113,3252,6.711,4463,7.133,4464,5.562,4465,5.562,4466,5.562,4467,6.243,4468,5.562,4469,5.562,4470,5.562,4471,6.243,4472,5.562,4473,6.243]],["title/components/SignupComponent.html",[0,0.31,305,1.322]],["body/components/SignupComponent.html",[0,0.395,1,0.962,2,1.03,3,0.194,4,0.2,5,0.773,7,1.031,8,0.996,9,1.548,10,0.152,12,0.415,17,1.371,20,2.184,21,0.93,24,0.84,26,0.007,32,0.568,33,2.264,34,1.907,37,1.419,39,0.39,40,0.661,42,1.327,45,1.031,46,1.481,48,1.443,54,0.838,65,1.395,68,0.758,70,1.165,72,1.203,84,0.609,85,2.774,89,0.794,90,1.178,100,0.78,101,1.007,102,0.552,119,4.423,121,0.996,124,2.184,127,1.419,129,0.946,131,1.662,142,2.54,143,2.345,152,0.277,153,1.661,154,0.329,156,1.127,166,0.698,167,0.134,168,0.152,198,0.71,199,1.101,200,0.786,201,1.548,202,1.959,203,1.031,204,1.031,205,0.93,206,1.993,207,0.93,208,0.979,209,1.874,210,0.962,211,0.979,212,2.3,213,0.979,214,1.471,215,1.993,216,0.979,217,1.383,218,2.36,219,0.979,220,0.979,221,1.031,222,0.962,223,1.521,224,0.979,225,1.031,226,0.962,227,1.031,228,0.946,229,0.93,230,1.71,231,1.806,232,0.946,233,0.962,234,0.962,235,0.946,236,1.031,237,0.979,238,0.979,239,2.125,240,0.979,241,0.962,242,0.979,243,0.979,244,0.979,245,0.962,246,1.031,247,0.946,248,0.979,249,1.031,250,0.962,251,1.031,252,0.962,253,0.946,254,1.101,255,1.031,256,0.962,257,1.031,258,0.946,259,0.962,260,1.031,261,0.962,262,1.031,263,1.303,264,1.031,265,0.962,266,1.574,267,1.031,268,0.946,269,1.031,270,0.962,271,1.031,272,2.29,273,1.031,274,1.685,275,2.248,276,0.962,277,0.914,278,1.031,279,0.962,280,1.031,281,0.962,282,1.031,283,0.93,284,1.031,285,0.946,286,0.962,287,1.031,288,0.962,289,1.744,290,1.031,291,0.946,292,0.962,293,1.891,294,0.962,295,0.979,296,0.799,297,0.979,298,0.979,299,0.962,300,0.979,301,0.979,302,0.979,303,1.031,304,0.946,305,1.86,306,1.031,307,0.962,308,2.279,309,0.962,310,1.031,311,0.962,312,1.031,313,0.979,314,0.962,315,0.962,316,1.031,317,0.962,318,1.031,319,0.962,320,1.031,321,0.962,322,0.899,323,0.899,324,0.93,325,1.031,326,0.946,327,1.031,328,0.946,329,1.031,330,0.946,331,1.031,332,0.946,333,1.031,334,0.946,335,1.013,336,1.031,337,0.946,338,1.013,339,1.031,340,0.002,341,0.004,342,0.002,373,2.184,485,2.051,489,5.374,491,1.494,492,3.413,524,1.603,527,2.41,534,1.395,535,2.811,581,3.318,585,2.509,588,4.413,589,1.661,596,4.695,598,4.468,601,5.268,602,4.221,603,1.496,625,4.628,627,3.28,640,3.272,700,2.874,705,3.553,706,3.008,719,3.272,736,7.027,963,3.413,964,3.896,968,4.001,980,3.059,981,1.97,982,1.42,1019,4.647,1022,3.659,1060,3.28,1061,2.642,1062,4.647,1067,2.312,1068,2.312,1106,1.285,1598,2.312,1684,2.874,1835,3.409,1878,4.647,2191,4.221,2206,5.268,3453,4.824,3454,4.435,3455,5.571,3456,6.199,3462,5.73,3463,5.73,3464,5.73,3466,3.272,3467,3.272,3470,5.268,3475,3.008,3476,3.008,3477,3.008,3478,3.272,3480,3.272,3482,3.272,3483,3.008,4474,3.272,4475,5.415,4476,5.415,4477,3.673,4478,3.673,4479,3.719,4480,3.673,4481,3.673,4482,3.673,4483,3.673,4484,3.673,4485,3.673,4486,3.673,4487,3.673,4488,3.673,4489,3.673,4490,3.673,4491,3.673,4492,3.673,4493,3.673,4494,3.673,4495,3.673,4496,3.673]],["title/components/SignupFormComponent.html",[0,0.31,307,1.322]],["body/components/SignupFormComponent.html",[0,0.445,1,0.867,2,0.953,3,0.175,4,0.18,5,0.696,7,0.93,8,0.898,9,1.396,10,0.137,12,0.374,17,1.269,20,2.021,21,0.838,22,2.734,24,0.757,26,0.007,32,1.043,33,2.256,34,1.898,37,1.313,39,0.352,40,0.611,42,1.354,45,1.404,46,1.425,48,2.224,51,1.428,54,0.775,57,3.667,65,1.291,68,0.698,69,0.651,70,1.204,72,0.937,88,1.407,89,1.161,90,1.467,100,0.871,101,0.998,102,0.616,119,4.778,121,1.152,127,1.313,129,0.853,131,2.829,142,2.662,143,1.483,147,2.005,152,0.265,154,0.297,155,1.335,166,0.63,167,0.121,168,0.137,188,0.875,198,0.64,199,1.019,200,0.708,201,1.396,202,1.86,203,0.93,204,0.93,205,0.838,206,1.893,207,0.838,208,0.882,209,1.595,210,0.867,211,0.882,212,2.222,213,0.882,214,1.383,215,1.893,216,0.882,217,1.331,218,2.289,219,0.882,220,0.882,221,0.93,222,0.867,223,1.407,224,0.882,225,0.93,226,0.867,227,0.93,228,0.853,229,0.838,230,1.658,231,1.698,232,0.853,233,0.867,234,0.867,235,0.853,236,0.93,237,0.882,238,0.882,239,2.034,240,0.882,241,0.867,242,0.882,243,0.882,244,0.882,245,0.867,246,0.93,247,0.853,248,0.882,249,0.93,250,0.867,251,0.93,252,0.867,253,0.853,254,1.019,255,0.93,256,0.867,257,0.93,258,0.853,259,0.867,260,0.93,261,0.867,262,0.93,263,1.206,264,0.93,265,0.867,266,1.48,267,0.93,268,0.853,269,0.93,270,0.867,271,0.93,272,0.838,273,0.93,274,2.472,275,2.326,276,0.867,277,0.824,278,0.93,279,0.867,280,0.93,281,0.867,282,0.93,283,0.838,284,0.93,285,0.853,286,0.867,287,0.93,288,0.867,289,2.066,290,0.93,291,0.853,292,0.867,293,1.833,294,0.867,295,0.882,296,1.09,297,0.882,298,0.882,299,0.867,300,0.882,301,0.882,302,0.882,303,0.93,304,0.853,305,0.867,306,0.93,307,1.767,308,2.263,309,0.867,310,0.93,311,0.867,312,0.93,313,0.882,314,0.867,315,0.867,316,0.93,317,0.867,318,0.93,319,0.867,320,0.93,321,0.867,322,0.81,323,0.81,324,0.838,325,0.93,326,0.853,327,0.93,328,0.853,329,0.93,330,0.853,331,0.93,332,0.853,333,0.93,334,0.853,335,0.914,336,0.93,337,0.853,338,0.914,339,0.93,340,0.002,341,0.003,342,0.002,375,0.685,387,2.86,485,1.898,492,3.208,501,2.831,504,2.734,534,1.291,551,3.475,581,2.946,583,1.811,588,2.949,593,1.497,682,3.662,705,3.288,736,6.675,828,1.307,833,3.288,860,2.743,938,2.439,963,3.208,968,2.734,981,1.823,982,1.28,994,2.549,1022,1.706,1065,2.392,1072,2.172,1102,4.424,1113,2.172,1114,1.811,1124,4.627,1179,2.274,1347,4.368,1404,2.392,1426,2.741,1491,2.392,1560,2.274,1684,1.757,1835,3.154,1873,2.274,2144,5.831,2200,4.104,2670,2.392,3301,2.172,3455,4.244,3484,2.711,3486,2.534,3487,2.711,3488,5.386,3489,4.464,3490,4.464,3491,6.006,3492,6.788,3493,7.05,3494,5.386,3495,4.464,3496,7.05,3497,6.006,3498,4.464,3499,4.464,3500,4.464,3501,4.464,3507,1.073,3508,2.949,3510,2.949,3512,5.522,3513,2.949,3515,2.949,3516,2.949,3517,2.949,3519,2.949,3524,2.949,3525,2.949,3527,4.627,3528,5.386,3529,5.386,3532,5.386,3533,2.949,3535,2.949,3536,2.949,3537,2.949,3538,2.534,3539,2.949,3544,2.949,3545,2.949,3546,2.711,3549,2.949,3550,2.949,3551,5.386,3552,2.949,3553,2.711,3554,2.949,3559,2.949,3560,2.949,3561,2.949,3562,2.949,3564,2.949,3565,2.949,3566,4.104,4479,3.441,4497,7.05,4498,6.481,4499,6.045,4500,5.01,4501,3.31,4502,5.01,4503,3.31,4504,3.31,4505,3.31,4506,3.31,4507,3.31,4508,3.31,4509,3.31,4510,3.31,4511,3.31,4512,3.31,4513,3.31,4514,5.01,4515,3.31,4516,3.31,4517,3.31,4518,3.31,4519,3.31,4520,3.31,4521,3.31,4522,3.31,4523,3.31,4524,3.31,4525,3.31,4526,3.31,4527,3.31]],["title/directives/SlotHostDirective.html",[200,1.08,337,1.3]],["body/directives/SlotHostDirective.html",[0,0.507,2,1.743,3,0.364,4,0.375,10,0.284,12,0.777,24,1.575,26,0.007,33,1.856,39,0.731,40,1.007,41,4.662,46,1.543,48,2.2,68,0.706,70,1.046,72,1.543,100,0.992,101,0.808,102,0.702,116,4.254,152,0.252,154,0.617,167,0.252,168,0.284,200,1.765,323,1.685,337,2.126,338,2.277,340,0.005,341,0.005,342,0.005,392,2.718,463,1.738,481,4.863,649,6.759,664,2.886,968,3.731,1015,3.922,1278,4.38,1460,4.136,1519,7.996,1569,6.316,4528,7.874,4529,6.132,4530,8.252,4531,6.883,4532,6.883,4533,8.252,4534,6.883]],["title/classes/Sorter.html",[168,0.209,4535,4.133]],["body/classes/Sorter.html",[3,0.263,4,0.272,10,0.206,12,0.759,26,0.007,32,1.04,39,0.808,40,0.82,45,1.218,52,2.168,54,1.259,68,0.696,69,1.788,70,0.963,72,0.932,84,0.827,88,2.08,89,1.193,100,0.969,101,0.789,102,0.912,121,0.656,152,0.182,166,1.445,167,0.298,168,0.278,183,2.211,188,1.64,340,0.005,341,0.004,342,0.003,375,1.757,425,2.729,426,3.968,450,4.384,455,3.021,475,1.711,498,3.282,507,2.939,580,2.818,593,3.437,605,3.002,664,1.744,692,3.553,697,2.771,767,6.14,801,6.394,828,1.969,832,4.424,846,3.139,848,4.085,863,3.677,917,4.443,926,4.443,936,3.76,948,4.085,1000,2.571,1138,2.914,1145,5.504,1282,4.159,1482,4.443,1569,3.817,1591,5.818,1732,2.818,1796,4.41,1904,4.071,1905,3.817,1908,3.677,1917,3.273,1923,7.125,2146,4.085,2191,4.41,2266,5.504,2375,4.231,2706,3.603,2752,6.842,2767,5.504,3061,7.565,3070,5.987,4535,7.164,4536,4.085,4537,6.72,4538,6.72,4539,7.601,4540,6.72,4541,5.504,4542,5.504,4543,5.504,4544,4.987,4545,6.72,4546,4.987,4547,8.491,4548,6.72,4549,4.987,4550,6.499,4551,4.085,4552,4.987,4553,4.443,4554,4.987,4555,4.987,4556,4.987,4557,4.443,4558,4.443,4559,4.443,4560,4.987,4561,4.443,4562,4.443,4563,4.443,4564,6.72,4565,4.987,4566,4.987,4567,4.987,4568,4.987,4569,4.987,4570,6.72,4571,4.987,4572,8.134,4573,4.987,4574,4.987,4575,4.987,4576,4.987,4577,4.987,4578,4.987,4579,4.987,4580,4.987]],["title/interfaces/Symbol.html",[366,1.345,981,1.836]],["body/interfaces/Symbol.html",[3,0.366,4,0.378,10,0.287,12,0.783,26,0.007,39,0.737,40,1.011,68,0.759,69,1.932,73,3.273,101,1.147,102,0.957,107,4.551,167,0.254,340,0.005,341,0.005,342,0.005,366,1.849,368,2.991,372,5.214,534,2.135,859,4.763,981,3.504,1116,7.385,1293,6.344,1468,5.989,2342,6.789,2375,6.153,2376,5.989,4581,6.179,4582,7.385,4583,8.289,4584,8.289]],["title/modules/SymbolModule.html",[343,1.155,2160,3.312]],["body/modules/SymbolModule.html",[0,0.481,2,1.489,3,0.334,4,0.427,5,1.328,10,0.261,12,0.713,25,2.811,26,0.007,37,1.655,121,0.831,152,0.335,154,0.566,167,0.286,168,0.324,198,1.221,199,1.284,340,0.004,341,0.005,342,0.004,343,1.445,345,2.494,346,2.392,347,3.509,348,2.604,349,3.433,356,3.301,357,2.442,358,2.166,361,2.126,362,2.738,384,3.825,388,3.455,449,3.975,475,2.166,491,1.743,505,3.377,514,4.144,585,2.926,604,2.662,628,4.423,629,5.992,630,3.721,631,2.855,692,2.344,821,3.825,847,4.423,859,4.337,981,2.848,982,3.692,1105,2.855,1230,3.255,1956,3.975,2069,4.337,2160,6.317,2180,3.351,2376,4.562,2408,3.975,2434,6.401,2453,5.845,2454,4.337,2582,4.144,3293,4.144,3312,5.172,3859,4.833,4047,5.172,4414,6.975,4585,5.626,4586,5.626,4587,5.626,4588,5.626,4589,7.07,4590,6.315,4591,7,4592,3.69,4593,5.172,4594,5.172,4595,5.626,4596,5.626,4597,5.626,4598,5.626,4599,5.626,4600,5.626,4601,5.626,4602,5.626,4603,5.626,4604,5.626,4605,6.413,4606,5.626,4607,6.315]],["title/injectables/SymbolPipe.html",[594,1.442,4589,3.646]],["body/injectables/SymbolPipe.html",[3,0.458,4,0.36,10,0.273,12,0.744,17,1.67,26,0.007,39,0.701,54,1.244,68,0.565,69,1.821,70,0.836,88,1.871,89,0.968,100,0.95,101,1.106,102,0.672,152,0.317,154,0.591,167,0.241,168,0.273,188,1.405,199,1.636,340,0.004,341,0.005,342,0.004,463,1.297,594,2.298,604,2.78,647,2.982,664,2.812,666,4.4,682,4.871,697,2.719,981,3.527,982,3.581,1230,4.655,1236,5.062,1242,5.81,1956,5.062,2375,5.062,2434,5.523,4367,5.401,4589,5.81,4606,5.875,4608,5.875,4609,8.041,4610,8.041,4611,8.041,4612,6.594,4613,8.041,4614,5.875,4615,6.594]],["title/injectables/SymbolService.html",[594,1.442,982,1.951]],["body/injectables/SymbolService.html",[3,0.227,4,0.235,9,1.815,10,0.178,12,0.486,26,0.007,39,0.747,40,0.741,45,1.377,46,1.64,54,0.94,68,0.802,69,1.9,70,1.179,72,1.135,84,0.714,87,3.301,88,2.041,89,1.287,90,1.662,100,1.264,101,1.127,102,0.895,107,5.014,121,1.173,135,3.678,138,2.924,152,0.279,154,0.386,166,1.338,167,0.157,168,0.178,183,1.252,188,1.407,201,1.815,340,0.003,341,0.004,342,0.003,463,1.384,491,1.676,534,2.452,537,2.825,594,1.735,647,1.946,700,4.656,717,4.647,801,6.474,804,3.322,914,2.284,941,3.981,981,3.615,982,2.348,1711,3.631,1796,3.985,1908,4.574,1960,5.52,2374,8.062,2375,3.822,2422,4.647,2425,5.409,2426,6.806,2428,6.806,2429,7.448,2431,6.806,2434,6.339,2435,6.806,2437,6.806,2438,6.257,2439,5.847,2440,6.257,2442,5.409,2444,5.409,2448,5.409,2449,5.409,2450,5.409,2453,5.742,2454,6.026,4591,4.647,4614,3.835,4616,3.835,4617,6.072,4618,4.304,4619,4.304,4620,4.304,4621,4.304,4622,4.304,4623,4.304,4624,4.304,4625,4.304,4626,4.304,4627,4.304,4628,4.304,4629,4.304,4630,4.304,4631,4.304,4632,4.304,4633,4.304,4634,4.304,4635,4.304,4636,6.072,4637,4.304,4638,4.304,4639,4.304,4640,4.304,4641,4.304,4642,8.056,4643,4.304,4644,4.304,4645,4.304,4646,4.304,4647,3.835,4648,4.304,4649,4.304,4650,4.304]],["title/components/TabComponent.html",[0,0.31,309,1.322]],["body/components/TabComponent.html",[0,0.422,1,1.08,2,1.119,3,0.218,4,0.225,5,0.867,7,1.157,8,1.118,10,0.17,12,0.465,21,1.043,24,0.943,26,0.007,32,1.063,33,2.273,34,1.915,37,1.542,39,0.438,40,0.718,42,1.482,46,1.101,54,0.911,65,1.516,68,0.743,69,1.474,70,1.135,84,0.977,88,1.37,89,0.864,90,1.281,100,0.594,101,1.018,102,0.42,121,0.774,123,3.583,127,1.542,129,1.061,142,2.325,143,2.512,152,0.215,154,0.369,167,0.151,168,0.17,198,0.797,199,1.197,200,0.882,202,2.067,203,1.157,204,1.157,205,1.043,206,2.104,207,1.043,208,1.098,209,0.975,210,1.08,211,1.098,212,2.382,213,1.098,214,1.571,215,2.104,216,1.098,217,1.44,218,2.436,219,1.098,220,1.098,221,1.157,222,1.08,223,1.653,224,1.098,225,1.157,226,1.08,227,1.157,228,1.061,229,1.043,230,1.765,231,1.929,232,1.061,233,1.08,234,1.08,235,1.061,236,1.157,237,1.098,238,1.098,239,2.225,240,1.098,241,1.08,242,1.098,243,1.098,244,1.098,245,1.08,246,1.157,247,1.061,248,1.098,249,1.157,250,1.08,251,1.157,252,1.08,253,1.061,254,1.197,255,1.157,256,1.08,257,1.157,258,1.061,259,1.08,260,1.157,261,1.08,262,1.157,263,0.992,264,1.157,265,1.08,266,1.681,267,1.157,268,1.061,269,1.157,270,1.08,271,1.157,272,1.043,273,1.157,274,1.08,275,1.061,276,1.08,277,1.026,278,1.157,279,1.08,280,1.157,281,1.08,282,1.157,283,1.043,284,1.157,285,1.061,286,1.08,287,1.157,288,1.08,289,1.118,290,1.157,291,1.061,292,1.08,293,1.952,294,1.08,295,1.098,296,0.896,297,1.098,298,1.098,299,1.08,300,1.098,301,1.098,302,1.098,303,1.157,304,1.061,305,1.08,306,1.157,307,1.08,308,1.118,309,1.963,310,1.157,311,2.347,312,1.157,313,1.098,314,1.08,315,1.08,316,1.157,317,1.08,318,1.157,319,1.08,320,1.157,321,1.08,322,1.009,323,1.009,324,1.043,325,1.157,326,1.061,327,1.157,328,1.061,329,1.157,330,1.061,331,1.157,332,1.061,333,1.157,334,1.061,335,1.137,336,1.157,337,1.061,338,1.137,339,1.157,340,0.003,341,0.004,342,0.003,375,1.218,387,3.129,392,1.627,397,1.061,463,1.351,485,2.23,524,2.512,534,1.93,578,5.349,862,3.566,907,5.567,969,5.2,976,4.958,994,3.159,1015,2.798,1108,3.863,1136,2.95,1203,3.863,1393,4.821,1416,4.505,1478,3.671,1480,5.413,1680,3.706,2923,6.674,3454,6.136,4651,3.671,4652,7.788,4653,5.244,4654,5.887,4655,7.492,4656,7.924,4657,5.887,4658,4.121,4659,5.887,4660,4.121,4661,4.121,4662,4.121,4663,4.121,4664,4.121,4665,4.121,4666,5.887,4667,4.121,4668,3.671,4669,4.121,4670,4.121]],["title/components/TabsComponent.html",[0,0.31,311,1.322]],["body/components/TabsComponent.html",[0,0.479,1,1.036,2,1.087,3,0.209,4,0.216,5,0.832,7,1.111,8,1.073,9,1.667,10,0.163,12,0.446,17,1.447,21,1.001,24,0.905,26,0.007,32,0.612,33,2.27,34,1.912,37,1.498,39,0.42,40,0.697,42,1.255,45,0.634,54,0.884,65,1.472,68,0.668,69,1.32,70,1.062,73,2.257,84,0.656,86,3.925,88,1.711,89,1.079,90,1.599,100,0.967,101,1.042,102,0.684,121,0.883,124,1.596,127,1.498,129,1.019,152,0.245,154,0.354,166,1.087,167,0.145,168,0.163,183,1.15,188,0.691,198,0.765,199,1.365,200,0.846,201,1.667,202,2.029,203,1.111,204,1.111,205,1.001,206,2.065,207,1.001,208,1.054,209,0.936,210,1.036,211,1.054,212,2.353,213,1.054,214,1.535,215,2.065,216,1.054,217,1.42,218,2.409,219,1.054,220,1.054,221,1.111,222,1.036,223,1.605,224,1.054,225,1.111,226,1.036,227,1.111,228,1.019,229,1.001,230,1.745,231,1.885,232,1.019,233,1.036,234,1.036,235,1.019,236,1.111,237,1.054,238,1.054,239,2.19,240,1.054,241,1.036,242,1.054,243,1.054,244,1.054,245,1.036,246,1.111,247,1.019,248,1.054,249,1.111,250,1.036,251,1.111,252,1.036,253,1.019,254,1.495,255,1.111,256,1.036,257,1.111,258,1.019,259,1.036,260,1.111,261,1.036,262,1.111,263,0.952,264,1.111,265,1.036,266,1.643,267,1.111,268,1.019,269,1.111,270,1.036,271,1.111,272,1.001,273,1.111,274,1.036,275,1.019,276,1.036,277,0.985,278,1.111,279,1.036,280,1.111,281,1.036,282,1.111,283,1.001,284,1.111,285,1.019,286,1.036,287,1.111,288,1.036,289,1.073,290,1.111,291,1.019,292,1.036,293,1.93,294,1.036,295,1.054,296,0.86,297,1.054,298,1.054,299,1.036,300,1.054,301,1.054,302,1.054,303,1.111,304,1.019,305,1.036,306,1.111,307,1.036,308,1.073,309,2.356,310,1.111,311,2.13,312,1.111,313,1.054,314,1.036,315,1.036,316,1.111,317,1.036,318,1.111,319,1.036,320,1.111,321,1.036,322,0.968,323,0.968,324,1.001,325,1.111,326,1.019,327,1.111,328,1.019,329,1.111,330,1.019,331,1.111,332,1.019,333,1.111,334,1.019,335,1.091,336,1.111,337,1.019,338,1.091,339,1.111,340,0.003,341,0.004,342,0.003,397,1.472,448,3.127,463,0.778,475,1.357,491,1.091,534,1.472,564,2.039,585,2.649,595,2.234,604,1.667,605,1.562,650,3.229,860,1.498,914,2.099,969,5.118,970,5.116,976,4.557,983,6.021,1108,4.825,1118,4.023,1135,3.598,1295,2.039,1393,4.681,1528,3.027,1652,2.716,1726,3.34,1871,4.374,2491,3.239,2930,3.523,3301,3.751,3662,3.523,4053,5.979,4233,3.239,4652,7.16,4671,3.523,4672,5.715,4673,5.715,4674,6.711,4675,7.788,4676,5.715,4677,7.352,4678,7.352,4679,5.715,4680,5.715,4681,5.715,4682,5.092,4683,3.955,4684,3.955,4685,5.715,4686,7.352,4687,3.955,4688,5.715,4689,3.955,4690,5.715,4691,3.955,4692,3.955,4693,5.715,4694,3.523,4695,3.955,4696,3.955,4697,3.955,4698,3.955,4699,3.955,4700,3.955,4701,3.955,4702,3.955,4703,3.955,4704,3.955,4705,3.955,4706,3.955,4707,3.955,4708,3.955,4709,3.955,4710,3.955,4711,3.955,4712,5.715,4713,3.955,4714,3.955,4715,3.955,4716,5.715]],["title/components/TinymceComponent.html",[0,0.31,315,1.322]],["body/components/TinymceComponent.html",[0,0.352,1,0.795,2,0.892,3,0.16,4,0.165,5,0.638,6,1.564,7,0.852,8,0.823,9,1.279,10,0.125,12,0.343,13,2.649,15,4.04,17,1.187,18,3.606,21,0.768,24,0.694,25,1.549,26,0.007,27,2.07,28,3.134,29,2.565,30,3.134,31,2.565,32,0.997,33,2.247,34,1.89,35,2.951,37,1.228,39,0.322,40,0.572,41,3.935,42,1.435,43,3.606,44,3.606,45,1.474,46,1.377,47,2.35,54,0.725,55,4.208,58,3.077,59,4.056,62,2.84,64,3.903,65,1.208,68,0.724,69,1.448,70,1.166,72,0.877,84,1.156,85,2.779,89,1.163,90,1.725,95,2.951,98,2.104,100,0.929,101,0.993,102,0.657,103,2.951,113,2.951,115,3.22,116,2.417,117,1.776,121,1.144,123,2.59,124,1.224,125,3.588,127,1.228,129,0.782,133,2.545,135,2.84,136,3.84,138,2.254,143,2.273,152,0.337,153,1.372,154,0.272,155,1.224,166,0.577,167,0.111,168,0.125,173,6.03,175,2.323,181,3.077,184,2.486,186,1.481,188,0.819,191,2.323,193,1.714,194,1.91,198,0.587,199,0.954,200,0.649,201,1.279,202,1.778,203,0.852,204,0.852,205,0.768,206,1.81,207,0.768,208,0.809,209,0.718,210,0.795,211,0.809,212,2.155,213,0.809,214,1.311,215,1.81,216,0.809,217,1.286,218,2.226,219,0.809,220,0.809,221,0.852,222,0.795,223,1.317,224,0.809,225,0.852,226,0.795,227,0.852,228,0.782,229,0.768,230,1.613,231,1.609,232,0.782,233,0.795,234,0.795,235,0.782,236,0.852,237,0.809,238,0.809,239,1.956,240,0.809,241,0.795,242,0.809,243,0.809,244,0.809,245,0.795,246,0.852,247,0.782,248,0.809,249,0.852,250,0.795,251,0.852,252,0.795,253,1.476,254,0.954,255,0.852,256,0.795,257,0.852,258,0.782,259,0.795,260,0.852,261,0.795,262,0.852,263,0.73,264,0.852,265,0.795,266,1.402,267,0.852,268,0.782,269,0.852,270,0.795,271,0.852,272,0.768,273,0.852,274,0.795,275,0.782,276,0.795,277,0.755,278,0.852,279,0.795,280,0.852,281,0.795,282,0.852,283,0.768,284,0.852,285,0.782,286,0.795,287,0.852,288,0.795,289,0.823,290,0.852,291,0.782,292,0.795,293,1.784,294,0.795,295,0.809,296,1.02,297,0.809,298,0.809,299,0.795,300,0.809,301,0.809,302,0.809,303,0.852,304,0.782,305,0.795,306,0.852,307,0.795,308,0.823,309,0.795,310,0.852,311,0.795,312,0.852,313,0.809,314,0.795,315,1.929,316,0.852,317,0.795,318,0.852,319,0.795,320,0.852,321,0.795,322,0.743,323,0.743,324,0.768,325,0.852,326,0.782,327,0.852,328,0.782,329,0.852,330,0.782,331,0.852,332,0.782,333,0.852,334,0.782,335,1.294,336,0.852,337,0.782,338,0.837,339,0.852,340,0.002,341,0.003,342,0.002,397,1.476,432,2.953,440,1.91,463,0.597,485,1.776,498,1.891,505,2.022,524,2.273,579,2.951,596,4.2,597,1.521,598,2.951,604,1.279,682,3.903,764,1.91,792,7.249,822,2.649,834,2.262,862,2.84,947,1.66,994,1.977,997,3.59,1015,2.228,1023,2.951,1106,1.64,1113,3.077,1118,3.134,1143,3.588,1216,1.705,1269,2.486,1270,2.084,1306,2.704,1347,3.387,1437,4.384,1560,3.22,1817,2.704,2145,3.588,2220,3.588,2298,2.486,2299,2.704,2466,5.741,2574,5.705,2575,4.692,2626,2.704,2948,3.84,2949,3.84,3020,2.486,3314,2.486,3412,3.84,3444,4.177,3580,6.205,3583,5.741,3591,4.177,3609,2.486,3848,3.22,3876,3.84,3985,3.387,4592,4.303,4675,4.177,4717,2.704,4718,5.232,4719,4.688,4720,5.729,4721,4.688,4722,4.688,4723,7.363,4724,3.035,4725,6.444,4726,4.688,4727,4.177,4728,4.688,4729,3.588,4730,3.035,4731,4.688,4732,3.035,4733,4.688,4734,4.688,4735,3.035,4736,4.177,4737,3.035,4738,3.035,4739,4.688,4740,4.688,4741,4.688,4742,4.688,4743,5.729,4744,3.035,4745,3.035,4746,3.035,4747,3.035,4748,3.035,4749,3.035,4750,3.035,4751,3.035,4752,3.035,4753,3.035,4754,3.035,4755,3.035,4756,3.035,4757,3.035,4758,3.035,4759,3.035,4760,3.035,4761,3.035,4762,3.035,4763,3.035,4764,3.035,4765,3.035,4766,3.035,4767,3.035,4768,3.035,4769,3.035,4770,3.035,4771,3.035,4772,4.177,4773,3.035,4774,3.035,4775,3.035,4776,3.035,4777,3.035,4778,3.035,4779,3.035,4780,4.688,4781,3.035,4782,3.035,4783,3.035,4784,3.035,4785,3.035,4786,3.035,4787,3.035,4788,4.688,4789,3.035,4790,3.035,4791,3.035,4792,3.035,4793,3.035,4794,3.035,4795,3.035,4796,3.035]],["title/modules/TinymceModule.html",[343,1.155,4797,3.646]],["body/modules/TinymceModule.html",[3,0.379,4,0.391,10,0.296,25,2.368,26,0.007,152,0.309,154,0.642,166,1.364,167,0.309,168,0.296,198,1.387,315,2.617,340,0.005,341,0.006,342,0.005,343,1.64,345,2.831,346,2.716,347,3.708,348,2.956,349,3.628,356,3.565,357,2.772,358,2.46,360,4.777,362,2.508,4797,7.005,4798,6.388,4799,6.388,4800,6.388,4801,6.388,4802,7.17,4803,6.388,4804,7.17]],["title/components/ToggleComponent.html",[0,0.31,317,1.322]],["body/components/ToggleComponent.html",[0,0.487,1,1.078,2,1.118,3,0.217,4,0.224,5,1.443,7,1.155,8,1.116,10,0.17,12,0.464,17,1.489,18,4.32,21,1.042,24,0.941,25,1.942,26,0.007,27,2.596,28,3.755,29,3.217,30,3.755,31,3.217,32,0.91,33,2.273,34,1.915,37,1.541,39,0.437,40,0.717,42,1.54,43,4.32,45,1.48,54,0.91,58,3.859,59,4.713,62,3.562,65,1.515,68,0.587,69,1.157,70,1.099,72,1.1,89,1.099,90,1.629,95,3.702,97,4.501,98,1.961,99,4.039,100,0.847,101,1.036,102,0.6,103,3.702,113,3.702,115,4.039,121,1.141,127,1.541,129,1.06,138,2.057,152,0.215,154,0.369,155,1.66,167,0.151,168,0.17,181,4.503,193,2.325,194,2.59,198,0.796,199,1.196,200,0.88,202,2.066,203,1.155,204,1.155,205,1.042,206,2.102,207,1.042,208,1.097,209,0.974,210,1.078,211,1.097,212,2.381,213,1.097,214,1.57,215,2.102,216,1.097,217,1.439,218,2.435,219,1.097,220,1.097,221,1.155,222,1.078,223,1.651,224,1.097,225,1.155,226,1.078,227,1.155,228,1.06,229,1.042,230,1.764,231,1.927,232,1.06,233,1.078,234,1.078,235,1.06,236,1.155,237,1.097,238,1.097,239,2.224,240,1.097,241,1.078,242,1.097,243,1.097,244,1.097,245,1.078,246,1.155,247,1.06,248,1.097,249,1.155,250,1.078,251,1.155,252,1.078,253,1.06,254,1.196,255,1.155,256,1.078,257,1.155,258,1.06,259,1.078,260,1.155,261,1.078,262,1.155,263,0.99,264,1.155,265,1.078,266,1.68,267,1.155,268,1.06,269,1.155,270,1.078,271,1.155,272,1.042,273,1.155,274,1.078,275,1.06,276,1.078,277,1.024,278,1.155,279,1.078,280,1.155,281,1.078,282,1.155,283,1.042,284,1.155,285,1.06,286,1.078,287,1.155,288,1.078,289,1.116,290,1.155,291,1.06,292,1.078,293,1.951,294,1.078,295,1.097,296,0.895,297,1.097,298,1.097,299,1.078,300,1.097,301,1.097,302,1.097,303,1.155,304,1.06,305,1.078,306,1.155,307,1.078,308,1.116,309,1.078,310,1.155,311,1.078,312,1.155,313,1.097,314,1.078,315,1.078,316,1.155,317,2.158,318,1.155,319,1.078,320,1.155,321,1.078,322,1.007,323,1.007,324,1.042,325,1.155,326,1.06,327,1.155,328,1.06,329,1.155,330,1.06,331,1.155,332,1.06,333,1.155,334,1.06,335,1.135,336,1.155,337,1.06,338,1.135,339,1.155,340,0.003,341,0.004,342,0.003,371,3.103,375,1.754,454,3.436,491,1.623,551,4.371,842,5.172,896,5.142,1278,3.121,2422,4.501,2501,4.816,3149,4.816,3324,4.816,3412,3.37,3609,3.37,3624,3.859,4805,3.666,4806,5.88,4807,5.88,4808,4.115,4809,4.115,4810,4.115,4811,4.115,4812,5.88,4813,4.115,4814,4.115,4815,5.88,4816,4.115,4817,4.115]],["title/injectables/TypeConfigService.html",[594,1.442,1162,2.949]],["body/injectables/TypeConfigService.html",[3,0.145,4,0.15,5,0.911,10,0.113,12,0.31,21,1.097,26,0.007,32,1.491,34,1.593,39,0.291,40,0.529,42,1.703,45,1.568,48,1.155,51,1.869,54,0.944,68,0.78,69,1.693,70,0.999,73,1.711,84,0.719,88,1.419,89,1.289,90,0.597,98,1.238,100,0.879,101,1.075,102,0.622,121,0.972,152,0.288,154,0.246,156,0.842,166,0.824,167,0.1,168,0.113,188,1.439,207,1.682,214,1.615,217,0.757,228,2.283,229,1.997,230,1.908,232,1.818,254,1.817,266,1.06,314,1.135,340,0.002,341,0.003,342,0.002,371,1.959,375,1.262,381,0.77,382,2.843,386,2.352,387,1.711,397,1.116,426,3.444,432,2.233,446,1.982,448,2.37,450,2.691,456,4.407,457,3.859,463,0.539,484,3.13,498,2.461,517,2.975,524,2.516,534,1.116,551,2.233,564,1.414,571,4.125,594,1.238,599,1.8,604,1.156,605,2.787,647,1.24,655,3.337,700,2.299,705,2.843,813,3.548,815,3.548,817,3.548,821,4.641,822,3.988,842,2.447,850,2.008,933,2.099,936,3.328,945,2.532,965,2.37,981,2.219,982,2.358,985,3.138,1021,2.975,1026,1.456,1109,3.84,1118,2.37,1119,3.881,1135,2.727,1140,3.548,1162,2.532,1175,2.624,1176,2.624,1177,1.982,1184,5.546,1193,2.843,1202,2.532,1225,2.727,1226,1.982,1235,5.754,1247,2.444,1259,2.444,1275,3.859,1278,5.068,1349,4.316,1428,5.911,1455,5.028,1468,3.13,1579,1.8,1586,1.8,1698,1.982,1715,2.826,1746,1.884,1810,1.982,1829,4.632,1832,5.817,1833,6.837,1834,6.579,1836,3.859,1841,6.181,1842,3.548,1900,2.727,1928,2.624,1994,2.975,2030,5.1,2337,3.13,2434,2.975,2439,2.099,2473,3.316,2559,6.181,2579,2.099,2858,3.859,3084,2.099,3106,3.859,3198,6.585,3682,5.546,3684,2.37,3744,3.859,3758,7.463,4557,5.434,4818,4.332,4819,4.332,4820,6.099,4821,4.332,4822,6.099,4823,6.099,4824,2.743,4825,2.743,4826,4.332,4827,2.743,4828,4.332,4829,4.332,4830,2.743,4831,2.743,4832,2.743,4833,4.332,4834,4.332,4835,4.332,4836,2.743,4837,2.743,4838,6.289,4839,6.099,4840,4.332,4841,4.332,4842,6.099,4843,7.662,4844,6.099,4845,7.059,4846,7.059,4847,7.059,4848,4.332,4849,4.332,4850,4.332,4851,4.332,4852,4.332,4853,4.332,4854,4.332,4855,4.332,4856,4.332,4857,6.641,4858,6.099,4859,4.332,4860,4.332,4861,4.332,4862,4.332,4863,2.743,4864,2.246,4865,4.332,4866,2.743,4867,2.743,4868,2.743,4869,2.743,4870,2.743,4871,2.444,4872,2.743,4873,2.743,4874,2.743,4875,2.743,4876,2.743,4877,2.743]],["title/modules/UiModule.html",[343,1.155,355,2.851]],["body/modules/UiModule.html",[3,0.311,4,0.321,10,0.243,25,1.943,26,0.007,152,0.35,154,0.527,166,1.119,167,0.274,168,0.243,198,1.138,340,0.004,341,0.005,342,0.004,343,1.346,345,2.323,346,2.228,347,2.426,348,2.426,349,3.324,355,5.682,356,3.157,357,2.275,358,2.018,361,2.521,362,2.057,2147,6.658,2156,6.362,2157,6.362,2158,5.872,2159,6.362,2160,6.362,2162,4.818,2167,4.818,2168,4.25,2171,4.818,2172,4.818,3252,6.658,3259,5.241,3901,7.004,4463,7.004,4470,5.241,4878,5.241,4879,5.883,4880,5.241,4881,5.241,4882,5.883,4883,5.883,4884,5.241,4885,5.883]],["title/interfaces/Update.html",[366,1.345,834,1.993]],["body/interfaces/Update.html",[0,0.253,3,0.218,4,0.225,10,0.17,12,0.465,26,0.007,32,1.343,39,0.438,40,0.838,45,1.453,46,1.101,48,1.099,52,1.57,68,0.802,69,1.817,72,1.101,73,2.326,83,2.979,84,1.243,88,2.084,89,0.605,98,2.265,102,0.914,131,1.266,133,2.713,142,1.628,143,1.744,152,0.323,154,0.369,166,1.307,167,0.215,168,0.17,183,1.2,188,1.661,193,2.33,209,1.773,217,1.482,293,2.211,296,1.887,340,0.003,341,0.004,342,0.003,366,1.099,367,2.067,368,1.779,371,1.865,375,1.55,381,1.158,386,1.158,388,4.51,397,1.93,455,4.162,462,2.429,465,2.326,468,1.821,488,2.067,491,1.625,501,3.882,519,3.568,584,2.498,594,1.683,596,3.759,597,2.067,604,1.739,650,3.328,653,2.832,680,3.328,694,4.86,697,3.399,698,3.352,718,4.086,722,2.706,724,2.012,744,4.509,756,4.54,757,4.918,764,2.596,789,2.186,834,3.719,856,4.509,860,1.562,881,2.067,887,2.41,914,3.646,936,2.277,941,3.184,965,2.256,994,2.483,1004,4.824,1023,4.325,1055,3.378,1105,1.865,1109,2.952,1131,2.498,1216,2.883,1234,3.328,1270,2.832,1414,3.708,1425,4.824,1613,4.824,1679,2.189,1711,1.96,1712,2.832,1713,2.832,1714,2.33,1715,1.911,1716,2.706,1717,2.706,1718,3.882,1722,2.873,1724,3.378,1726,3.442,1727,4.503,1728,3.378,1732,2.33,1737,3.156,1738,3.378,1740,2.498,1741,3.442,1745,3.156,1746,2.832,1748,5.147,1763,3.328,1775,5.627,1776,3.378,1777,3.378,1778,3.378,1783,4.824,1785,2.979,1789,3.378,1790,3.378,1791,3.378,1792,3.378,1793,3.378,1794,6.492,1795,2.596,1796,2.706,1797,3.378,1871,4.508,1970,5.147,1971,2.596,1974,4.255,1977,2.979,3686,4.824,4198,2.832,4297,3.378,4309,3.378,4313,5.247,4314,5.247,4316,5.247,4318,3.674,4321,3.674,4323,3.674,4324,3.674,4325,3.674,4327,3.674,4328,3.674,4331,3.674,4332,5.247,4333,5.247,4334,5.247,4335,5.247,4336,6.492,4337,3.674,4338,6.677,4339,3.674,4340,3.674,4341,3.674,4342,3.674,4343,3.674,4344,3.674,4345,3.674,4346,3.674,4347,3.674,4348,3.674,4349,3.674,4350,3.674,4351,3.674,4352,5.247,4353,6.121,4354,3.674,4355,5.247,4356,3.674,4357,3.674]],["title/interfaces/Upload.html",[322,1.235,366,1.345]],["body/interfaces/Upload.html",[0,0.212,3,0.182,4,0.188,10,0.305,12,0.39,26,0.007,32,1.242,39,0.367,40,0.631,46,1.687,48,0.921,52,2.405,68,0.736,69,1.579,70,0.438,72,1.288,84,1.483,88,1.443,89,0.759,98,0.987,102,0.89,117,1.308,121,0.454,131,1.588,133,3.17,135,3.134,142,1.364,143,2.184,152,0.319,154,0.309,166,1.57,167,0.227,168,0.143,183,1.804,188,1.688,209,1.224,214,2.177,217,1.442,230,0.703,253,0.89,254,0.703,293,1.395,296,0.751,322,2.164,340,0.002,341,0.003,342,0.002,366,1.653,367,1.731,368,1.49,370,2.971,371,1.562,372,1.89,375,1.425,381,0.97,386,1.934,397,1.9,424,2.018,425,3.393,432,1.78,450,1.731,455,4.468,462,2.557,463,0.679,465,2.043,468,1.525,482,4.481,488,1.731,501,1.951,504,1.562,519,2.092,525,5.67,526,2.372,536,2.923,547,3.504,548,5.641,570,2.643,571,5.451,584,2.092,592,2.266,594,1.478,603,0.804,605,2.72,650,2.923,664,1.208,680,3.504,692,2.737,694,3.292,723,2.174,724,2.524,741,2.643,756,3.757,764,2.174,770,3.134,789,1.282,832,3.68,834,2.449,860,1.308,881,1.731,903,2.524,908,2.804,938,1.393,941,1.601,947,4.036,965,1.89,1023,3.904,1090,4.336,1100,2.372,1105,1.562,1106,1.809,1107,4.137,1109,2.593,1114,1.89,1121,2.495,1128,1.601,1138,3.023,1148,2.948,1162,3.023,1184,2.372,1216,2.505,1426,2.83,1455,2.266,1561,2.266,1679,2.745,1711,1.641,1712,2.372,1713,2.372,1714,1.951,1715,1.601,1716,2.266,1717,2.266,1718,3.504,1726,3.624,1748,2.372,1753,2.372,1758,2.643,1763,4.374,1787,4.481,1908,1.89,1949,2.643,1950,5.08,1951,4.237,1952,4.237,1953,4.237,1954,4.237,1955,4.237,1956,2.174,1957,2.829,1958,2.829,1959,2.829,1960,2.495,1961,2.643,1962,2.829,1963,2.829,1964,4.237,1965,2.829,1966,4.481,1967,2.495,1968,2.829,1969,2.829,1970,4.73,1971,2.174,1972,3.959,1973,5.645,1974,3.737,1975,2.829,1976,2.829,1977,2.495,1978,2.829,1979,2.829,1980,5.08,1981,2.829,1982,5.08,1983,2.829,1984,2.829,1985,2.829,1986,2.495,1987,2.829,1988,2.829,1989,2.829,1990,2.829,1991,2.643,1992,2.829,1993,4.976,1994,2.372,1995,2.829,1996,4.237,1997,2.829,1998,4.237,1999,4.237,2000,2.829,2001,2.829,2002,2.829,2003,2.829,2004,4.237,2005,2.829,2006,2.643,2007,2.829,2008,2.372,2009,2.829,2010,6.341,2011,2.829,2012,2.829,2013,2.829,2014,2.829,2015,2.829,2016,5.08,2017,2.643,2018,2.829,2019,2.829,2020,4.237,2021,2.829,2022,4.237,2023,4.237,2024,4.237,2025,4.237,2026,5.08,2027,4.237,2028,4.237,2029,4.237,2030,2.495,2031,2.643,2032,2.829,2033,2.829,2034,2.829,2035,4.237,2036,2.829,2037,2.829,2038,2.829,2039,2.829,2040,2.829,2041,2.829,2042,2.829,2043,2.829,2044,2.829,2045,2.372,2046,2.829,2047,5.08,2048,2.829,2049,2.829,2050,2.372,2051,4.237,2052,2.829,2053,2.829,2054,2.829,2055,2.643,2056,2.829,2057,2.829,2058,2.829,2059,2.829,2060,2.829,2061,2.829,2062,2.829,2063,2.829,2064,2.829,2065,2.829,2066,2.829,2067,2.829,2068,2.829,2069,2.372,2070,2.829,2071,2.829,2072,2.829,2073,2.495,2074,2.829,2075,2.829,2076,2.829]],["title/components/UploadComponent.html",[0,0.31,319,1.322]],["body/components/UploadComponent.html",[0,0.423,1,0.776,2,0.875,3,0.156,4,0.161,5,0.623,7,0.832,8,0.803,10,0.285,12,0.334,17,1.165,21,0.75,24,0.677,26,0.007,32,0.873,33,2.245,34,1.888,37,1.205,39,0.315,40,0.561,42,1.714,45,1.104,46,1.055,48,1.226,51,3.392,54,0.712,65,1.185,68,0.764,69,1.355,70,1.178,72,1.189,84,1.055,87,1.816,89,1.07,90,1.227,98,1.612,100,1.051,101,1.027,102,0.743,121,1.001,123,2.551,124,1.856,127,1.805,129,0.763,133,1.816,138,1.609,143,2.252,152,0.252,153,1.339,154,0.265,156,0.909,167,0.108,168,0.122,186,3.837,188,1.374,198,0.573,199,0.936,200,0.633,202,1.755,203,0.832,204,0.832,205,0.75,206,1.786,207,0.75,208,0.789,209,2.142,210,0.776,211,0.789,212,2.136,213,0.789,214,1.848,215,1.786,216,0.789,217,1.273,218,2.208,219,0.789,220,0.789,221,0.832,222,0.776,223,1.292,224,0.789,225,0.832,226,0.776,227,0.832,228,0.763,229,0.75,230,1.6,231,1.584,232,0.763,233,0.776,234,0.776,235,0.763,236,0.832,237,0.789,238,0.789,239,1.934,240,0.789,241,0.776,242,0.789,243,0.789,244,0.789,245,0.776,246,0.832,247,0.763,248,0.789,249,0.832,250,0.776,251,0.832,252,0.776,253,0.763,254,0.936,255,0.832,256,0.776,257,0.832,258,0.763,259,0.776,260,0.832,261,0.776,262,0.832,263,1.531,264,0.832,265,0.776,266,1.381,267,0.832,268,0.763,269,0.832,270,0.776,271,0.832,272,0.75,273,0.832,274,0.776,275,0.763,276,0.776,277,0.737,278,0.832,279,0.776,280,0.832,281,0.776,282,0.832,283,0.75,284,0.832,285,0.763,286,0.776,287,0.832,288,0.776,289,0.803,290,0.832,291,1.638,292,0.776,293,1.769,294,0.776,295,0.789,296,1.227,297,0.789,298,0.789,299,0.776,300,0.789,301,0.789,302,0.789,303,0.832,304,0.763,305,0.776,306,0.832,307,0.776,308,0.803,309,0.776,310,0.832,311,0.776,312,0.832,313,0.789,314,0.776,315,0.776,316,0.832,317,0.776,318,0.832,319,1.666,320,0.832,321,0.776,322,2.309,323,0.725,324,0.75,325,0.832,326,0.763,327,0.832,328,0.763,329,0.832,330,0.763,331,0.832,332,0.763,333,0.832,334,0.763,335,0.817,336,0.832,337,0.763,338,0.817,339,0.832,340,0.002,341,0.003,342,0.002,373,2.566,375,0.952,425,1.62,462,1.897,463,0.905,464,1.572,465,2.511,468,1.307,485,1.742,489,3.702,491,1.269,492,2.441,493,3.768,522,4.944,524,1.67,527,1.943,534,1.185,536,4.118,547,4.298,548,3.702,551,3.55,553,4.62,563,2.139,564,2.371,566,2.896,571,2.688,580,1.673,581,2.181,588,3.711,589,2.876,605,2.72,744,1.943,770,1.794,791,2.896,853,2.034,860,2.608,947,2.517,958,3.159,963,2.994,964,3.417,968,3.44,976,2.688,977,4.446,980,3.187,981,3.147,982,2.459,994,2.681,1014,3.839,1022,2.907,1060,2.787,1061,2.244,1062,4.075,1065,2.139,1067,1.864,1072,1.943,1090,3.551,1104,2.244,1106,1.973,1107,3.813,1118,2.517,1121,3.324,1337,2.034,1404,3.324,1501,2.034,1561,1.943,1595,2.425,1741,2.688,1763,2.599,1795,4.335,1864,3.768,1972,4.868,2017,2.266,2031,3.521,2084,4.098,2191,3.019,2518,2.638,2537,5.209,2607,3.324,2871,3.521,2897,2.425,2981,4.098,2994,4.868,3153,3.768,3455,4.004,3705,3.768,3936,3.768,4871,2.638,4886,2.638,4887,4.6,4888,5.641,4889,5.641,4890,5.641,4891,4.098,4892,4.6,4893,2.961,4894,2.961,4895,2.961,4896,4.6,4897,2.961,4898,4.098,4899,2.961,4900,2.961,4901,2.961,4902,2.961,4903,4.098,4904,4.6,4905,2.961,4906,2.961,4907,4.098,4908,2.961,4909,4.6,4910,2.961,4911,4.6,4912,4.6,4913,2.961,4914,2.961,4915,2.961,4916,4.6,4917,2.961,4918,4.6,4919,2.961,4920,4.6,4921,2.961,4922,4.6,4923,2.961,4924,4.6,4925,2.961,4926,2.961,4927,2.638,4928,2.961,4929,2.961,4930,2.961,4931,2.961,4932,2.961,4933,2.961,4934,2.961,4935,2.961,4936,2.961,4937,2.961,4938,2.961,4939,5.641,4940,2.961,4941,2.961,4942,2.961,4943,2.961,4944,2.961,4945,2.961,4946,2.961,4947,2.961,4948,2.961,4949,2.961,4950,2.961,4951,2.961,4952,4.6,4953,4.6,4954,4.6,4955,4.6,4956,4.6,4957,4.6]],["title/components/UploadSelectComponent.html",[0,0.31,321,1.322]],["body/components/UploadSelectComponent.html",[0,0.449,1,0.883,2,0.966,3,0.178,4,0.184,5,0.709,7,0.947,8,0.914,10,0.139,17,1.286,21,0.854,22,2.764,24,0.771,26,0.007,33,2.257,34,1.9,37,1.331,39,0.358,40,0.62,42,1.663,45,1.09,46,1.532,49,3.848,51,3.309,54,0.786,57,3.153,65,1.308,68,0.781,69,1.202,70,1.194,84,1.211,87,2.006,89,1.071,90,1.588,100,0.981,101,1.019,102,0.694,121,1.009,124,1.36,127,1.331,129,0.868,143,2.659,152,0.3,153,1.524,154,0.302,156,1.559,167,0.123,168,0.139,186,3.319,198,0.652,199,1.033,200,0.721,202,1.878,203,0.947,204,0.947,205,0.854,206,1.911,207,0.854,208,0.899,209,0.798,210,0.883,211,0.899,212,2.236,213,0.899,214,1.67,215,1.911,216,0.899,217,1.34,218,2.301,219,0.899,220,0.899,221,0.947,222,0.883,223,1.427,224,0.899,225,0.947,226,0.883,227,0.947,228,0.868,229,0.854,230,1.667,231,1.717,232,0.868,233,0.883,234,0.883,235,0.868,236,0.947,237,0.899,238,0.899,239,2.05,240,0.899,241,0.883,242,0.899,243,0.899,244,0.899,245,0.883,246,0.947,247,0.868,248,0.899,249,0.947,250,0.883,251,0.947,252,0.883,253,0.868,254,1.384,255,0.947,256,0.883,257,0.947,258,0.868,259,0.883,260,0.947,261,0.883,262,0.947,263,1.637,264,0.947,265,0.883,266,1.496,267,0.947,268,0.868,269,0.947,270,0.883,271,0.947,272,0.854,273,0.947,274,0.883,275,0.868,276,0.883,277,0.839,278,0.947,279,0.883,280,0.947,281,0.883,282,0.947,283,0.854,284,0.947,285,0.868,286,0.883,287,0.947,288,0.883,289,0.914,290,0.947,291,0.868,292,0.883,293,1.844,294,0.883,295,0.899,296,0.733,297,0.899,298,0.899,299,0.883,300,0.899,301,0.899,302,0.899,303,0.947,304,0.868,305,0.883,306,0.947,307,0.883,308,0.914,309,0.883,310,0.947,311,0.883,312,0.947,313,0.899,314,0.883,315,0.883,316,0.947,317,0.883,318,0.947,319,1.783,320,0.947,321,1.783,322,2.263,323,0.825,324,0.854,325,0.947,326,0.868,327,0.947,328,0.868,329,0.947,330,0.868,331,0.947,332,0.868,333,0.947,334,0.868,335,0.93,336,0.947,337,0.868,338,0.93,339,0.947,340,0.002,341,0.003,342,0.002,375,1.587,386,1.717,392,1.331,397,1.574,440,2.122,463,0.663,485,1.924,524,2.015,525,2.315,526,2.315,534,1.308,545,2.761,546,4.526,547,4.827,548,4.011,552,2.982,553,5.006,555,3.003,560,3.003,561,3.003,562,3.003,563,2.436,860,1.924,947,2.779,968,2.764,981,3.32,982,2.823,985,3.572,994,2.869,1007,2.478,1014,2.414,1026,1.789,1090,3.848,1106,2.138,1107,3.064,1118,4.198,1135,3.198,1170,3.67,1698,2.436,1810,2.436,1863,4.161,1966,2.436,1967,2.436,1973,4.678,2117,3.003,2118,7.744,2537,2.761,4891,4.526,4898,4.526,4903,4.526,4907,4.526,4927,3.003,4958,8.424,4959,6.112,4960,6.112,4961,6.112,4962,6.804,4963,5.08,4964,5.08,4965,6.112,4966,5.446,4967,5.08,4968,3.371,4969,3.371,4970,3.371,4971,3.371,4972,3.371,4973,3.371,4974,3.371,4975,3.371,4976,3.371,4977,5.08,4978,3.371,4979,5.08,4980,3.371,4981,3.371,4982,5.08,4983,5.08,4984,3.371,4985,5.08,4986,3.371,4987,3.371,4988,6.112,4989,3.371,4990,3.371,4991,3.371,4992,3.371,4993,3.371,4994,5.08,4995,6.804,4996,5.08,4997,5.08,4998,5.08]],["title/modules/UtilityModule.html",[343,1.155,2157,3.312]],["body/modules/UtilityModule.html",[3,0.318,4,0.328,10,0.249,25,2.752,26,0.007,151,5.204,152,0.354,154,0.54,155,2.43,166,1.146,167,0.278,168,0.249,198,1.165,274,2.548,275,1.552,307,2.548,308,1.634,309,2.548,311,2.548,332,2.505,340,0.004,341,0.005,342,0.004,343,1.378,345,2.379,346,2.282,347,3.435,348,2.484,349,3.36,356,3.205,357,2.329,358,2.067,360,3.403,361,2.559,362,2.107,595,3.403,630,3.613,631,2.724,633,6.018,634,5.721,1167,7.421,1179,5.221,2155,6.423,2157,6.558,2164,5.367,3486,4.611,4498,4.934,4668,5.367,4694,5.367,4999,5.367,5000,5.367,5001,6.024,5002,5.367,5003,5.367,5004,5.367,5005,6.024,5006,6.024,5007,5.367,5008,6.024]],["title/pipes/VisibleFieldsPipe.html",[1230,2.601,2154,3.646]],["body/pipes/VisibleFieldsPipe.html",[3,0.354,4,0.365,10,0.277,12,0.756,17,1.696,24,1.533,26,0.007,40,0.817,46,1.253,48,1.786,50,4.936,54,1.037,68,0.695,70,1.029,89,0.983,100,0.965,101,1.025,102,0.683,131,3.026,152,0.32,154,0.6,167,0.245,168,0.277,188,1.17,340,0.004,341,0.005,342,0.004,358,2.785,381,1.881,389,3.452,392,2.645,397,2.091,534,2.091,692,3.452,1131,4.918,1202,4.744,1230,4.185,1231,4.84,1234,5.13,1236,4.217,1242,5.865,1449,5.487,2154,6.56,5009,7.782,5010,5.968,5011,8.118,5012,8.118,5013,8.118,5014,8.118,5015,6.699,5016,8.118,5017,6.699,5018,6.699,5019,6.699,5020,6.699]],["title/interfaces/WithLoader.html",[366,1.345,963,2.678]],["body/interfaces/WithLoader.html",[0,0.525,3,0.385,4,0.398,10,0.301,12,0.823,26,0.007,39,0.775,40,1.042,68,0.624,72,1.597,152,0.267,167,0.267,263,2.247,340,0.005,341,0.006,342,0.005,366,2.414,368,3.146,511,4.673,700,4.532,963,4.532,968,4.43,3290,6.995,3333,5.974,5021,6.498,5022,6.498,5023,8.54,5024,8.54]],["title/interfaces/WithNotifications.html",[366,1.345,964,3.057]],["body/interfaces/WithNotifications.html",[0,0.512,3,0.37,4,0.382,10,0.29,12,0.791,26,0.007,32,1.29,39,0.744,40,1.017,68,0.714,72,1.559,73,3.293,102,0.94,152,0.256,167,0.256,340,0.005,341,0.006,342,0.005,366,2.374,368,3.022,375,1.842,588,4.746,700,4.426,964,5.052,1022,4.975,1023,5.25,1520,7.549,1835,5.25,2341,8.211,2363,7.43,2612,5.25,2665,4.874,4002,8.211,5025,6.241,5026,6.241]],["title/changelog.html",[5027,3.086,5028,2.933,5029,1.761]],["body/changelog.html",[15,3.317,26,0.006,98,2.198,156,2.36,340,0.005,341,0.006,342,0.005,381,2.16,1227,4.345,1715,3.564,3878,4.208,5029,3.171,5030,2.974,5031,4.659,5032,4.842,5033,5.047,5034,5.047,5035,4.842,5036,5.047]],["title/coverage.html",[5037,6.035]],["body/coverage.html",[0,0.609,1,0.729,10,0.115,11,3.904,14,1.686,21,0.705,26,0.007,48,0.742,50,1.477,52,0.742,63,1.395,68,0.238,84,0.462,129,0.717,131,0.854,151,1.572,168,0.357,200,1.59,205,0.705,207,0.705,208,0.742,210,0.729,213,0.742,216,0.742,217,1.384,219,0.742,220,0.742,222,0.729,224,0.742,226,0.729,228,0.717,229,0.705,230,1.103,232,0.717,233,0.729,234,0.729,237,0.742,238,0.742,240,0.742,241,0.729,242,0.742,243,0.742,244,0.742,245,0.729,247,0.717,248,0.742,250,0.729,252,0.729,254,0.891,256,0.729,258,0.717,259,0.729,261,0.729,263,0.67,265,0.729,268,0.717,270,0.729,272,0.705,274,0.729,276,0.729,279,0.729,281,0.729,283,0.705,285,0.717,286,0.729,288,0.729,291,0.717,292,0.729,294,0.729,295,0.742,296,0.953,297,0.742,298,0.742,299,0.729,300,0.742,301,0.742,302,0.742,304,0.717,305,0.729,307,0.729,309,0.729,311,0.729,313,0.742,315,0.729,317,0.729,319,0.729,321,0.729,322,0.681,324,0.705,326,0.717,328,0.717,330,0.717,332,0.717,334,0.717,337,0.717,340,0.002,341,0.003,342,0.002,359,2.479,364,2.479,366,2.433,367,1.395,369,4.148,378,2.13,380,1.358,383,2.13,386,1.231,388,1.523,426,3.263,445,5.975,446,2.011,447,3.916,451,5.894,465,1.099,476,2.479,543,2.479,544,2.279,545,6.087,547,1.572,572,2.13,573,2.13,575,2.479,576,2.479,589,1.258,594,2.577,624,2.13,625,1.626,626,2.279,641,2.279,648,2.479,680,1.572,723,1.752,798,2.011,799,2.479,812,2.479,827,1.826,829,2.479,834,1.099,903,4.735,908,1.258,931,2.479,956,2.479,963,1.477,964,1.686,977,1.626,978,1.752,979,1.572,981,1.012,982,1.076,985,1.626,1018,2.13,1022,1.435,1027,3.589,1030,3.354,1032,3.557,1074,2.479,1075,4.679,1090,1.752,1119,1.626,1160,1.911,1161,2.011,1162,1.626,1163,2.479,1176,2.655,1178,2.279,1180,3.904,1184,1.911,1188,2.479,1190,2.479,1192,2.479,1230,3.447,1232,2.479,1233,1.911,1255,2.279,1256,3.904,1273,2.279,1388,2.479,1429,3.589,1434,3.589,1435,2.13,1455,6.443,1462,2.13,1469,2.479,1510,3.589,1511,2.279,1512,2.479,1526,2.011,1527,2.479,1548,2.479,1611,2.479,1634,5.689,1637,1.626,1710,2.479,1718,1.572,1729,1.572,1808,2.479,1828,2.479,1829,1.826,1947,3.904,1949,4.148,1970,1.911,1971,2.759,2111,2.479,2112,2.479,2113,2.479,2118,2.279,2119,2.279,2120,2.479,2121,2.479,2123,2.479,2137,2.13,2138,2.479,2153,2.011,2154,2.011,2161,2.479,2173,2.479,2178,2.479,2247,1.826,2248,3.904,2249,1.826,2312,2.479,2317,2.479,2372,2.479,2383,1.911,2394,2.479,2421,2.479,2446,2.479,2453,1.911,2454,1.911,2457,2.479,2499,2.479,2571,2.479,2661,2.479,2662,2.279,2663,2.479,2665,1.626,2692,2.479,2856,2.479,2872,2.13,2873,3.589,2945,2.479,2950,2.479,2960,1.686,2961,2.011,2964,1.826,3057,2.479,3083,4.148,3084,4.706,3127,2.279,3128,2.479,3224,2.279,3225,2.479,3258,2.479,3265,2.479,3267,2.479,3335,2.479,3341,4.148,3342,2.479,3378,3.904,3380,2.479,3388,2.479,3396,2.479,3435,2.479,3452,2.479,3485,2.479,3486,2.13,3487,5.036,3546,2.279,3553,2.279,3567,2.479,3568,2.479,3574,5.036,3575,3.589,3576,2.479,3619,2.479,3621,2.479,3623,2.479,3682,4.593,3815,2.279,3816,2.479,3817,2.479,3840,2.479,3910,3.904,3936,2.279,3955,2.479,3966,2.479,4038,2.479,4083,2.479,4095,2.479,4096,2.479,4131,2.479,4177,2.479,4179,2.479,4181,2.479,4197,2.279,4198,5.995,4199,3.589,4200,5.478,4251,2.279,4252,2.479,4281,4.148,4305,3.904,4307,2.479,4308,2.479,4309,3.589,4358,2.279,4359,2.479,4360,2.479,4372,2.479,4469,2.479,4472,2.479,4474,2.479,4497,2.479,4498,2.279,4528,2.479,4529,2.479,4535,2.279,4536,5.477,4541,2.279,4542,2.279,4543,2.279,4553,2.479,4581,2.479,4589,3.166,4608,3.904,4616,2.479,4651,2.479,4671,2.479,4682,8.688,4717,2.479,4772,2.479,4801,2.479,4803,2.479,4805,2.479,4881,2.479,4884,2.479,4886,2.479,4958,2.479,5004,2.479,5007,2.479,5009,2.479,5010,2.479,5021,2.479,5022,2.479,5025,2.479,5026,2.479,5037,2.479,5038,2.279,5039,2.783,5040,4.382,5041,2.783,5042,9.259,5043,9.582,5044,4.382,5045,6.86,5046,2.783,5047,5.42,5048,2.783,5049,2.783,5050,2.783,5051,2.783,5052,2.783,5053,5.958,5054,2.783,5055,2.783,5056,2.783,5057,4.382,5058,2.783,5059,6.148,5060,2.783,5061,2.783,5062,4.382,5063,2.783,5064,7.103,5065,2.783,5066,5.42,5067,2.783,5068,6.148,5069,6.148,5070,2.783,5071,2.783,5072,2.783,5073,5.42,5074,2.783,5075,2.783,5076,2.783,5077,2.783,5078,4.382,5079,2.783,5080,5.42,5081,6.148,5082,2.783,5083,2.783,5084,2.783,5085,2.783,5086,2.783,5087,2.783,5088,4.382,5089,2.783,5090,6.148,5091,5.42,5092,4.382,5093,2.783,5094,2.783,5095,2.783,5096,2.783,5097,5.42,5098,2.783,5099,2.783,5100,2.783,5101,2.783,5102,2.783,5103,4.382,5104,2.783,5105,2.783,5106,2.783,5107,2.783,5108,2.783,5109,2.783,5110,4.382,5111,2.783,5112,4.382,5113,2.783,5114,2.783,5115,2.783,5116,4.382,5117,2.783,5118,6.148,5119,5.42,5120,4.382,5121,2.783,5122,2.783,5123,5.42,5124,2.783,5125,4.382,5126,4.382,5127,2.783,5128,6.688,5129,5.42,5130,4.382,5131,4.382,5132,4.382,5133,2.783,5134,2.783,5135,2.783,5136,2.783,5137,2.783,5138,2.783,5139,2.783,5140,2.783,5141,2.783,5142,2.783,5143,6.148,5144,2.783,5145,2.783,5146,2.783,5147,2.783,5148,4.382,5149,4.382,5150,2.783,5151,2.783,5152,4.382,5153,2.783,5154,2.783,5155,2.783,5156,2.783,5157,2.783,5158,2.783,5159,2.783,5160,2.783,5161,2.783,5162,2.783,5163,2.783,5164,2.783,5165,2.783,5166,4.382,5167,4.382,5168,4.382,5169,5.42,5170,4.382,5171,2.783,5172,4.382,5173,6.688,5174,2.783,5175,4.382,5176,2.783,5177,2.783,5178,2.783,5179,4.382,5180,2.783,5181,2.783,5182,2.783,5183,2.783,5184,2.783,5185,2.783,5186,2.783,5187,2.783,5188,2.783,5189,2.783,5190,4.382,5191,2.783,5192,2.783,5193,2.783,5194,2.783,5195,2.783,5196,4.382,5197,2.783,5198,4.382,5199,4.382,5200,2.783,5201,2.783,5202,2.783,5203,2.783,5204,2.783,5205,4.382,5206,2.783,5207,2.783,5208,2.783,5209,2.783,5210,2.783,5211,2.783,5212,2.783,5213,2.783,5214,2.783,5215,2.783,5216,2.783,5217,2.783,5218,2.479,5219,2.479,5220,2.279,5221,2.783,5222,2.783,5223,2.783,5224,2.783,5225,2.783,5226,2.783,5227,2.783,5228,2.783,5229,2.783,5230,2.783,5231,2.783,5232,2.783,5233,4.382,5234,2.783]],["title/dependencies.html",[346,2.287,5030,1.651]],["body/dependencies.html",[14,4.113,15,3.53,26,0.007,154,0.608,155,2.739,156,2.084,235,1.749,277,1.69,340,0.004,341,0.005,342,0.004,346,2.572,381,1.907,595,3.836,597,3.403,631,3.07,636,6.264,637,6.049,651,4.456,698,3.312,1169,5.197,1170,4.906,1225,4.274,1226,4.906,1227,3.836,2109,5.913,2110,5.371,2277,5.561,2393,3.312,3447,6.049,3625,3.715,4718,4.274,5031,4.113,5032,4.274,5033,4.456,5034,4.456,5035,4.274,5036,4.456,5235,8.185,5236,5.913,5237,6.049,5238,9.675,5239,6.049,5240,6.79,5241,5.197,5242,6.79,5243,6.79,5244,6.79,5245,6.79,5246,5.561,5247,6.79,5248,6.79,5249,6.79,5250,6.79,5251,6.79,5252,6.79,5253,6.79,5254,6.79,5255,6.79,5256,6.79]],["title/miscellaneous/functions.html",[2757,4.946,5257,3.269]],["body/miscellaneous/functions.html",[0,0.442,26,0.006,39,0.765,68,0.616,89,1.056,100,1.34,101,1.092,102,0.948,340,0.005,341,0.006,342,0.005,477,4.067,624,6.893,626,5.896,632,5.201,635,6.413,767,6.601,848,5.896,1796,4.724,2757,5.896,4536,5.896,4541,6.941,4542,6.941,4543,6.941,4550,6.893,4558,6.413,4559,6.413,4561,6.413,4562,6.413,4563,6.413,5218,6.413,5219,7.55,5220,6.941,5257,5.509,5258,7.198,5259,7.198,5260,9.007,5261,7.198]],["title/index.html",[39,0.454,5027,3.086,5028,2.933]],["body/index.html",[0,0.493,2,1.715,3,0.294,4,0.303,6,2.867,13,4.798,14,3.369,15,3.663,16,4.294,26,0.006,72,1.351,73,2.196,78,3.62,79,3.723,84,1.46,98,1.589,101,0.653,102,0.567,121,0.732,156,1.707,254,1.131,277,1.385,340,0.004,341,0.005,342,0.004,346,2.107,358,1.908,370,3.663,381,1.562,385,3.501,460,4.018,475,2.478,491,2.343,505,3.116,522,3.142,565,2.064,566,4.547,585,3.347,593,4.079,599,3.65,651,3.65,664,1.945,666,3.952,698,4.143,700,2.952,754,3.369,791,4.547,800,3.501,822,3.142,828,2.196,834,2.196,847,3.142,863,3.043,989,4.798,1015,2.643,1104,2.713,1105,2.515,1137,3.65,1203,3.65,1225,3.501,1227,3.142,1258,2.713,1291,6.955,1362,4.555,1767,5.916,1900,3.501,1936,3.82,2180,2.952,2249,3.65,2675,5.05,2744,6.018,2756,4.961,2768,4.555,2927,4.257,3625,3.043,3687,4.555,3830,3.82,3846,4.555,3848,3.82,4221,4.555,4366,5.528,4479,4.961,4550,4.257,4551,6.955,4592,4.688,4718,3.501,5027,4.018,5028,3.82,5030,3.284,5031,3.369,5032,3.501,5033,3.65,5034,3.65,5035,3.501,5036,3.65,5038,5.916,5241,4.257,5246,6.57,5262,4.021,5263,4.955,5264,6.435,5265,6.435,5266,5.573,5267,4.955,5268,4.955,5269,4.955,5270,6.435,5271,4.955,5272,4.955,5273,4.555,5274,4.257,5275,4.955,5276,4.955,5277,6.499,5278,6.435,5279,4.955,5280,4.955,5281,4.955,5282,4.955,5283,5.916,5284,4.955,5285,7.147,5286,4.955,5287,4.377,5288,3.82,5289,6.499,5290,4.955,5291,4.955,5292,3.524,5293,3.142,5294,4.507,5295,4.555,5296,4.555,5297,4.955,5298,3.142,5299,4.257,5300,6.435,5301,4.955,5302,3.142,5303,3.142,5304,4.955,5305,4.955,5306,6.14,5307,2.643,5308,4.555,5309,4.955,5310,5.916,5311,6.307,5312,4.018,5313,4.955,5314,4.955,5315,4.955,5316,6.045,5317,4.955,5318,4.955,5319,4.555,5320,4.555,5321,4.555,5322,6.435,5323,3.142,5324,6.435,5325,4.955,5326,4.955,5327,4.955,5328,7.147,5329,4.257,5330,4.955,5331,4.955]],["title/modules.html",[345,2.675]],["body/modules.html",[26,0.005,340,0.005,341,0.005,342,0.005,344,4.93,345,2.694,355,3.855,618,4.93,794,4.478,1151,4.686,1157,4.93,1158,4.686,1159,4.478,2110,6.6,2147,4.686,2155,4.686,2156,4.478,2157,4.478,2158,4.133,2159,4.478,2160,4.478,3252,4.686,3372,4.93,3614,4.93,3670,7.266,3901,4.93,4463,4.93,4797,4.93,4966,8.959,5332,10.057]],["title/overview.html",[5333,3.827]],["body/overview.html",[1,2.185,2,0.456,21,1.243,25,0.792,26,0.007,27,3.329,28,4.125,29,4.125,30,4.125,31,4.621,32,1.307,50,2.605,129,1.804,151,2.773,183,0.697,198,0.464,205,1.773,207,1.243,208,1.867,210,1.835,213,1.867,216,1.867,219,1.867,220,1.867,222,1.835,224,1.867,226,1.835,228,1.264,229,1.243,232,1.264,233,1.835,234,1.835,237,1.867,238,1.867,240,1.867,241,1.835,242,1.867,243,1.867,244,1.867,245,1.835,247,1.804,248,1.867,250,1.835,252,1.835,256,1.835,258,1.804,259,1.835,261,1.835,263,1.685,265,1.835,268,1.804,270,1.835,272,1.773,274,1.835,276,2.185,279,1.835,281,1.835,283,1.773,285,1.804,286,1.835,288,1.835,291,1.804,292,1.835,294,1.835,295,1.867,297,1.867,298,1.867,299,1.835,300,1.867,301,1.867,302,1.867,304,2.148,305,1.835,307,1.835,309,1.835,311,1.835,313,1.867,315,1.835,317,1.835,319,1.835,321,1.835,323,0.587,324,1.773,326,1.804,328,1.804,330,1.804,332,1.804,334,1.804,337,1.804,340,0.002,341,0.003,342,0.002,343,0.549,344,5.06,345,0.947,346,0.908,347,0.989,348,0.989,349,0.967,350,2.136,351,2.136,352,2.136,353,2.136,354,2.136,355,5.386,356,1.64,357,0.927,358,0.823,368,1.034,465,1.938,547,2.773,572,1.835,589,2.219,618,6.472,619,2.136,620,2.136,621,2.136,622,2.136,623,2.136,624,3.756,625,2.868,647,1.084,680,2.773,794,5.714,795,2.136,796,2.136,797,2.136,798,5.06,828,0.947,871,1.509,977,2.868,979,2.773,982,1.898,1151,6.712,1152,2.136,1153,2.136,1154,2.136,1155,2.136,1156,2.136,1157,6.973,1158,6.592,1159,5.542,1160,3.371,1161,3.546,1162,2.868,1231,1.732,1233,4.81,1637,2.868,1718,2.773,1928,1.452,2102,2.136,2103,2.136,2105,2.136,2106,2.136,2147,6.62,2148,2.136,2149,2.136,2150,2.136,2151,2.136,2152,2.136,2153,5.06,2154,5.06,2155,6.279,2156,5.843,2157,6.091,2158,5.174,2159,5.472,2160,5.472,2247,3.221,2383,3.371,2415,2.136,2416,2.136,2417,2.136,2418,2.136,2684,2.136,2685,2.136,2686,2.136,2964,3.221,3252,6.523,3253,2.136,3254,2.136,3256,2.136,3257,2.136,3328,2.136,3329,2.136,3330,2.136,3331,2.136,3372,6.101,3373,2.136,3374,2.136,3376,2.136,3377,2.136,3614,4.485,3615,2.136,3616,2.136,3617,2.136,3618,2.136,3901,6.342,3902,2.136,3903,2.136,3905,2.136,3906,2.136,4172,2.136,4173,2.136,4175,2.136,4176,2.136,4299,2.136,4300,2.136,4302,2.136,4303,2.136,4368,2.136,4369,2.136,4463,6.29,4464,2.136,4465,2.136,4466,2.136,4468,2.136,4585,2.136,4586,2.136,4587,2.136,4588,2.136,4589,5.06,4797,4.485,4798,2.136,4799,2.136,4800,2.136,4878,2.136,4880,2.136,4999,2.136,5000,2.136,5002,2.136,5003,2.136,5053,2.136,5333,1.355,5334,2.273,5335,1.964,5336,1.964]],["title/miscellaneous/typealiases.html",[5257,3.269,5337,6.038]],["body/miscellaneous/typealiases.html",[26,0.006,39,0.824,68,0.664,340,0.005,341,0.006,342,0.005,369,5.936,374,6.773,426,3.784,5257,5.936,5338,7.756,5339,7.756]],["title/additional-documentation/angular-7-upgrade-guide.html",[16,1.426,603,0.68,871,1.84,3507,0.948,5274,2.237,5340,2.923]],["body/additional-documentation/angular-7-upgrade-guide.html",[2,1.084,3,0.301,10,0.236,16,4.769,26,0.007,42,1.066,72,1.372,78,3.678,79,2.938,84,1.347,98,2.097,152,0.332,166,1.084,183,1.658,340,0.004,341,0.005,342,0.004,343,1.857,361,1.919,372,4.015,384,3.453,386,1.601,491,2.365,509,3.741,522,3.22,565,2.115,580,4.842,581,3.511,599,3.741,655,4.015,666,4.015,702,3.453,754,3.453,789,2.115,821,3.453,834,3.205,850,2.641,851,2.781,871,5.396,881,4.296,897,3.895,936,2.204,1068,4.62,1106,2.839,1107,2.857,1146,5.327,1178,4.668,1179,3.915,1193,3.741,1216,3.118,1227,3.22,1230,2.938,1294,4.668,1384,5.078,1722,2.781,1763,4.146,1859,4.816,1908,4.441,1934,4.362,2180,3.025,2231,5.078,2393,2.781,2408,5.583,2460,4.362,2561,3.741,2562,4.015,2589,5.078,2665,3.331,2744,3.588,3293,3.741,3538,4.362,3614,4.118,3867,4.362,4380,5.078,5027,4.118,5030,2.204,5031,3.453,5035,3.588,5266,3.741,5274,6.212,5289,4.362,5292,3.96,5294,3.025,5299,6.212,5308,4.668,5310,6.011,5312,4.118,5316,5.04,5319,4.668,5329,4.362,5341,5.7,5342,7.339,5343,5.7,5344,5.7,5345,5.7,5346,5.7,5347,5.7,5348,5.7,5349,5.7,5350,5.7,5351,5.7,5352,5.7,5353,4.668,5354,5.7,5355,7.339,5356,5.7,5357,5.7,5358,5.078,5359,5.7,5360,5.078,5361,5.7,5362,5.7,5363,5.7,5364,5.7,5365,5.7,5366,5.7,5367,6.648,5368,5.7,5369,5.078,5370,5.078,5371,5.7,5372,3.915,5373,7.339,5374,8.571,5375,7.339,5376,7.339,5377,6.538,5378,5.7,5379,5.7,5380,5.7,5381,5.7,5382,5.7,5383,8.117,5384,5.7,5385,5.7,5386,8.117,5387,8.117,5388,7.339,5389,5.7,5390,5.7,5391,4.668,5392,5.7,5393,8.117,5394,5.7,5395,7.339,5396,7.339,5397,5.7,5398,5.7,5399,5.7,5400,5.7,5401,5.7,5402,5.7,5403,5.7,5404,5.7,5405,5.7,5406,5.078,5407,5.7]],["title/additional-documentation/project-setup-tutorial.html",[603,0.76,3507,1.059,4592,1.909,5262,1.637,5408,2.36]],["body/additional-documentation/project-setup-tutorial.html",[0,0.426,2,0.992,3,0.276,6,4.008,16,2.546,25,1.724,26,0.007,32,1.072,34,1.64,72,1.295,73,2.061,77,4.274,78,2.616,79,2.69,84,1.43,99,3.584,101,0.613,116,2.69,117,1.977,121,0.687,152,0.34,154,0.468,155,2.105,166,1.317,167,0.284,168,0.216,183,1.518,199,1.409,235,1.344,340,0.003,341,0.005,342,0.003,345,2.061,347,2.152,348,2.152,361,2.332,362,1.825,370,2.988,397,1.344,460,5.005,491,1.912,505,2.251,522,2.948,534,1.344,565,3.484,588,2.546,593,2.36,595,2.948,628,2.948,631,2.36,653,6.582,657,5.302,659,4.274,660,6.34,663,5.619,665,5.674,666,4.255,698,2.546,790,6.928,791,4.896,847,2.948,850,2.419,851,2.546,863,3.791,870,3.994,871,3.285,938,2.795,981,1.898,989,3.914,1015,2.48,1022,2.69,1064,3.584,1068,3.285,1105,3.133,1107,2.616,1118,2.855,1128,2.419,1151,5.69,1164,4.649,1203,5.103,1282,2.855,1349,2.419,1464,2.546,1642,2.48,1711,2.48,1722,3.38,1761,5.674,1909,3.285,1928,3.161,1935,4.649,2008,3.584,2108,3.994,2109,5.005,2110,4.546,2180,3.677,2268,4.274,2338,3.994,2393,3.794,2408,4.361,2562,3.791,2670,3.771,2675,3.285,2723,3.584,2744,4.896,2927,3.994,3004,4.649,3012,3.994,3148,3.994,3292,3.994,3293,4.546,3624,4.546,3703,4.649,3712,3.425,3722,3.994,3798,5.674,3848,3.584,4115,4.649,4367,4.274,4592,3.05,4594,5.674,5030,2.679,5031,4.711,5032,3.285,5237,4.649,5239,6.172,5262,4.603,5266,3.425,5273,4.274,5277,5.302,5287,2.69,5289,6.34,5292,4.041,5293,4.68,5294,3.677,5295,4.274,5299,5.302,5306,5.302,5307,2.48,5311,5.69,5312,3.771,5316,3.584,5320,6.369,5321,6.369,5329,3.994,5353,4.274,5360,4.649,5367,4.274,5372,3.584,5377,4.649,5408,5.619,5409,5.219,5410,5.219,5411,4.649,5412,7.776,5413,6.928,5414,9.463,5415,5.219,5416,5.219,5417,5.219,5418,6.172,5419,5.219,5420,5.219,5421,5.219,5422,5.219,5423,5.219,5424,5.219,5425,5.219,5426,5.219,5427,5.219,5428,5.219,5429,5.219,5430,5.219,5431,6.172,5432,5.219,5433,6.928,5434,5.219,5435,5.219,5436,5.219,5437,5.219,5438,5.219,5439,5.219,5440,5.219,5441,4.049,5442,5.219,5443,7.776,5444,3.994,5445,5.219,5446,5.219,5447,5.219,5448,5.219,5449,5.219,5450,5.219,5451,5.219,5452,5.219]],["title/additional-documentation/project-setup-tutorial/routes.html",[577,3.086,603,0.994,3507,1.385]],["body/additional-documentation/project-setup-tutorial/routes.html",[0,0.57,2,1.36,5,1.504,26,0.007,84,1.401,152,0.262,166,1.36,183,2.08,199,1.455,340,0.005,341,0.006,342,0.005,372,4.619,504,3.234,565,3.133,577,6.704,789,3.133,850,3.314,851,3.489,965,3.913,969,5.895,2393,3.489,2408,4.502,2562,3.913,2612,4.502,2675,5.655,2744,4.502,3179,5.857,3712,4.693,5288,4.912,5292,3.489,5311,4.912,5408,5.167,5453,7.151,5454,7.151,5455,7.151,5456,5.857,5457,7.521,5458,7.151,5459,7.151,5460,7.151,5461,7.521,5462,7.151,5463,7.151,5464,7.151]],["title/additional-documentation/project-setup-tutorial/authorization.html",[603,0.994,3507,1.385,5444,3.269]],["body/additional-documentation/project-setup-tutorial/authorization.html",[0,0.448,5,1.797,26,0.006,78,3.656,79,3.76,84,1.21,183,2.121,199,1.484,272,1.847,275,2.333,340,0.005,341,0.006,342,0.005,392,2.88,491,2.013,504,3.298,534,1.879,565,3.17,577,5.27,586,6.995,789,3.17,850,3.38,851,3.558,969,5.943,970,5.376,1105,3.298,1642,3.467,2180,3.871,2393,3.558,3458,5.974,4592,4.262,5262,3.656,5287,3.76,5408,6.543,5444,6.536,5456,5.974,5465,5.974,5466,6.498,5467,6.498,5468,6.498,5469,6.498]],["title/additional-documentation/project-setup-tutorial/localization.html",[603,0.994,3507,1.385,4591,3.269]],["body/additional-documentation/project-setup-tutorial/localization.html",[0,0.516,4,0.387,5,1.493,26,0.006,37,1.859,121,0.934,152,0.26,167,0.26,168,0.293,199,1.443,340,0.005,341,0.006,342,0.005,384,4.299,388,3.883,449,4.467,491,1.958,505,3.625,514,4.657,585,3.289,604,2.992,692,2.634,821,4.299,847,4.748,859,4.874,981,3.057,982,3.249,1105,3.209,1230,3.658,1956,4.467,2069,4.874,2180,3.766,2376,5.127,2408,4.467,2434,6.58,2453,6.149,2454,4.874,2582,4.657,3293,4.657,3312,5.812,3859,5.431,4047,5.812,4591,6.852,4592,4.147,4593,5.812,4594,5.812,4595,6.322,4596,6.322,4597,6.322,4598,6.322,4599,6.322,4600,6.322,4601,6.322,4602,6.322,4603,6.322,4604,6.322,4605,6.883]],["title/additional-documentation/project-setup-tutorial/custom-fields-config.html",[386,0.917,389,1.212,603,0.76,1106,1.143,3507,1.059]],["body/additional-documentation/project-setup-tutorial/custom-fields-config.html",[0,0.377,26,0.007,32,0.95,34,1.167,40,0.939,45,1.569,48,2.418,51,3.799,52,1.636,68,0.526,72,1.148,73,2.424,84,1.018,101,0.986,117,2.325,121,1.012,131,2.784,167,0.225,168,0.254,188,1.617,217,1.344,230,1.249,340,0.004,341,0.005,342,0.004,380,2.995,386,2.359,387,3.582,389,2.278,397,1.581,425,3.359,426,2.995,498,2.476,524,1.817,534,1.981,567,6.07,583,3.359,604,2.588,628,4.346,664,2.691,718,3.965,846,3.864,907,5.048,933,5.888,945,3.587,965,3.359,978,3.864,979,4.346,1015,3.656,1021,4.216,1061,2.995,1106,2.147,1114,4.597,1125,4.698,1128,2.845,1135,3.864,1225,3.864,1236,3.864,1268,4.435,1273,5.028,1295,3.164,1349,2.845,1464,4.099,1642,2.918,1729,3.468,1741,3.587,1840,4.843,1842,5.028,1865,3.864,1928,3.718,1930,4.435,2320,5.469,2393,2.995,2612,3.864,2674,4.435,2744,3.864,3071,5.469,3077,5.028,3684,3.359,3712,4.028,3746,5.469,3867,4.698,4015,6.853,4582,5.469,5461,5.469,5470,6.138,5471,6.138,5472,6.138,5473,5.028,5474,6.138,5475,6.138,5476,6.138,5477,6.138,5478,6.138,5479,6.138,5480,5.469,5481,5.469,5482,6.138,5483,6.138,5484,7.693,5485,6.138,5486,6.138,5487,6.138,5488,6.138]],["title/additional-documentation/project-setup-tutorial/custom-entry-list.html",[217,0.571,230,0.665,603,0.76,1106,1.143,3507,1.059]],["body/additional-documentation/project-setup-tutorial/custom-entry-list.html",[0,0.49,2,0.906,5,1.002,20,1.921,26,0.007,33,1.071,34,1.239,40,1.02,42,0.891,45,1.339,48,2.127,51,3.442,52,2.3,54,1.149,68,0.636,70,0.604,72,1.388,88,1.108,98,2.122,117,2.467,121,1.135,131,1.462,167,0.174,168,0.197,183,1.385,188,1.571,199,1.755,217,1.46,230,1.51,285,1.678,340,0.004,341,0.004,342,0.003,358,1.634,370,2.054,380,2.324,386,2.616,387,1.881,389,3.278,397,1.227,450,2.387,451,4.985,454,2.783,481,3.457,486,2.885,491,2.202,504,2.154,505,2.054,524,2.615,534,1.912,552,3.178,567,4.706,580,2.691,581,1.842,584,2.885,585,3.698,588,2.324,593,2.154,628,2.691,664,2.278,697,1.964,718,3.826,789,1.768,832,2.264,853,3.271,871,4.101,897,4.773,903,2.324,907,3.126,936,3.231,938,2.628,943,3.901,968,2.154,975,4.101,979,2.691,997,2.455,1014,3.096,1015,3.096,1021,4.474,1028,2.885,1103,3.645,1106,3.227,1109,2.387,1114,2.606,1126,3.901,1130,4.243,1131,2.885,1138,3.807,1141,4.275,1146,3.126,1148,2.264,1234,3.68,1236,5.024,1268,5.363,1277,6.08,1282,2.606,1295,3.358,1349,4.227,1464,2.324,1582,3.126,1642,3.528,1654,2.691,1672,3.645,1715,2.207,1727,4.236,1729,2.691,1785,3.441,1832,5.024,1833,4.985,1838,4.275,1857,4.243,1858,5.682,1859,4.275,1860,3.441,1865,4.101,1900,2.998,1908,4.573,1909,4.101,1911,3.645,1915,4.243,1917,3.126,1930,3.441,1986,3.441,2069,3.271,2337,4.706,2408,2.998,2540,3.901,2562,3.564,2609,6.038,2612,2.998,2674,3.441,2675,2.998,2752,3.645,2960,2.885,3077,5.335,3177,3.901,3301,3.126,3350,4.243,3626,5.682,3670,3.441,3684,2.606,3688,3.645,3712,3.126,3848,3.271,3972,4.243,3986,4.243,4089,5.335,4091,4.062,4647,4.243,4729,3.645,5431,4.243,5457,7.11,5473,7.067,5480,7.687,5489,4.763,5490,4.763,5491,4.763,5492,4.763,5493,6.514,5494,4.763,5495,4.763,5496,4.243,5497,4.763,5498,4.763,5499,4.763,5500,4.763,5501,6.514,5502,8.993,5503,6.514,5504,4.763,5505,4.763,5506,4.763,5507,4.763,5508,4.763,5509,4.763,5510,4.763,5511,7.423,5512,4.243,5513,4.763,5514,4.763,5515,4.763,5516,4.763,5517,4.985,5518,6.514,5519,4.763,5520,4.763,5521,4.763,5522,4.763,5523,4.763,5524,4.763,5525,4.763,5526,4.763,5527,4.763,5528,4.763,5529,4.763,5530,4.763,5531,4.763]],["title/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[230,0.665,603,0.76,1106,1.143,1865,2.057,3507,1.059]],["body/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[0,0.567,2,1.118,5,1.665,16,2.006,17,1.041,18,4.984,20,2.371,22,1.859,25,1.358,26,0.007,27,2.595,28,3.216,29,2.25,30,3.216,31,2.25,32,0.636,33,1.543,34,1.78,35,3.7,37,1.797,40,0.717,41,2.323,42,1.803,43,4.318,45,1.389,47,2.061,48,2.311,52,1.096,59,2.588,62,3.56,65,1.514,66,3.147,68,0.587,72,0.769,73,1.624,75,3.147,78,3.438,79,4.081,84,0.975,86,2.824,88,0.957,95,2.588,98,1.68,101,0.483,103,2.588,113,2.588,116,2.119,117,2.226,121,0.985,129,2.233,131,2.854,138,1.438,139,3.32,152,0.317,154,0.614,155,2.371,156,2.105,164,4.814,165,3.147,167,0.251,168,0.283,181,3.857,183,1.196,193,2.323,194,3.7,199,1.764,230,1.61,235,1.514,314,1.077,340,0.003,341,0.004,342,0.003,343,0.941,358,1.411,360,3.32,362,1.438,371,1.859,373,2.371,380,2.006,384,2.491,386,2.544,387,2.955,389,2.938,447,2.971,458,3.663,461,4.498,474,2.491,486,2.491,491,2.392,498,1.659,514,3.857,524,2.031,565,3.056,567,4.246,581,1.59,584,3.56,585,2.724,588,2.867,593,1.859,602,3.857,628,2.323,664,2.399,666,3.753,702,2.491,708,3.367,754,2.491,789,3.056,839,3.367,847,2.323,850,1.905,851,2.006,863,3.216,881,2.946,903,2.006,907,2.698,936,2.652,938,1.659,945,2.403,958,4.037,961,3.147,968,2.658,978,2.588,979,2.323,1003,4.498,1064,5.14,1098,2.824,1102,2.698,1106,3.338,1109,2.061,1113,2.698,1114,3.753,1117,4.498,1118,3.216,1128,2.724,1146,3.857,1175,2.491,1216,2.138,1238,3.147,1278,3.972,1293,3.147,1348,2.971,1426,2.25,1438,3.663,1468,2.971,1562,5.236,1582,4.501,1584,3.663,1642,1.954,1654,2.323,1663,2.698,1729,2.323,1747,3.663,1760,4.246,1860,2.971,1865,4.711,1873,2.824,1928,2.491,1930,4.246,1931,5.236,2144,5.25,2145,3.147,2191,3.857,2208,4.814,2220,4.498,2242,3.663,2285,3.147,2376,2.971,2393,3.651,2562,4.639,2579,3.147,2582,3.857,2609,4.246,2612,3.7,2621,3.663,2622,3.367,2664,3.663,2665,3.435,2674,4.246,2675,2.588,2758,5.236,2861,3.663,3079,3.367,3271,3.147,3626,6.303,3670,2.971,3684,2.25,3688,3.147,3705,3.367,3712,3.857,3722,4.498,3783,3.663,3829,3.663,3830,2.824,3865,6.111,3866,4.037,3867,3.147,3912,3.147,3933,3.367,3957,3.663,4057,5.236,4063,3.663,4091,3.753,4269,6.111,4366,3.147,4605,3.367,4653,3.663,4727,3.663,4729,4.498,4736,3.663,5045,3.663,5288,2.824,5292,2.006,5311,2.824,5312,2.971,5372,2.824,5406,3.663,5411,3.663,5441,2.403,5473,3.367,5481,5.236,5496,3.663,5532,3.663,5533,4.112,5534,4.112,5535,4.112,5536,4.112,5537,3.663,5538,4.112,5539,4.112,5540,4.112,5541,5.877,5542,4.112,5543,4.112,5544,5.236,5545,4.112,5546,4.112,5547,4.112,5548,3.147,5549,4.112,5550,5.877,5551,4.112,5552,4.112,5553,4.112,5554,4.112,5555,4.112,5556,4.112,5557,4.112,5558,4.112,5559,5.877,5560,4.112,5561,8.235,5562,4.112,5563,5.877,5564,4.112,5565,4.112,5566,4.112,5567,4.112,5568,4.112,5569,5.877,5570,4.112,5571,4.112,5572,4.112,5573,4.112,5574,4.112,5575,4.112,5576,4.112,5577,4.112,5578,5.877,5579,4.112,5580,4.112,5581,4.112,5582,4.112,5583,4.112,5584,4.112,5585,4.112,5586,4.112,5587,4.112,5588,4.112,5589,4.112,5590,4.112,5591,4.112,5592,4.112]],["title/additional-documentation/readme.html",[475,1.465,603,0.994,3507,1.385]],["body/additional-documentation/readme.html",[0,0.493,2,1.715,3,0.294,4,0.303,6,2.867,13,4.798,14,3.369,15,3.663,16,4.294,26,0.006,72,1.351,73,2.196,78,3.62,79,3.723,84,1.46,98,1.589,101,0.653,102,0.567,121,0.732,156,1.707,254,1.131,277,1.385,340,0.004,341,0.005,342,0.004,346,2.107,358,1.908,370,3.663,381,1.562,385,3.501,460,4.018,475,2.478,491,2.343,505,3.116,522,3.142,565,2.064,566,4.547,585,3.347,593,4.079,599,3.65,651,3.65,664,1.945,666,3.952,698,4.143,700,2.952,754,3.369,791,4.547,800,3.501,822,3.142,828,2.196,834,2.196,847,3.142,863,3.043,989,4.798,1015,2.643,1104,2.713,1105,2.515,1137,3.65,1203,3.65,1225,3.501,1227,3.142,1258,2.713,1291,6.955,1362,4.555,1767,5.916,1900,3.501,1936,3.82,2180,2.952,2249,3.65,2675,5.05,2744,6.018,2756,4.961,2768,4.555,2927,4.257,3625,3.043,3687,4.555,3830,3.82,3846,4.555,3848,3.82,4221,4.555,4366,5.528,4479,4.961,4550,4.257,4551,6.955,4592,4.688,4718,3.501,5027,4.018,5028,3.82,5030,3.284,5031,3.369,5032,3.501,5033,3.65,5034,3.65,5035,3.501,5036,3.65,5038,5.916,5241,4.257,5246,6.57,5262,4.021,5263,4.955,5264,6.435,5265,6.435,5266,5.573,5267,4.955,5268,4.955,5269,4.955,5270,6.435,5271,4.955,5272,4.955,5273,4.555,5274,4.257,5275,4.955,5276,4.955,5277,6.499,5278,6.435,5279,4.955,5280,4.955,5281,4.955,5282,4.955,5283,5.916,5284,4.955,5285,7.147,5286,4.955,5287,4.377,5288,3.82,5289,6.499,5290,4.955,5291,4.955,5292,3.524,5293,3.142,5294,4.507,5295,4.555,5296,4.555,5297,4.955,5298,3.142,5299,4.257,5300,6.435,5301,4.955,5302,3.142,5303,3.142,5304,4.955,5305,4.955,5306,6.14,5307,2.643,5308,4.555,5309,4.955,5310,5.916,5311,6.307,5312,4.018,5313,4.955,5314,4.955,5315,4.955,5316,6.045,5317,4.955,5318,4.955,5319,4.555,5320,4.555,5321,4.555,5322,6.435,5323,3.142,5324,6.435,5325,4.955,5326,4.955,5327,4.955,5328,7.147,5329,4.257,5330,4.955,5331,4.955]],["title/additional-documentation/readme/data-readme.html",[370,1.597,475,1.27,603,0.861,3507,1.2]],["body/additional-documentation/readme/data-readme.html",[2,1.604,8,1.937,20,2.881,26,0.007,72,1.335,152,0.261,167,0.261,168,0.295,183,2.077,340,0.005,341,0.006,342,0.005,343,2.054,361,2.404,362,2.498,454,4.174,565,2.651,593,3.23,603,1.662,628,4.035,698,3.484,789,2.651,791,4.496,828,3.331,834,2.82,850,3.31,1000,3.681,1151,5.794,1427,4.687,1464,3.484,1722,3.484,1863,5.85,1900,4.496,2389,4.905,2393,3.484,3625,3.908,3985,5.16,5029,2.945,5030,3.262,5031,5.438,5292,3.484,5293,4.766,5294,3.79,5307,3.395,5333,4.766,5441,4.174,5517,5.466,5548,5.466,5593,5.466,5594,5.85,5595,5.85,5596,6.909,5597,7.142,5598,7.142,5599,4.327]],["title/additional-documentation/readme/ui-readme.html",[475,1.27,603,0.861,989,2.092,3507,1.2]],["body/additional-documentation/readme/ui-readme.html",[2,1.367,8,1.95,16,3.507,26,0.007,152,0.263,156,2.763,167,0.263,168,0.297,183,2.091,340,0.005,341,0.006,342,0.005,343,1.937,355,4.784,361,2.42,362,2.514,381,2.019,454,4.201,565,2.668,593,3.251,603,1.673,828,2.839,834,2.839,850,3.331,1000,3.706,1427,4.718,1464,3.507,1722,3.507,2389,4.937,2393,3.507,3625,3.933,3715,6.404,3912,5.502,3985,5.194,4864,5.888,5029,2.964,5030,3.481,5292,3.507,5293,4.784,5294,3.815,5307,3.417,5333,4.784,5441,4.201,5517,5.502,5548,5.502,5593,5.502,5594,5.888,5595,5.888,5596,6.935,5599,4.355,5600,6.404,5601,7.189]],["title/additional-documentation/readme/core-readme.html",[475,1.27,603,0.861,698,1.806,3507,1.2]],["body/additional-documentation/readme/core-readme.html",[16,3.596,26,0.006,52,1.965,84,1.223,152,0.27,166,1.402,340,0.005,341,0.006,342,0.005,381,2.554,454,4.308,593,3.886,698,3.596,754,4.466,828,3.393,834,2.911,847,4.165,897,3.912,1000,3.8,1427,4.838,1464,3.596,2389,5.063,2706,5.326,2770,6.567,3625,4.034,3912,5.642,5029,3.04,5030,2.85,5292,3.596,5294,3.912,5307,3.504,5333,4.165,5517,5.642,5548,5.642,5593,5.642,5594,6.038,5595,6.038,5596,6.038,5599,4.466,5600,6.567,5602,7.372,5603,7.372,5604,7.372]],["title/additional-documentation/readme/style-readme.html",[475,1.27,603,0.861,3507,1.2,3624,2.43]],["body/additional-documentation/readme/style-readme.html",[6,4.987,26,0.006,152,0.338,183,2.061,199,1.442,340,0.005,341,0.006,342,0.005,386,2.358,454,4.142,475,2.431,491,2.317,505,3.057,565,3.321,580,4.004,593,3.205,767,4.867,834,2.799,851,3.457,938,3.388,1000,3.653,1106,2.479,1128,3.284,1427,4.651,1464,3.457,1722,3.457,2180,3.761,2389,4.867,2392,5.424,2609,6.067,3625,5.167,4592,4.142,5029,2.922,5030,3.247,5032,5.286,5266,4.651,5292,3.457,5293,5.055,5294,3.761,5307,3.368,5316,4.867,5333,4.004,5367,7.735,5369,6.314,5593,5.424,5599,4.293,5605,7.087,5606,8.397,5607,7.087,5608,7.087,5609,7.087]],["title/additional-documentation/readme/calendar-readme.html",[475,1.27,603,0.861,800,2.331,3507,1.2]],["body/additional-documentation/readme/calendar-readme.html",[2,1.402,26,0.007,152,0.27,167,0.27,168,0.305,183,2.144,199,1.5,340,0.005,341,0.006,342,0.005,343,1.966,361,2.481,362,2.578,491,2.034,565,2.736,603,1.715,794,5.64,800,4.641,821,4.466,850,3.416,851,3.596,1000,3.8,1227,5.139,1518,5.642,1722,3.596,2180,3.912,2393,3.596,5029,3.04,5030,3.323,5292,3.596,5293,4.855,5294,3.912,5333,4.855,5441,4.308,5599,4.466]],["title/additional-documentation/readme/location-readme.html",[266,0.906,475,1.27,603,0.861,3507,1.2]],["body/additional-documentation/readme/location-readme.html",[13,4.094,16,3.535,26,0.007,42,1.591,121,0.953,152,0.265,167,0.265,168,0.299,183,2.108,266,1.773,268,1.866,340,0.005,341,0.006,342,0.005,343,1.946,361,2.439,362,2.534,389,2.689,491,2,565,2.689,603,1.686,604,3.055,850,3.358,851,3.535,897,3.845,1137,4.755,1162,4.234,1722,3.535,1865,4.561,1914,6.455,1994,4.976,2249,4.755,2393,3.535,3372,6.146,5029,2.988,5030,3.289,5034,5.927,5292,3.535,5293,4.806,5294,3.845,5333,4.806,5441,4.234,5599,4.389,5610,7.246]],["title/additional-documentation/readme/ace-readme.html",[14,2.243,475,1.27,603,0.861,3507,1.2]],["body/additional-documentation/readme/ace-readme.html",[0,0.439,13,4.035,14,5.438,15,3.081,16,3.484,26,0.007,77,5.85,152,0.339,157,6.363,167,0.261,168,0.295,183,2.077,199,1.716,340,0.005,341,0.006,342,0.005,343,1.93,344,6.095,361,2.404,362,2.498,491,2.328,565,3.332,603,1.662,850,3.31,851,3.484,1146,4.687,1722,3.484,2392,5.466,2393,4.115,2460,5.466,2609,5.16,4729,5.466,5029,2.945,5030,3.262,5033,5.891,5241,5.466,5292,3.484,5293,4.766,5294,3.79,5333,4.766,5372,4.905,5441,4.174,5599,4.327,5611,8.435,5612,7.142,5613,7.142,5614,7.142]],["title/additional-documentation/readme/medium-editor-readme.html",[15,1.409,277,0.813,475,1.121,603,0.76,3507,1.059]],["body/additional-documentation/readme/medium-editor-readme.html",[13,4.154,15,4.038,16,3.587,26,0.007,152,0.269,167,0.269,168,0.304,183,2.139,199,1.496,200,1.573,277,1.83,340,0.005,341,0.006,342,0.005,343,1.963,361,2.475,362,2.571,491,2.029,565,2.729,603,1.711,850,3.407,851,3.587,1722,3.587,2393,3.587,5029,3.031,5030,3.318,5035,5.72,5292,3.587,5293,4.847,5294,3.902,5333,4.847,5370,7.644,5441,4.297,5599,4.454]],["title/additional-documentation/readme/tinymce-readme.html",[475,1.27,603,0.861,3507,1.2,4718,2.331]],["body/additional-documentation/readme/tinymce-readme.html",[0,0.447,6,4.395,13,4.11,15,3.138,16,3.549,26,0.007,152,0.266,167,0.266,168,0.301,183,2.116,199,1.48,340,0.005,341,0.006,342,0.005,343,1.951,361,2.449,362,2.544,491,2.007,522,4.11,565,3.165,603,1.693,655,3.98,850,3.371,851,3.549,1722,3.549,2393,3.549,4718,4.579,4797,6.161,5029,2.999,5030,3.297,5036,5.937,5292,3.549,5293,4.817,5294,3.861,5333,4.817,5372,4.996,5391,5.958,5441,4.251,5599,4.407,5615,7.274,5616,7.274]],["title/additional-documentation/changelog.html",[603,0.994,3507,1.385,5029,1.761]],["body/additional-documentation/changelog.html",[15,3.317,26,0.006,98,2.198,156,2.36,340,0.005,341,0.006,342,0.005,381,2.16,1227,4.345,1715,3.564,3878,4.208,5029,3.171,5030,2.974,5031,4.659,5032,4.842,5033,5.047,5034,5.047,5035,4.842,5036,5.047]],["title/additional-documentation/changelog/data-changelog.html",[370,1.597,603,0.861,3507,1.2,5029,1.527]],["body/additional-documentation/changelog/data-changelog.html",[0,0.182,2,0.876,5,0.624,10,0.123,15,3.733,26,0.006,32,0.713,34,0.876,39,0.315,42,1.056,45,0.476,46,0.555,48,1.228,50,2.445,51,2.436,52,1.228,63,3.191,65,1.187,68,0.254,84,0.492,98,0.848,108,2.431,117,1.745,121,0.606,131,1.414,188,0.518,211,0.791,214,1.849,217,1.529,230,1.829,254,1.865,266,1.382,293,1.99,314,1.207,322,0.726,340,0.002,341,0.003,342,0.002,349,1.197,361,0.999,370,1.28,372,1.624,375,0.614,380,1.448,382,3.024,386,2.484,387,1.172,389,1.71,432,1.53,450,2.309,462,2.625,481,2.445,505,2.746,517,2.038,522,1.677,524,0.879,534,1.64,537,1.948,552,2.756,565,2.363,566,1.868,571,1.734,578,1.798,579,1.868,581,2.184,599,3.024,603,0.69,627,1.798,639,2.271,655,3.09,660,3.527,664,1.038,666,1.624,671,2.431,692,1.101,701,2.431,702,1.798,730,2.431,789,1.71,834,2.23,839,4.626,853,2.038,860,1.124,864,4.179,881,1.487,908,1.342,938,1.197,971,2.431,976,1.734,979,1.677,985,2.693,1007,1.448,1014,3.74,1028,2.791,1061,1.448,1064,3.165,1085,2.144,1089,2.644,1098,2.038,1100,3.165,1104,1.448,1106,1.612,1110,3.165,1115,2.144,1117,2.271,1118,1.624,1128,2.135,1131,1.798,1135,1.868,1138,1.734,1148,1.41,1175,1.798,1196,1.734,1216,1.08,1221,2.644,1234,1.677,1258,1.448,1261,2.038,1278,1.575,1282,1.624,1287,2.271,1295,3.282,1348,3.329,1389,1.798,1416,2.271,1428,2.038,1464,1.448,1550,2.644,1553,1.798,1556,2.644,1560,2.038,1638,4.524,1642,2.19,1654,2.603,1662,1.948,1704,3.329,1711,1.41,1714,1.677,1727,3.659,1729,1.677,1732,1.677,1740,1.798,1741,1.734,1760,2.144,1795,1.868,1831,2.431,1832,1.868,1834,2.144,1859,1.948,1865,1.868,1904,1.798,1993,2.144,2045,3.165,2050,2.038,2124,2.431,2373,2.038,2468,2.644,2470,2.271,2559,2.271,2561,3.707,2562,4.791,2582,3.024,2607,3.329,2723,2.038,2958,2.431,3060,2.144,3065,2.271,3066,2.431,3129,2.271,3507,0.962,3527,2.271,3625,1.624,3642,4.6,3643,2.038,3684,1.624,3734,3.527,3866,5.551,3878,3.09,3933,2.431,3978,4.264,4007,2.644,4091,5.147,4190,2.431,4336,3.774,4379,2.644,4406,2.644,4408,4.105,4838,2.644,4864,2.431,5028,2.038,5030,3.637,5031,5.698,5236,2.144,5262,1.487,5287,1.53,5298,1.677,5302,1.677,5303,1.677,5307,4.471,5323,1.677,5334,4.029,5335,2.431,5336,2.431,5465,2.431,5512,2.644,5532,2.644,5537,2.644,5617,1.798,5618,1.798,5619,2.791,5620,1.798,5621,2.968,5622,6.043,5623,5.646,5624,5.61,5625,5.928,5626,5.915,5627,4.608,5628,2.968,5629,2.968,5630,2.968,5631,2.968,5632,5.686,5633,5.827,5634,2.968,5635,5.827,5636,2.968,5637,2.968,5638,2.968,5639,2.968,5640,2.968,5641,2.968,5642,2.644,5643,2.968,5644,2.968,5645,2.968,5646,2.968,5647,4.105,5648,2.644,5649,2.968,5650,2.968,5651,2.968,5652,4.626,5653,2.644,5654,2.644,5655,2.968,5656,5.698,5657,2.968,5658,5.487,5659,2.968,5660,2.968,5661,2.968,5662,2.431,5663,2.431,5664,2.968,5665,2.968,5666,2.271,5667,2.271,5668,2.271,5669,2.968,5670,4.323,5671,4.42,5672,2.431,5673,2.431,5674,2.271,5675,2.968,5676,2.968,5677,2.968,5678,4.608,5679,2.968,5680,2.968,5681,2.968,5682,2.968,5683,2.968,5684,2.968,5685,5.584,5686,2.644,5687,2.968,5688,2.968,5689,2.968,5690,2.644,5691,3.774,5692,2.431,5693,2.968,5694,2.968,5695,2.968,5696,2.968,5697,5.405,5698,4.608,5699,2.968,5700,2.968,5701,2.968,5702,2.968,5703,2.968,5704,2.968,5705,2.644,5706,2.431,5707,2.431,5708,2.968,5709,2.431,5710,2.644,5711,2.968,5712,2.968,5713,2.968,5714,2.968,5715,2.968,5716,5.804,5717,2.968,5718,2.968,5719,4.608,5720,2.968,5721,2.968,5722,2.968,5723,2.968,5724,2.968,5725,2.968,5726,2.968,5727,2.431,5728,2.431,5729,2.968,5730,2.968,5731,2.968,5732,2.968,5733,2.968,5734,2.431,5735,2.431,5736,2.968,5737,2.431,5738,2.431,5739,2.968,5740,2.968,5741,2.968,5742,2.968,5743,4.612,5744,2.968,5745,2.968,5746,2.644,5747,4.608,5748,4.105,5749,4.105,5750,1.798,5751,1.798,5752,4.105,5753,2.968,5754,2.968,5755,2.431,5756,2.968,5757,2.968,5758,2.431,5759,2.431,5760,2.271,5761,2.968,5762,2.968,5763,2.968,5764,2.968,5765,2.431,5766,2.968,5767,2.644,5768,2.968,5769,2.968,5770,2.644,5771,2.968,5772,2.644,5773,2.968,5774,2.968,5775,2.644,5776,2.644,5777,2.644,5778,2.644,5779,2.644,5780,2.644,5781,2.968,5782,2.968,5783,2.644,5784,5.405,5785,2.644,5786,2.431,5787,2.431,5788,2.968,5789,4.176,5790,2.968,5791,2.968,5792,2.968,5793,2.644,5794,2.968,5795,2.968,5796,2.644,5797,2.431,5798,2.968,5799,2.968,5800,2.644,5801,2.644,5802,2.644,5803,2.968,5804,2.968,5805,2.968,5806,2.968,5807,2.968,5808,2.968,5809,2.968,5810,2.968,5811,2.968,5812,2.968,5813,2.968,5814,2.644,5815,2.431,5816,2.644,5817,4.608,5818,2.968,5819,2.644,5820,2.644,5821,2.968,5822,2.644,5823,2.968,5824,2.968,5825,2.968,5826,2.968,5827,2.968,5828,2.968,5829,2.968,5830,2.644,5831,2.968,5832,2.644,5833,2.968,5834,2.968,5835,2.968,5836,2.968,5837,2.968,5838,2.644,5839,2.644,5840,2.968,5841,2.644,5842,2.968,5843,2.644,5844,2.968,5845,2.968,5846,2.968,5847,2.968,5848,2.968,5849,2.968,5850,2.968,5851,2.968,5852,2.644,5853,2.644,5854,2.644,5855,2.968,5856,2.968,5857,2.968,5858,2.968,5859,2.968,5860,2.968,5861,2.644,5862,2.644,5863,2.644,5864,2.968,5865,2.968,5866,2.431,5867,2.968,5868,2.968,5869,2.644,5870,2.644,5871,2.968,5872,2.968,5873,2.968,5874,2.644,5875,2.644,5876,2.968,5877,2.968,5878,2.968,5879,2.968,5880,2.968,5881,2.968,5882,2.968,5883,2.968,5884,2.644,5885,2.644,5886,2.431,5887,2.431,5888,2.644,5889,2.644,5890,2.644,5891,2.968,5892,2.968,5893,2.644]],["title/additional-documentation/changelog/ui-changelog.html",[603,0.861,989,2.092,3507,1.2,5029,1.527]],["body/additional-documentation/changelog/ui-changelog.html",[0,0.394,2,0.696,5,0.769,10,0.151,15,3.259,26,0.006,32,0.993,34,1.347,42,1.603,44,2.303,45,0.586,46,0.684,47,2.706,48,1.889,51,2.329,53,3.543,55,1.941,63,2.706,65,1.653,78,1.833,84,0.896,98,1.045,101,0.429,108,2.996,121,0.71,131,2.174,139,2.067,145,2.067,152,0.197,156,2.713,167,0.134,214,1.809,217,1.544,230,1.441,235,0.942,254,1.798,293,0.823,340,0.002,341,0.004,342,0.002,349,1.476,361,1.817,375,0.757,380,1.785,382,3.543,386,2.122,387,1.444,389,1.358,397,0.942,432,1.886,450,1.833,481,1.941,491,1.009,534,1.653,552,3.456,565,2.381,571,2.138,581,2.088,597,2.706,664,1.279,666,2.001,697,1.508,702,3.27,789,1.358,834,1.444,838,2.996,842,3.05,860,1.385,863,2.001,864,4.959,881,1.833,908,1.654,938,1.476,989,2.067,1014,3.367,1061,1.785,1085,2.643,1100,3.708,1110,2.512,1115,4.636,1131,2.216,1135,2.303,1175,3.27,1193,2.401,1196,3.155,1216,1.331,1230,1.886,1234,2.067,1243,2.643,1258,1.785,1282,2.001,1287,2.8,1295,4.076,1348,3.901,1389,2.216,1428,3.708,1464,1.785,1528,2.8,1582,2.401,1638,4.649,1642,3.367,1644,2.512,1662,2.401,1704,3.901,1711,1.739,1714,3.05,1727,4.01,1732,2.067,1740,3.27,1741,2.138,1763,2.067,1795,2.303,1830,2.8,1832,2.303,1834,2.643,1838,4.211,1858,2.8,1956,2.303,2045,2.512,2050,2.512,2124,2.996,2373,2.512,2453,2.512,2454,2.512,2470,2.8,2540,2.996,2561,2.401,2562,4.593,2564,2.138,2575,2.996,2652,3.259,2665,3.155,2723,2.512,2958,2.996,3060,2.643,3063,2.8,3065,2.8,3066,2.996,3129,2.8,3301,2.401,3527,2.8,3542,3.259,3625,2.954,3642,3.901,3643,2.512,3684,2.954,3734,2.8,3738,3.259,3866,5.987,3878,2.001,3978,4.14,3985,2.643,4091,4.837,4190,2.996,4479,2.512,4652,4.422,5028,2.512,5030,3.459,5220,2.996,5236,2.643,5262,1.833,5287,1.886,5298,2.067,5302,2.067,5303,2.067,5307,4.252,5323,2.067,5334,4.14,5335,2.996,5336,2.996,5418,3.259,5617,2.216,5618,2.216,5619,2.216,5620,2.216,5622,6.025,5623,4.422,5624,5.638,5625,5.932,5626,5.923,5632,5.713,5633,4.911,5635,6.56,5642,3.259,5647,3.259,5648,3.259,5652,4.422,5653,3.259,5654,3.259,5656,5.356,5658,5.475,5662,2.996,5663,2.996,5666,2.8,5667,2.8,5668,2.8,5670,2.8,5671,4.79,5672,2.996,5673,2.996,5674,2.8,5685,5.783,5686,3.259,5690,3.259,5691,4.422,5692,2.996,5697,5.42,5706,2.996,5707,2.996,5709,5.255,5710,3.259,5716,5.367,5727,2.996,5728,2.996,5734,2.996,5735,2.996,5737,2.996,5738,2.996,5743,4.79,5746,3.259,5750,2.216,5751,2.216,5752,4.81,5758,4.422,5759,2.996,5760,2.8,5765,2.996,5767,3.259,5772,3.259,5775,3.259,5776,3.259,5777,3.259,5778,3.259,5779,3.259,5780,3.259,5783,3.259,5784,4.955,5785,3.259,5786,4.422,5787,2.996,5789,3.887,5793,3.259,5796,3.259,5797,2.996,5814,3.259,5815,2.996,5816,3.259,5819,3.259,5820,3.259,5822,3.259,5830,3.259,5832,3.259,5838,3.259,5839,3.259,5843,3.259,5852,3.259,5853,3.259,5854,3.259,5861,3.259,5862,3.259,5863,3.259,5866,2.996,5869,3.259,5870,3.259,5874,3.259,5875,3.259,5884,3.259,5885,3.259,5886,2.996,5887,2.996,5890,3.259,5893,3.259,5894,3.658,5895,3.658,5896,3.658,5897,3.658,5898,3.658,5899,3.658,5900,3.658,5901,3.658,5902,3.658,5903,3.658,5904,3.658,5905,3.658,5906,3.658,5907,3.658,5908,2.996,5909,3.658,5910,3.658,5911,3.658,5912,3.658,5913,3.658,5914,3.658,5915,3.658,5916,3.658,5917,3.658,5918,3.658,5919,3.658,5920,3.658,5921,3.658,5922,3.658,5923,3.658,5924,3.658,5925,3.658,5926,3.658,5927,3.658,5928,3.658,5929,3.658,5930,3.658,5931,3.658,5932,3.658,5933,3.658,5934,3.658,5935,3.658,5936,3.658,5937,3.658,5938,3.658,5939,3.658,5940,5.399,5941,5.399,5942,5.399,5943,5.399,5944,3.658,5945,3.658,5946,3.658,5947,3.658,5948,3.658,5949,3.658,5950,3.658,5951,3.658,5952,3.658,5953,3.658,5954,3.658,5955,3.658,5956,3.658,5957,3.259,5958,3.259,5959,3.259,5960,3.658,5961,3.658,5962,3.259,5963,3.259,5964,3.259,5965,3.259,5966,3.259,5967,3.259,5968,3.259,5969,3.658,5970,3.658,5971,3.658,5972,3.658,5973,3.658,5974,3.658,5975,3.658,5976,3.658,5977,3.658,5978,3.658,5979,3.658,5980,2.996,5981,3.658,5982,3.658,5983,3.658,5984,3.658,5985,3.658,5986,3.658,5987,3.658,5988,3.658,5989,3.658,5990,3.658,5991,3.658,5992,3.658,5993,3.658,5994,3.658,5995,3.658,5996,3.658,5997,3.658,5998,3.658,5999,3.658,6000,3.658,6001,3.658,6002,3.658,6003,3.658,6004,3.658,6005,3.658,6006,3.658,6007,3.658,6008,3.658,6009,3.259,6010,3.658,6011,3.259,6012,3.658,6013,3.658,6014,3.658]],["title/additional-documentation/changelog/core-changelog.html",[603,0.861,698,1.806,3507,1.2,5029,1.527]],["body/additional-documentation/changelog/core-changelog.html",[2,1.075,10,0.234,15,2.438,26,0.006,34,1.075,45,0.906,65,1.456,98,2.086,131,2.24,188,0.987,217,1.275,230,1.15,254,1.15,340,0.004,341,0.005,342,0.004,380,3.561,381,2.673,389,2.709,505,2.438,534,1.456,565,2.098,664,1.977,834,2.232,863,3.093,864,3.71,908,2.556,1085,4.084,1104,2.758,1148,2.687,1216,2.056,1234,3.194,1282,3.093,1287,4.327,1295,3.763,1389,3.424,1400,4.084,1464,2.758,1553,3.424,1727,3,1740,3.424,1741,3.304,1831,4.63,1832,3.559,1904,3.424,2050,3.883,2559,4.327,2562,4.424,2564,3.304,2607,4.084,2665,3.304,2723,5.014,2984,5.036,3060,5.274,3063,4.327,3625,3.994,3629,5.036,3642,4.084,3643,3.883,3734,4.327,3866,6.415,3878,3.093,3978,3.304,4091,5.208,5030,3.68,5262,2.833,5287,2.914,5298,3.194,5302,3.194,5303,3.194,5307,4.555,5323,3.194,5334,4.725,5617,3.424,5618,3.424,5619,3.424,5620,3.424,5622,6.015,5624,5.718,5625,5.488,5626,5.488,5652,4.63,5656,5.766,5658,4.898,5670,4.327,5671,5.359,5674,4.327,5697,5.359,5705,5.036,5706,4.63,5707,4.63,5716,5.607,5727,4.63,5728,4.63,5734,4.63,5735,4.63,5737,4.63,5738,4.63,5743,4.898,5750,3.424,5751,3.424,5760,4.327,5765,4.63,5784,5.359,5786,4.63,5787,4.63,5789,4.898,5797,4.63,5841,5.036,5866,4.63,5886,4.63,5887,4.63,5888,5.036,5889,5.036,5908,4.63,5957,5.036,5958,5.036,5959,5.036,5980,4.63,6011,5.036,6015,5.653,6016,5.653,6017,5.653,6018,5.653,6019,5.653,6020,5.653,6021,5.653,6022,5.653,6023,5.653,6024,5.653,6025,5.036,6026,5.036,6027,5.036,6028,5.653,6029,5.653,6030,5.653,6031,5.653,6032,5.653,6033,5.653,6034,5.653,6035,5.653,6036,5.653,6037,5.653,6038,5.653,6039,5.653,6040,5.653]],["title/additional-documentation/changelog/style-changelog.html",[603,0.861,3507,1.2,3624,2.43,5029,1.527]],["body/additional-documentation/changelog/style-changelog.html",[6,2.887,10,0.3,26,0.006,34,1.677,42,1.357,48,1.493,52,1.493,63,2.807,98,1.601,102,0.571,131,2.227,214,1.842,217,1.541,254,1.637,293,1.633,340,0.004,341,0.005,342,0.004,386,2.038,517,4.984,524,2.149,664,1.959,834,3.569,863,3.065,864,4.762,1104,2.733,1110,3.847,1115,4.047,1216,2.038,1295,2.887,1389,3.393,1390,6.465,1464,3.927,1727,3.851,1740,3.393,1838,3.676,2139,4.588,2562,3.065,2564,3.273,3063,4.287,3075,4.588,3624,3.676,3625,4.659,3642,4.047,3643,3.847,3684,3.065,3866,4.984,3878,3.065,3978,3.273,4091,5.155,4479,3.847,5030,3.643,5032,5.932,5236,4.047,5262,2.807,5287,2.887,5298,3.164,5302,3.164,5303,3.164,5307,4.517,5323,3.164,5334,4.241,5544,4.99,5617,3.393,5618,3.393,5619,3.393,5620,3.393,5622,5.989,5624,5.757,5625,5.757,5626,5.798,5632,6.152,5656,5.708,5658,5.158,5666,4.287,5667,6.161,5668,4.287,5670,4.287,5671,5.343,5672,4.588,5673,4.588,5674,4.287,5697,5.158,5716,3.676,5743,4.876,5750,3.393,5751,3.393,5758,4.588,5759,4.588,5760,4.287,5784,4.876,5789,3.393,5800,4.99,5801,4.99,5802,4.99,5815,4.588,5908,4.588,5980,4.588,6025,4.99,6026,4.99,6027,4.99,6041,5.601,6042,5.601,6043,5.601,6044,5.601,6045,5.601,6046,5.601,6047,5.601,6048,5.601,6049,5.601,6050,5.601,6051,5.601,6052,5.601,6053,5.601,6054,5.601,6055,5.601,6056,5.601,6057,5.601,6058,5.601,6059,5.601,6060,5.601,6061,5.601,6062,5.601,6063,5.601,6064,5.601,6065,5.601,6066,5.601,6067,5.601,6068,5.601,6069,5.601,6070,5.601,6071,5.601,6072,5.601,6073,5.601,6074,5.601,6075,5.601,6076,5.601,6077,5.601,6078,5.601,6079,5.601,6080,5.601,6081,5.601]],["title/additional-documentation/changelog/calendar-changelog.html",[603,0.861,800,2.331,3507,1.2,5029,1.527]],["body/additional-documentation/changelog/calendar-changelog.html",[10,0.26,15,2.717,26,0.005,98,1.8,340,0.004,341,0.005,342,0.004,552,3.074,664,2.203,1193,4.134,1216,2.292,1227,5.502,3129,4.822,3878,3.447,3978,3.682,4091,5.329,5030,3.766,5236,4.552,5262,3.158,5287,3.247,5298,3.559,5302,3.559,5303,3.559,5307,4.629,5323,3.559,5334,4.968,5617,3.816,5618,3.816,5619,3.816,5620,3.816,5622,6.015,5623,6.403,5624,5.781,5625,5.537,5626,5.537,5632,4.552,5635,5.984,5656,5.899,5658,5.15,5666,4.822,5667,4.822,5668,4.822,5671,5.385,5685,4.822,5691,5.16,5692,5.16,5697,5.385,5716,4.134,5743,4.736,5750,3.816,5751,3.816,5784,4.736,5789,4.736,5962,5.613,5963,5.613,5964,5.613,5965,5.613,5966,5.613,5967,5.613,5968,5.613,6082,6.3,6083,6.3,6084,6.3,6085,6.3,6086,6.3,6087,6.3,6088,7.818,6089,6.3,6090,6.3,6091,6.3,6092,6.3,6093,6.3,6094,6.3,6095,6.3,6096,6.3,6097,6.3,6098,5.613,6099,6.3,6100,6.3,6101,6.3]],["title/additional-documentation/changelog/location-changelog.html",[266,0.906,603,0.861,3507,1.2,5029,1.527]],["body/additional-documentation/changelog/location-changelog.html",[10,0.263,26,0.005,50,4.176,53,4.178,98,1.819,266,1.926,340,0.004,341,0.005,342,0.004,664,2.226,1216,2.316,2373,4.372,2470,4.872,2562,3.483,3397,7.01,3878,3.483,3978,4.598,4091,5.308,5030,3.751,5034,6.366,5262,3.191,5287,3.281,5298,3.596,5302,3.596,5303,3.596,5307,4.611,5323,3.596,5334,4.598,5617,3.856,5618,3.856,5619,3.856,5620,3.856,5622,6.008,5624,5.734,5625,5.553,5626,5.553,5632,4.599,5633,4.872,5635,4.872,5656,5.877,5658,5.174,5662,5.214,5663,5.214,5671,5.405,5685,4.872,5697,5.174,5709,5.214,5716,4.178,5743,4.767,5748,7.01,5749,7.01,5750,3.856,5751,3.856,5770,5.671,5784,5.174,5789,4.767,6102,6.366,6103,6.366,6104,6.366,6105,6.366,6106,6.366,6107,6.366,6108,6.366,6109,6.366,6110,6.366,6111,7.869,6112,6.366,6113,6.366,6114,6.366,6115,6.366,6116,6.366,6117,6.366,6118,6.366,6119,6.366,6120,6.366]],["title/additional-documentation/changelog/ace-changelog.html",[14,2.243,603,0.861,3507,1.2,5029,1.527]],["body/additional-documentation/changelog/ace-changelog.html",[10,0.274,14,4.885,26,0.005,98,1.894,340,0.004,341,0.005,342,0.004,664,2.318,989,3.744,1216,2.41,3878,3.626,3978,3.872,4091,5.34,5030,3.774,5033,6.405,5262,3.321,5287,3.416,5298,3.744,5302,3.744,5303,3.744,5307,4.639,5323,4.556,5334,4.713,5617,4.014,5618,4.014,5619,4.014,5620,4.014,5622,5.985,5624,5.782,5625,4.885,5626,4.885,5633,5.071,5656,5.912,5658,4.014,5671,5.48,5697,5.266,5716,4.349,5743,4.885,5750,4.014,5751,4.014,5755,5.427,5784,4.885,5789,4.885,6121,6.626,6122,6.626,6123,6.626,6124,8.065,6125,6.626,6126,6.626,6127,6.626,6128,6.626,6129,6.626,6130,6.626,6131,6.626,6132,6.626,6133,6.626,6134,6.626]],["title/additional-documentation/changelog/medium-editor-changelog.html",[15,1.409,277,0.813,603,0.76,3507,1.059,5029,1.347]],["body/additional-documentation/changelog/medium-editor-changelog.html",[10,0.275,15,4.212,26,0.005,98,1.901,340,0.004,341,0.005,342,0.004,664,2.326,1216,2.419,3878,3.639,3978,3.886,4091,5.343,5030,3.776,5035,6.147,5262,3.333,5287,3.428,5298,3.757,5302,3.757,5303,3.757,5307,4.641,5323,3.757,5334,4.723,5617,4.029,5618,4.029,5619,4.029,5620,4.029,5622,5.967,5624,5.786,5625,4.029,5626,4.029,5656,5.915,5658,4.029,5671,5.487,5697,5.275,5743,4.896,5750,4.029,5751,4.029,5784,4.896,5789,4.896,6135,6.65,6136,8.082,6137,6.65,6138,6.65,6139,6.65,6140,6.65,6141,6.65,6142,6.65,6143,6.65,6144,6.65,6145,6.65]],["title/additional-documentation/changelog/tinymce-changelog.html",[603,0.861,3507,1.2,4718,2.331,5029,1.527]],["body/additional-documentation/changelog/tinymce-changelog.html",[0,0.401,10,0.27,16,3.187,26,0.005,55,3.467,62,3.957,98,1.867,133,2.579,340,0.004,341,0.005,342,0.004,581,2.526,664,2.285,1104,3.187,1216,2.376,2561,4.287,3878,3.574,3978,4.672,4091,5.329,4718,5.033,5030,3.766,5036,6.391,5262,3.274,5287,3.367,5298,3.69,5302,3.69,5303,3.69,5307,4.652,5323,3.69,5334,4.672,5617,3.957,5618,3.957,5619,3.957,5620,3.957,5622,5.975,5624,5.82,5625,5.233,5626,5.233,5656,5.899,5658,3.957,5671,5.453,5697,5.233,5743,4.843,5750,3.957,5751,3.957,5784,4.843,5789,4.843,6146,6.532,6147,7.994,6148,6.532,6149,6.532,6150,6.532,6151,6.532,6152,6.532,6153,6.532,6154,6.532,6155,6.532,6156,6.532,6157,6.532,6158,6.532,6159,6.532,6160,6.532,6161,6.532,6162,6.532,6163,6.532]],["title/additional-documentation/adding-new-packages.html",[84,0.542,603,0.76,3507,1.059,5266,2.144,5288,2.244]],["body/additional-documentation/adding-new-packages.html",[26,0.007,34,1.209,45,1.019,73,2.511,78,3.187,79,3.277,84,1.52,98,1.817,101,0.923,152,0.335,156,1.951,183,1.849,340,0.004,341,0.005,342,0.004,346,2.408,361,2.647,370,3.953,384,5.171,522,3.592,565,3.401,596,4.302,597,3.941,603,1.479,651,4.173,655,3.479,664,2.224,709,5.665,789,2.36,838,5.208,846,4.003,850,2.947,851,3.102,870,4.866,871,4.003,897,4.173,964,4.763,1022,4.053,1068,4.95,1146,4.173,1416,4.866,1464,3.836,1761,6.44,1928,3.852,2008,4.367,2180,4.173,2342,5.208,2408,4.003,2460,4.866,2561,5.602,2665,3.716,2675,5.374,2744,4.95,3012,4.866,3154,6.44,3271,4.866,4089,6.44,4233,5.208,5029,2.622,5030,3.448,5266,4.173,5277,4.866,5283,5.208,5288,4.367,5292,3.836,5296,5.208,5306,4.866,5307,3.022,5311,5.863,5316,5.4,5353,6.992,5358,5.665,5372,4.367,5391,5.208,5755,5.208,6009,5.665,6164,6.358,6165,7.863,6166,6.358,6167,8.536,6168,6.358,6169,6.358,6170,6.358,6171,6.358,6172,6.358,6173,6.358,6174,6.358,6175,6.358,6176,6.358,6177,6.358,6178,6.358,6179,7.863,6180,7.863,6181,6.358,6182,6.358,6183,6.358,6184,6.358,6185,6.358,6186,6.358,6187,7.863,6188,7.863,6189,6.358]],["title/additional-documentation/stackblitz.html",[603,0.994,3507,1.385,6190,3.805]],["body/additional-documentation/stackblitz.html",[2,1.396,6,3.785,16,3.582,26,0.007,152,0.332,167,0.269,168,0.303,199,1.744,340,0.005,341,0.006,342,0.005,343,1.68,361,2.471,362,2.568,491,2.026,565,2.725,655,4.017,789,2.725,794,5.626,897,3.897,1227,4.844,2180,3.897,2392,5.619,4593,6.014,5441,4.291,6098,6.541,6190,7.638,6191,7.342,6192,7.342,6193,7.342,6194,7.342]],["title/additional-documentation/publishing.html",[603,0.994,3507,1.385,6195,4.271]],["body/additional-documentation/publishing.html",[0,0.448,5,1.797,26,0.006,78,3.656,79,3.76,84,1.21,183,2.121,199,1.484,272,1.847,275,2.333,340,0.005,341,0.006,342,0.005,392,2.88,491,2.013,504,3.298,534,1.879,565,3.17,577,5.27,586,6.995,789,3.17,850,3.38,851,3.558,969,5.943,970,5.376,1105,3.298,1642,3.467,2180,3.871,2393,3.558,3458,5.974,4592,4.262,5262,3.656,5287,3.76,5408,6.543,5444,6.536,5456,5.974,5465,5.974,5466,6.498,5467,6.498,5468,6.498,5469,6.498]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["0",{"_index":903,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["0.12.3",{"_index":5390,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["0.18.10",{"_index":6114,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.11",{"_index":6113,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.12",{"_index":6112,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.13",{"_index":6111,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.14",{"_index":6106,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.15",{"_index":6105,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.16",{"_index":6103,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.17",{"_index":6102,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.3",{"_index":6120,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.4",{"_index":6119,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.5",{"_index":6118,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.6",{"_index":6117,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.7",{"_index":5770,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.8",{"_index":6116,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.9",{"_index":6115,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.19.10",{"_index":6033,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.11",{"_index":6032,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.12",{"_index":6031,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.6",{"_index":6037,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.7",{"_index":6036,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.8",{"_index":6035,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.9",{"_index":6034,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.2.10",{"_index":6094,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.11",{"_index":6093,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.12",{"_index":6092,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.13",{"_index":6089,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.14",{"_index":6088,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.15",{"_index":6085,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.16",{"_index":6084,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.17",{"_index":6083,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.18",{"_index":6082,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.3",{"_index":6101,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.4",{"_index":6100,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.5",{"_index":6099,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.6",{"_index":6098,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["0.2.7",{"_index":6097,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.8",{"_index":6096,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.9",{"_index":6095,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.20.0",{"_index":6030,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.20.1",{"_index":6029,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.20.2",{"_index":6028,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.21.0",{"_index":6027,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.1",{"_index":6079,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.2",{"_index":6078,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.3",{"_index":6077,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.4",{"_index":6076,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.5",{"_index":6075,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.6",{"_index":6074,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.9",{"_index":5244,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":6026,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.1",{"_index":6073,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.2",{"_index":6072,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.3",{"_index":6071,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.4",{"_index":6070,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.5",{"_index":6069,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.6",{"_index":6068,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.7",{"_index":6067,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.23.0",{"_index":6025,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0.23.1",{"_index":6056,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.23.2",{"_index":6048,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.23.3",{"_index":6046,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.23.4",{"_index":6041,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.24.0",{"_index":6023,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.1",{"_index":6022,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.2",{"_index":6021,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.3",{"_index":6020,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.25.0",{"_index":6019,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.25.1",{"_index":6018,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.25.2",{"_index":6017,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.26.0",{"_index":6016,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.27.0",{"_index":6015,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.36.10",{"_index":5987,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.11",{"_index":5986,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.12",{"_index":5985,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.13",{"_index":5984,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.14",{"_index":5983,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.15",{"_index":5982,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.4",{"_index":5998,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.5",{"_index":5997,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.6",{"_index":5996,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.7",{"_index":5995,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.8",{"_index":5992,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.9",{"_index":5988,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.0",{"_index":5979,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.1",{"_index":5977,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.2",{"_index":5976,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.3",{"_index":5975,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.4",{"_index":5974,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.38.0",{"_index":5973,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.0",{"_index":5972,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.1",{"_index":5969,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.2",{"_index":5961,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.3",{"_index":5960,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.4.10",{"_index":6138,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.11",{"_index":6137,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.12",{"_index":6136,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.13",{"_index":6135,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.3",{"_index":6145,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.4",{"_index":6144,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.5",{"_index":6143,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.6",{"_index":6142,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.7",{"_index":6141,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.8",{"_index":6140,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.9",{"_index":6139,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.40.0",{"_index":5952,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.0",{"_index":5944,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.1",{"_index":5940,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.2",{"_index":5939,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.3",{"_index":5936,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.4",{"_index":5933,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.5",{"_index":5932,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.6",{"_index":5930,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.0",{"_index":5928,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.1",{"_index":5927,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.10",{"_index":5833,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.11",{"_index":5831,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.12",{"_index":5829,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.13",{"_index":5828,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.14",{"_index":5827,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.15",{"_index":5826,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.16",{"_index":5825,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.2",{"_index":5926,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.3",{"_index":5925,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.4",{"_index":5839,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.5",{"_index":5838,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.6",{"_index":5837,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.7",{"_index":5836,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.8",{"_index":5835,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.9",{"_index":5834,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.0",{"_index":5822,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.1",{"_index":5820,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.10",{"_index":5798,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.2",{"_index":5819,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.3",{"_index":5816,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.4",{"_index":5814,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.5",{"_index":5810,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.6",{"_index":5808,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.7",{"_index":5806,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.8",{"_index":5803,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.9",{"_index":5799,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.44.0",{"_index":5796,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.44.1",{"_index":5793,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.44.2",{"_index":5788,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.0",{"_index":5785,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.45.1",{"_index":5783,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.45.2",{"_index":5780,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.45.3",{"_index":5779,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.45.4",{"_index":5775,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.45.5",{"_index":5772,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.45.6",{"_index":5767,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.46.0",{"_index":5757,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.1",{"_index":5753,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.2",{"_index":5747,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.3",{"_index":5745,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.4",{"_index":5744,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.5",{"_index":5742,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.6",{"_index":5741,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.7",{"_index":5740,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.8",{"_index":5739,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.0",{"_index":5736,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.1",{"_index":5733,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.2",{"_index":5731,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.3",{"_index":5730,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.4",{"_index":5725,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.5",{"_index":5724,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.6",{"_index":5721,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.7",{"_index":5718,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.8",{"_index":5715,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.9",{"_index":5708,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.0",{"_index":5703,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.1",{"_index":5701,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.2",{"_index":5696,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.3",{"_index":5693,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.4",{"_index":5689,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.5",{"_index":5688,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.6",{"_index":5687,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.49.0",{"_index":5684,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.49.1",{"_index":5683,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.49.2",{"_index":5680,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.49.3",{"_index":5675,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.5.10",{"_index":6150,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.11",{"_index":6149,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.12",{"_index":6148,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.13",{"_index":6147,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.14",{"_index":6146,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.3",{"_index":6161,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.4",{"_index":6160,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.5",{"_index":6159,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.6",{"_index":6158,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.7",{"_index":6153,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.8",{"_index":6152,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.9",{"_index":6151,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.50.0",{"_index":5669,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.50.1",{"_index":5661,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.50.10",{"_index":5621,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.50.2",{"_index":5660,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.50.3",{"_index":5657,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.50.4",{"_index":5655,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.50.5",{"_index":5651,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.50.6",{"_index":5649,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.50.7",{"_index":5646,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.50.8",{"_index":5631,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.50.9",{"_index":5629,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.6.10",{"_index":6127,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.11",{"_index":6126,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.12",{"_index":6124,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.13",{"_index":6122,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.14",{"_index":6121,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.3",{"_index":6134,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.4",{"_index":6133,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.5",{"_index":6132,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.6",{"_index":6131,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.7",{"_index":6130,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.8",{"_index":6129,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.9",{"_index":6128,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.8.29",{"_index":5256,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":5043,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":5127,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":5222,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5221,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5223,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5148,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5182,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5200,"title":{},"body":{"coverage.html":{}}}],["00a2e2e",{"_index":6162,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["01",{"_index":5624,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["01d1130",{"_index":5702,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["02",{"_index":5784,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["020e689",{"_index":5865,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0256008",{"_index":5766,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["03",{"_index":5697,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["04",{"_index":5716,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["041cd83",{"_index":5947,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["04fffbd",{"_index":5870,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["05",{"_index":5658,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["06",{"_index":5670,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0634a5a",{"_index":6053,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["06b615c",{"_index":5851,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["07",{"_index":5632,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["0777809",{"_index":5968,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["08",{"_index":5623,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["0890cd3",{"_index":5907,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0b433be",{"_index":5848,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0dbce91",{"_index":5935,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0dd22f6",{"_index":5735,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["1",{"_index":183,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["1&&!pagination?.isfirst",{"_index":4068,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1&&!pagination?.islast",{"_index":4072,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1)[0",{"_index":930,"title":{},"body":{"classes/Collection.html":{}}}],["1.0.0",{"_index":5235,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":5250,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":5245,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":5413,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["1.4.3",{"_index":5242,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":5254,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":5042,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1464,"title":{},"body":{"components/DefaultOutputComponent.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["10.0.0",{"_index":5240,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":5051,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":5226,"title":{},"body":{"coverage.html":{}}}],["10/13",{"_index":5203,"title":{},"body":{"coverage.html":{}}}],["10/14",{"_index":5194,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1455,"title":{},"body":{"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["1000",{"_index":433,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["10004",{"_index":1466,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["107d1de",{"_index":5637,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["10m",{"_index":3018,"title":{},"body":{"components/ListComponent.html":{}}}],["11",{"_index":6187,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["11/12",{"_index":5151,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":5085,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":5211,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":3643,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["12/12",{"_index":5068,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":5126,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":5117,"title":{},"body":{"coverage.html":{}}}],["12/15",{"_index":5174,"title":{},"body":{"coverage.html":{}}}],["12/20",{"_index":5100,"title":{},"body":{"coverage.html":{}}}],["12/30",{"_index":5159,"title":{},"body":{"coverage.html":{}}}],["121566c",{"_index":5883,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["13/16",{"_index":5095,"title":{},"body":{"coverage.html":{}}}],["13/29",{"_index":5108,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":5336,"title":{},"body":{"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["14/18",{"_index":5098,"title":{},"body":{"coverage.html":{}}}],["14/19",{"_index":5153,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":5789,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["16/16",{"_index":5058,"title":{},"body":{"coverage.html":{}}}],["16/18",{"_index":5131,"title":{},"body":{"coverage.html":{}}}],["16/28",{"_index":5171,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":5681,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["17/22",{"_index":5142,"title":{},"body":{"coverage.html":{}}}],["17a2ba7",{"_index":6047,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["18/21",{"_index":5178,"title":{},"body":{"coverage.html":{}}}],["18/28",{"_index":5134,"title":{},"body":{"coverage.html":{}}}],["187",{"_index":5855,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["19",{"_index":5335,"title":{},"body":{"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["19a5130",{"_index":5642,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["1].id",{"_index":417,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["1].indexof(tab.route",{"_index":4702,"title":{},"body":{"components/TabsComponent.html":{}}}],["1].property",{"_index":3221,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["1c382d1",{"_index":5875,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["1c8180f",{"_index":5674,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["1cb8b1c",{"_index":6010,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["1cfc328",{"_index":5843,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["1d9e231",{"_index":6002,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["1e315d0",{"_index":6051,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["2",{"_index":850,"title":{},"body":{"classes/Collection.html":{},"classes/Item.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["2.0.1",{"_index":5249,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":5417,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["2.6.5",{"_index":5243,"title":{},"body":{"dependencies.html":{}}}],["2.html",{"_index":5581,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["2/2",{"_index":5143,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5199,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3014,"title":{},"body":{"components/ListComponent.html":{}}}],["20/21",{"_index":5224,"title":{},"body":{"coverage.html":{}}}],["20/26",{"_index":5041,"title":{},"body":{"coverage.html":{}}}],["20/28",{"_index":5197,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":2466,"title":{},"body":{"directives/ImageDirective.html":{},"components/TinymceComponent.html":{}}}],["2000",{"_index":3304,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2019",{"_index":5622,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["20a3f6e",{"_index":5909,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["21",{"_index":5334,"title":{},"body":{"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["219a51a",{"_index":5641,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["22",{"_index":5652,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["22/22",{"_index":5075,"title":{},"body":{"coverage.html":{}}}],["22/24",{"_index":5070,"title":{},"body":{"coverage.html":{}}}],["22/28",{"_index":5206,"title":{},"body":{"coverage.html":{}}}],["22/36",{"_index":5154,"title":{},"body":{"coverage.html":{}}}],["229",{"_index":6086,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["232",{"_index":5962,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["237",{"_index":5777,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["24",{"_index":5685,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["24/30",{"_index":5210,"title":{},"body":{"coverage.html":{}}}],["24868b9",{"_index":5863,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["25",{"_index":3978,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["25/26",{"_index":5225,"title":{},"body":{"coverage.html":{}}}],["25/36",{"_index":5050,"title":{},"body":{"coverage.html":{}}}],["25/42",{"_index":5122,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":6090,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["259",{"_index":5709,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["25a36aa",{"_index":5981,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["26",{"_index":5633,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["26/26",{"_index":5071,"title":{},"body":{"coverage.html":{}}}],["26/38",{"_index":5054,"title":{},"body":{"coverage.html":{}}}],["261",{"_index":5921,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["263",{"_index":1780,"title":{},"body":{"injectables/EntryService.html":{}}}],["265",{"_index":5636,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["267",{"_index":5923,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["27",{"_index":4190,"title":{},"body":{"injectables/PopService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["27/27",{"_index":5096,"title":{},"body":{"coverage.html":{}}}],["275",{"_index":5638,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["276",{"_index":5912,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["277",{"_index":5776,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["28",{"_index":5671,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["280",{"_index":5895,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["2826ac4",{"_index":5880,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["289",{"_index":5953,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["29",{"_index":5743,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["29/30",{"_index":5063,"title":{},"body":{"coverage.html":{}}}],["29/31",{"_index":5067,"title":{},"body":{"coverage.html":{}}}],["29/37",{"_index":5209,"title":{},"body":{"coverage.html":{}}}],["29/40",{"_index":5162,"title":{},"body":{"coverage.html":{}}}],["293",{"_index":5719,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["2b0b354",{"_index":5782,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["2d2e536",{"_index":5707,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["2e0756e",{"_index":5920,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["2e97a10",{"_index":5763,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["3",{"_index":851,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["3.13.1",{"_index":5247,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":5059,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5083,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":5140,"title":{},"body":{"coverage.html":{}}}],["30/42",{"_index":5114,"title":{},"body":{"coverage.html":{}}}],["30/44",{"_index":5056,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":3370,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["302",{"_index":5647,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["303",{"_index":5640,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["32/45",{"_index":5082,"title":{},"body":{"coverage.html":{}}}],["33/36",{"_index":5186,"title":{},"body":{"coverage.html":{}}}],["330",{"_index":5727,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["336ba95",{"_index":5712,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["34/45",{"_index":5160,"title":{},"body":{"coverage.html":{}}}],["34/50",{"_index":5109,"title":{},"body":{"coverage.html":{}}}],["341baba",{"_index":5668,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["343",{"_index":5713,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["348",{"_index":5711,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["35022a6",{"_index":5759,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["36/53",{"_index":5111,"title":{},"body":{"coverage.html":{}}}],["36/67",{"_index":5181,"title":{},"body":{"coverage.html":{}}}],["36/82",{"_index":5147,"title":{},"body":{"coverage.html":{}}}],["36/92",{"_index":5145,"title":{},"body":{"coverage.html":{}}}],["363",{"_index":5916,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["364",{"_index":5694,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["364482b",{"_index":5879,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["37/54",{"_index":5214,"title":{},"body":{"coverage.html":{}}}],["370",{"_index":5676,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["371",{"_index":5678,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["373bebf",{"_index":6081,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["38",{"_index":5201,"title":{},"body":{"coverage.html":{}}}],["388924d",{"_index":5704,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["39",{"_index":5144,"title":{},"body":{"coverage.html":{}}}],["39/86",{"_index":5102,"title":{},"body":{"coverage.html":{}}}],["392",{"_index":5627,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["39;muffin",{"_index":3731,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["3fb8f47",{"_index":6008,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["3fe4aaf",{"_index":5700,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["4",{"_index":5372,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["4.3.6",{"_index":5414,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["4.7.4",{"_index":6154,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["4.9.3",{"_index":5252,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":5064,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":5196,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":5193,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":5103,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":2508,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["41/45",{"_index":5106,"title":{},"body":{"coverage.html":{}}}],["41/47",{"_index":5155,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1388,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["42/44",{"_index":5074,"title":{},"body":{"coverage.html":{}}}],["42301aa",{"_index":5809,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["43",{"_index":5146,"title":{},"body":{"coverage.html":{}}}],["43/43",{"_index":5061,"title":{},"body":{"coverage.html":{}}}],["431e3fd",{"_index":5859,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["43c7da5",{"_index":5845,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["44",{"_index":5107,"title":{},"body":{"coverage.html":{}}}],["44/58",{"_index":5048,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":5101,"title":{},"body":{"coverage.html":{}}}],["45b12e4",{"_index":5732,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["4650da9",{"_index":5795,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["46d4a1f",{"_index":5978,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["47a7930",{"_index":5885,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["48.8093253",{"_index":3347,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["4920dd4",{"_index":5815,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["4a14246",{"_index":5850,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["5",{"_index":1928,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["5.0.0",{"_index":2232,"title":{},"body":{"injectables/FormService.html":{}}}],["5.23.2",{"_index":5248,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":5207,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":5168,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":5228,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":4015,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["50/57",{"_index":5158,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":3931,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["500px",{"_index":197,"title":{},"body":{"components/AceComponent.html":{}}}],["50e2d98",{"_index":6004,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["51bf664",{"_index":5663,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["52dc850",{"_index":5692,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["53",{"_index":5180,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":5164,"title":{},"body":{"coverage.html":{}}}],["547bc03",{"_index":5630,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["55/85",{"_index":5124,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":5170,"title":{},"body":{"coverage.html":{}}}],["5892365",{"_index":5864,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["59",{"_index":5121,"title":{},"body":{"coverage.html":{}}}],["59/87",{"_index":5163,"title":{},"body":{"coverage.html":{}}}],["5af4631",{"_index":5738,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["5bad1fb",{"_index":5903,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["5d1aae3",{"_index":5648,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["6",{"_index":870,"title":{},"body":{"classes/Collection.html":{},"components/ImageSelectPopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["6.3.3",{"_index":5251,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":5165,"title":{},"body":{"coverage.html":{}}}],["6/14",{"_index":5105,"title":{},"body":{"coverage.html":{}}}],["6/15",{"_index":5104,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":5133,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":5099,"title":{},"body":{"coverage.html":{}}}],["600d7ac",{"_index":6110,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["61",{"_index":5149,"title":{},"body":{"coverage.html":{}}}],["61/64",{"_index":5077,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":5227,"title":{},"body":{"coverage.html":{}}}],["62162b7",{"_index":5695,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["624aecf",{"_index":5787,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["62bb2b3",{"_index":6058,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["63",{"_index":5090,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":5123,"title":{},"body":{"coverage.html":{}}}],["65/95",{"_index":5115,"title":{},"body":{"coverage.html":{}}}],["651f1de",{"_index":5805,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["658398d",{"_index":5911,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["65fa558",{"_index":6108,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["66",{"_index":5198,"title":{},"body":{"coverage.html":{}}}],["6603aea",{"_index":6104,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["66d0b56",{"_index":5673,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["67",{"_index":5110,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":5053,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["68f12f5",{"_index":5807,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["69",{"_index":5049,"title":{},"body":{"coverage.html":{}}}],["6e961b8",{"_index":5832,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["6f53065",{"_index":5760,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["7",{"_index":871,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["7.2.0",{"_index":5389,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["7.2.1",{"_index":5308,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["7.2.7",{"_index":5238,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":5091,"title":{},"body":{"coverage.html":{}}}],["7/23",{"_index":5141,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":5132,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":5129,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":5188,"title":{},"body":{"coverage.html":{}}}],["70/75",{"_index":5161,"title":{},"body":{"coverage.html":{}}}],["70d5e24",{"_index":6011,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["71",{"_index":5081,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":5092,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":5152,"title":{},"body":{"coverage.html":{}}}],["74/79",{"_index":5113,"title":{},"body":{"coverage.html":{}}}],["7430c70",{"_index":5980,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["75",{"_index":5047,"title":{},"body":{"coverage.html":{}}}],["7580583",{"_index":5881,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["76",{"_index":5040,"title":{},"body":{"coverage.html":{}}}],["7664cb2",{"_index":5937,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["77",{"_index":5097,"title":{},"body":{"coverage.html":{}}}],["7733151",{"_index":5991,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["77a8486",{"_index":5931,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["77b8aac",{"_index":5904,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["78",{"_index":5205,"title":{},"body":{"coverage.html":{}}}],["786d09b",{"_index":5686,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["789e7ca",{"_index":5847,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["7966a71",{"_index":5898,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["79c1a6d",{"_index":5821,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["7a88da8",{"_index":6013,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["7d50c5f",{"_index":5949,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["7dcaf42",{"_index":5714,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["7f99383",{"_index":5764,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["8",{"_index":3012,"title":{},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["8/10",{"_index":5187,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":5093,"title":{},"body":{"coverage.html":{}}}],["8/13",{"_index":5150,"title":{},"body":{"coverage.html":{}}}],["8/21",{"_index":5202,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":5169,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":5173,"title":{},"body":{"coverage.html":{}}}],["80b8030",{"_index":5929,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["80eecab",{"_index":5917,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["81",{"_index":5094,"title":{},"body":{"coverage.html":{}}}],["8236caf",{"_index":5893,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["83",{"_index":5167,"title":{},"body":{"coverage.html":{}}}],["83cc6374",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/SdkService.html":{}}}],["84",{"_index":5084,"title":{},"body":{"coverage.html":{}}}],["846039a",{"_index":5705,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["85",{"_index":5116,"title":{},"body":{"coverage.html":{}}}],["86181ad",{"_index":5901,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["87",{"_index":5128,"title":{},"body":{"coverage.html":{}}}],["878e9df",{"_index":5971,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["88",{"_index":5130,"title":{},"body":{"coverage.html":{}}}],["8ab4791",{"_index":5938,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["8abc48b",{"_index":5818,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["8f56fb2",{"_index":5959,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["8fab72f",{"_index":6163,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["9",{"_index":2008,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/PopService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["9.159388100000001",{"_index":3348,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["9/10",{"_index":5119,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":5217,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":5118,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":5069,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":5125,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":5066,"title":{},"body":{"coverage.html":{}}}],["94/148",{"_index":5139,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":5073,"title":{},"body":{"coverage.html":{}}}],["95f8cc1",{"_index":6123,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["96",{"_index":5062,"title":{},"body":{"coverage.html":{}}}],["96a29d70d11b",{"_index":3630,"title":{},"body":{"components/ModalComponent.html":{}}}],["9776",{"_index":3223,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["98ae3d0",{"_index":5797,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["9915311",{"_index":5954,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["9a",{"_index":3795,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["9bf067d",{"_index":5887,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["9e23457",{"_index":5813,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["9e2d531",{"_index":5628,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["9e671b9",{"_index":5862,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["9ea65ad",{"_index":5752,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["_",{"_index":193,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"injectables/EntryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["_]{22}$/.test(id",{"_index":2009,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["_]{7,14",{"_index":3797,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_api",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["_api.login(email",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["_api.resetpassword(email",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["_blank",{"_index":2919,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["_created",{"_index":3746,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["_creator",{"_index":3754,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_entry",{"_index":1774,"title":{},"body":{"injectables/EntryService.html":{}}}],["_entrytitle",{"_index":3799,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_item.id",{"_index":1606,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["_items",{"_index":4567,"title":{},"body":{"classes/Sorter.html":{}}}],["_items.indexof(item",{"_index":4568,"title":{},"body":{"classes/Sorter.html":{}}}],["_methods",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{}}}],["_methods.filter((x",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["_modified",{"_index":3752,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_moment",{"_index":1402,"title":{},"body":{"interfaces/Day.html":{}}}],["_resource",{"_index":4353,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["_toggle",{"_index":4156,"title":{},"body":{"components/PopComponent.html":{}}}],["_upload",{"_index":4947,"title":{},"body":{"components/UploadComponent.html":{}}}],["_value",{"_index":2850,"title":{},"body":{"classes/Item.html":{}}}],["a.path",{"_index":4236,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["a.then((r",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["a08a9d6",{"_index":5873,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a2b4ace",{"_index":5723,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a2df038",{"_index":6064,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["a52a655",{"_index":5659,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a542c43",{"_index":5769,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a581ce2",{"_index":5913,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["a6a63b7",{"_index":5682,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a992381",{"_index":5854,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ab7721b",{"_index":6049,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["ab86f41",{"_index":5749,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["above",{"_index":1930,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["abstract",{"_index":948,"title":{},"body":{"classes/Config.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{}}}],["abstractcontrol",{"_index":2214,"title":{},"body":{"injectables/FormService.html":{},"components/InputComponent.html":{}}}],["abstraction",{"_index":5548,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["ac3bb86",{"_index":5771,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ac4aec3",{"_index":6091,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["ac83326",{"_index":5690,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["accepts",{"_index":3946,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["access",{"_index":2612,"title":{},"body":{"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["access=public",{"_index":5301,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["accessed",{"_index":5556,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["accessible",{"_index":1116,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Symbol.html":{}}}],["accessors",{"_index":4386,"title":{},"body":{"injectables/SdkService.html":{}}}],["according",{"_index":4010,"title":{},"body":{"classes/Pagination.html":{}}}],["account",{"_index":456,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["accountresource",{"_index":3475,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["accounts",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["accounts(environment.environment",{"_index":4443,"title":{},"body":{"injectables/SdkService.html":{}}}],["ace",{"_index":14,"title":{"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog/ace-changelog.html":{}},"body":{"components/AceComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ace'},{'name",{"_index":204,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ace.component",{"_index":363,"title":{},"body":{"modules/AceModule.html":{}}}],["ace.component.html",{"_index":38,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.component.scss",{"_index":36,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.edit(this.container.nativeelement",{"_index":174,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/mode",{"_index":109,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/theme",{"_index":112,"title":{},"body":{"components/AceComponent.html":{}}}],["acecomponent",{"_index":1,"title":{"components/AceComponent.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acemodule",{"_index":344,"title":{"modules/AceModule.html":{}},"body":{"modules/AceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["acemoduleconfig",{"_index":364,"title":{},"body":{"modules/AceModule.html":{},"coverage.html":{}}}],["act",{"_index":4603,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["action",{"_index":367,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["action(item.getbody().data",{"_index":4208,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["action(property",{"_index":2707,"title":{},"body":{"classes/Item.html":{}}}],["actionbar",{"_index":382,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/DefaultEntryInputComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["actionbar'},{'name",{"_index":206,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["actionbar.component",{"_index":1189,"title":{},"body":{"modules/DataModule.html":{},"modules/ResourceModule.html":{}}}],["actionbar.component.ts",{"_index":4200,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["actionbar.dropdownloader",{"_index":4229,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar.dropdownloader.wait(loading",{"_index":4230,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar.loadactions(actions",{"_index":4227,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar/actionbar.component",{"_index":4471,"title":{},"body":{"modules/SelectModule.html":{}}}],["actionbar/api",{"_index":4308,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["actionbar/entry",{"_index":1188,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["actionbar/resource",{"_index":4199,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["actionbarcomponent",{"_index":205,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actionbarconfig",{"_index":383,"title":{"interfaces/ActionbarConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"coverage.html":{}}}],["actionfunction",{"_index":374,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":390,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["actions.length",{"_index":4243,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actions.push",{"_index":4211,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionsbefore",{"_index":408,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["actionstack",{"_index":391,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["activate",{"_index":2923,"title":{},"body":{"injectables/KeycommandsService.html":{},"components/TabComponent.html":{}}}],["activate(keyconfig",{"_index":2902,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["activated",{"_index":578,"title":{},"body":{"guards/AuthGuard.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["activatedroute",{"_index":983,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{}}}],["active",{"_index":1136,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{}}}],["activies",{"_index":3317,"title":{},"body":{"components/LoaderComponent.html":{}}}],["activity",{"_index":3291,"title":{},"body":{"components/LoaderComponent.html":{}}}],["acts",{"_index":1482,"title":{},"body":{"directives/DropzoneDirective.html":{},"classes/Sorter.html":{}}}],["actual",{"_index":3226,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["actual_component",{"_index":339,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ad58c68",{"_index":5892,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["add",{"_index":565,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["add(item",{"_index":858,"title":{},"body":{"classes/Collection.html":{}}}],["add3ee6",{"_index":5943,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["addall",{"_index":835,"title":{},"body":{"classes/Collection.html":{}}}],["addall(items",{"_index":867,"title":{},"body":{"classes/Collection.html":{}}}],["added",{"_index":864,"title":{},"body":{"classes/Collection.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["addfield",{"_index":2181,"title":{},"body":{"injectables/FormService.html":{}}}],["addfield(field",{"_index":2189,"title":{},"body":{"injectables/FormService.html":{}}}],["addimagebyurl",{"_index":4722,"title":{},"body":{"components/TinymceComponent.html":{}}}],["addimagebyurl(url",{"_index":4742,"title":{},"body":{"components/TinymceComponent.html":{}}}],["adding",{"_index":5288,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["additional",{"_index":3507,"title":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}},"body":{"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["address",{"_index":2267,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{}}}],["adds",{"_index":862,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{}}}],["addtostack",{"_index":423,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["admin",{"_index":460,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["adminentryinputcomponent",{"_index":207,"title":{"components/AdminEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adresse",{"_index":4105,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["advanced",{"_index":3860,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["advantage",{"_index":3307,"title":{},"body":{"components/LoaderComponent.html":{}}}],["af10188",{"_index":5922,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["af45a9a",{"_index":6060,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["affect",{"_index":5510,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["aftercontentinit",{"_index":4674,"title":{},"body":{"components/TabsComponent.html":{}}}],["afterviewinit",{"_index":1437,"title":{},"body":{"components/DefaultInputComponent.html":{},"directives/FocusDirective.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["afterwards",{"_index":3649,"title":{},"body":{"components/ModalComponent.html":{}}}],["again",{"_index":5664,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["agm",{"_index":3371,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["agm/core",{"_index":2277,"title":{},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"dependencies.html":{}}}],["agmcoremodule",{"_index":3383,"title":{},"body":{"modules/LocationModule.html":{}}}],["agmcoremodule.forroot",{"_index":3389,"title":{},"body":{"modules/LocationModule.html":{}}}],["agnostic",{"_index":5596,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["aizasyadgeue1yxo1f",{"_index":3391,"title":{},"body":{"modules/LocationModule.html":{}}}],["algorithm",{"_index":4547,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.resolve",{"_index":4576,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.sort(property",{"_index":4578,"title":{},"body":{"classes/Sorter.html":{}}}],["aliases",{"_index":5338,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":2412,"title":{},"body":{"components/IconComponent.html":{}}}],["allowed",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["allows",{"_index":1076,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["along",{"_index":5442,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["already",{"_index":3924,"title":{},"body":{"injectables/NotificationsService.html":{},"classes/Pagination.html":{}}}],["als",{"_index":5484,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["alt",{"_index":2523,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["alter(value",{"_index":1417,"title":{},"body":{"interfaces/Day.html":{}}}],["altered",{"_index":4365,"title":{},"body":{"interfaces/SdkField.html":{}}}],["alternative",{"_index":2501,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ToggleComponent.html":{}}}],["alternatively",{"_index":5535,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["always",{"_index":1098,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["alwaysloadentry",{"_index":1078,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["alwaysshowheader",{"_index":3058,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["amazement",{"_index":5481,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["amazement_factor",{"_index":5480,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amazement_factor>=5",{"_index":5531,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amazing",{"_index":5502,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amount",{"_index":3834,"title":{},"body":{"classes/Notification.html":{}}}],["angezeigt",{"_index":612,"title":{},"body":{"guards/AuthGuard.html":{}}}],["angular",{"_index":16,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"components/AceComponent.html":{},"injectables/FormService.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["angular.json",{"_index":5391,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["angular/animations",{"_index":5237,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cli",{"_index":5412,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/common",{"_index":631,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/compiler",{"_index":5239,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/core",{"_index":154,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/core/src/metadata/lifecycle_hooks",{"_index":3248,"title":{},"body":{"components/ListItemsComponent.html":{},"components/PaginationComponent.html":{}}}],["angular/datamanager",{"_index":5267,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["angular/forms",{"_index":155,"title":{},"body":{"components/AceComponent.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/http",{"_index":5415,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/language",{"_index":5416,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/platform",{"_index":2109,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/router",{"_index":595,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular7",{"_index":5341,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["another",{"_index":602,"title":{},"body":{"guards/AuthGuard.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["anweisungen",{"_index":4123,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["anything",{"_index":5357,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["anywhere",{"_index":1867,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{}}}],["api",{"_index":209,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["api(api",{"_index":4433,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.asset(this.assetid).then((asset",{"_index":540,"title":{},"body":{"directives/AssetDirective.html":{}}}],["api.checkpermission(permission",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.getschema(model",{"_index":4458,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.logout",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.resourcelist",{"_index":4263,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["api.signup(email",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiactionbarcomponent",{"_index":208,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apikey",{"_index":3390,"title":{},"body":{"modules/LocationModule.html":{}}}],["apiresolved",{"_index":4378,"title":{},"body":{"injectables/SdkService.html":{}}}],["apis",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["app",{"_index":3848,"title":{},"body":{"components/NotificationsComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["app.component",{"_index":5452,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["app.component.html",{"_index":4593,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/stackblitz.html":{}}}],["app.module",{"_index":5612,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["appcomponent",{"_index":4594,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["appear",{"_index":1864,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/UploadComponent.html":{}}}],["appears",{"_index":4153,"title":{},"body":{"components/PopComponent.html":{}}}],["append",{"_index":1561,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["appended",{"_index":3823,"title":{},"body":{"classes/Notification.html":{}}}],["appletree",{"_index":3009,"title":{},"body":{"components/ListComponent.html":{}}}],["application",{"_index":4727,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["applicationref",{"_index":4725,"title":{},"body":{"components/TinymceComponent.html":{}}}],["applications",{"_index":5264,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["apply",{"_index":1281,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ModalComponent.html":{}}}],["applyconfig",{"_index":3086,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["applyconfig(list",{"_index":3090,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["appmodule",{"_index":5441,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["approutingmodule",{"_index":5439,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["arbitrary",{"_index":2767,"title":{},"body":{"classes/Item.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{}}}],["architect",{"_index":5392,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["area",{"_index":4132,"title":{},"body":{"components/PopComponent.html":{}}}],["argument",{"_index":1781,"title":{},"body":{"injectables/EntryService.html":{},"components/ListComponent.html":{}}}],["arguments",{"_index":1488,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["around",{"_index":4063,"title":{},"body":{"components/PaginationComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["array",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"pipes/MaxItemsPipe.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["array(42",{"_index":1366,"title":{},"body":{"interfaces/Day.html":{}}}],["array(math.ceil(this.total",{"_index":4030,"title":{},"body":{"classes/Pagination.html":{}}}],["array.from",{"_index":4018,"title":{},"body":{"classes/Pagination.html":{}}}],["array.isarray(asset",{"_index":2002,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["array.isarray(pattern",{"_index":1252,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["array.isarray(this.body[property",{"_index":2801,"title":{},"body":{"classes/Item.html":{}}}],["array.slice(start",{"_index":3573,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["artifacts",{"_index":5317,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["asking",{"_index":3923,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asks",{"_index":3930,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asobservable",{"_index":1306,"title":{},"body":{"interfaces/Day.html":{},"components/TinymceComponent.html":{}}}],["asset",{"_index":214,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["asset(value.img",{"_index":2526,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.assetid",{"_index":2005,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["asset.file.resolution",{"_index":2547,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getfilevariant(this.size",{"_index":2492,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimagethumburl(this.size",{"_index":2494,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimageurl(size",{"_index":2528,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getimageurl(this.size",{"_index":2495,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getoriginalfile",{"_index":2541,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.id",{"_index":2490,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.reduce",{"_index":2003,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["asset.title",{"_index":2544,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.type",{"_index":2488,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset/asset.directive",{"_index":2114,"title":{},"body":{"modules/FilesModule.html":{},"directives/ImageDirective.html":{}}}],["assetdirective",{"_index":324,"title":{"directives/AssetDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetgroup",{"_index":211,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["assetgroupid",{"_index":548,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["assetgroupids",{"_index":1984,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist",{"_index":1975,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist(forcereload",{"_index":2064,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetgrouplistpromise",{"_index":1976,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetgroups",{"_index":549,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["assetgroupselectcomponent",{"_index":210,"title":{"components/AssetgroupSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetid",{"_index":482,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["assetids",{"_index":2038,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetlist.getallitems",{"_index":2023,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetlistcomponent",{"_index":213,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetlistpopcomponent",{"_index":216,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assets",{"_index":571,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["assets.map((asset",{"_index":2026,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets.reduce((ids",{"_index":2048,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets/asset",{"_index":478,"title":{},"body":{"directives/AssetDirective.html":{}}}],["assets[0",{"_index":2024,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetselectcomponent",{"_index":219,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assign",{"_index":1785,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["assigning",{"_index":1850,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{}}}],["assigns",{"_index":2473,"title":{},"body":{"directives/ImageDirective.html":{},"classes/Item.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{}}}],["associated",{"_index":1871,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{}}}],["assumes",{"_index":5448,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["async",{"_index":421,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{}}}],["attempt",{"_index":3880,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["attributes",{"_index":1534,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["audio",{"_index":1989,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["auth",{"_index":627,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["auth.service",{"_index":639,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["auth/auth.module",{"_index":1171,"title":{},"body":{"modules/DataModule.html":{}}}],["auth/auth.service",{"_index":1029,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["authentication",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["authguard",{"_index":573,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":618,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":5444,"title":{"additional-documentation/project-setup-tutorial/authorization.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["authservice",{"_index":625,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":2459,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{}}}],["autocomplete",{"_index":2263,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["autocomplete.addlistener('place_changed",{"_index":2283,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocomplete.getplace",{"_index":2286,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress",{"_index":2252,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress(el",{"_index":2261,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autofocus",{"_index":1830,"title":{},"body":{"classes/Field.html":{},"directives/FocusDirective.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["autofocused",{"_index":3178,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["autofocusfirst",{"_index":2959,"title":{},"body":{"components/ListComponent.html":{}}}],["autoload",{"_index":483,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{}}}],["autoload=false",{"_index":506,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["automatic",{"_index":5490,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["automatically",{"_index":1936,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Notification.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["availabe",{"_index":80,"title":{},"body":{"components/AceComponent.html":{}}}],["available",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["available.validator.ts",{"_index":5087,"title":{},"body":{"coverage.html":{}}}],["availablesizes",{"_index":3059,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["avatar",{"_index":4842,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["avatars",{"_index":4844,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["avoid",{"_index":6043,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["await",{"_index":427,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/ModelConfigService.html":{}}}],["ayq",{"_index":2785,"title":{},"body":{"classes/Item.html":{}}}],["b",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{},"additional-documentation/readme/style-readme.html":{}}}],["b(r",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["b.resolve",{"_index":4577,"title":{},"body":{"classes/Sorter.html":{}}}],["b.sort(property",{"_index":4579,"title":{},"body":{"classes/Sorter.html":{}}}],["b0c6065",{"_index":5924,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b2cf446",{"_index":5792,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b3507c4",{"_index":6055,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["b365847",{"_index":6157,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["b3e8115",{"_index":6040,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["b461540",{"_index":5717,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b4d03eb",{"_index":5867,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b5a578d",{"_index":5778,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["b603867",{"_index":6087,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["b6ec56b",{"_index":5914,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b7460e6",{"_index":6001,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b760780",{"_index":6014,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b7d33e2",{"_index":5774,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b900b38",{"_index":5720,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ba52443",{"_index":5824,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["back",{"_index":1131,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"components/ModalComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["backdrop",{"_index":1681,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["backend",{"_index":5517,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["backenderrorcodes",{"_index":5089,"title":{},"body":{"coverage.html":{}}}],["background",{"_index":1283,"title":{},"body":{"interfaces/Day.html":{}}}],["bake",{"_index":3870,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["baken",{"_index":3872,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bakery:bakeryservice",{"_index":3869,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["baking",{"_index":3875,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bar",{"_index":4207,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["barrel",{"_index":5993,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["base",{"_index":4557,"title":{},"body":{"classes/Sorter.html":{},"injectables/TypeConfigService.html":{}}}],["based",{"_index":2208,"title":{},"body":{"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["basic",{"_index":1436,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/ListComponent.html":{}}}],["basically",{"_index":2693,"title":{},"body":{"classes/Item.html":{}}}],["basis",{"_index":1406,"title":{},"body":{"interfaces/Day.html":{}}}],["bbe7ba3",{"_index":5915,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["bc9bb53",{"_index":5773,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bcbbc51",{"_index":5945,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["bcbefd1",{"_index":5860,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bd36bc0",{"_index":5894,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["bd766bf",{"_index":5726,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bda5def",{"_index":6065,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["bdbe0d1",{"_index":5654,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["before",{"_index":1104,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["beforehand",{"_index":5507,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["beforesave",{"_index":1831,"title":{},"body":{"classes/Field.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["begin",{"_index":1361,"title":{},"body":{"interfaces/Day.html":{}}}],["begin.clone().add(index",{"_index":1369,"title":{},"body":{"interfaces/Day.html":{}}}],["behaviour",{"_index":3684,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["beim",{"_index":4127,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["being",{"_index":3985,"title":{},"body":{"classes/Pagination.html":{},"components/TinymceComponent.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["belonging",{"_index":2581,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["below",{"_index":3829,"title":{},"body":{"classes/Notification.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["beneath",{"_index":2666,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["beschreibung",{"_index":3855,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["beta.5",{"_index":5236,"title":{},"body":{"dependencies.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["beta.6",{"_index":6052,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["beta.7",{"_index":6054,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["better",{"_index":3316,"title":{},"body":{"components/LoaderComponent.html":{}}}],["between",{"_index":2179,"title":{},"body":{"injectables/FormService.html":{}}}],["bilder",{"_index":5475,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["bind",{"_index":5405,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["binding",{"_index":5999,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["birch",{"_index":3013,"title":{},"body":{"components/ListComponent.html":{}}}],["blur",{"_index":2230,"title":{},"body":{"injectables/FormService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["bobby",{"_index":1925,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{}}}],["bobby.display('name",{"_index":2779,"title":{},"body":{"classes/Item.html":{}}}],["bobby.group('name",{"_index":2780,"title":{},"body":{"classes/Item.html":{}}}],["bobby.resolve('name",{"_index":2778,"title":{},"body":{"classes/Item.html":{}}}],["bobby.sort('name",{"_index":2781,"title":{},"body":{"classes/Item.html":{}}}],["body",{"_index":1909,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body+1",{"_index":2793,"title":{},"body":{"classes/Item.html":{}}}],["body.amazement_factor",{"_index":5509,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.amazement_factor*body.flavour/body.price",{"_index":5514,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.value.name",{"_index":1919,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{}}}],["bool",{"_index":5653,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["boolean",{"_index":375,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["booleans",{"_index":4562,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":348,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["both",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/adding-new-packages.html":{}}}],["bound",{"_index":1487,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["box",{"_index":961,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["breaking",{"_index":5342,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["breaks",{"_index":4734,"title":{},"body":{"components/TinymceComponent.html":{}}}],["brings",{"_index":2783,"title":{},"body":{"classes/Item.html":{}}}],["broadcast",{"_index":4336,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["broken",{"_index":5882,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["browse",{"_index":4966,"title":{},"body":{"components/UploadSelectComponent.html":{},"modules.html":{}}}],["browser",{"_index":2110,"title":{},"body":{"modules/FilesModule.html":{},"injectables/NotificationsService.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["browsermodule",{"_index":2108,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["btn._clear",{"_index":6080,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["bubbling",{"_index":5884,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["buchstaben",{"_index":1922,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{}}}],["bug",{"_index":5625,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["bugged",{"_index":5846,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bugs",{"_index":5748,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["build",{"_index":5316,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["builder",{"_index":5393,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders",{"_index":5385,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders/custom",{"_index":5386,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders/dev",{"_index":5387,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builds",{"_index":5241,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["builds/blob/master/src/ext",{"_index":170,"title":{},"body":{"components/AceComponent.html":{}}}],["builds/src",{"_index":157,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["builds/webpack",{"_index":159,"title":{},"body":{"components/AceComponent.html":{}}}],["built",{"_index":5268,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["bump",{"_index":5656,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["button",{"_index":1102,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FormConfig.html":{},"classes/Item.html":{},"components/LoginFormComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["buttonclasses",{"_index":3495,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["buttonlabel",{"_index":3496,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["buttons",{"_index":5662,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["c",{"_index":5558,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["c0632d2",{"_index":5906,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["c0c7f17",{"_index":5948,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["c3513dc",{"_index":5908,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["c483625",{"_index":5802,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["c63e1d9",{"_index":6045,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["c89591a",{"_index":5889,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["c950461",{"_index":5994,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["cache",{"_index":5762,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["caches",{"_index":4394,"title":{},"body":{"injectables/SdkService.html":{}}}],["calculcates",{"_index":4006,"title":{},"body":{"classes/Pagination.html":{}}}],["calendar",{"_index":800,"title":{"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog/calendar-changelog.html":{}},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["calendar'},{'name",{"_index":221,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["calendar/calendar.component",{"_index":808,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendar/month.component",{"_index":811,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendarcomponent",{"_index":220,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendarish",{"_index":1272,"title":{},"body":{"interfaces/Day.html":{}}}],["calendarmodule",{"_index":794,"title":{"modules/CalendarModule.html":{}},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["calendarmoduleconfig",{"_index":812,"title":{},"body":{"modules/CalendarModule.html":{},"coverage.html":{}}}],["calendars",{"_index":1384,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["call",{"_index":1582,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Item.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["callback",{"_index":99,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["called",{"_index":504,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Item.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/publishing.html":{}}}],["calling",{"_index":1560,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Item.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["calls",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"classes/Item.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TinymceComponent.html":{}}}],["can't",{"_index":5374,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["canactivate",{"_index":587,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["canalter(value",{"_index":1409,"title":{},"body":{"interfaces/Day.html":{}}}],["cand",{"_index":3363,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["caption",{"_index":4743,"title":{},"body":{"components/TinymceComponent.html":{}}}],["case",{"_index":2622,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["catch",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch((err",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/EntryService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{}}}],["catch((error",{"_index":1598,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["catch(error",{"_index":3874,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["catched",{"_index":3285,"title":{},"body":{"components/LoaderComponent.html":{}}}],["caution",{"_index":1425,"title":{},"body":{"components/DefaultEntryInputComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["cb43986",{"_index":5710,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["cbe9627",{"_index":5751,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["ccc",{"_index":1289,"title":{},"body":{"interfaces/Day.html":{}}}],["cd",{"_index":5420,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["cd90ef7",{"_index":6125,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["cdn",{"_index":5611,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["cdr",{"_index":393,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["cea52fc",{"_index":5956,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["cell",{"_index":1268,"title":{},"body":{"interfaces/Day.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cells",{"_index":1277,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["center",{"_index":2413,"title":{},"body":{"components/IconComponent.html":{},"components/LocationMapComponent.html":{}}}],["certain",{"_index":2858,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/TypeConfigService.html":{}}}],["chaned",{"_index":3353,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["change",{"_index":98,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["change(e",{"_index":4904,"title":{},"body":{"components/UploadComponent.html":{}}}],["change(filter",{"_index":1724,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change)=\"updatesize($event.target.value",{"_index":4079,"title":{},"body":{"components/PaginationComponent.html":{}}}],["change.broadcast",{"_index":4339,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change.colors",{"_index":1356,"title":{},"body":{"interfaces/Day.html":{}}}],["change.date",{"_index":1353,"title":{},"body":{"interfaces/Day.html":{}}}],["change.heatmap",{"_index":1357,"title":{},"body":{"interfaces/Day.html":{}}}],["change.selected",{"_index":1351,"title":{},"body":{"interfaces/Day.html":{}}}],["change.timespan",{"_index":1355,"title":{},"body":{"interfaces/Day.html":{}}}],["change[key",{"_index":4341,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["changed",{"_index":997,"title":{},"body":{"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["changedetection",{"_index":2378,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategy",{"_index":2401,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":2379,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectorref",{"_index":376,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["changelog",{"_index":5029,"title":{"changelog.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}},"body":{"changelog.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["changelog.md",{"_index":6188,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["changelogging",{"_index":5305,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["changes",{"_index":1216,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["changes.field",{"_index":2628,"title":{},"body":{"components/InputComponent.html":{}}}],["changes.list",{"_index":3191,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["changesenvironment",{"_index":4379,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["changespan",{"_index":1299,"title":{},"body":{"interfaces/Day.html":{}}}],["changing",{"_index":1348,"title":{},"body":{"interfaces/Day.html":{},"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["check",{"_index":599,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["checkbox",{"_index":3149,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ToggleComponent.html":{}}}],["checkboxes",{"_index":3073,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["checkpermission",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpermission(permission",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["checks",{"_index":592,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListItemsComponent.html":{},"interfaces/Upload.html":{}}}],["child",{"_index":4922,"title":{},"body":{"components/UploadComponent.html":{}}}],["children",{"_index":5463,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["circular",{"_index":5754,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["class",{"_index":168,"title":{"classes/Collection.html":{},"classes/Config.html":{},"classes/Field.html":{},"classes/Item.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/Sorter.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["class.is",{"_index":1474,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["class=\"input",{"_index":4080,"title":{},"body":{"components/PaginationComponent.html":{}}}],["classes",{"_index":828,"title":{},"body":{"classes/Collection.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"index.html":{},"overview.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["classes(property",{"_index":2710,"title":{},"body":{"classes/Item.html":{}}}],["clean",{"_index":1719,"title":{},"body":{"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/ResourceService.html":{}}}],["clean(value",{"_index":1728,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["cleanreadonly",{"_index":1730,"title":{},"body":{"injectables/EntryService.html":{}}}],["clear",{"_index":1795,"title":{},"body":{"injectables/EntryService.html":{},"classes/Item.html":{},"components/LocationSearchComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["cleared",{"_index":3181,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clearer",{"_index":5504,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["clearfilter",{"_index":3136,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clears",{"_index":1404,"title":{},"body":{"interfaces/Day.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["clearselection",{"_index":1405,"title":{},"body":{"interfaces/Day.html":{}}}],["cli",{"_index":5306,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["cli/issues/11041",{"_index":6156,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["click",{"_index":1654,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["clickeable",{"_index":3176,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clicked",{"_index":995,"title":{},"body":{"components/CrudComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["clickedoutside($event",{"_index":4158,"title":{},"body":{"components/PopComponent.html":{}}}],["clickevent",{"_index":1639,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["clicking",{"_index":3177,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["clicks",{"_index":5496,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["client",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clientid",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["clipboard",{"_index":2914,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["clone",{"_index":1362,"title":{},"body":{"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["close",{"_index":1658,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["closed",{"_index":3180,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["closes",{"_index":2330,"title":{},"body":{"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{}}}],["clubapp",{"_index":5560,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["clunky",{"_index":5527,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cluster_acemodule",{"_index":350,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_acecomponent_providers",{"_index":352,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_declarations",{"_index":351,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_exports",{"_index":354,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_imports",{"_index":353,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":619,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":620,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":622,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":621,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":623,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_calendarmodule",{"_index":795,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_declarations",{"_index":796,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_exports",{"_index":797,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_datamodule",{"_index":1152,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_declarations",{"_index":1153,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_exports",{"_index":1155,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_imports",{"_index":1154,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_providers",{"_index":1156,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":2102,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_declarations",{"_index":2103,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":2105,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":2104,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":2106,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":2148,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":2149,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":2151,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":2150,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":2152,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_iconmodule",{"_index":2415,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_declarations",{"_index":2416,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_exports",{"_index":2417,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_providers",{"_index":2418,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iomodule",{"_index":2684,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_declarations",{"_index":2685,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_exports",{"_index":2686,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_listmodule",{"_index":3253,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_declarations",{"_index":3254,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_exports",{"_index":3256,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_imports",{"_index":3255,"title":{},"body":{"modules/ListModule.html":{}}}],["cluster_listmodule_providers",{"_index":3257,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_loadermodule",{"_index":3328,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_declarations",{"_index":3329,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_exports",{"_index":3330,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_providers",{"_index":3331,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_locationmodule",{"_index":3373,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declarations",{"_index":3374,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_exports",{"_index":3376,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_imports",{"_index":3375,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_providers",{"_index":3377,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule",{"_index":3615,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_declarations",{"_index":3616,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_exports",{"_index":3618,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_mediumeditorcomponent_providers",{"_index":3617,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule",{"_index":3902,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_declarations",{"_index":3903,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_exports",{"_index":3905,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_imports",{"_index":3904,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_providers",{"_index":3906,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_popmodule",{"_index":4172,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_declarations",{"_index":4173,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_exports",{"_index":4175,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_imports",{"_index":4174,"title":{},"body":{"modules/PopModule.html":{}}}],["cluster_popmodule_providers",{"_index":4176,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_resourcemodule",{"_index":4299,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_declarations",{"_index":4300,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_exports",{"_index":4302,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_imports",{"_index":4301,"title":{},"body":{"modules/ResourceModule.html":{}}}],["cluster_resourcemodule_providers",{"_index":4303,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_sdkmodule",{"_index":4368,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_sdkmodule_providers",{"_index":4369,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_selectmodule",{"_index":4464,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_declarations",{"_index":4465,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_exports",{"_index":4468,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_imports",{"_index":4467,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_selectmodule_selectcomponent_providers",{"_index":4466,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_symbolmodule",{"_index":4585,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_declarations",{"_index":4586,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_exports",{"_index":4587,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_providers",{"_index":4588,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule",{"_index":4798,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_declarations",{"_index":4799,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_exports",{"_index":4800,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_uimodule",{"_index":4878,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_exports",{"_index":4880,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_imports",{"_index":4879,"title":{},"body":{"modules/UiModule.html":{}}}],["cluster_utilitymodule",{"_index":4999,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_declarations",{"_index":5000,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_exports",{"_index":5002,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_imports",{"_index":5001,"title":{},"body":{"modules/UtilityModule.html":{}}}],["cluster_utilitymodule_providers",{"_index":5003,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cmd+click",{"_index":5562,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["code",{"_index":4479,"title":{},"body":{"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["coded",{"_index":5553,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["col",{"_index":3641,"title":{},"body":{"components/ModalComponent.html":{}}}],["collator",{"_index":4553,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{}}}],["collator.compare(a",{"_index":4560,"title":{},"body":{"classes/Sorter.html":{}}}],["collection",{"_index":827,"title":{"classes/Collection.html":{}},"body":{"classes/Collection.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"coverage.html":{}}}],["collection([1",{"_index":849,"title":{},"body":{"classes/Collection.html":{}}}],["collection.add(4",{"_index":900,"title":{},"body":{"classes/Collection.html":{}}}],["collection.addall([10,11,12",{"_index":904,"title":{},"body":{"classes/Collection.html":{}}}],["collection.has(1",{"_index":898,"title":{},"body":{"classes/Collection.html":{}}}],["collection.has(4",{"_index":899,"title":{},"body":{"classes/Collection.html":{}}}],["collection.hasall([1,10,11",{"_index":905,"title":{},"body":{"classes/Collection.html":{}}}],["collection.index(1",{"_index":902,"title":{},"body":{"classes/Collection.html":{}}}],["collection.remove(4",{"_index":901,"title":{},"body":{"classes/Collection.html":{}}}],["collection.removeall",{"_index":906,"title":{},"body":{"classes/Collection.html":{}}}],["collections",{"_index":3006,"title":{},"body":{"components/ListComponent.html":{}}}],["collects",{"_index":4414,"title":{},"body":{"injectables/SdkService.html":{},"modules/SymbolModule.html":{}}}],["color",{"_index":1275,"title":{},"body":{"interfaces/Day.html":{},"injectables/TypeConfigService.html":{}}}],["colors",{"_index":1280,"title":{},"body":{"interfaces/Day.html":{}}}],["column",{"_index":1141,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["columnclick",{"_index":2953,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["columnclick(item",{"_index":2978,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["columnclicked",{"_index":975,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["columns",{"_index":2564,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/PopService.html":{},"interfaces/SdkField.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["com",{"_index":5635,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["combination",{"_index":3846,"title":{},"body":{"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["combined",{"_index":5516,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["come",{"_index":458,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["comes",{"_index":1986,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/NotificationsService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["coming",{"_index":473,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["comma",{"_index":5899,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["command",{"_index":6170,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["commented",{"_index":3311,"title":{},"body":{"components/LoaderComponent.html":{}}}],["commit",{"_index":5619,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["commits",{"_index":5303,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["commonmodule",{"_index":630,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UtilityModule.html":{}}}],["communicate",{"_index":3529,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["communicates",{"_index":3470,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupComponent.html":{}}}],["complaining",{"_index":3937,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["complete",{"_index":4903,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["complex",{"_index":5545,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["compliant",{"_index":6169,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["component",{"_index":0,"title":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["component(s",{"_index":6194,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["component_template",{"_index":203,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["componentdestroyed",{"_index":5220,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["componentdestroyed(component",{"_index":5261,"title":{},"body":{"miscellaneous/functions.html":{}}}],["componentfactory",{"_index":1542,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["componentfactoryresolver",{"_index":1516,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentinstance",{"_index":2572,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref",{"_index":1536,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentref.instance",{"_index":2643,"title":{},"body":{"components/InputComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["components.entrecode.de",{"_index":5275,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["concat",{"_index":5857,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["concat(actions",{"_index":429,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["concat(this.config.availablesizes",{"_index":4020,"title":{},"body":{"classes/Pagination.html":{}}}],["concat(this.getresourcelistactions(list",{"_index":4219,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["concat(this.timespan",{"_index":1321,"title":{},"body":{"interfaces/Day.html":{}}}],["concatted",{"_index":4213,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["concept",{"_index":1933,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{}}}],["conceptualizes",{"_index":3175,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["config",{"_index":386,"title":{"classes/Config.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["config#action",{"_index":2709,"title":{},"body":{"classes/Item.html":{}}}],["config.classes",{"_index":2712,"title":{},"body":{"classes/Item.html":{}}}],["config.display",{"_index":2720,"title":{},"body":{"classes/Item.html":{}}}],["config.fields",{"_index":1798,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key",{"_index":1799,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].beforesave",{"_index":1802,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].beforesave(value[key",{"_index":1803,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].immutable",{"_index":1800,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].readonly",{"_index":1801,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[property",{"_index":2798,"title":{},"body":{"classes/Item.html":{}}}],["config.fields[property].classes",{"_index":2713,"title":{},"body":{"classes/Item.html":{}}}],["config.fields[property].solo",{"_index":2803,"title":{},"body":{"classes/Item.html":{}}}],["config.fields[property].values",{"_index":2802,"title":{},"body":{"classes/Item.html":{}}}],["config.fields[property].view",{"_index":2800,"title":{},"body":{"classes/Item.html":{}}}],["config.filter",{"_index":1999,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["config.group",{"_index":2731,"title":{},"body":{"classes/Item.html":{}}}],["config.input",{"_index":4869,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.interface",{"_index":1026,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["config.interface.ts",{"_index":1075,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["config.interface.ts:11",{"_index":4087,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:6",{"_index":1948,"title":{},"body":{"interfaces/FieldConfig.html":{}}}],["config.interface.ts:7",{"_index":4090,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:9",{"_index":4088,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.output",{"_index":4870,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.resolve",{"_index":2741,"title":{},"body":{"classes/Item.html":{}}}],["config.service",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["config.service.ts",{"_index":3084,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["config.service.ts:122",{"_index":3724,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:13",{"_index":3097,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:143",{"_index":3714,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:15",{"_index":4837,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:17",{"_index":3099,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:19",{"_index":3695,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:203",{"_index":4824,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:207",{"_index":4830,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:210",{"_index":3698,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:22",{"_index":3093,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:223",{"_index":4836,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:23",{"_index":4863,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:233",{"_index":4827,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:240",{"_index":4825,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:241",{"_index":3720,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:245",{"_index":4831,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:250",{"_index":4832,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:34",{"_index":3101,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:37",{"_index":3709,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:43",{"_index":3091,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:52",{"_index":3729,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:57",{"_index":3725,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:6",{"_index":3102,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:8",{"_index":3095,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.view",{"_index":4868,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config/field",{"_index":1937,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["config/model",{"_index":1032,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["config/resource",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config/resource.service",{"_index":1753,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{}}}],["config/resource.service.ts",{"_index":4309,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["config/resource.service.ts:102",{"_index":4315,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:122",{"_index":4317,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:135",{"_index":4319,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:35",{"_index":4311,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:38",{"_index":4330,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:47",{"_index":4322,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:52",{"_index":4312,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:61",{"_index":4326,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:80",{"_index":4329,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:97",{"_index":4320,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/sdk",{"_index":4359,"title":{},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["config/type",{"_index":1184,"title":{},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config:13",{"_index":3733,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config:5",{"_index":3737,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config?.createlabel",{"_index":1073,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["configinput",{"_index":3025,"title":{},"body":{"components/ListComponent.html":{}}}],["configuration",{"_index":945,"title":{},"body":{"classes/Config.html":{},"interfaces/FieldConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["configuration.interface.ts",{"_index":3816,"title":{},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["configurations",{"_index":932,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["configure",{"_index":933,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["configure(key",{"_index":935,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["configure?(key",{"_index":952,"title":{},"body":{"classes/Config.html":{}}}],["configured",{"_index":1003,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/FieldConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["configuring",{"_index":3685,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["confirmation",{"_index":1147,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["connect",{"_index":2652,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["connectcontrol",{"_index":2573,"title":{},"body":{"components/InputComponent.html":{}}}],["connector",{"_index":4257,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["connectors",{"_index":4260,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["considered",{"_index":5343,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["consistent",{"_index":1391,"title":{},"body":{"interfaces/Day.html":{}}}],["consists",{"_index":2766,"title":{},"body":{"classes/Item.html":{}}}],["console.error('cannot",{"_index":4871,"title":{},"body":{"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["console.error('missing",{"_index":4866,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["console.error(err",{"_index":4948,"title":{},"body":{"components/UploadComponent.html":{}}}],["console.error(notification.error",{"_index":3943,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.log('cannot",{"_index":3112,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.log('could",{"_index":3483,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["console.log('entry',item.getbody(),item.id",{"_index":5497,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["console.log('error",{"_index":1063,"title":{},"body":{"components/CrudComponent.html":{}}}],["console.log('no",{"_index":4209,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["console.log('raw",{"_index":1248,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["console.log('received",{"_index":5592,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["console.log('should",{"_index":2560,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["console.warn",{"_index":2041,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["console.warn('actions",{"_index":437,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["console.warn('addfield",{"_index":2235,"title":{},"body":{"injectables/FormService.html":{}}}],["console.warn('cannot",{"_index":1591,"title":{},"body":{"directives/EntriesDirective.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"classes/Sorter.html":{}}}],["console.warn('could",{"_index":2631,"title":{},"body":{"components/InputComponent.html":{}}}],["console.warn('field",{"_index":3126,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.warn('has",{"_index":915,"title":{},"body":{"classes/Collection.html":{}}}],["console.warn('no",{"_index":2073,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"interfaces/Upload.html":{}}}],["console.warn('notification.time",{"_index":3899,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["console.warn('this",{"_index":3950,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.warn('to",{"_index":4169,"title":{},"body":{"components/PopComponent.html":{}}}],["console.warn('tried",{"_index":3033,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{}}}],["console.warn('wont",{"_index":2054,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["console.warn(`ec",{"_index":3669,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.warn(`entryservice.change",{"_index":1757,"title":{},"body":{"injectables/EntryService.html":{}}}],["console.warn(`icon",{"_index":2406,"title":{},"body":{"components/IconComponent.html":{}}}],["console.warn(`relation",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":166,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"modules/UtilityModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/readme/core-readme.html":{}}}],["constructed",{"_index":1849,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{}}}],["constructor",{"_index":463,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["constructor(@inject('environment",{"_index":4436,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(@inject('moment.format.date",{"_index":1245,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["constructor(@inject('moment.format.month",{"_index":1300,"title":{},"body":{"interfaces/Day.html":{}}}],["constructor(@inject('usedesktopnotifications",{"_index":3938,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(app",{"_index":4724,"title":{},"body":{"components/TinymceComponent.html":{}}}],["constructor(auth",{"_index":3459,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["constructor(body",{"_index":2703,"title":{},"body":{"classes/Item.html":{}}}],["constructor(cdr",{"_index":3231,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["constructor(componentfactoryresolver",{"_index":1515,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["constructor(config",{"_index":3976,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["constructor(el",{"_index":1478,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/TabComponent.html":{}}}],["constructor(element",{"_index":2125,"title":{},"body":{"directives/FocusDirective.html":{}}}],["constructor(entryservice",{"_index":3694,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["constructor(environment",{"_index":4387,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(fb",{"_index":3502,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(fileservice",{"_index":554,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["constructor(formservice",{"_index":1439,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["constructor(geocodeservice",{"_index":3402,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["constructor(host",{"_index":3276,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(iconservice",{"_index":2382,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(items",{"_index":843,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(listconfig",{"_index":2963,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["constructor(maploader",{"_index":2256,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["constructor(modelconfig",{"_index":1646,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["constructor(notification",{"_index":3819,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(notificationservice",{"_index":2326,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{}}}],["constructor(popservice",{"_index":2506,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["constructor(private",{"_index":604,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme/location-readme.html":{}}}],["constructor(property",{"_index":1847,"title":{},"body":{"classes/Field.html":{}}}],["constructor(protected",{"_index":3548,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PopComponent.html":{}}}],["constructor(public",{"_index":392,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["constructor(resourceconfig",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceListPopComponent.html":{}}}],["constructor(router",{"_index":2930,"title":{},"body":{"injectables/KeycommandsService.html":{},"components/TabsComponent.html":{}}}],["constructor(sdk",{"_index":464,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/UploadComponent.html":{}}}],["constructor(symbol",{"_index":1810,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/InputErrorsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["constructor(usedesktopnotifications",{"_index":3918,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(viewcontainerref",{"_index":4531,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["constructors",{"_index":3920,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructs",{"_index":845,"title":{},"body":{"classes/Collection.html":{},"components/ModalComponent.html":{}}}],["consume",{"_index":5494,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["contacted",{"_index":5023,"title":{},"body":{"interfaces/WithLoader.html":{}}}],["contain",{"_index":1905,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"classes/Sorter.html":{}}}],["contained",{"_index":865,"title":{},"body":{"classes/Collection.html":{}}}],["container",{"_index":41,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["containing",{"_index":1294,"title":{},"body":{"interfaces/Day.html":{},"components/ListComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["contains",{"_index":593,"title":{},"body":{"guards/AuthGuard.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["content",{"_index":2375,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["contentchildren",{"_index":3662,"title":{},"body":{"components/ModalComponent.html":{},"components/TabsComponent.html":{}}}],["contentchildren(tabcomponent",{"_index":4690,"title":{},"body":{"components/TabsComponent.html":{}}}],["contentchildren(templateref",{"_index":3655,"title":{},"body":{"components/ModalComponent.html":{}}}],["contents",{"_index":2861,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["context",{"_index":5045,"title":{},"body":{"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["contexts",{"_index":2870,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["control",{"_index":47,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Pagination.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["control's",{"_index":2664,"title":{},"body":{"components/InputErrorsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["controls",{"_index":2220,"title":{},"body":{"injectables/FormService.html":{},"classes/PaginationConfig.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["controls[field.property",{"_index":2227,"title":{},"body":{"injectables/FormService.html":{}}}],["controlvalueaccessor",{"_index":18,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["controlvalueaccessor#setdisabled",{"_index":2617,"title":{},"body":{"components/InputComponent.html":{}}}],["conventional",{"_index":5302,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["cookie",{"_index":637,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["cookiefactory",{"_index":624,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["cookiemodule",{"_index":635,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{}}}],["cookiemodule.forroot",{"_index":646,"title":{},"body":{"modules/AuthModule.html":{}}}],["coords",{"_index":2289,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{}}}],["coords.lat",{"_index":3367,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["coords.lng",{"_index":3366,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["copied",{"_index":2913,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["copy",{"_index":3744,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["copyable",{"_index":5737,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["copycelltoclipboard",{"_index":2924,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["copycelltoclipboard(label",{"_index":2915,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["copytoclipboard",{"_index":2925,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["copytoclipboard(value",{"_index":2905,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["core",{"_index":698,"title":{"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/core-changelog.html":{}},"body":{"injectables/AuthService.html":{},"injectables/FormService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["correct",{"_index":6174,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["correctly",{"_index":5550,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["count",{"_index":4007,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["counter",{"_index":5586,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["counter.component.html",{"_index":5587,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["countercomponent",{"_index":5588,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["course",{"_index":1931,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["coverage",{"_index":5037,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crash",{"_index":5722,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["create",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["create(model",{"_index":1733,"title":{},"body":{"injectables/EntryService.html":{}}}],["create(relation",{"_index":4316,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["create/edit/delete",{"_index":959,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["create/read/update/delete",{"_index":4332,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["createclicked",{"_index":4254,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["created",{"_index":519,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["created.otherwise",{"_index":4327,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["createdmassets(assetgroupid",{"_index":2021,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["createentry(model",{"_index":1804,"title":{},"body":{"injectables/EntryService.html":{}}}],["createlabel",{"_index":1079,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["createnew",{"_index":4246,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["creates",{"_index":83,"title":{},"body":{"components/AceComponent.html":{},"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{}}}],["creating",{"_index":4366,"title":{},"body":{"interfaces/SdkField.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["creator",{"_index":3734,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["credentials",{"_index":3488,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["crud",{"_index":965,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["crud'ed",{"_index":991,"title":{},"body":{"components/CrudComponent.html":{}}}],["crud's",{"_index":988,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud'},{'name",{"_index":223,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["crud.component",{"_index":4306,"title":{},"body":{"modules/ResourceModule.html":{}}}],["crud.component.html",{"_index":966,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.ts",{"_index":4252,"title":{},"body":{"components/ResourceCrudComponent.html":{},"coverage.html":{}}}],["crud.component.ts:29",{"_index":4256,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:31",{"_index":4262,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:33",{"_index":4261,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:35",{"_index":4264,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:37",{"_index":4275,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:39",{"_index":4278,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:41",{"_index":4276,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:43",{"_index":4265,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:45",{"_index":4267,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:47",{"_index":4255,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:54",{"_index":4280,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:55",{"_index":4279,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:58",{"_index":4272,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:62",{"_index":4271,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:72",{"_index":4270,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:77",{"_index":4273,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:90",{"_index":4268,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud/crud",{"_index":1698,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["crud/crud.component",{"_index":1172,"title":{},"body":{"modules/DataModule.html":{}}}],["crud/resource",{"_index":4251,"title":{},"body":{"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["crudcomponent",{"_index":222,"title":{"components/CrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["crudcomponent#loadentry",{"_index":4286,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crudconfig",{"_index":985,"title":{"interfaces/CrudConfig.html":{}},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["crypto",{"_index":5402,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["css",{"_index":5606,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["current",{"_index":138,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["currentactions",{"_index":420,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["currentid",{"_index":412,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["currently",{"_index":454,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"interfaces/Day.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["cursor",{"_index":5964,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["custom",{"_index":1106,"title":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["customfieldcomponent",{"_index":1523,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["customfieldconfig",{"_index":3697,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["customfieldconfig).then((modelconfig",{"_index":3760,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["customfieldscomponent",{"_index":5583,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["custominputcomponent",{"_index":5561,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["customization",{"_index":987,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["customizations",{"_index":5492,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["customize",{"_index":3705,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["customizing",{"_index":5524,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["customupload",{"_index":1080,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["customwebpackconfig",{"_index":5395,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["d05ebfe",{"_index":5679,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["d28cbb7",{"_index":5677,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["d5dc292",{"_index":5842,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["d7fa72b",{"_index":5830,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["d8ad11d",{"_index":5756,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["d8c67be",{"_index":5765,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["darf",{"_index":5487,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["dark",{"_index":3636,"title":{},"body":{"components/ModalComponent.html":{}}}],["das",{"_index":3851,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["data",{"_index":370,"title":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["data.entryid",{"_index":2369,"title":{},"body":{"injectables/HistoryService.html":{}}}],["data.module",{"_index":5876,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["datamanager",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["datamanager(environment.environment",{"_index":4449,"title":{},"body":{"injectables/SdkService.html":{}}}],["datamanager.enablehistoryevents(eventsource",{"_index":2365,"title":{},"body":{"injectables/HistoryService.html":{}}}],["datamanagerid",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamanagerresource",{"_index":453,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["datamanagers",{"_index":2321,"title":{},"body":{"injectables/HistoryService.html":{}}}],["datamodule",{"_index":1151,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/data-readme.html":{}}}],["datamodule.forenvironment(environment",{"_index":5440,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["datamoduleconfig",{"_index":1190,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["date",{"_index":821,"title":{},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"modules/SymbolModule.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["date()).format(this.symbol.resolve('moment.format.date",{"_index":4855,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date(0",{"_index":4856,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date.clone",{"_index":1395,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('dd",{"_index":1382,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('mm",{"_index":1376,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format(this.monthformat",{"_index":1397,"title":{},"body":{"interfaces/Day.html":{}}}],["date.isbetween(this.timespan[0",{"_index":1378,"title":{},"body":{"interfaces/Day.html":{}}}],["date.now",{"_index":3324,"title":{},"body":{"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ToggleComponent.html":{}}}],["dateformat",{"_index":1246,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["datenschutz",{"_index":5331,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["datepickers",{"_index":4598,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["daterange'},{'name",{"_index":225,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["daterange/daterange.component",{"_index":810,"title":{},"body":{"modules/CalendarModule.html":{}}}],["daterangecomponent",{"_index":224,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetime",{"_index":1193,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["datetime'},{'name",{"_index":227,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["datetime.component.html",{"_index":1195,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime.pipe",{"_index":807,"title":{},"body":{"modules/CalendarModule.html":{}}}],["datetime/datetime.component",{"_index":2165,"title":{},"body":{"modules/FormModule.html":{}}}],["datetimecomponent",{"_index":226,"title":{"components/DatetimeComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetimepipe",{"_index":798,"title":{"pipes/DatetimePipe.html":{}},"body":{"modules/CalendarModule.html":{},"pipes/DatetimePipe.html":{},"coverage.html":{},"overview.html":{}}}],["datum",{"_index":4853,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["day",{"_index":1255,"title":{"interfaces/Day.html":{}},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["day.date.clone",{"_index":1323,"title":{},"body":{"interfaces/Day.html":{}}}],["day.first",{"_index":1316,"title":{},"body":{"interfaces/Day.html":{}}}],["day.format('mm",{"_index":1377,"title":{},"body":{"interfaces/Day.html":{}}}],["day.last",{"_index":1318,"title":{},"body":{"interfaces/Day.html":{}}}],["dayclicked",{"_index":1297,"title":{},"body":{"interfaces/Day.html":{}}}],["days",{"_index":1223,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["dd.mm.yyyy",{"_index":814,"title":{},"body":{"modules/CalendarModule.html":{}}}],["dd83e20",{"_index":5761,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["de",{"_index":2454,"title":{},"body":{"injectables/IconService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["de51159",{"_index":5856,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["deactivate",{"_index":4655,"title":{},"body":{"components/TabComponent.html":{}}}],["deactivated",{"_index":4656,"title":{},"body":{"components/TabComponent.html":{}}}],["death",{"_index":5967,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["debounce",{"_index":2574,"title":{},"body":{"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetime",{"_index":1269,"title":{},"body":{"interfaces/Day.html":{},"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["decide",{"_index":5563,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["decides",{"_index":2207,"title":{},"body":{"injectables/FormService.html":{},"components/ListComponent.html":{}}}],["decimal",{"_index":4841,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["deck",{"_index":3658,"title":{},"body":{"components/ModalComponent.html":{}}}],["declarations",{"_index":347,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["declare",{"_index":165,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["declares",{"_index":2279,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["decorators",{"_index":124,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["decrement",{"_index":5591,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["deduplicate",{"_index":1950,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["def9084",{"_index":5840,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["default",{"_index":121,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["defaultcolumns",{"_index":4186,"title":{},"body":{"injectables/PopService.html":{}}}],["defaultentryinputcomponent",{"_index":228,"title":{"components/DefaultEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultentryinputcomponent#autofocus",{"_index":5955,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["defaultentryoutputcomponent",{"_index":229,"title":{"components/DefaultEntryOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultfilter",{"_index":3060,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["defaulting",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["defaultinputcomponent",{"_index":21,"title":{"components/DefaultInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultinputcomponent:15",{"_index":141,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:17",{"_index":149,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:19",{"_index":148,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:21",{"_index":140,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:23",{"_index":144,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:26",{"_index":146,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:28",{"_index":122,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:34",{"_index":120,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultmonthformat",{"_index":1301,"title":{},"body":{"interfaces/Day.html":{}}}],["defaultoptions",{"_index":1978,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["defaultoutputcomponent",{"_index":232,"title":{"components/DefaultOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaults",{"_index":492,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["defaultsize",{"_index":2505,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["defaulttime",{"_index":3915,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["defaultvalue",{"_index":2754,"title":{},"body":{"classes/Item.html":{}}}],["define",{"_index":5512,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["defined",{"_index":70,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["defines",{"_index":1140,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"injectables/TypeConfigService.html":{}}}],["definition",{"_index":2777,"title":{},"body":{"classes/Item.html":{}}}],["del",{"_index":1720,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{}}}],["del(model",{"_index":1735,"title":{},"body":{"injectables/EntryService.html":{}}}],["del(relation",{"_index":4318,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["delete",{"_index":296,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["deleteimmutableproperties",{"_index":2694,"title":{},"body":{"classes/Item.html":{}}}],["deleteimmutableproperties(value",{"_index":2715,"title":{},"body":{"classes/Item.html":{}}}],["deletenullproperties",{"_index":4314,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["deleteonremove",{"_index":1081,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["deletes",{"_index":1737,"title":{},"body":{"injectables/EntryService.html":{},"classes/Item.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["deliver",{"_index":3718,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["demo",{"_index":566,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["demonstrates",{"_index":5453,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["demos",{"_index":6191,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["denied",{"_index":3949,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["dependencies",{"_index":346,"title":{"dependencies.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["dependency",{"_index":5755,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["depending",{"_index":75,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["depends",{"_index":4367,"title":{},"body":{"interfaces/SdkField.html":{},"injectables/SymbolPipe.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["deprecated",{"_index":1758,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["der",{"_index":3853,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["desc",{"_index":3061,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["desc/asc",{"_index":5941,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["descending",{"_index":3070,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["describe",{"_index":1901,"title":{},"body":{"classes/Field.html":{}}}],["describes",{"_index":2857,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}}}],["deselects",{"_index":4666,"title":{},"body":{"components/TabComponent.html":{}}}],["desired",{"_index":3350,"title":{},"body":{"components/LocationMapComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["desktop",{"_index":3913,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification",{"_index":3916,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification(notification",{"_index":3921,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["dest",{"_index":6180,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["destroy",{"_index":4723,"title":{},"body":{"components/TinymceComponent.html":{}}}],["destroyed.ts",{"_index":5219,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["destroys",{"_index":3591,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["details",{"_index":5608,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["determine",{"_index":4058,"title":{},"body":{"components/PaginationComponent.html":{}}}],["determines",{"_index":1264,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ItemConfig.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["dev",{"_index":5289,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["develop",{"_index":1082,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["developer",{"_index":3704,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{}}}],["developing",{"_index":5276,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["development",{"_index":5309,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["devkit/build",{"_index":5388,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["df82333",{"_index":5639,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["dialog",{"_index":4135,"title":{},"body":{"components/PopComponent.html":{}}}],["die",{"_index":3854,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["diese",{"_index":608,"title":{},"body":{"guards/AuthGuard.html":{}}}],["diff(date",{"_index":1383,"title":{},"body":{"interfaces/Day.html":{}}}],["differ",{"_index":1008,"title":{},"body":{"components/CrudComponent.html":{}}}],["different",{"_index":1282,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["direct",{"_index":3313,"title":{},"body":{"components/LoaderComponent.html":{}}}],["directive",{"_index":200,"title":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["directives",{"_index":323,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":5315,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["directly",{"_index":514,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"classes/Item.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["directory",{"_index":5319,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["disable",{"_index":3309,"title":{},"body":{"components/LoaderComponent.html":{}}}],["disablecolumnfilter",{"_index":2140,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{}}}],["disablecreatepop",{"_index":1083,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabled",{"_index":1196,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["disabledrag",{"_index":3062,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["disabledragend",{"_index":1292,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledragstart",{"_index":1290,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledrop",{"_index":4965,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["disabledropdown",{"_index":3063,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["disableheader",{"_index":1704,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["disablelegacy",{"_index":550,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["disablelistpop",{"_index":1084,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disableremove",{"_index":1085,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["disables",{"_index":3637,"title":{},"body":{"components/ModalComponent.html":{}}}],["disablesearchbar",{"_index":1086,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["disableselectswitch",{"_index":1087,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabletime",{"_index":1199,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["disableupdates",{"_index":2324,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableupdates(key",{"_index":2328,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableurlupload",{"_index":1088,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["display",{"_index":1349,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["display(property",{"_index":2718,"title":{},"body":{"classes/Item.html":{}}}],["displayaccount",{"_index":4820,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate",{"_index":4821,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate(time",{"_index":4826,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displayed",{"_index":1202,"title":{},"body":{"components/DatetimeComponent.html":{},"components/DefaultOutputComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["displays",{"_index":1271,"title":{},"body":{"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{}}}],["dist",{"_index":5283,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["dist/data",{"_index":6186,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["div",{"_index":4052,"title":{},"body":{"components/PaginationComponent.html":{}}}],["dma",{"_index":3782,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["dmasset",{"_index":2030,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ImageSelectPopComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["dmasset(this.assetgroupid",{"_index":2534,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["dmassetconfig",{"_index":1979,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dmassetlist",{"_index":1964,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dmassetlist(assetgroupid",{"_index":2056,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dmassetlist.getallitems",{"_index":2058,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dmassetresource",{"_index":1966,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["dmassets",{"_index":4847,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["dnddraggable",{"_index":5852,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["dndmodule",{"_index":1168,"title":{},"body":{"modules/DataModule.html":{},"modules/SelectModule.html":{}}}],["doc",{"_index":567,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["docs",{"_index":3629,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["document",{"_index":1991,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListHeaderComponent.html":{},"interfaces/Upload.html":{}}}],["document.addeventlistener",{"_index":2892,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.body.appendchild(el",{"_index":2908,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.body.removechild(el",{"_index":2911,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.createelement('textarea",{"_index":2906,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.execcommand('copy",{"_index":2910,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document:click",{"_index":1645,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["document:click($event",{"_index":1666,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["documentation",{"_index":5038,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["documented",{"_index":5618,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["done",{"_index":6166,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["dont",{"_index":2758,"title":{},"body":{"classes/Item.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dosomethingrisky",{"_index":3856,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["doubt",{"_index":2043,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["drag",{"_index":1169,"title":{},"body":{"modules/DataModule.html":{},"interfaces/Day.html":{},"modules/SelectModule.html":{},"dependencies.html":{}}}],["dragend",{"_index":3360,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["draggable",{"_index":1257,"title":{},"body":{"interfaces/Day.html":{}}}],["dragged",{"_index":1265,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ListConfig.html":{}}}],["dragging",{"_index":1330,"title":{},"body":{"interfaces/Day.html":{}}}],["dragleave",{"_index":1476,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragleave(e",{"_index":1489,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover",{"_index":1477,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover(e",{"_index":1492,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragstart(day",{"_index":1334,"title":{},"body":{"interfaces/Day.html":{}}}],["drawer",{"_index":4136,"title":{},"body":{"components/PopComponent.html":{}}}],["driven",{"_index":5263,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["drop",{"_index":1170,"title":{},"body":{"modules/DataModule.html":{},"directives/DropzoneDirective.html":{},"modules/SelectModule.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{}}}],["drop(e",{"_index":1494,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropday(day",{"_index":1314,"title":{},"body":{"interfaces/Day.html":{}}}],["dropdown",{"_index":1115,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["dropdownfields",{"_index":1089,"title":{},"body":{"interfaces/CrudConfig.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["dropdowns",{"_index":1120,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ListHeaderComponent.html":{}}}],["dropped",{"_index":1485,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropzone/dropzone.directive",{"_index":2115,"title":{},"body":{"modules/FilesModule.html":{}}}],["dropzonedirective",{"_index":326,"title":{"directives/DropzoneDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["due",{"_index":6155,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["duplicates",{"_index":1960,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{}}}],["during",{"_index":3516,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["dynamic",{"_index":235,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["dynamically",{"_index":3957,"title":{},"body":{"components/OutputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dynamicrackcomponent",{"_index":233,"title":{"components/DynamicRackComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent",{"_index":234,"title":{"components/DynamicSlotComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent:11",{"_index":2624,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:14",{"_index":2623,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:17",{"_index":2605,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["e",{"_index":186,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["e).then",{"_index":4991,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["e.altkey",{"_index":2880,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["e.datatransfer.files",{"_index":1505,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.datatransfer.files.length",{"_index":1506,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.display",{"_index":2788,"title":{},"body":{"classes/Item.html":{}}}],["e.g",{"_index":73,"title":{},"body":{"components/AceComponent.html":{},"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["e.id",{"_index":2787,"title":{},"body":{"classes/Item.html":{}}}],["e.metakey",{"_index":2887,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["e.preventdefault",{"_index":1337,"title":{},"body":{"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/UploadComponent.html":{}}}],["e.stopimmediatepropagation",{"_index":2853,"title":{},"body":{"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListItemsComponent.html":{}}}],["e.stoppropagation",{"_index":1501,"title":{},"body":{"directives/DropzoneDirective.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListItemsComponent.html":{},"components/UploadComponent.html":{}}}],["e.target",{"_index":2897,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/UploadComponent.html":{}}}],["e.target.files",{"_index":4928,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.files.length",{"_index":4929,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.localname",{"_index":4790,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e.toelement",{"_index":4792,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e2bbf1a",{"_index":5950,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["e2e",{"_index":5326,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["e40056b",{"_index":5644,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["e54f950",{"_index":5902,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["e801ecf",{"_index":6066,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["e8b0e49",{"_index":6038,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["ea24c06",{"_index":5951,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["ea4ba17",{"_index":5746,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["each",{"_index":1715,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Item.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog.html":{}}}],["easy",{"_index":6164,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["eb506da",{"_index":5868,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ec",{"_index":34,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ec.api",{"_index":459,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["ec.components",{"_index":2180,"title":{},"body":{"injectables/FormService.html":{},"modules/SymbolModule.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["ec.components/$1",{"_index":5366,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/(\\w",{"_index":5365,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/ace",{"_index":5033,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ec.components/ace@0.6.0",{"_index":5344,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/calendar",{"_index":1227,"title":{},"body":{"components/DatetimeComponent.html":{},"modules/FormModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["ec.components/calendar@0.2.0",{"_index":5345,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/core",{"_index":381,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["ec.components/core@0.19.0",{"_index":5346,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/data",{"_index":5031,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["ec.components/data/src/entry",{"_index":5356,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/data@0.42.0",{"_index":5347,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/location",{"_index":5034,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["ec.components/location@0.18.0",{"_index":5348,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/medium",{"_index":5035,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["ec.components/style",{"_index":5032,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ec.components/style/components",{"_index":5368,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/style/components.scss",{"_index":5426,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/style/scss/components",{"_index":5369,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/style-readme.html":{}}}],["ec.components/style@0.21.0",{"_index":5350,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/tinymce",{"_index":5036,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["ec.components/tinymce@0.5.0",{"_index":5351,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/ui",{"_index":156,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"modules/FilesModule.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ec.components/ui/src/icon/emoji",{"_index":2395,"title":{},"body":{"components/IconComponent.html":{}}}],["ec.components/ui@0.36.0",{"_index":5352,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.datamanager",{"_index":5594,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["ec.sdk",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{},"classes/Field.html":{},"injectables/SdkService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ec.sdk/lib/accounts",{"_index":4425,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/core",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/datamanager",{"_index":2350,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/publicapi",{"_index":527,"title":{},"body":{"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["ec.sdk/lib/resources/accounts/accountresource",{"_index":3476,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["ec.sdk/lib/resources/datamanager/datamanagerresource",{"_index":469,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/modelresource",{"_index":2349,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.sdk/lib/resources/listresource",{"_index":1587,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/ResourceActionbarState.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetlist",{"_index":1965,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetresource",{"_index":1967,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/publicapi/entrylist",{"_index":1585,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/entryresource",{"_index":1586,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetlist",{"_index":1969,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetresource",{"_index":526,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/resource",{"_index":4297,"title":{},"body":{"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/session",{"_index":4426,"title":{},"body":{"injectables/SdkService.html":{}}}],["ecasset",{"_index":480,"title":{},"body":{"directives/AssetDirective.html":{}}}],["ecasset]'},{'name",{"_index":325,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecdropzone",{"_index":1472,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ecdropzone]'},{'name",{"_index":327,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentries",{"_index":1550,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["ecentries]'},{'name",{"_index":329,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentry",{"_index":1612,"title":{},"body":{"directives/EntryDirective.html":{}}}],["ecentry]'},{'name",{"_index":331,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecfocus",{"_index":2124,"title":{},"body":{"directives/FocusDirective.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ecfocus]'},{'name",{"_index":333,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecicons",{"_index":5191,"title":{},"body":{"coverage.html":{}}}],["ecimage",{"_index":2461,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ecimage]'},{'name",{"_index":336,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecslothost",{"_index":338,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["edge",{"_index":1331,"title":{},"body":{"interfaces/Day.html":{}}}],["edit",{"_index":1064,"title":{},"body":{"components/CrudComponent.html":{},"injectables/FormService.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["edit/create",{"_index":5534,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["editable",{"_index":1205,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["edited",{"_index":2592,"title":{},"body":{"components/InputComponent.html":{},"interfaces/ItemConfig.html":{}}}],["edititem",{"_index":5790,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["editor",{"_index":15,"title":{"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}},"body":{"components/AceComponent.html":{},"injectables/EntryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["editor#mediumeditor",{"_index":3603,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor'},{'name",{"_index":278,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["editor.component",{"_index":3620,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["editor.component.html",{"_index":3582,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.scss",{"_index":3581,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts",{"_index":3576,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:35",{"_index":3585,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":3586,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":3588,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":3589,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":3596,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":3600,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":3597,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":3599,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":3592,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":3590,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":3595,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":3598,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:77",{"_index":3593,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:81",{"_index":3594,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.getcontent",{"_index":4775,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.module.ts",{"_index":3619,"title":{},"body":{"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["editor.on('change",{"_index":185,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.scss",{"_index":3613,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.setcontent(this.value",{"_index":3611,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.setvalue(this.value",{"_index":192,"title":{},"body":{"components/AceComponent.html":{}}}],["editor/dist/js/medium",{"_index":3601,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/src/lib/medium",{"_index":3575,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["editor/src/sass/medium",{"_index":3612,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/src/test.ts",{"_index":5175,"title":{},"body":{"coverage.html":{}}}],["editor?e=1",{"_index":3579,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor@0.4.0",{"_index":5349,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["editor[0",{"_index":4787,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editorsettings",{"_index":4772,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["editorsettings.setup(editor",{"_index":4782,"title":{},"body":{"components/TinymceComponent.html":{}}}],["ee3518f",{"_index":5728,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["efa26a0",{"_index":5729,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["efb984e",{"_index":6024,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["eine",{"_index":4120,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["eingeloggt",{"_index":616,"title":{},"body":{"guards/AuthGuard.html":{}}}],["eject",{"_index":5384,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["el",{"_index":1480,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/TabComponent.html":{}}}],["el.select",{"_index":2909,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["el.value",{"_index":2907,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["element",{"_index":127,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["elementref",{"_index":123,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["elements",{"_index":4057,"title":{},"body":{"components/PaginationComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["email",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{}}}],["emailavailable",{"_index":3553,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["emailavailable(email",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{}}}],["emaillabel",{"_index":3497,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emailplaceholder",{"_index":3498,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emailvalidator",{"_index":5230,"title":{},"body":{"coverage.html":{}}}],["embedd",{"_index":2391,"title":{},"body":{"components/IconComponent.html":{}}}],["embedded",{"_index":1521,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["emit",{"_index":1400,"title":{},"body":{"interfaces/Day.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["emit(host",{"_index":3861,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["emit(notification",{"_index":3926,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["emits",{"_index":994,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["emitted",{"_index":1023,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithNotifications.html":{}}}],["emitter",{"_index":145,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/NotificationsService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["emojiicons",{"_index":2394,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["empty",{"_index":881,"title":{},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["empty=true",{"_index":5542,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["en",{"_index":2453,"title":{},"body":{"injectables/IconService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["enable",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["enables",{"_index":2336,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{}}}],["enableupdates",{"_index":2325,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enableupdates(resource",{"_index":2333,"title":{},"body":{"injectables/HistoryService.html":{}}}],["encapsulation",{"_index":2948,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["end",{"_index":1291,"title":{},"body":{"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["endless",{"_index":1556,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["enforces",{"_index":5446,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enhance",{"_index":2437,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["enough",{"_index":5428,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ensure",{"_index":4113,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/PopComponent.html":{}}}],["enters",{"_index":5566,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entities",{"_index":1139,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Item.html":{}}}],["entity",{"_index":1149,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ItemConfig.html":{}}}],["entrecode",{"_index":5265,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["entrecode.github.io/ec.components",{"_index":5272,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["entries",{"_index":1109,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entries/entries.directive",{"_index":1174,"title":{},"body":{"modules/DataModule.html":{}}}],["entriesdirective",{"_index":328,"title":{"directives/EntriesDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entry",{"_index":230,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["entry(this.model",{"_index":1628,"title":{},"body":{"directives/EntryDirective.html":{}}}],["entry.del().then((res",{"_index":1807,"title":{},"body":{"injectables/EntryService.html":{}}}],["entry.getimagethumburl(property",{"_index":4843,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.gettitle(property",{"_index":4857,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.save",{"_index":1770,"title":{},"body":{"injectables/EntryService.html":{}}}],["entry.saved",{"_index":4610,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["entry/entry.directive",{"_index":1182,"title":{},"body":{"modules/DataModule.html":{}}}],["entry/entry.service",{"_index":1173,"title":{},"body":{"modules/DataModule.html":{},"injectables/ModelConfigService.html":{}}}],["entry[key",{"_index":1779,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryactionbarcomponent",{"_index":237,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrycomponent",{"_index":5567,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entrycomponents",{"_index":360,"title":{},"body":{"modules/AceModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/TinymceModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entrycreated",{"_index":2370,"title":{},"body":{"injectables/HistoryService.html":{}}}],["entrydirective",{"_index":330,"title":{"directives/EntryDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryform",{"_index":5355,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["entryformcomponent",{"_index":238,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryid",{"_index":1613,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["entryitem",{"_index":1743,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryitem.config",{"_index":1784,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryitem.getbody",{"_index":1769,"title":{},"body":{"injectables/EntryService.html":{}}}],["entrylist",{"_index":1018,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["entrylist(this.model",{"_index":1594,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["entrylist.model",{"_index":1708,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["entrylistcomponent",{"_index":240,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrylistpopcomponent",{"_index":241,"title":{"components/EntryListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrylistselectcomponent",{"_index":242,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrypop",{"_index":967,"title":{},"body":{"components/CrudComponent.html":{}}}],["entrypopcomponent",{"_index":243,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryresource",{"_index":1579,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["entryselectcomponent",{"_index":244,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryservice",{"_index":1160,"title":{"injectables/EntryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["entryservice#change",{"_index":1765,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryupdated",{"_index":2367,"title":{},"body":{"injectables/HistoryService.html":{}}}],["env",{"_index":4408,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["environment",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["environment.clientid",{"_index":4441,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.datamanagerid",{"_index":4444,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.environment",{"_index":4451,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.init",{"_index":4437,"title":{},"body":{"injectables/SdkService.html":{}}}],["environments",{"_index":5430,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["environments/environment",{"_index":5438,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["equal",{"_index":1044,"title":{},"body":{"components/CrudComponent.html":{}}}],["equally",{"_index":1902,"title":{},"body":{"classes/Field.html":{}}}],["erhalten",{"_index":4124,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["err",{"_index":1065,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["err.message",{"_index":3555,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":581,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["error'},{'name",{"_index":246,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["error('cannot",{"_index":538,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{},"classes/Item.html":{}}}],["error('get",{"_index":4432,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('no",{"_index":4427,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('the",{"_index":4646,"title":{},"body":{"injectables/SymbolService.html":{}}}],["error(`cannot",{"_index":4031,"title":{},"body":{"classes/Pagination.html":{}}}],["error.code",{"_index":1822,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.code}}{{error.datapath}}{{error?.message}}{{error.detail}}{{error.verbose",{"_index":1827,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":1809,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.datapath",{"_index":1823,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.detail}}{{error.verbose",{"_index":1825,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.message",{"_index":2683,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["error.verbose",{"_index":1826,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":3908,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["error?.message",{"_index":1824,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcomponent",{"_index":245,"title":{"components/ErrorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":3491,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["errors",{"_index":2665,"title":{},"body":{"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["errors'},{'name",{"_index":257,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["errors.component",{"_index":2690,"title":{},"body":{"modules/IoModule.html":{}}}],["errors.component.html",{"_index":2667,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts",{"_index":2663,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["errors.component.ts:12",{"_index":2669,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:14",{"_index":2676,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:17",{"_index":2672,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors/input",{"_index":2662,"title":{},"body":{"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["errs",{"_index":2682,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errs.push",{"_index":2681,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["erstellen",{"_index":4245,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["erstellt",{"_index":5478,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["es6",{"_index":1226,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{}}}],["esc",{"_index":1657,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["escape",{"_index":4182,"title":{},"body":{"injectables/PopService.html":{}}}],["etc",{"_index":1860,"title":{},"body":{"classes/Field.html":{},"components/ListItemsComponent.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["even",{"_index":1100,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["event",{"_index":860,"title":{},"body":{"classes/Collection.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["event.key",{"_index":4191,"title":{},"body":{"injectables/PopService.html":{}}}],["event.keycode",{"_index":4189,"title":{},"body":{"injectables/PopService.html":{}}}],["eventemitter",{"_index":143,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["eventemitter.ts",{"_index":951,"title":{},"body":{"classes/Config.html":{}}}],["events",{"_index":4184,"title":{},"body":{"injectables/PopService.html":{}}}],["eventsource",{"_index":2351,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventsource/lib/eventsource",{"_index":2352,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventsources",{"_index":2322,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventually",{"_index":4932,"title":{},"body":{"components/UploadComponent.html":{}}}],["everything",{"_index":3686,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["everytime",{"_index":1977,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["exact",{"_index":1235,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/TypeConfigService.html":{}}}],["exactly",{"_index":5529,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["example",{"_index":846,"title":{},"body":{"classes/Collection.html":{},"classes/Field.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/adding-new-packages.html":{}}}],["examples",{"_index":9,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["exceed",{"_index":438,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["execute",{"_index":5324,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["exist",{"_index":4647,"title":{},"body":{"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["existing",{"_index":1746,"title":{},"body":{"injectables/EntryService.html":{},"classes/Item.html":{},"injectables/ListConfigService.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["existing.hide",{"_index":3121,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["existing.hide.foreach((property",{"_index":3124,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["exists",{"_index":5360,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["expected",{"_index":2376,"title":{},"body":{"components/IconComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["expects",{"_index":162,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{}}}],["experimental",{"_index":1427,"title":{},"body":{"components/DefaultEntryInputComponent.html":{},"injectables/FormService.html":{},"interfaces/ListConfig.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["export",{"_index":167,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["exportas",{"_index":528,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["exporting",{"_index":5989,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["exports",{"_index":349,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["expose",{"_index":4573,"title":{},"body":{"classes/Sorter.html":{}}}],["exposes",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{}}}],["extend",{"_index":5559,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["extended",{"_index":3541,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["extending",{"_index":5734,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["extends",{"_index":20,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{}}}],["extension",{"_index":2139,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ModalComponent.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["extensions/modes/themes",{"_index":5614,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["external",{"_index":1129,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Pagination.html":{}}}],["extra",{"_index":1111,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["extracts",{"_index":2199,"title":{},"body":{"injectables/FormService.html":{}}}],["f.hideinlist",{"_index":3219,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["f.hideinlist).map((f",{"_index":3118,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.name",{"_index":4953,"title":{},"body":{"components/UploadComponent.html":{}}}],["f.property",{"_index":3119,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.url",{"_index":2019,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["f3590a7",{"_index":5891,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["f3fa9a0",{"_index":5650,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["f7b65f4",{"_index":6007,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["f9b12c3",{"_index":5665,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["factor",{"_index":5541,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["fail",{"_index":916,"title":{},"body":{"classes/Collection.html":{}}}],["failiure",{"_index":3879,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["fails",{"_index":600,"title":{},"body":{"guards/AuthGuard.html":{}}}],["faktor",{"_index":5482,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["fall",{"_index":1790,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fallback",{"_index":2983,"title":{},"body":{"components/ListComponent.html":{},"components/ModalComponent.html":{}}}],["falling",{"_index":3672,"title":{},"body":{"components/ModalComponent.html":{}}}],["falls",{"_index":1130,"title":{},"body":{"interfaces/CrudConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["false",{"_index":397,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"modules/NotificationsModule.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["fancier",{"_index":4806,"title":{},"body":{"components/ToggleComponent.html":{}}}],["fb",{"_index":3505,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["fcfdf32",{"_index":5877,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fd41ccc",{"_index":6000,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["features",{"_index":3866,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["fecb195",{"_index":5645,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fed2156",{"_index":5634,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fed2c52",{"_index":5858,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fehler",{"_index":3858,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{}}}],["ffnungszeiten",{"_index":5570,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field",{"_index":48,"title":{"classes/Field.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["field#autofocus",{"_index":5957,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["field's",{"_index":1882,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{},"components/ListHeaderComponent.html":{}}}],["field('name",{"_index":1918,"title":{},"body":{"classes/Field.html":{}}}],["field(this.property",{"_index":2634,"title":{},"body":{"components/InputComponent.html":{}}}],["field.component",{"_index":1524,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["field.create",{"_index":2216,"title":{},"body":{"injectables/FormService.html":{}}}],["field.display",{"_index":1459,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["field.display(name",{"_index":1926,"title":{},"body":{"classes/Field.html":{}}}],["field.edit",{"_index":2218,"title":{},"body":{"injectables/FormService.html":{}}}],["field.form",{"_index":2219,"title":{},"body":{"injectables/FormService.html":{}}}],["field.getlabel",{"_index":3222,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.getplaceholder",{"_index":1456,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["field.getview('filter",{"_index":3197,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.group(name",{"_index":1927,"title":{},"body":{"classes/Field.html":{}}}],["field.hideinform",{"_index":5020,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["field.hideinlist",{"_index":3123,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["field.immutable",{"_index":2241,"title":{},"body":{"injectables/FormService.html":{}}}],["field.maxitems",{"_index":1463,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["field.nestedcrudconfig",{"_index":3199,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.property",{"_index":3185,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.readonly",{"_index":2242,"title":{},"body":{"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field.required",{"_index":2237,"title":{},"body":{"injectables/FormService.html":{}}}],["field.resolve({value:{name:'bobby",{"_index":1924,"title":{},"body":{"classes/Field.html":{}}}],["field.sort(name",{"_index":1929,"title":{},"body":{"classes/Field.html":{}}}],["field.ts",{"_index":4360,"title":{},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["field.type",{"_index":472,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["field.validate",{"_index":2211,"title":{},"body":{"injectables/FormService.html":{}}}],["field.validate(control.value",{"_index":2240,"title":{},"body":{"injectables/FormService.html":{}}}],["fieldconfig",{"_index":1119,"title":{"interfaces/FieldConfig.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["fieldconfig[field].inputview",{"_index":3765,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[field].type",{"_index":3763,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[key",{"_index":3810,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[property",{"_index":3776,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfigproperty",{"_index":1829,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{},"components/InputComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["fieldhost",{"_index":1530,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldhostdirective",{"_index":1539,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldname",{"_index":1951,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["fields",{"_index":389,"title":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["fields.filter((field",{"_index":5018,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pipe",{"_index":2163,"title":{},"body":{"modules/FormModule.html":{}}}],["fields.pipe.ts",{"_index":5010,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["fields.pipe.ts:10",{"_index":5017,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pipe.ts:12",{"_index":5015,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fieldvalidators",{"_index":3546,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["fieldvalidators.email",{"_index":3552,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["fieldvalidators.uuid",{"_index":4526,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["file",{"_index":10,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["file.service",{"_index":563,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["fileinput",{"_index":4888,"title":{},"body":{"components/UploadComponent.html":{}}}],["filelist",{"_index":2012,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["filename",{"_index":1952,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["filenames",{"_index":1963,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["fileoptions",{"_index":1090,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["files",{"_index":522,"title":{},"body":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"injectables/FileService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["files.length",{"_index":2016,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["files.map((f",{"_index":2018,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["files.split('\\n').map((url",{"_index":4933,"title":{},"body":{"components/UploadComponent.html":{}}}],["files/file.service",{"_index":1150,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["files/files.module",{"_index":1183,"title":{},"body":{"modules/DataModule.html":{}}}],["files[0].url",{"_index":2017,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["fileservice",{"_index":547,"title":{"injectables/FileService.html":{}},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fileservice#resolveassets",{"_index":2042,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["filesmodule",{"_index":1157,"title":{"modules/FilesModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestoupload",{"_index":4889,"title":{},"body":{"components/UploadComponent.html":{}}}],["fill(0",{"_index":1367,"title":{},"body":{"interfaces/Day.html":{}}}],["filte",{"_index":3727,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["filter",{"_index":1727,"title":{},"body":{"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["filter((field",{"_index":2222,"title":{},"body":{"injectables/FormService.html":{},"injectables/ModelConfigService.html":{}}}],["filter((i",{"_index":4217,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter((item",{"_index":4566,"title":{},"body":{"classes/Sorter.html":{}}}],["filter((v",{"_index":2833,"title":{},"body":{"classes/Item.html":{},"interfaces/ResourceActionbarState.html":{}}}],["filter((value",{"_index":4237,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter(property",{"_index":2985,"title":{},"body":{"components/ListComponent.html":{}}}],["filter.model",{"_index":1754,"title":{},"body":{"injectables/EntryService.html":{}}}],["filter.relation",{"_index":1755,"title":{},"body":{"injectables/EntryService.html":{}}}],["filter[key",{"_index":4342,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["filterable",{"_index":1832,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["filtercomponent",{"_index":3757,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["filterdropdownlist(listcomponent",{"_index":4232,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filteredfield",{"_index":3131,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterfield",{"_index":3137,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterfield(property",{"_index":3151,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterform",{"_index":3132,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterformconfig",{"_index":3133,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filtering",{"_index":1858,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filterinput",{"_index":3134,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filteroperator",{"_index":1833,"title":{},"body":{"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["filteroperators",{"_index":5861,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filteroptions",{"_index":1567,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["filterpop",{"_index":3135,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterpopclass",{"_index":1834,"title":{},"body":{"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filters",{"_index":1234,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["filterview",{"_index":3726,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["find",{"_index":5273,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["finds",{"_index":2428,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["finished",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["fire",{"_index":3933,"title":{},"body":{"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["fired",{"_index":2890,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["fires",{"_index":501,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["first",{"_index":1258,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["fits",{"_index":4324,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fix",{"_index":2561,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"classes/Item.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["fixed",{"_index":3642,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["fixes",{"_index":5626,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["flag",{"_index":863,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"injectables/NotificationsService.html":{},"classes/Sorter.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["flags",{"_index":4896,"title":{},"body":{"components/UploadComponent.html":{}}}],["flex",{"_index":1461,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/IconComponent.html":{}}}],["flexible",{"_index":3007,"title":{},"body":{"components/ListComponent.html":{}}}],["flip",{"_index":1694,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["flips",{"_index":1491,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{}}}],["flow",{"_index":5465,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/publishing.html":{}}}],["fn",{"_index":103,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["focus",{"_index":63,"title":{"interfaces/Focus.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"components/InputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["focus(focus",{"_index":118,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["focus/focus.directive",{"_index":5005,"title":{},"body":{"modules/UtilityModule.html":{}}}],["focusdirective",{"_index":332,"title":{"directives/FocusDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["focused",{"_index":2891,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["focuses",{"_index":4983,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["focusevent",{"_index":49,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/UploadSelectComponent.html":{}}}],["focusfirst",{"_index":2954,"title":{},"body":{"components/ListComponent.html":{}}}],["focusitem",{"_index":2951,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["focusnext",{"_index":2955,"title":{},"body":{"components/ListComponent.html":{}}}],["focusprev",{"_index":2956,"title":{},"body":{"components/ListComponent.html":{}}}],["focussearchbar",{"_index":5905,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["focussed",{"_index":3244,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["folder",{"_index":5358,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/adding-new-packages.html":{}}}],["folders",{"_index":5282,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["following",{"_index":2408,"title":{},"body":{"components/IconComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["follows",{"_index":5467,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["font",{"_index":4583,"title":{},"body":{"interfaces/Symbol.html":{}}}],["footer",{"_index":3633,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["forcegroup",{"_index":1983,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["forcereload",{"_index":2065,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["foreach",{"_index":3777,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["foreach((field",{"_index":2224,"title":{},"body":{"injectables/FormService.html":{}}}],["forenvironment",{"_index":1164,"title":{},"body":{"modules/DataModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["forenvironment(environment",{"_index":1165,"title":{},"body":{"modules/DataModule.html":{}}}],["forever",{"_index":3832,"title":{},"body":{"classes/Notification.html":{}}}],["form",{"_index":131,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["form's",{"_index":2613,"title":{},"body":{"components/InputComponent.html":{}}}],["form'},{'name",{"_index":239,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["form.component",{"_index":1179,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["form.component.html",{"_index":3490,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts",{"_index":3487,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:16",{"_index":4501,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:18",{"_index":3536,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:20",{"_index":3539,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:22",{"_index":3535,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:24",{"_index":3523,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":3522,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:28",{"_index":3515,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:30",{"_index":3521,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":3511,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":3514,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:36",{"_index":3518,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:37",{"_index":4513,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:38",{"_index":3520,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:40",{"_index":3509,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:42",{"_index":3506,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:44",{"_index":3504,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:47",{"_index":3540,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:50",{"_index":3530,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:58",{"_index":3534,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:66",{"_index":3526,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:72",{"_index":3531,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.create",{"_index":6005,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["form.display('amazement_factor",{"_index":5549,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["form.fields",{"_index":2221,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form",{"_index":2243,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.display",{"_index":2246,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.isediting",{"_index":2245,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getbody",{"_index":2217,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getvalue('keepratio",{"_index":2566,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.getvalue('ratio",{"_index":2565,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.getvalue(field.property",{"_index":2226,"title":{},"body":{"injectables/FormService.html":{}}}],["form.group.controls.alt.setvalue(title",{"_index":2552,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.height.setvalue(math.round(value",{"_index":2567,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.ratio.setvalue(ratio",{"_index":2553,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(math.round(value",{"_index":2569,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(width",{"_index":2551,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.service",{"_index":1449,"title":{},"body":{"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["form.ts",{"_index":5156,"title":{},"body":{"coverage.html":{}}}],["form/admin",{"_index":446,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/default",{"_index":1176,"title":{},"body":{"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/entry",{"_index":1178,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["form/form.component",{"_index":2215,"title":{},"body":{"injectables/FormService.html":{},"components/ListHeaderComponent.html":{}}}],["form/form.module",{"_index":3259,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["form/login",{"_index":3486,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["form/resource",{"_index":4305,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["form/signup",{"_index":4498,"title":{},"body":{"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["format",{"_index":1259,"title":{},"body":{"interfaces/Day.html":{},"injectables/TypeConfigService.html":{}}}],["formats",{"_index":806,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.date",{"_index":824,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.month",{"_index":826,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.time",{"_index":825,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formatted",{"_index":1267,"title":{},"body":{"interfaces/Day.html":{}}}],["formattedtext",{"_index":4840,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formatter",{"_index":4834,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formbuilder",{"_index":3503,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formcomponent",{"_index":247,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcomponent#inputs",{"_index":2615,"title":{},"body":{"components/InputComponent.html":{}}}],["formconfig",{"_index":2137,"title":{"interfaces/FormConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["formcontrol",{"_index":139,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["formdata",{"_index":2010,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["formdata.append(key",{"_index":2013,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["formgroup",{"_index":147,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["formgroup(controls",{"_index":2234,"title":{},"body":{"injectables/FormService.html":{}}}],["formmodule",{"_index":2147,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["formmoduleconfig",{"_index":2173,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{}}}],["forms",{"_index":1865,"title":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["formservice",{"_index":50,"title":{"injectables/FormService.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/LocationPickerComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["formservice.isreadonly(field",{"_index":1458,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["formsmodule",{"_index":634,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ListModule.html":{},"modules/ResourceModule.html":{},"modules/UtilityModule.html":{}}}],["formtemplate",{"_index":5184,"title":{},"body":{"coverage.html":{}}}],["forroot",{"_index":802,"title":{},"body":{"modules/CalendarModule.html":{},"modules/LocationModule.html":{}}}],["forroot(formats",{"_index":803,"title":{},"body":{"modules/CalendarModule.html":{}}}],["forroot(undefined",{"_index":3381,"title":{},"body":{"modules/LocationModule.html":{}}}],["forwardref",{"_index":30,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["found",{"_index":580,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/style-readme.html":{}}}],["foundation",{"_index":2765,"title":{},"body":{"classes/Item.html":{}}}],["framework",{"_index":5595,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["freedom",{"_index":5539,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["fresh",{"_index":5290,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["from(this.maploader.load()).pipe(switchmap",{"_index":2296,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["fromsearch",{"_index":3410,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["fruit",{"_index":5598,"title":{},"body":{"additional-documentation/readme/data-readme.html":{}}}],["fruits",{"_index":3010,"title":{},"body":{"components/ListComponent.html":{}}}],["fs",{"_index":5403,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["fun",{"_index":5449,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["function",{"_index":426,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"modules/AuthModule.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["functionalities",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["functionality",{"_index":960,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["functions",{"_index":2757,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Item.html":{},"miscellaneous/functions.html":{}}}],["fundamental",{"_index":831,"title":{},"body":{"classes/Collection.html":{}}}],["further",{"_index":3830,"title":{},"body":{"classes/Notification.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["future",{"_index":1766,"title":{},"body":{"injectables/EntryService.html":{}}}],["g",{"_index":5411,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["generally",{"_index":5551,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["generate",{"_index":2675,"title":{},"body":{"components/InputErrorsComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["generateconfig",{"_index":2695,"title":{},"body":{"classes/Item.html":{},"injectables/ModelConfigService.html":{}}}],["generateconfig(model",{"_index":3696,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generated",{"_index":3687,"title":{},"body":{"injectables/ModelConfigService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["generates",{"_index":2722,"title":{},"body":{"classes/Item.html":{},"injectables/ModelConfigService.html":{}}}],["generation",{"_index":5532,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["generic",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["geo",{"_index":3414,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["geocode",{"_index":2251,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode.service",{"_index":3384,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["geocodelatlng",{"_index":2253,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodelatlng(geocoder",{"_index":2264,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder",{"_index":2269,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder.geocode",{"_index":2300,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservice",{"_index":2247,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["get(name",{"_index":2426,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["get(property",{"_index":3708,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["get(type",{"_index":4829,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["getaccount",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["getaccount(api",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getalgorithm",{"_index":4540,"title":{},"body":{"classes/Sorter.html":{}}}],["getalgorithm(items",{"_index":4545,"title":{},"body":{"classes/Sorter.html":{}}}],["getallowedmodelmethods",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedmodelmethods(model",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods(relation",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["getapi",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getapi(email",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["getassetconfig",{"_index":2077,"title":{},"body":{"injectables/FileService.html":{}}}],["getassetconfig(assetgroupid",{"_index":1995,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["getbody",{"_index":2696,"title":{},"body":{"classes/Item.html":{}}}],["getcomponent",{"_index":1843,"title":{},"body":{"classes/Field.html":{}}}],["getcomponent(occasion",{"_index":1890,"title":{},"body":{"classes/Field.html":{}}}],["getconfig",{"_index":2697,"title":{},"body":{"classes/Item.html":{}}}],["getdaycolor(_moment",{"_index":1341,"title":{},"body":{"interfaces/Day.html":{}}}],["getdayheat(_moment",{"_index":1344,"title":{},"body":{"interfaces/Day.html":{}}}],["geterrors",{"_index":2668,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["getfieldconfig",{"_index":3690,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getfieldconfig(model",{"_index":3713,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getformdata",{"_index":2078,"title":{},"body":{"injectables/FileService.html":{}}}],["getformdata(files",{"_index":2011,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["getformlabel",{"_index":2182,"title":{},"body":{"injectables/FormService.html":{}}}],["getformlabel(form",{"_index":2192,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup",{"_index":2183,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup(form",{"_index":2195,"title":{},"body":{"injectables/FormService.html":{}}}],["getheader",{"_index":1640,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["getheader(entrylist",{"_index":1669,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["getlabel",{"_index":1844,"title":{},"body":{"classes/Field.html":{}}}],["getlightmodel",{"_index":3691,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getlightmodel(model",{"_index":3719,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel",{"_index":3692,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel(model",{"_index":3723,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel(this.model",{"_index":1048,"title":{},"body":{"components/CrudComponent.html":{}}}],["getmonth(day",{"_index":1360,"title":{},"body":{"interfaces/Day.html":{}}}],["getnearestaddress",{"_index":2254,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getnearestaddress(location",{"_index":2270,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getpage",{"_index":3969,"title":{},"body":{"classes/Pagination.html":{}}}],["getpages",{"_index":3970,"title":{},"body":{"classes/Pagination.html":{}}}],["getpath",{"_index":443,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["getpermission",{"_index":3917,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getplaceholder",{"_index":1845,"title":{},"body":{"classes/Field.html":{}}}],["getproperties",{"_index":2698,"title":{},"body":{"classes/Item.html":{}}}],["getresourcelistactions(listresource",{"_index":4203,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["getroot",{"_index":4420,"title":{},"body":{"injectables/SdkService.html":{}}}],["gets",{"_index":3826,"title":{},"body":{"classes/Notification.html":{}}}],["getschema",{"_index":4383,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema(model",{"_index":4392,"title":{},"body":{"injectables/SdkService.html":{}}}],["getstoragekey",{"_index":3087,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getstoragekey(list",{"_index":3092,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getsystemfields",{"_index":3693,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getter",{"_index":939,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{}}}],["getting",{"_index":5027,"title":{"changelog.html":{},"index.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["getvalidators",{"_index":2184,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalidators(field",{"_index":2197,"title":{},"body":{"injectables/FormService.html":{}}}],["getview",{"_index":1846,"title":{},"body":{"classes/Field.html":{}}}],["getview(occasion",{"_index":1895,"title":{},"body":{"classes/Field.html":{}}}],["ghost",{"_index":5546,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["give",{"_index":5011,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["given",{"_index":88,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["gives",{"_index":4323,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["giving",{"_index":5521,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["global",{"_index":3292,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["globalloader",{"_index":3297,"title":{},"body":{"components/LoaderComponent.html":{}}}],["globally",{"_index":5410,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["glyph",{"_index":4584,"title":{},"body":{"interfaces/Symbol.html":{}}}],["go",{"_index":5329,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["google",{"_index":2249,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{}}}],["google.maps.geocoder",{"_index":2307,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.places.autocomplete(el",{"_index":2282,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["googlemaps",{"_index":3447,"title":{},"body":{"components/LocationSearchComponent.html":{},"dependencies.html":{}}}],["googlemaps.apikey",{"_index":3395,"title":{},"body":{"modules/LocationModule.html":{}}}],["granted",{"_index":3925,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["graveyard",{"_index":5897,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["grid",{"_index":6050,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["group",{"_index":51,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["group(property",{"_index":2729,"title":{},"body":{"classes/Item.html":{}}}],["group.addcontrol(field.property",{"_index":2236,"title":{},"body":{"injectables/FormService.html":{}}}],["group.pipe",{"_index":3260,"title":{},"body":{"modules/ListModule.html":{}}}],["groupchanged",{"_index":553,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["groupdate",{"_index":4822,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["grouping",{"_index":1915,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["grouppipe",{"_index":1233,"title":{"pipes/GroupPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":1563,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["größer",{"_index":5483,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["guard",{"_index":572,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":638,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard.service.ts",{"_index":576,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":590,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.service.ts:16",{"_index":591,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards",{"_index":574,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guide",{"_index":5274,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["guidelines",{"_index":5620,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["h",{"_index":3016,"title":{},"body":{"components/ListComponent.html":{}}}],["haben",{"_index":4118,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["hacks",{"_index":5869,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["handle",{"_index":2250,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["handler",{"_index":2980,"title":{},"body":{"components/ListComponent.html":{}}}],["handles",{"_index":2191,"title":{},"body":{"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["handling",{"_index":3865,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["handy",{"_index":5515,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["happened",{"_index":1974,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["happens",{"_index":1655,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hard",{"_index":5552,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["has(item",{"_index":872,"title":{},"body":{"classes/Collection.html":{}}}],["hasall",{"_index":836,"title":{},"body":{"classes/Collection.html":{}}}],["hasall(items",{"_index":875,"title":{},"body":{"classes/Collection.html":{}}}],["hasbody",{"_index":2699,"title":{},"body":{"classes/Item.html":{}}}],["hasfocus",{"_index":3229,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hasfocus(item",{"_index":3242,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hasmethod",{"_index":971,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["hasmethod(method",{"_index":998,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["hassle",{"_index":5607,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["having",{"_index":452,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":1295,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["header'},{'name",{"_index":260,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["header.component",{"_index":3261,"title":{},"body":{"modules/ListModule.html":{}}}],["header.component.html",{"_index":3130,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts",{"_index":3128,"title":{},"body":{"components/ListHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:105",{"_index":3162,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:113",{"_index":3150,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:122",{"_index":3166,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:132",{"_index":3168,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:138",{"_index":3160,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:16",{"_index":3146,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:18",{"_index":3147,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:20",{"_index":3174,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:22",{"_index":3172,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":3170,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:24",{"_index":3171,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:25",{"_index":3145,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:27",{"_index":3169,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:29",{"_index":3164,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":3158,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:38",{"_index":3156,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:46",{"_index":3161,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:83",{"_index":3152,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header/items/pagination",{"_index":5499,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["header/list",{"_index":3127,"title":{},"body":{"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["headers",{"_index":5477,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["headline",{"_index":3836,"title":{},"body":{"classes/Notification.html":{}}}],["heat",{"_index":1260,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap",{"_index":1279,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap'},{'name",{"_index":249,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["heatmap/heatmap.component",{"_index":809,"title":{},"body":{"modules/CalendarModule.html":{}}}],["heatmapcomponent",{"_index":248,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":196,"title":{},"body":{"components/AceComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/LocationMapComponent.html":{}}}],["hellip",{"_index":1465,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["help",{"_index":5328,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["helper",{"_index":1569,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Item.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{}}}],["helpful",{"_index":2608,"title":{},"body":{"components/InputComponent.html":{}}}],["here",{"_index":3293,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["hh:mm",{"_index":816,"title":{},"body":{"modules/CalendarModule.html":{}}}],["hidden",{"_index":1835,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/WithNotifications.html":{}}}],["hide",{"_index":1061,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["hideassetgroupselect",{"_index":1091,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["hidefirstlast",{"_index":4084,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hideformlabel",{"_index":1836,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{}}}],["hideformlabelifempty",{"_index":1837,"title":{},"body":{"classes/Field.html":{}}}],["hideinform",{"_index":2556,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{}}}],["hideinlist",{"_index":3745,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonclickoutside",{"_index":1643,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hideoncreate",{"_index":3784,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonedit",{"_index":3785,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonescape",{"_index":1644,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["hidepages",{"_index":4085,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepagination",{"_index":1703,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{}}}],["hides",{"_index":1122,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["hidesubmitbutton",{"_index":2141,"title":{},"body":{"interfaces/FormConfig.html":{}}}],["hiding",{"_index":3862,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["higher",{"_index":3017,"title":{},"body":{"components/ListComponent.html":{}}}],["highest",{"_index":5602,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["histories",{"_index":2346,"title":{},"body":{"injectables/HistoryService.html":{}}}],["history",{"_index":2363,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["historyservice",{"_index":1161,"title":{"injectables/HistoryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/HistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["holds",{"_index":448,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/InputComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"injectables/PopService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{}}}],["host",{"_index":1460,"title":{},"body":{"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{}}}],["host.directive",{"_index":1541,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{}}}],["host.directive.ts",{"_index":4529,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["host.directive.ts:11",{"_index":4534,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["host.directive.ts:9",{"_index":4532,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["hostbinding",{"_index":1496,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class",{"_index":1699,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class.is",{"_index":1498,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["hostbindings",{"_index":1473,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostlistener",{"_index":1497,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["hostlistener('document:click",{"_index":4157,"title":{},"body":{"components/PopComponent.html":{}}}],["hostlistener('dragleave",{"_index":1508,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('dragover",{"_index":1499,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('drop",{"_index":1503,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlisteners",{"_index":1475,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hosts",{"_index":5525,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["hours",{"_index":5574,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hours.component.html",{"_index":5575,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hours.component.scss",{"_index":5576,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["html",{"_index":199,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["http",{"_index":5375,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["http://localhost:1337",{"_index":5313,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["https",{"_index":5377,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://angular.io/guide/dynamic",{"_index":4530,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["https://blog.thoughtram.io/angular/2016/07/27/custom",{"_index":5580,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["https://components.entrecode.de/assets/asset?e=1",{"_index":479,"title":{},"body":{"directives/AssetDirective.html":{}}}],["https://components.entrecode.de/auth/auth?e=1",{"_index":3457,"title":{},"body":{"components/LoginComponent.html":{}}}],["https://components.entrecode.de/auth/password",{"_index":4099,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["https://components.entrecode.de/auth/signup?e=1",{"_index":4475,"title":{},"body":{"components/SignupComponent.html":{}}}],["https://components.entrecode.de/entries/crud?e=1",{"_index":962,"title":{},"body":{"components/CrudComponent.html":{}}}],["https://components.entrecode.de/entries/entries?e=1",{"_index":1549,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["https://components.entrecode.de/misc/ace?e=1",{"_index":19,"title":{},"body":{"components/AceComponent.html":{}}}],["https://components.entrecode.de/misc/medium",{"_index":3578,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["https://components.entrecode.de/misc/tinymce?e=1",{"_index":4719,"title":{},"body":{"components/TinymceComponent.html":{}}}],["https://components.entrecode.de/ui/datetime?e=1",{"_index":1194,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["https://components.entrecode.de/ui/icons?e=1",{"_index":2377,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["https://components.entrecode.de/ui/list/basic?e=1",{"_index":2946,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/list/transforms?e=1",{"_index":2947,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/loader?e=1",{"_index":3272,"title":{},"body":{"components/LoaderComponent.html":{}}}],["https://components.entrecode.de/ui/login?e=1",{"_index":3489,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["https://components.entrecode.de/ui/modal?e=1",{"_index":3627,"title":{},"body":{"components/ModalComponent.html":{}}}],["https://components.entrecode.de/ui/notifications?e=1",{"_index":3842,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["https://components.entrecode.de/ui/pop?e=1",{"_index":4137,"title":{},"body":{"components/PopComponent.html":{}}}],["https://components.entrecode.de/ui/symbols?e=1",{"_index":4617,"title":{},"body":{"injectables/SymbolService.html":{}}}],["https://components.entrecode.de/ui/tabs?e=1",{"_index":4673,"title":{},"body":{"components/TabsComponent.html":{}}}],["https://doc.entrecode.de/data_manager/#field",{"_index":4361,"title":{},"body":{"interfaces/SdkField.html":{}}}],["https://entrecode.github.io/ec.sdk/#api",{"_index":4259,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["https://entrecode.github.io/ec.sdk/#environment",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://github.com/ajaxorg/ace",{"_index":169,"title":{},"body":{"components/AceComponent.html":{}}}],["https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4",{"_index":2233,"title":{},"body":{"injectables/FormService.html":{}}}],["https://github.com/auth0/angular2",{"_index":644,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://github.com/ng",{"_index":4631,"title":{},"body":{"injectables/SymbolService.html":{}}}],["https://localhost:4200",{"_index":5451,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["https://localhost:4200/muffins",{"_index":5464,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["https://medium.com/claritydesignsystem/ng",{"_index":3628,"title":{},"body":{"components/ModalComponent.html":{}}}],["human",{"_index":1912,"title":{},"body":{"classes/Field.html":{}}}],["humans",{"_index":2865,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["i+1",{"_index":4071,"title":{},"body":{"components/PaginationComponent.html":{}}}],["i.getbody",{"_index":4216,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["i.id",{"_index":4218,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["icon",{"_index":1838,"title":{},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["icon'},{'name",{"_index":251,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["icon.component",{"_index":2420,"title":{},"body":{"modules/IconModule.html":{}}}],["icon.component.html",{"_index":2381,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":2380,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.content",{"_index":2411,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.service",{"_index":2402,"title":{},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{}}}],["icon/icon.module",{"_index":2168,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{}}}],["iconcomponent",{"_index":250,"title":{"components/IconComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconmodule",{"_index":2158,"title":{"modules/IconModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["icons",{"_index":2373,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["icons.ts",{"_index":5190,"title":{},"body":{"coverage.html":{}}}],["iconservice",{"_index":2383,"title":{"injectables/IconService.html":{}},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"coverage.html":{},"overview.html":{}}}],["id",{"_index":371,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"classes/Item.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["idea",{"_index":3005,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["identifier",{"_index":388,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/HistoryService.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["identifierpattern",{"_index":2859,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{}}}],["identifiers",{"_index":2782,"title":{},"body":{"classes/Item.html":{}}}],["identify",{"_index":2863,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["ids",{"_index":2050,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["ids.push(asset",{"_index":2049,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["if(body.amazement_factor",{"_index":5508,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(value",{"_index":5503,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(value===10",{"_index":5501,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["iframes",{"_index":201,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["ignored",{"_index":3074,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["ignoreduplicates",{"_index":1953,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ignores",{"_index":1959,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ignoring",{"_index":4335,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["image",{"_index":253,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["image/image.directive",{"_index":2116,"title":{},"body":{"modules/FilesModule.html":{}}}],["imagedirective",{"_index":334,"title":{"directives/ImageDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["imageform",{"_index":2503,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["imageloader",{"_index":2504,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["images",{"_index":2500,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["imageselectpopcomponent",{"_index":252,"title":{"components/ImageSelectPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["img",{"_index":335,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["img's",{"_index":2458,"title":{},"body":{"directives/ImageDirective.html":{}}}],["immediately",{"_index":496,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/PopComponent.html":{}}}],["immutable",{"_index":1740,"title":{},"body":{"injectables/EntryService.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["implement",{"_index":5578,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["implementation",{"_index":1210,"title":{},"body":{"components/DatetimeComponent.html":{},"components/NotificationsComponent.html":{}}}],["implemented",{"_index":4364,"title":{},"body":{"interfaces/SdkField.html":{}}}],["implements",{"_index":17,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["import",{"_index":152,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{}}}],["imported",{"_index":163,"title":{},"body":{"components/AceComponent.html":{},"components/InputErrorsComponent.html":{}}}],["importing",{"_index":77,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["imports",{"_index":361,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{}}}],["impressum",{"_index":5330,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["improved",{"_index":5758,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["include",{"_index":4599,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["includeassetidinpath",{"_index":1954,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["included",{"_index":2206,"title":{},"body":{"injectables/FormService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["includes",{"_index":1961,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{}}}],["including",{"_index":2424,"title":{},"body":{"injectables/IconService.html":{}}}],["incoming",{"_index":4815,"title":{},"body":{"components/ToggleComponent.html":{}}}],["incompatible",{"_index":5643,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["increment",{"_index":5589,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["index",{"_index":39,"title":{"index.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["index(item",{"_index":878,"title":{},"body":{"classes/Collection.html":{}}}],["index.html",{"_index":2392,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["indexable",{"_index":1897,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{}}}],["indicate",{"_index":3289,"title":{},"body":{"components/LoaderComponent.html":{}}}],["indices",{"_index":1958,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["information",{"_index":3722,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["infos",{"_index":3999,"title":{},"body":{"classes/Pagination.html":{}}}],["inhabits",{"_index":2866,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["inherit",{"_index":5520,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["inherited",{"_index":119,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["init",{"_index":55,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["init(environment",{"_index":4396,"title":{},"body":{"injectables/SdkService.html":{}}}],["init(list",{"_index":2991,"title":{},"body":{"components/ListComponent.html":{}}}],["inital",{"_index":5804,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["initfilterform",{"_index":3138,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["initfilterform(filterform",{"_index":3155,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["initial",{"_index":1814,"title":{},"body":{"components/ErrorComponent.html":{}}}],["initialized",{"_index":136,"title":{},"body":{"components/AceComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["initializes",{"_index":1347,"title":{},"body":{"interfaces/Day.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{}}}],["initially",{"_index":4681,"title":{},"body":{"components/TabsComponent.html":{}}}],["initing",{"_index":4374,"title":{},"body":{"injectables/SdkService.html":{}}}],["initmethods",{"_index":4253,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["initmode",{"_index":3632,"title":{},"body":{"components/ModalComponent.html":{}}}],["inits",{"_index":93,"title":{},"body":{"components/AceComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MediumEditorComponent.html":{}}}],["inittabs",{"_index":4677,"title":{},"body":{"components/TabsComponent.html":{}}}],["inject",{"_index":1243,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["inject('environment",{"_index":4410,"title":{},"body":{"injectables/SdkService.html":{}}}],["injectable",{"_index":594,"title":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["injectables",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"overview.html":{}}}],["injection",{"_index":6109,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["injects",{"_index":488,"title":{},"body":{"directives/AssetDirective.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["input",{"_index":42,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["input's",{"_index":1208,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["input'},{'name",{"_index":255,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["input('config",{"_index":3024,"title":{},"body":{"components/ListComponent.html":{}}}],["input.component",{"_index":1175,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["input.component.html",{"_index":461,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.scss",{"_index":1438,"title":{},"body":{"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.ts",{"_index":447,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.ts:10",{"_index":1424,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.component.ts:13",{"_index":466,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["input.component.ts:14",{"_index":467,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["input.component.ts:15",{"_index":1444,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:17",{"_index":1447,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:19",{"_index":1446,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:21",{"_index":1443,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:23",{"_index":1440,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:26",{"_index":1445,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:28",{"_index":1442,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:34",{"_index":1441,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:9",{"_index":1423,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.focus(true",{"_index":3187,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["input/default",{"_index":1435,"title":{},"body":{"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"coverage.html":{}}}],["input/ec",{"_index":5536,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input/form",{"_index":5970,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["input/input.component",{"_index":2689,"title":{},"body":{"modules/IoModule.html":{}}}],["input/output",{"_index":5547,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input[type=file",{"_index":4918,"title":{},"body":{"components/UploadComponent.html":{}}}],["input_small",{"_index":4081,"title":{},"body":{"components/PaginationComponent.html":{}}}],["inputcomponent",{"_index":129,"title":{"components/InputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inputcomponent#focus",{"_index":5958,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["inputcomponents",{"_index":2614,"title":{},"body":{"components/InputComponent.html":{}}}],["inputerrorscomponent",{"_index":256,"title":{"components/InputErrorsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputready",{"_index":3139,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["inputready(input",{"_index":3157,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["inputs",{"_index":65,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["inputview",{"_index":1428,"title":{},"body":{"components/DefaultEntryInputComponent.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["inputviews",{"_index":4838,"title":{},"body":{"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["inside",{"_index":1015,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["inspiration",{"_index":4287,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["install",{"_index":5293,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["installation",{"_index":5599,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["instance",{"_index":85,"title":{},"body":{"components/AceComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{}}}],["instanceof",{"_index":2491,"title":{},"body":{"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/TabsComponent.html":{}}}],["instances",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{},"pipes/DatetimePipe.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["instead",{"_index":1760,"title":{},"body":{"injectables/EntryService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["intended",{"_index":4741,"title":{},"body":{"components/TinymceComponent.html":{}}}],["interaction",{"_index":3911,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["interface",{"_index":366,"title":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["interfaces",{"_index":368,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"overview.html":{}}}],["interfere",{"_index":3318,"title":{},"body":{"components/LoaderComponent.html":{}}}],["internal",{"_index":1132,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["interpreted",{"_index":1985,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["intialization",{"_index":2611,"title":{},"body":{"components/InputComponent.html":{}}}],["intl.collator(undefined",{"_index":4554,"title":{},"body":{"classes/Sorter.html":{}}}],["invalid",{"_index":4850,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["invite",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["inviteplaceholder",{"_index":4499,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["invoked",{"_index":2789,"title":{},"body":{"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["io/input/input.component",{"_index":3183,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["io/io.module",{"_index":2164,"title":{},"body":{"modules/FormModule.html":{},"modules/UtilityModule.html":{}}}],["iomodule",{"_index":2155,"title":{"modules/IoModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["isactive",{"_index":3971,"title":{},"body":{"classes/Pagination.html":{}}}],["isactive(page",{"_index":3990,"title":{},"body":{"classes/Pagination.html":{}}}],["isclickable",{"_index":3230,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["isdisabled",{"_index":1214,"title":{},"body":{"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["isempty",{"_index":837,"title":{},"body":{"classes/Collection.html":{}}}],["isend",{"_index":1374,"title":{},"body":{"interfaces/Day.html":{}}}],["isfirst",{"_index":1551,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isimmutableproperty",{"_index":1721,"title":{},"body":{"injectables/EntryService.html":{},"classes/Item.html":{},"injectables/ResourceService.html":{}}}],["isimmutableproperty(key",{"_index":1738,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["isimmutableproperty(property",{"_index":2734,"title":{},"body":{"classes/Item.html":{}}}],["islast",{"_index":1552,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["islastcolumn",{"_index":3140,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["islastcolumn(field",{"_index":3159,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["isloading",{"_index":2952,"title":{},"body":{"components/ListComponent.html":{}}}],["isn't",{"_index":5407,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["isnewasset",{"_index":2079,"title":{},"body":{"injectables/FileService.html":{}}}],["isnewasset(asset",{"_index":2001,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["isnewassetgroupid",{"_index":2080,"title":{},"body":{"injectables/FileService.html":{}}}],["isnewassetgroupid(assetgroupid",{"_index":2070,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["iso",{"_index":4833,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["isodate",{"_index":4823,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["isoldassetgroupid",{"_index":2081,"title":{},"body":{"injectables/FileService.html":{},"components/ImageSelectPopComponent.html":{}}}],["isoldassetgroupid(assetgroupid",{"_index":2068,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["isoutside",{"_index":1641,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isoutside(element",{"_index":1677,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isreadonly",{"_index":2185,"title":{},"body":{"injectables/FormService.html":{}}}],["isreadonly(field",{"_index":2202,"title":{},"body":{"injectables/FormService.html":{}}}],["issame(this.timespan[0].clone().startof('day",{"_index":1373,"title":{},"body":{"interfaces/Day.html":{}}}],["issame(this.timespan[1].clone().startof('day",{"_index":1375,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected(_moment",{"_index":1407,"title":{},"body":{"interfaces/Day.html":{}}}],["isstart",{"_index":1371,"title":{},"body":{"interfaces/Day.html":{}}}],["issue",{"_index":5966,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["ist",{"_index":3852,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["isvisible",{"_index":4041,"title":{},"body":{"components/PaginationComponent.html":{}}}],["isvisible(page",{"_index":4044,"title":{},"body":{"components/PaginationComponent.html":{}}}],["it's",{"_index":5593,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["item",{"_index":52,"title":{"classes/Item.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"pipes/MaxItemsPipe.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["item's",{"_index":2725,"title":{},"body":{"classes/Item.html":{},"components/ListItemsComponent.html":{}}}],["item('a",{"_index":2770,"title":{},"body":{"classes/Item.html":{},"additional-documentation/readme/core-readme.html":{}}}],["item(1",{"_index":2792,"title":{},"body":{"classes/Item.html":{}}}],["item(asset",{"_index":2027,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["item(assets[0",{"_index":2025,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["item(s",{"_index":2071,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["item.config.fields[property].form",{"_index":1046,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.fields[property].list",{"_index":1045,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.onsave",{"_index":4346,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.deleteimmutableproperties(value",{"_index":4348,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbody",{"_index":1055,"title":{},"body":{"components/CrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbody().action",{"_index":399,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().action(item",{"_index":400,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().children",{"_index":401,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().select",{"_index":396,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.group(property",{"_index":2316,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["item.id",{"_index":1057,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{}}}],["item.resolve(field.property",{"_index":5523,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["item.save",{"_index":2790,"title":{},"body":{"classes/Item.html":{}}}],["item.sort(property",{"_index":4564,"title":{},"body":{"classes/Sorter.html":{}}}],["item/item",{"_index":2146,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["item?.display(field.property",{"_index":1433,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["item?.resolve(field.property)?.length",{"_index":1467,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["itemclick",{"_index":5811,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["itemconfig",{"_index":1729,"title":{"interfaces/ItemConfig.html":{}},"body":{"injectables/EntryService.html":{},"interfaces/FormConfig.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["items",{"_index":832,"title":{},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"pipes/DatetimePipe.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["items'},{'name",{"_index":262,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["items.component",{"_index":3262,"title":{},"body":{"modules/ListModule.html":{}}}],["items.component.html",{"_index":3228,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts",{"_index":3225,"title":{},"body":{"components/ListItemsComponent.html":{},"coverage.html":{}}}],["items.component.ts:14",{"_index":3237,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:16",{"_index":3238,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:18",{"_index":3234,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:20",{"_index":3239,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:22",{"_index":3233,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:24",{"_index":3232,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:26",{"_index":3247,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:28",{"_index":3246,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:44",{"_index":3243,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:48",{"_index":3245,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:53",{"_index":3240,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.filter((item",{"_index":2315,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["items.foreach((item",{"_index":910,"title":{},"body":{"classes/Collection.html":{}}}],["items.length",{"_index":926,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.pipe",{"_index":2170,"title":{},"body":{"modules/FormModule.html":{}}}],["items.pipe.ts",{"_index":3568,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["items.pipe.ts:7",{"_index":3572,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["items.reduce((has",{"_index":917,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.reverse",{"_index":4580,"title":{},"body":{"classes/Sorter.html":{}}}],["items.slice((this.config.page",{"_index":4033,"title":{},"body":{"classes/Pagination.html":{}}}],["items.sort((a",{"_index":4575,"title":{},"body":{"classes/Sorter.html":{}}}],["items/list",{"_index":3224,"title":{},"body":{"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["iterate",{"_index":2673,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{}}}],["itself",{"_index":1680,"title":{},"body":{"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{}}}],["ixo",{"_index":2446,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["javascript",{"_index":74,"title":{},"body":{"components/AceComponent.html":{}}}],["join",{"_index":3676,"title":{},"body":{"components/ModalComponent.html":{}}}],["js",{"_index":2393,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/publishing.html":{}}}],["json",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{}}}],["json.parse(config",{"_index":3104,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.parse(e.data",{"_index":2368,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.stringify(object.assign(existing",{"_index":3108,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.stringify(value",{"_index":3106,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["jump",{"_index":5965,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["justify",{"_index":2414,"title":{},"body":{"components/IconComponent.html":{}}}],["jwt/issues/305",{"_index":645,"title":{},"body":{"modules/AuthModule.html":{}}}],["kann",{"_index":610,"title":{},"body":{"guards/AuthGuard.html":{}}}],["karma",{"_index":5325,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["keep",{"_index":1389,"title":{},"body":{"interfaces/Day.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["keeppopopen",{"_index":1092,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["keepratio",{"_index":2557,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["keeps",{"_index":2318,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{}}}],["key",{"_index":941,"title":{},"body":{"classes/Config.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["key[0",{"_index":1791,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["keyaction",{"_index":2872,"title":{"interfaces/KeyAction.html":{}},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"coverage.html":{}}}],["keycommands",{"_index":53,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["keycommands/keycommands.service",{"_index":5006,"title":{},"body":{"modules/UtilityModule.html":{}}}],["keycommandsservice",{"_index":151,"title":{"injectables/KeycommandsService.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/LocationPickerComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["keyconfig",{"_index":2901,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["keyconfig.action(e",{"_index":2904,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["keyconfig.canactivate(e",{"_index":2903,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["keydown",{"_index":4183,"title":{},"body":{"injectables/PopService.html":{}}}],["keys",{"_index":2875,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"injectables/PopService.html":{}}}],["keyup",{"_index":4794,"title":{},"body":{"components/TinymceComponent.html":{}}}],["kill",{"_index":5910,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["kind",{"_index":3290,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/WithLoader.html":{}}}],["kinds",{"_index":4538,"title":{},"body":{"classes/Sorter.html":{}}}],["kleiner",{"_index":5485,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["know",{"_index":5557,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["knowing",{"_index":2055,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{}}}],["known",{"_index":509,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["label",{"_index":387,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["labels",{"_index":1873,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["language",{"_index":108,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["languages",{"_index":5990,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["last",{"_index":1261,"title":{},"body":{"interfaces/Day.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["lat",{"_index":2308,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["later",{"_index":1520,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/WithNotifications.html":{}}}],["latest",{"_index":4185,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop",{"_index":4193,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop.hide",{"_index":4195,"title":{},"body":{"injectables/PopService.html":{}}}],["latitude",{"_index":2290,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["layer",{"_index":3912,"title":{},"body":{"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["layout",{"_index":1390,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["lazy",{"_index":2575,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["left",{"_index":3648,"title":{},"body":{"components/ModalComponent.html":{}}}],["legacy",{"_index":570,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["legacyasset",{"_index":1993,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["legacyassetconfig",{"_index":1981,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["legend",{"_index":198,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["lemontree",{"_index":3011,"title":{},"body":{"components/ListComponent.html":{}}}],["length",{"_index":920,"title":{},"body":{"classes/Collection.html":{}}}],["lerna",{"_index":5246,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["let's",{"_index":3947,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["letters",{"_index":1713,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["leveled",{"_index":1805,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{}}}],["levels",{"_index":484,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"injectables/TypeConfigService.html":{}}}],["li",{"_index":4056,"title":{},"body":{"components/PaginationComponent.html":{}}}],["lib",{"_index":6178,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["libraries",{"_index":3393,"title":{},"body":{"modules/LocationModule.html":{}}}],["library",{"_index":6167,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["light",{"_index":3721,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["lightmodel",{"_index":1636,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceListPopComponent.html":{}}}],["lightmodel.titlefield",{"_index":3800,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["line",{"_index":3312,"title":{},"body":{"components/LoaderComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["line:directive",{"_index":2131,"title":{},"body":{"directives/FocusDirective.html":{}}}],["line:no",{"_index":3023,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["link",{"_index":4089,"title":{},"body":{"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["links",{"_index":5470,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["lint",{"_index":6009,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["linter",{"_index":5866,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["list",{"_index":217,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["list'},{'name",{"_index":215,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["list(resolved",{"_index":431,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["list(this.collection.items",{"_index":3032,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.items",{"_index":3029,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component",{"_index":1028,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"components/ListComponent.html":{},"modules/ListModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["list.component.html",{"_index":3022,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component.ts",{"_index":5080,"title":{},"body":{"coverage.html":{}}}],["list.config",{"_index":3110,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.config.storagekey",{"_index":3111,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields",{"_index":3109,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.filter((f",{"_index":3117,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.find((f",{"_index":3125,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.foreach((field",{"_index":3122,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.load",{"_index":5528,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["list.ts",{"_index":5112,"title":{},"body":{"coverage.html":{}}}],["list.ts/list.component",{"_index":4017,"title":{},"body":{"classes/Pagination.html":{}}}],["list/asset",{"_index":2111,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["list/entry",{"_index":1027,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["list/list",{"_index":3082,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["list/list.module",{"_index":4470,"title":{},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["list/resource",{"_index":1971,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["listcomponent",{"_index":258,"title":{"components/ListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listconfig",{"_index":380,"title":{"interfaces/ListConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["listconfigservice",{"_index":2964,"title":{"injectables/ListConfigService.html":{}},"body":{"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["listens",{"_index":1668,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["listheadercomponent",{"_index":259,"title":{"components/ListHeaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listitemscomponent",{"_index":261,"title":{"components/ListItemsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listmodule",{"_index":3252,"title":{"modules/ListModule.html":{}},"body":{"modules/ListModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["listmoduleconfig",{"_index":3265,"title":{},"body":{"modules/ListModule.html":{},"coverage.html":{}}}],["listresource",{"_index":4201,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{}}}],["listresource.follownextlink().then((list",{"_index":4212,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["listresource.getallitems().map((resource",{"_index":4204,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["listresource.hasnextlink",{"_index":4210,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["lists",{"_index":1021,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["lists/forms",{"_index":3707,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["listtemplate",{"_index":2950,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["literal",{"_index":804,"title":{},"body":{"modules/CalendarModule.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{}}}],["live",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lng",{"_index":2310,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["load",{"_index":481,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"directives/SlotHostDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["load(config",{"_index":3995,"title":{},"body":{"classes/Pagination.html":{}}}],["load(id",{"_index":502,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["loadactions(actions",{"_index":422,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["loadactionsbefore",{"_index":407,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["loadcomponent",{"_index":1531,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadcomponent(component",{"_index":1533,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loade",{"_index":3962,"title":{},"body":{"components/OutputComponent.html":{}}}],["loaded",{"_index":486,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["loadentry",{"_index":972,"title":{},"body":{"components/CrudComponent.html":{}}}],["loadentry(item",{"_index":1001,"title":{},"body":{"components/CrudComponent.html":{}}}],["loader",{"_index":968,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["loader's",{"_index":3288,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":264,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["loader.component",{"_index":3333,"title":{},"body":{"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"interfaces/WithLoader.html":{}}}],["loader.component.html",{"_index":3273,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interface",{"_index":3545,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loader.interface.ts",{"_index":5022,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["loader.service",{"_index":3334,"title":{},"body":{"modules/LoaderModule.html":{}}}],["loader.wait(promise",{"_index":3340,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loader/loader.component",{"_index":3543,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader/loader.module",{"_index":2167,"title":{},"body":{"modules/FormModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["loader/with",{"_index":3544,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loadercomponent",{"_index":263,"title":{"components/LoaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{},"overview.html":{}}}],["loadermodule",{"_index":2159,"title":{"modules/LoaderModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LoaderModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["loaders",{"_index":3294,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loaderservice",{"_index":977,"title":{"injectables/LoaderService.html":{}},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadimage",{"_index":2533,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loadimg",{"_index":2538,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loading",{"_index":511,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"interfaces/WithLoader.html":{}}}],["loadresourcelistactions(state",{"_index":4223,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["loads",{"_index":477,"title":{},"body":{"directives/AssetDirective.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"miscellaneous/functions.html":{}}}],["local",{"_index":3079,"title":{},"body":{"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["locale",{"_index":5472,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["localizable",{"_index":3779,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["localization",{"_index":4591,"title":{"additional-documentation/project-setup-tutorial/localization.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["localloader",{"_index":3299,"title":{},"body":{"components/LoaderComponent.html":{}}}],["localstorage.getitem(key",{"_index":3103,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["localstorage.setitem(key",{"_index":3105,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["located",{"_index":5271,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["location",{"_index":266,"title":{"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/location-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["location.latitude",{"_index":2309,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location.longitude",{"_index":2311,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location/map",{"_index":3379,"title":{},"body":{"modules/LocationModule.html":{}}}],["location_components",{"_index":3380,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["locationmapcomponent",{"_index":265,"title":{"components/LocationMapComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locationmodule",{"_index":3372,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["locationmoduleconfig",{"_index":3388,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["locationpickercomponent",{"_index":268,"title":{"components/LocationPickerComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["locationsearchcomponent",{"_index":270,"title":{"components/LocationSearchComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locked",{"_index":4114,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["lockform",{"_index":4102,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["log",{"_index":3878,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["logged",{"_index":2390,"title":{},"body":{"components/IconComponent.html":{}}}],["logic",{"_index":5579,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["login",{"_index":275,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login's",{"_index":3537,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login'},{'name",{"_index":273,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["login(undefined",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["login(value",{"_index":3525,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login.component.html",{"_index":3458,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login.component.ts",{"_index":5468,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login/login.component",{"_index":640,"title":{},"body":{"modules/AuthModule.html":{},"components/SignupComponent.html":{}}}],["logincomponent",{"_index":272,"title":{"components/LoginComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["logincomponent:23",{"_index":4480,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:25",{"_index":4483,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:27",{"_index":4482,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:29",{"_index":4489,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:31",{"_index":4490,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:34",{"_index":4488,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:35",{"_index":4491,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:36",{"_index":4492,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:39",{"_index":4485,"title":{},"body":{"components/SignupComponent.html":{}}}],["loginformcomponent",{"_index":274,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["loginformcomponent:18",{"_index":4520,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:20",{"_index":4522,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:22",{"_index":4519,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:24",{"_index":4512,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:26",{"_index":4511,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:28",{"_index":4507,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:30",{"_index":4510,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:32",{"_index":4505,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:34",{"_index":4506,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:36",{"_index":4508,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:38",{"_index":4509,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:40",{"_index":4504,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:42",{"_index":4503,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:44",{"_index":4521,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:47",{"_index":4523,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:50",{"_index":4516,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:58",{"_index":4518,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:66",{"_index":4515,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:72",{"_index":4517,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["logout",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(api",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":3075,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["longer",{"_index":5359,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["longitude",{"_index":2292,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["look",{"_index":5431,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["looked",{"_index":3859,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["looks",{"_index":3821,"title":{},"body":{"classes/Notification.html":{}}}],["lookup",{"_index":2268,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lower",{"_index":3019,"title":{},"body":{"components/ListComponent.html":{}}}],["lowest",{"_index":5597,"title":{},"body":{"additional-documentation/readme/data-readme.html":{}}}],["lvl",{"_index":3771,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["lvl1",{"_index":1101,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["made",{"_index":4739,"title":{},"body":{"components/TinymceComponent.html":{}}}],["mail",{"_index":3512,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["main",{"_index":2756,"title":{},"body":{"classes/Item.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["mainly",{"_index":2768,"title":{},"body":{"classes/Item.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["make",{"_index":78,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["makes",{"_index":5565,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["making",{"_index":1562,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["managed",{"_index":5281,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["mandatory",{"_index":3647,"title":{},"body":{"components/ModalComponent.html":{}}}],["manually",{"_index":4729,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["many",{"_index":1126,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["map",{"_index":949,"title":{},"body":{"classes/Config.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["map'},{'name",{"_index":267,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["map((a",{"_index":4235,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map((d",{"_index":1368,"title":{},"body":{"interfaces/Day.html":{}}}],["map((date",{"_index":1370,"title":{},"body":{"interfaces/Day.html":{}}}],["map((field",{"_index":3764,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["map((i",{"_index":4215,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map((item",{"_index":4565,"title":{},"body":{"classes/Sorter.html":{}}}],["map((method",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((property",{"_index":2830,"title":{},"body":{"classes/Item.html":{},"injectables/ModelConfigService.html":{}}}],["map.component",{"_index":3385,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["map.component.html",{"_index":3344,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.scss",{"_index":3343,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts",{"_index":3342,"title":{},"body":{"components/LocationMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:11",{"_index":3349,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:13",{"_index":3354,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:15",{"_index":3351,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:17",{"_index":3357,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:19",{"_index":3356,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:25",{"_index":3362,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:36",{"_index":3359,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.value",{"_index":3434,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["maploader",{"_index":2260,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mapped",{"_index":1957,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["mapping",{"_index":1276,"title":{},"body":{"interfaces/Day.html":{}}}],["maps",{"_index":1137,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{}}}],["mapsapiloader",{"_index":2257,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["marker",{"_index":3352,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend",{"_index":3345,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend(coords",{"_index":3358,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markers",{"_index":3355,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["marks",{"_index":1285,"title":{},"body":{"interfaces/Day.html":{}}}],["markup",{"_index":3626,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["match",{"_index":1726,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"components/LocationSearchComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["match.levels",{"_index":3769,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["matches",{"_index":4310,"title":{},"body":{"injectables/ResourceService.html":{}}}],["matches(change",{"_index":4321,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["matching",{"_index":341,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["math.abs(current",{"_index":4067,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.max(max",{"_index":3772,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["math.max(minlevel",{"_index":1051,"title":{},"body":{"components/CrudComponent.html":{}}}],["math.max(value.width",{"_index":2524,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.defaultsize",{"_index":2550,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.getpage",{"_index":4036,"title":{},"body":{"classes/Pagination.html":{}}}],["matter",{"_index":5436,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["max",{"_index":2169,"title":{},"body":{"modules/FormModule.html":{}}}],["maxcolumns",{"_index":3064,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["maximal",{"_index":3071,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["maximum",{"_index":1877,"title":{},"body":{"classes/Field.html":{}}}],["maxitems",{"_index":1839,"title":{},"body":{"classes/Field.html":{},"pipes/MaxItemsPipe.html":{}}}],["maxitemspipe",{"_index":2153,"title":{"pipes/MaxItemsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/MaxItemsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["meaning",{"_index":2069,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["means",{"_index":5604,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["meant",{"_index":142,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"guards/AuthGuard.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["meantioned",{"_index":5543,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["medium",{"_index":277,"title":{"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["mediumeditor",{"_index":3587,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditor(this.container.nativeelement",{"_index":3606,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditorcomponent",{"_index":276,"title":{"components/MediumEditorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediumeditormodule",{"_index":3614,"title":{"modules/MediumEditorModule.html":{}},"body":{"modules/MediumEditorModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["mediummodule",{"_index":5370,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["mediummoduleconfig",{"_index":3621,"title":{},"body":{"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["menu.component",{"_index":5896,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["merge",{"_index":3787,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["merge(route.data",{"_index":1033,"title":{},"body":{"components/CrudComponent.html":{}}}],["merged",{"_index":946,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["merged[title",{"_index":3788,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["mergedfields",{"_index":3806,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["mergedfields[key",{"_index":3809,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["merges",{"_index":3699,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["merging",{"_index":5800,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["message",{"_index":582,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{}}}],["message.close",{"_index":3953,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["messages",{"_index":2670,"title":{},"body":{"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["met",{"_index":5571,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["meta",{"_index":2877,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["method",{"_index":938,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["methods",{"_index":54,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["middle",{"_index":5601,"title":{},"body":{"additional-documentation/readme/ui-readme.html":{}}}],["mimetypes",{"_index":5137,"title":{},"body":{"coverage.html":{}}}],["min",{"_index":195,"title":{},"body":{"components/AceComponent.html":{}}}],["minimum",{"_index":4094,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["minor",{"_index":6057,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["miscellaneous",{"_index":5257,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":5691,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["mit",{"_index":4121,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["mmmm",{"_index":818,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["modal",{"_index":1662,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["modal'},{'name",{"_index":280,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["modal.component.html",{"_index":3631,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.component",{"_index":4178,"title":{},"body":{"modules/PopModule.html":{}}}],["modalcomponent",{"_index":279,"title":{"components/ModalComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":66,"title":{},"body":{"components/AceComponent.html":{},"interfaces/CrudConfig.html":{},"components/ModalComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["model",{"_index":117,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["model's",{"_index":3683,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{}}}],["model.${filter.model",{"_index":1756,"title":{},"body":{"injectables/EntryService.html":{}}}],["model.${model",{"_index":1788,"title":{},"body":{"injectables/EntryService.html":{}}}],["model.fields",{"_index":944,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["model/schema",{"_index":5495,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["modelchange",{"_index":3584,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["modelconfig",{"_index":978,"title":{"interfaces/ModelConfig.html":{}},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["modelconfig.fields",{"_index":3761,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get(&#39;muffin&#39",{"_index":3711,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get('muffin",{"_index":3739,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set(&#39;muffin&#39",{"_index":3730,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set('muffin",{"_index":3741,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfields",{"_index":3803,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfields[key",{"_index":3811,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigservice",{"_index":979,"title":{"injectables/ModelConfigService.html":{}},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["modelconfiguration",{"_index":3815,"title":{"interfaces/ModelConfiguration.html":{}},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["modelist.js",{"_index":171,"title":{},"body":{"components/AceComponent.html":{}}}],["modelresource",{"_index":2334,"title":{},"body":{"injectables/HistoryService.html":{}}}],["models",{"_index":2320,"title":{},"body":{"injectables/HistoryService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["models[model",{"_index":3814,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modes",{"_index":3661,"title":{},"body":{"components/ModalComponent.html":{}}}],["modified",{"_index":3735,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modified'].indexof(key",{"_index":1792,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["modify",{"_index":2610,"title":{},"body":{"components/InputComponent.html":{}}}],["modifying",{"_index":1712,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["module",{"_index":343,"title":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["module's",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["module(s",{"_index":6193,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["module.exports",{"_index":5400,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["modules",{"_index":345,"title":{"modules.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["modulewithproviders",{"_index":632,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/LocationModule.html":{},"miscellaneous/functions.html":{}}}],["moment",{"_index":1225,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme.html":{}}}],["moment's",{"_index":1386,"title":{},"body":{"interfaces/Day.html":{}}}],["moment(new",{"_index":4854,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value",{"_index":1250,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format('yyyy",{"_index":5479,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment(value).format(format",{"_index":4874,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).format(pattern",{"_index":1254,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format(this.symbol.resolve('moment.format.month",{"_index":4876,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).isvalid",{"_index":4851,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).toisostring",{"_index":4877,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.date",{"_index":813,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.format.month",{"_index":817,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.format.time",{"_index":815,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.locale('de",{"_index":5471,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment.locale(this.symbols.resolve('moment.locale",{"_index":4600,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["moment.moment",{"_index":1200,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["monorepo",{"_index":5280,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["month",{"_index":823,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["month'},{'name",{"_index":282,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["month.component.html",{"_index":1274,"title":{},"body":{"interfaces/Day.html":{}}}],["monthcomponent",{"_index":281,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["monthformat",{"_index":1296,"title":{},"body":{"interfaces/Day.html":{}}}],["months",{"_index":1413,"title":{},"body":{"interfaces/Day.html":{}}}],["more",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["mouseover(day",{"_index":1339,"title":{},"body":{"interfaces/Day.html":{}}}],["mouseup(day",{"_index":1338,"title":{},"body":{"interfaces/Day.html":{}}}],["move",{"_index":838,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["move(item",{"_index":882,"title":{},"body":{"classes/Collection.html":{}}}],["moves",{"_index":884,"title":{},"body":{"classes/Collection.html":{}}}],["ms",{"_index":2584,"title":{},"body":{"components/InputComponent.html":{},"classes/Notification.html":{}}}],["muffin",{"_index":3712,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffin.entry?.name",{"_index":1626,"title":{},"body":{"directives/EntryDirective.html":{}}}],["muffin.name",{"_index":1584,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffincomponent",{"_index":3868,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["muffins",{"_index":5457,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["muffins/muffins.component",{"_index":5462,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinscomponent",{"_index":5461,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["multi",{"_index":31,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["multiple",{"_index":1138,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["mustreload",{"_index":973,"title":{},"body":{"components/CrudComponent.html":{}}}],["mustreload(item",{"_index":1005,"title":{},"body":{"components/CrudComponent.html":{}}}],["mutable",{"_index":3778,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["mute",{"_index":2926,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["mute(e",{"_index":2895,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["muted",{"_index":2876,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["myapp",{"_index":3295,"title":{},"body":{"components/LoaderComponent.html":{}}}],["myasset.asset?.assetid",{"_index":515,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.created",{"_index":520,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.files?.length",{"_index":523,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.tags",{"_index":518,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.title",{"_index":516,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.type",{"_index":521,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myclient",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["mycomponent",{"_index":3849,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["myimage.asset?.assetid",{"_index":2482,"title":{},"body":{"directives/ImageDirective.html":{}}}],["n",{"_index":2791,"title":{},"body":{"classes/Item.html":{}}}],["n.resolve",{"_index":2795,"title":{},"body":{"classes/Item.html":{}}}],["n.save",{"_index":2794,"title":{},"body":{"classes/Item.html":{}}}],["name",{"_index":101,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["name[0].touppercase",{"_index":5476,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["names",{"_index":1956,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["namespace",{"_index":2280,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["native",{"_index":2474,"title":{},"body":{"directives/ImageDirective.html":{}}}],["natural",{"_index":4552,"title":{},"body":{"classes/Sorter.html":{}}}],["naturally",{"_index":4558,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":2927,"title":{},"body":{"injectables/KeycommandsService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["navigate(path",{"_index":2920,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["navigationend",{"_index":4693,"title":{},"body":{"components/TabsComponent.html":{}}}],["nearest",{"_index":2272,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["need",{"_index":1146,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/PopComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["needed",{"_index":2579,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["needing",{"_index":5582,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["needs",{"_index":2621,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["nest",{"_index":1540,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["nested",{"_index":1135,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LocationPickerComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["nestedcrudconfig",{"_index":3198,"title":{},"body":{"components/ListHeaderComponent.html":{},"injectables/TypeConfigService.html":{}}}],["nestedpopactive",{"_index":1093,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["never",{"_index":2589,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["new",{"_index":84,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["newdate",{"_index":1410,"title":{},"body":{"interfaces/Day.html":{}}}],["newdate.isbetween(this.timespan[0",{"_index":1412,"title":{},"body":{"interfaces/Day.html":{}}}],["newhistory",{"_index":2364,"title":{},"body":{"injectables/HistoryService.html":{}}}],["newly",{"_index":4362,"title":{},"body":{"interfaces/SdkField.html":{}}}],["newprojectroot",{"_index":6172,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["newtimespan",{"_index":1320,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan.reverse",{"_index":1325,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[0].isafter(newtimespan[1",{"_index":1324,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[this.dragged.first",{"_index":1322,"title":{},"body":{"interfaces/Day.html":{}}}],["next",{"_index":1553,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["nexted",{"_index":598,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{}}}],["nexts",{"_index":3454,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TabComponent.html":{}}}],["ng",{"_index":5311,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ng_value_accessor",{"_index":28,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngaftercontentinit",{"_index":4678,"title":{},"body":{"components/TabsComponent.html":{}}}],["ngafterviewinit",{"_index":64,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["ngif",{"_index":1652,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabsComponent.html":{}}}],["ngmodel",{"_index":5406,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngmodule",{"_index":362,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["ngmodule(acemoduleconfig",{"_index":365,"title":{},"body":{"modules/AceModule.html":{}}}],["ngmodule(calendarmoduleconfig",{"_index":820,"title":{},"body":{"modules/CalendarModule.html":{}}}],["ngmodule(datamoduleconfig",{"_index":1191,"title":{},"body":{"modules/DataModule.html":{}}}],["ngmodule(formmoduleconfig",{"_index":2177,"title":{},"body":{"modules/FormModule.html":{}}}],["ngmodule(listmoduleconfig",{"_index":3266,"title":{},"body":{"modules/ListModule.html":{}}}],["ngmodule(locationmoduleconfig",{"_index":3394,"title":{},"body":{"modules/LocationModule.html":{}}}],["ngmodule(mediummoduleconfig",{"_index":3622,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["ngmodule(popmoduleconfig",{"_index":4180,"title":{},"body":{"modules/PopModule.html":{}}}],["ngmodule(selectmoduleconfig",{"_index":4473,"title":{},"body":{"modules/SelectModule.html":{}}}],["ngmodule(tinymcemoduleconfig",{"_index":4804,"title":{},"body":{"modules/TinymceModule.html":{}}}],["ngmodule(uimoduleconfig",{"_index":4885,"title":{},"body":{"modules/UiModule.html":{}}}],["ngmodule(utilitymoduleconfig",{"_index":5008,"title":{},"body":{"modules/UtilityModule.html":{}}}],["ngonchanges",{"_index":56,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ngonchanges(change",{"_index":1350,"title":{},"body":{"interfaces/Day.html":{}}}],["ngonchanges(changes",{"_index":2599,"title":{},"body":{"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["ngondestroy",{"_index":3583,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ngoninit",{"_index":57,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ngx",{"_index":636,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/SelectModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":2258,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationSearchComponent.html":{}}}],["nicht",{"_index":611,"title":{},"body":{"guards/AuthGuard.html":{}}}],["noapi",{"_index":4384,"title":{},"body":{"injectables/SdkService.html":{}}}],["noapi(api",{"_index":4399,"title":{},"body":{"injectables/SdkService.html":{}}}],["noclientid",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{}}}],["noconflict/ace",{"_index":158,"title":{},"body":{"components/AceComponent.html":{}}}],["noconflict/ace.js",{"_index":5613,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["node",{"_index":5401,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules",{"_index":5296,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["node_modules/@ec.components",{"_index":5286,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["node_modules/eventsource/lib/eventsource.js",{"_index":5373,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules/jsonpath",{"_index":5378,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules/tinymce/skins/lightgray/content.min.css",{"_index":5616,"title":{},"body":{"additional-documentation/readme/tinymce-readme.html":{}}}],["node_modules/tinymce/skins/lightgray/skin.min.css",{"_index":5615,"title":{},"body":{"additional-documentation/readme/tinymce-readme.html":{}}}],["non",{"_index":2439,"title":{},"body":{"injectables/IconService.html":{},"components/ModalComponent.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}}}],["none",{"_index":3235,"title":{},"body":{"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{}}}],["normal",{"_index":1483,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["notable",{"_index":5617,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["note",{"_index":4091,"title":{},"body":{"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["nothing",{"_index":1293,"title":{},"body":{"interfaces/Day.html":{},"injectables/ModelConfigService.html":{},"interfaces/Symbol.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["notice",{"_index":5397,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["notification",{"_index":1022,"title":{"classes/Notification.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["notification(notification",{"_index":3939,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.append",{"_index":3890,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.append.push(notification",{"_index":3891,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.component.ts",{"_index":3881,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.error",{"_index":3839,"title":{},"body":{"classes/Notification.html":{},"injectables/NotificationsService.html":{}}}],["notification.hide",{"_index":3886,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.host",{"_index":3895,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.message",{"_index":3889,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.replace",{"_index":3892,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.length",{"_index":3893,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.push(notification",{"_index":3894,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.sticky",{"_index":3897,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.time",{"_index":3898,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.title",{"_index":3888,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationcomponent",{"_index":3818,"title":{},"body":{"classes/Notification.html":{}}}],["notifications",{"_index":588,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["notifications'},{'name",{"_index":284,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["notifications.component",{"_index":3838,"title":{},"body":{"classes/Notification.html":{},"modules/NotificationsModule.html":{}}}],["notifications.component.html",{"_index":3843,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.interface",{"_index":6183,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["notifications.interface.ts",{"_index":5026,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["notifications.service",{"_index":3882,"title":{},"body":{"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.module",{"_index":4882,"title":{},"body":{"modules/UiModule.html":{}}}],["notifications/notifications.service",{"_index":2874,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["notificationscomponent",{"_index":283,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationservice",{"_index":980,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["notificationservice.$emitter",{"_index":3841,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationsmodule",{"_index":3901,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservice",{"_index":589,"title":{"injectables/NotificationsService.html":{}},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["now",{"_index":2562,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["npm",{"_index":5294,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["nr",{"_index":2784,"title":{},"body":{"classes/Item.html":{}}}],["nth",{"_index":3570,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["null",{"_index":914,"title":{},"body":{"classes/Collection.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"injectables/ListConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{}}}],["number",{"_index":498,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["numbers",{"_index":848,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["numbers.add(4",{"_index":866,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.addall([5",{"_index":869,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has(2",{"_index":874,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has([1,2",{"_index":877,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.remove(4",{"_index":888,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.removeall",{"_index":891,"title":{},"body":{"classes/Collection.html":{}}}],["numeric",{"_index":4555,"title":{},"body":{"classes/Sorter.html":{}}}],["object",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"injectables/KeycommandsService.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["object).assign",{"_index":2828,"title":{},"body":{"classes/Item.html":{}}}],["object).assign(this.config",{"_index":2804,"title":{},"body":{"classes/Item.html":{}}}],["object).assign(this.resolve",{"_index":2851,"title":{},"body":{"classes/Item.html":{}}}],["object).assign(value",{"_index":2843,"title":{},"body":{"classes/Item.html":{}}}],["object.assign",{"_index":947,"title":{},"body":{"classes/Config.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Item.html":{},"injectables/ModelConfigService.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["object.assign(componentref.instance",{"_index":1547,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["object.assign(config",{"_index":4867,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.assign(entry",{"_index":1782,"title":{},"body":{"injectables/EntryService.html":{}}}],["object.assign(merged",{"_index":3774,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(resource",{"_index":4355,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.assign(serialized",{"_index":2846,"title":{},"body":{"classes/Item.html":{}}}],["object.assign(this",{"_index":1939,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{}}}],["object.assign(this.config",{"_index":3026,"title":{},"body":{"components/ListComponent.html":{},"classes/Pagination.html":{}}}],["object.assign(this.config[key][property",{"_index":955,"title":{},"body":{"classes/Config.html":{}}}],["object.assign(this.get(model",{"_index":3794,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(this.types[type",{"_index":4872,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.assigned",{"_index":4736,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["object.keys(customfieldconfig",{"_index":3805,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(fieldconfig",{"_index":3762,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(filter).reduce((match",{"_index":4340,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(item.config.fields).reduce((equal",{"_index":1043,"title":{},"body":{"components/CrudComponent.html":{}}}],["object.keys(permissions",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(symbolservice.sets).length",{"_index":2449,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["object.keys(this.body",{"_index":2806,"title":{},"body":{"classes/Item.html":{}}}],["object.keys(this.config.fields).foreach((property",{"_index":2836,"title":{},"body":{"classes/Item.html":{}}}],["object.keys(this.control.errors).reduce((errs",{"_index":2677,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["object.keys(this.resolve())[0",{"_index":2826,"title":{},"body":{"classes/Item.html":{}}}],["object.keys(this.sets).length",{"_index":4643,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(value",{"_index":2829,"title":{},"body":{"classes/Item.html":{}}}],["object.keys(value).foreach((key",{"_index":1777,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(value).map((property",{"_index":2842,"title":{},"body":{"classes/Item.html":{}}}],["object.keys(value).reduce((serialized",{"_index":2845,"title":{},"body":{"classes/Item.html":{}}}],["object.keys(variables).foreach((key",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{}}}],["objects",{"_index":1904,"title":{},"body":{"classes/Field.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"classes/Sorter.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["observable",{"_index":856,"title":{},"body":{"classes/Collection.html":{},"injectables/EntryService.html":{},"injectables/GeocodeService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["observable((observer",{"_index":2281,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observeelement",{"_index":2255,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observeelement(el",{"_index":2273,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complete",{"_index":2295,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(coords",{"_index":2294,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observers",{"_index":1674,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["observes",{"_index":2275,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obsolete",{"_index":3877,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["obtained",{"_index":3701,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["occasion",{"_index":1892,"title":{},"body":{"classes/Field.html":{}}}],["occur",{"_index":5584,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["occurs",{"_index":3466,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ok",{"_index":2302,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["old",{"_index":1763,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["oldassetgroupids",{"_index":1987,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["oldvalues",{"_index":1776,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["oldvalues[key",{"_index":1778,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["omit",{"_index":5269,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["omits",{"_index":4389,"title":{},"body":{"injectables/SdkService.html":{}}}],["omitted",{"_index":3736,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["omittedfields",{"_index":3689,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["once",{"_index":5768,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["onchanges",{"_index":23,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ondestroy",{"_index":3580,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ondragleave(e",{"_index":1509,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondragover(e",{"_index":1500,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondrop(e",{"_index":1504,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["one",{"_index":1148,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["onedit",{"_index":2860,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["oneline",{"_index":5801,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ones",{"_index":5012,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["onsave",{"_index":2522,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{}}}],["onsubmit",{"_index":3493,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["open",{"_index":1103,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"injectables/PopService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["opened",{"_index":1099,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/PopService.html":{}}}],["opening",{"_index":4269,"title":{},"body":{"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["openinghours",{"_index":5569,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["openinghourscomponent",{"_index":5577,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["opens",{"_index":3153,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"components/UploadComponent.html":{}}}],["openurl",{"_index":2928,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["openurl(url",{"_index":2917,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["operation",{"_index":5024,"title":{},"body":{"interfaces/WithLoader.html":{}}}],["operations",{"_index":1145,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"classes/Sorter.html":{}}}],["operator",{"_index":1857,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["operators",{"_index":5530,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["option",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultInputComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["option.label",{"_index":1457,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["optional",{"_index":102,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["optionally",{"_index":3462,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["options",{"_index":1107,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["options[key",{"_index":2014,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["options](https://github.com/yabwe/medium",{"_index":3602,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["original",{"_index":2540,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["original.resolution",{"_index":2543,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["others",{"_index":3154,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{},"additional-documentation/adding-new-packages.html":{}}}],["otherwise",{"_index":1747,"title":{},"body":{"injectables/EntryService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ouput",{"_index":2509,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{}}}],["out",{"_index":358,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["outline",{"_index":5505,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["output",{"_index":524,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["output'},{'name",{"_index":231,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["output('toggle",{"_index":4155,"title":{},"body":{"components/PopComponent.html":{}}}],["output.component",{"_index":1177,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["output.component.html",{"_index":1430,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts",{"_index":1429,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["output.component.ts:11",{"_index":1431,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts:13",{"_index":1432,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output/default",{"_index":1462,"title":{},"body":{"components/DefaultOutputComponent.html":{},"modules/FormModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["output/output.component",{"_index":2688,"title":{},"body":{"modules/IoModule.html":{}}}],["outputcomponent",{"_index":285,"title":{"components/OutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["outputs",{"_index":485,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["outputview",{"_index":5919,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["outside",{"_index":116,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["over",{"_index":2674,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["overflow",{"_index":6062,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["overlapping",{"_index":6044,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["overlay",{"_index":3657,"title":{},"body":{"components/ModalComponent.html":{}}}],["overridden",{"_index":3559,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["override",{"_index":2399,"title":{},"body":{"components/IconComponent.html":{}}}],["overriden",{"_index":2438,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelConfigService.html":{},"injectables/SymbolService.html":{}}}],["overrides",{"_index":2577,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["overriding",{"_index":2398,"title":{},"body":{"components/IconComponent.html":{}}}],["overview",{"_index":5333,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["overwrite",{"_index":4604,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["overwriting",{"_index":4602,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["overwritten",{"_index":3527,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["p",{"_index":6171,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["package",{"_index":5030,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["package(s",{"_index":6192,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["package.json",{"_index":5353,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["packages",{"_index":5266,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["packages/.../actionbar.component.ts",{"_index":5339,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../auth.module.ts",{"_index":5259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../component",{"_index":5258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../sorter.ts",{"_index":5260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/ace/src/lib/ace.component.ts",{"_index":11,"title":{},"body":{"components/AceComponent.html":{},"coverage.html":{}}}],["packages/ace/src/lib/ace.component.ts:102",{"_index":114,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:112",{"_index":132,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:115",{"_index":96,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:119",{"_index":104,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:29",{"_index":128,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:33",{"_index":137,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:37",{"_index":134,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:39",{"_index":130,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:43",{"_index":126,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:47",{"_index":71,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:51",{"_index":81,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:54",{"_index":82,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:75",{"_index":106,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:84",{"_index":111,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:93",{"_index":94,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:97",{"_index":91,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.module.ts",{"_index":359,"title":{},"body":{"modules/AceModule.html":{},"coverage.html":{}}}],["packages/ace/src/test.ts",{"_index":5044,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/calendar.module.ts",{"_index":799,"title":{},"body":{"modules/CalendarModule.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/calendar.module.ts:32",{"_index":805,"title":{},"body":{"modules/CalendarModule.html":{}}}],["packages/calendar/src/lib/calendar/calendar.component.ts",{"_index":5046,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/calendar/month.component.ts",{"_index":1256,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/daterange/daterange.component.ts",{"_index":5052,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/datetime.pipe.ts",{"_index":1232,"title":{},"body":{"pipes/DatetimePipe.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/datetime.pipe.ts:12",{"_index":1240,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["packages/calendar/src/lib/heatmap/heatmap.component.ts",{"_index":5055,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/test.ts",{"_index":5057,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/collection/collection.ts",{"_index":829,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["packages/core/src/lib/collection/collection.ts:10",{"_index":852,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:106",{"_index":886,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:12",{"_index":855,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:123",{"_index":890,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:138",{"_index":895,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:14",{"_index":844,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:147",{"_index":893,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:160",{"_index":880,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:165",{"_index":883,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:31",{"_index":879,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:42",{"_index":873,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:53",{"_index":876,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:71",{"_index":861,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:89",{"_index":868,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/config/config.ts",{"_index":931,"title":{},"body":{"classes/Config.html":{},"coverage.html":{}}}],["packages/core/src/lib/config/config.ts:13",{"_index":937,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/lib/config/config.ts:5",{"_index":934,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/lib/config/field",{"_index":1947,"title":{},"body":{"interfaces/FieldConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/field/field.ts",{"_index":1828,"title":{},"body":{"classes/Field.html":{},"coverage.html":{}}}],["packages/core/src/lib/field/field.ts:11",{"_index":1866,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:13",{"_index":1851,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:15",{"_index":1886,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:17",{"_index":1889,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:19",{"_index":1887,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:21",{"_index":1852,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:23",{"_index":1874,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:25",{"_index":1879,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:27",{"_index":1880,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:29",{"_index":1875,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:31",{"_index":1856,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:33",{"_index":1861,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:35",{"_index":1868,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:37",{"_index":1869,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:39",{"_index":1862,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:41",{"_index":1888,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:43",{"_index":1854,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:45",{"_index":1872,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:47",{"_index":1885,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:49",{"_index":1855,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:51",{"_index":1876,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:53",{"_index":1870,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:55",{"_index":1848,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:67",{"_index":1894,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:7",{"_index":1883,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:71",{"_index":1893,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:78",{"_index":1896,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:82",{"_index":1891,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:9",{"_index":1881,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/form/form",{"_index":2138,"title":{},"body":{"interfaces/FormConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/form/form.ts",{"_index":5065,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/item/item",{"_index":2856,"title":{},"body":{"interfaces/ItemConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/item/item.ts",{"_index":2692,"title":{},"body":{"classes/Item.html":{},"coverage.html":{}}}],["packages/core/src/lib/item/item.ts:112",{"_index":2755,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:129",{"_index":2730,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:135",{"_index":2711,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:147",{"_index":2719,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:155",{"_index":2751,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:160",{"_index":2737,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:17",{"_index":2721,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:174",{"_index":2735,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:186",{"_index":2716,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:195",{"_index":2747,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:217",{"_index":2743,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:229",{"_index":2708,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:37",{"_index":2724,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:42",{"_index":2732,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:47",{"_index":2714,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:52",{"_index":2764,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:57",{"_index":2726,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:6",{"_index":2705,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:62",{"_index":2727,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:73",{"_index":2733,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:8",{"_index":2704,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/item/item.ts:82",{"_index":2739,"title":{},"body":{"classes/Item.html":{}}}],["packages/core/src/lib/list/list",{"_index":3057,"title":{},"body":{"interfaces/ListConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/list/list.ts",{"_index":5072,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/pagination/pagination.ts",{"_index":3966,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:102",{"_index":3994,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:11",{"_index":3983,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:111",{"_index":3991,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:116",{"_index":3992,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:121",{"_index":3993,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:129",{"_index":4009,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:13",{"_index":3979,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:134",{"_index":3998,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:146",{"_index":4012,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:15",{"_index":3977,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:37",{"_index":3988,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:42",{"_index":3989,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:47",{"_index":3997,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:56",{"_index":4000,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:67",{"_index":4005,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:7",{"_index":3984,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:80",{"_index":3996,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:88",{"_index":4003,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:9",{"_index":3982,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:97",{"_index":3987,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/selection/selection.ts",{"_index":5076,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/sorter/sorter.ts",{"_index":4536,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:24",{"_index":4544,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:31",{"_index":4546,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:60",{"_index":4549,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/test.ts",{"_index":5078,"title":{},"body":{"coverage.html":{}}}],["packages/data/dist",{"_index":6176,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/lib",{"_index":6177,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/package.json#name",{"_index":6173,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/src/lib/asset",{"_index":5079,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/auth/auth",{"_index":575,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/auth.module.ts",{"_index":626,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/data/src/lib/auth/auth.service.ts",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:128",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:149",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:160",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:174",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:190",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:24",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:29",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:44",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:59",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:71",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:81",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:89",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/email",{"_index":5086,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/auth/errors.ts",{"_index":5088,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts",{"_index":3452,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:23",{"_index":3461,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:25",{"_index":3468,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:27",{"_index":3465,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:29",{"_index":3472,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:31",{"_index":3460,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:34",{"_index":3471,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:35",{"_index":3473,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:36",{"_index":3474,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:39",{"_index":3469,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/password",{"_index":4095,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts",{"_index":4474,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:16",{"_index":4477,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:18",{"_index":4478,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:20",{"_index":4481,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:22",{"_index":4486,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:24",{"_index":4487,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:27",{"_index":4484,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/crud/crud",{"_index":1074,"title":{},"body":{"interfaces/CrudConfig.html":{},"coverage.html":{}}}],["packages/data/src/lib/crud/crud.component.ts",{"_index":956,"title":{},"body":{"components/CrudComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:116",{"_index":1011,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:30",{"_index":990,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:32",{"_index":986,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:34",{"_index":992,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:36",{"_index":1017,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:38",{"_index":1013,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:40",{"_index":1020,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:42",{"_index":993,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:44",{"_index":996,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:46",{"_index":984,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:56",{"_index":1025,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:57",{"_index":1024,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:69",{"_index":1009,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:77",{"_index":999,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:82",{"_index":1006,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:89",{"_index":1002,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/data.module.ts",{"_index":1163,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["packages/data/src/lib/data.module.ts:90",{"_index":1166,"title":{},"body":{"modules/DataModule.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts",{"_index":1548,"title":{},"body":{"directives/EntriesDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:103",{"_index":1570,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:111",{"_index":1568,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:22",{"_index":1581,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:24",{"_index":1565,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:26",{"_index":1566,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:28",{"_index":1559,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:30",{"_index":1558,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:32",{"_index":1564,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:34",{"_index":1578,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:35",{"_index":1557,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:40",{"_index":1583,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:41",{"_index":1580,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:45",{"_index":1574,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:58",{"_index":1572,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:74",{"_index":1577,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:85",{"_index":1573,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:92",{"_index":1575,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:99",{"_index":1571,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entry",{"_index":445,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts",{"_index":1611,"title":{},"body":{"directives/EntryDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:19",{"_index":1624,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:21",{"_index":1616,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:23",{"_index":1619,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:25",{"_index":1615,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:27",{"_index":1617,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:29",{"_index":1620,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:31",{"_index":1618,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:33",{"_index":1614,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:38",{"_index":1625,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:39",{"_index":1623,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:43",{"_index":1622,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:51",{"_index":1621,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.service.ts",{"_index":1710,"title":{},"body":{"injectables/EntryService.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:100",{"_index":1734,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:114",{"_index":1736,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:14",{"_index":1723,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:16",{"_index":1752,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:19",{"_index":1725,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:37",{"_index":1744,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:52",{"_index":1751,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:71",{"_index":1739,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:76",{"_index":1731,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/files/asset",{"_index":5120,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts",{"_index":476,"title":{},"body":{"directives/AssetDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:16",{"_index":510,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:18",{"_index":494,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:20",{"_index":497,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:22",{"_index":495,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:24",{"_index":499,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:26",{"_index":490,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:28",{"_index":500,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:30",{"_index":487,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:33",{"_index":512,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:36",{"_index":508,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:47",{"_index":503,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/assetgroup",{"_index":543,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts",{"_index":1469,"title":{},"body":{"directives/DropzoneDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:11",{"_index":1481,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:13",{"_index":1493,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:24",{"_index":1495,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:37",{"_index":1490,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:46",{"_index":1479,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:7",{"_index":1486,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:9",{"_index":1484,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/file.service.ts",{"_index":1949,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/file.service.ts:104",{"_index":2088,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:122",{"_index":2095,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:146",{"_index":2096,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:184",{"_index":2093,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:227",{"_index":2086,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:232",{"_index":2091,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:236",{"_index":2090,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:241",{"_index":2094,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:51",{"_index":2097,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:53",{"_index":2101,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:55",{"_index":2098,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:63",{"_index":2099,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:65",{"_index":2100,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:67",{"_index":2085,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:77",{"_index":2087,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/file.service.ts:92",{"_index":2089,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/lib/files/files.module.ts",{"_index":2107,"title":{},"body":{"modules/FilesModule.html":{}}}],["packages/data/src/lib/files/image",{"_index":2499,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts",{"_index":2457,"title":{},"body":{"directives/ImageDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:14",{"_index":2469,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:16",{"_index":2467,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:18",{"_index":2465,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:20",{"_index":2464,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:22",{"_index":2481,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:27",{"_index":2475,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:39",{"_index":2471,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:43",{"_index":2480,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:64",{"_index":2478,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/mime",{"_index":5135,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/tag",{"_index":5138,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/upload",{"_index":4958,"title":{},"body":{"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts",{"_index":4886,"title":{},"body":{"components/UploadComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:104",{"_index":4913,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:22",{"_index":4915,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:23",{"_index":4923,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:24",{"_index":4919,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:26",{"_index":4900,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:28",{"_index":4897,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:30",{"_index":4894,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:32",{"_index":4895,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:34",{"_index":4899,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:36",{"_index":4893,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:38",{"_index":4902,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:40",{"_index":4901,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:42",{"_index":4917,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:44",{"_index":4921,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:46",{"_index":4892,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:56",{"_index":4910,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:66",{"_index":4908,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:72",{"_index":4905,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:80",{"_index":4906,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:87",{"_index":4914,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/model",{"_index":3682,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["packages/data/src/lib/resource",{"_index":4198,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["packages/data/src/lib/resource/resource.module.ts",{"_index":4304,"title":{},"body":{"modules/ResourceModule.html":{}}}],["packages/data/src/lib/sdk/history.service.ts",{"_index":2317,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:15",{"_index":2345,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:17",{"_index":2327,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:20",{"_index":2344,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:21",{"_index":2343,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:22",{"_index":2348,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:23",{"_index":2347,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:27",{"_index":2340,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:47",{"_index":2329,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:57",{"_index":2335,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/sdk.module.ts",{"_index":4370,"title":{},"body":{"modules/SdkModule.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts",{"_index":4372,"title":{},"body":{"injectables/SdkService.html":{},"coverage.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:112",{"_index":4402,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:125",{"_index":4393,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:136",{"_index":4390,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:151",{"_index":4400,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:34",{"_index":4405,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:36",{"_index":4413,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:37",{"_index":4421,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:49",{"_index":4418,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:51",{"_index":4404,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:53",{"_index":4403,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:55",{"_index":4407,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:57",{"_index":4422,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:64",{"_index":4424,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:69",{"_index":4409,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:71",{"_index":4419,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:73",{"_index":4415,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:80",{"_index":4388,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:83",{"_index":4411,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:90",{"_index":4397,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/test.ts",{"_index":5166,"title":{},"body":{"coverage.html":{}}}],["packages/location/src/lib/geocode.service.ts",{"_index":2248,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["packages/location/src/lib/geocode.service.ts:12",{"_index":2259,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:16",{"_index":2274,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:41",{"_index":2262,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:46",{"_index":2265,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:59",{"_index":2271,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/location",{"_index":3341,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["packages/location/src/lib/location.module.ts",{"_index":3378,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["packages/location/src/lib/location.module.ts:31",{"_index":3382,"title":{},"body":{"modules/LocationModule.html":{}}}],["packages/location/src/test.ts",{"_index":5172,"title":{},"body":{"coverage.html":{}}}],["packages/medium",{"_index":3574,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["packages/style",{"_index":5284,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["packages/tinymce/src/lib/tinymce.module.ts",{"_index":4801,"title":{},"body":{"modules/TinymceModule.html":{},"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce",{"_index":5176,"title":{},"body":{"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts",{"_index":4717,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:103",{"_index":4748,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:108",{"_index":4746,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:134",{"_index":4744,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:138",{"_index":4751,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:145",{"_index":4754,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:147",{"_index":4749,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:151",{"_index":4750,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:53",{"_index":4755,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:55",{"_index":4753,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:57",{"_index":4752,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:59",{"_index":4756,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:61",{"_index":4730,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:63",{"_index":4735,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:65",{"_index":4732,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:67",{"_index":4737,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:70",{"_index":4738,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:72",{"_index":4726,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:90",{"_index":4747,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:96",{"_index":4745,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/test.ts",{"_index":5179,"title":{},"body":{"coverage.html":{}}}],["packages/ui",{"_index":5585,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["packages/ui/src/lib/actionbar/actionbar.component.ts",{"_index":369,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts",{"_index":1192,"title":{},"body":{"components/DatetimeComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:24",{"_index":1201,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:26",{"_index":1206,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:28",{"_index":1218,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:30",{"_index":1222,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:32",{"_index":1204,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:34",{"_index":1207,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:36",{"_index":1219,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:39",{"_index":1215,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:44",{"_index":1220,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:47",{"_index":1209,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:52",{"_index":1211,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:54",{"_index":1213,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/default",{"_index":1434,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.component.html.ts",{"_index":5183,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/form/form.component.ts",{"_index":5185,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/form/form.module.ts",{"_index":2161,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.service.ts",{"_index":2178,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.service.ts:10",{"_index":2213,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:14",{"_index":2205,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:25",{"_index":2196,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:47",{"_index":2190,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:55",{"_index":2198,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:67",{"_index":2210,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:82",{"_index":2203,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:87",{"_index":2193,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:9",{"_index":2188,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/max",{"_index":3567,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts",{"_index":4805,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:19",{"_index":4817,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:21",{"_index":4809,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:22",{"_index":4808,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:25",{"_index":4813,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:30",{"_index":4814,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:34",{"_index":4816,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:36",{"_index":4810,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:40",{"_index":4811,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/visible",{"_index":5009,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/ec",{"_index":5189,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/icon/emoji",{"_index":5192,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts",{"_index":2372,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:17",{"_index":2385,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:19",{"_index":2384,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:22",{"_index":2388,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:28",{"_index":2387,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:31",{"_index":2386,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.module.ts",{"_index":2419,"title":{},"body":{"modules/IconModule.html":{}}}],["packages/ui/src/lib/icon/icon.service.ts",{"_index":2421,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.service.ts:11",{"_index":2447,"title":{},"body":{"injectables/IconService.html":{}}}],["packages/ui/src/lib/icon/ixo.ts",{"_index":5195,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/io/dynamic",{"_index":1510,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input",{"_index":2661,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts",{"_index":2571,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:118",{"_index":2596,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:133",{"_index":2604,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:140",{"_index":2619,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:143",{"_index":2601,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:148",{"_index":2602,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:150",{"_index":2603,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:32",{"_index":2586,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:34",{"_index":2616,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:36",{"_index":2580,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:38",{"_index":2593,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:40",{"_index":2595,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:42",{"_index":2583,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:44",{"_index":2585,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:46",{"_index":2591,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:48",{"_index":2587,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:50",{"_index":2578,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:52",{"_index":2576,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:54",{"_index":2588,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:57",{"_index":2606,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:59",{"_index":2620,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:61",{"_index":2618,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:63",{"_index":2600,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:69",{"_index":2597,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:77",{"_index":2598,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/io.module.ts",{"_index":2687,"title":{},"body":{"modules/IoModule.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts",{"_index":3955,"title":{},"body":{"components/OutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:20",{"_index":3959,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:22",{"_index":3960,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:24",{"_index":3958,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:28",{"_index":3961,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/slot",{"_index":4528,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/group.pipe.ts",{"_index":2312,"title":{},"body":{"pipes/GroupPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/group.pipe.ts:10",{"_index":2314,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["packages/ui/src/lib/list/list",{"_index":3083,"title":{},"body":{"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.html.ts",{"_index":5204,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.ts",{"_index":2945,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.ts:104",{"_index":2979,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:112",{"_index":2999,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:123",{"_index":2998,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:130",{"_index":2987,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:136",{"_index":2988,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:149",{"_index":2989,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:162",{"_index":2986,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:33",{"_index":3001,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:36",{"_index":3003,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:38",{"_index":2968,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:40",{"_index":2969,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:42",{"_index":2967,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:44",{"_index":2973,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:46",{"_index":2974,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:48",{"_index":2976,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:50",{"_index":2977,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:52",{"_index":2970,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:54",{"_index":2971,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:56",{"_index":2972,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:58",{"_index":2966,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:60",{"_index":3002,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:62",{"_index":2965,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:64",{"_index":3000,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:68",{"_index":2993,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:77",{"_index":2992,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.module.ts",{"_index":3258,"title":{},"body":{"modules/ListModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination",{"_index":4083,"title":{},"body":{"classes/PaginationConfig.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts",{"_index":4038,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:15",{"_index":4043,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:17",{"_index":4051,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:19",{"_index":4061,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:21",{"_index":4055,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:23",{"_index":4042,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:26",{"_index":4048,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:31",{"_index":4046,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:39",{"_index":4045,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:50",{"_index":4050,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/searchbar/searchbar.component.ts",{"_index":5208,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts",{"_index":3267,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:14",{"_index":3286,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:16",{"_index":3287,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:18",{"_index":3277,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:24",{"_index":3280,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:30",{"_index":3278,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:37",{"_index":3282,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.module.ts",{"_index":3332,"title":{},"body":{"modules/LoaderModule.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts",{"_index":3335,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:11",{"_index":3337,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:16",{"_index":3338,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:8",{"_index":3339,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/with",{"_index":5021,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts",{"_index":3623,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:26",{"_index":3660,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:29",{"_index":3646,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:31",{"_index":3635,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:33",{"_index":3645,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:35",{"_index":3639,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:37",{"_index":3644,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:39",{"_index":3656,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:41",{"_index":3640,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:43",{"_index":3634,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:45",{"_index":3654,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:49",{"_index":3650,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:73",{"_index":3653,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:77",{"_index":3652,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts",{"_index":1808,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:12",{"_index":1811,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:17",{"_index":1813,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:21",{"_index":1812,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:25",{"_index":1815,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/notification.ts",{"_index":3817,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:10",{"_index":3827,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:12",{"_index":3833,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:14",{"_index":3831,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:16",{"_index":3837,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:18",{"_index":3824,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:20",{"_index":3825,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:22",{"_index":3822,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:24",{"_index":3820,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:6",{"_index":3835,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:8",{"_index":3828,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts",{"_index":3840,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts:19",{"_index":3845,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts:21",{"_index":3844,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/lib/notifications/notifications.module.ts",{"_index":3907,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts",{"_index":3910,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:22",{"_index":3932,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:24",{"_index":3935,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:26",{"_index":3919,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:33",{"_index":3927,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:47",{"_index":3929,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:60",{"_index":3922,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/with",{"_index":5025,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts",{"_index":4131,"title":{},"body":{"components/PopComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:28",{"_index":4139,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:30",{"_index":4149,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:32",{"_index":4142,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:34",{"_index":4140,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:36",{"_index":4141,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:38",{"_index":4143,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:40",{"_index":4150,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:43",{"_index":4144,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:53",{"_index":4138,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:55",{"_index":4151,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:58",{"_index":4146,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:63",{"_index":4148,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:72",{"_index":4147,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:88",{"_index":4145,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.module.ts",{"_index":4177,"title":{},"body":{"modules/PopModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts",{"_index":4181,"title":{},"body":{"injectables/PopService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts:11",{"_index":4187,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts:9",{"_index":4188,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/lib/select/select.component.html.ts",{"_index":5212,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/select/select.component.ts",{"_index":5213,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/select/select.module.ts",{"_index":4469,"title":{},"body":{"modules/SelectModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/de.ts",{"_index":5215,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/symbol/en.ts",{"_index":5216,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.interface.ts",{"_index":4581,"title":{},"body":{"interfaces/Symbol.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.module.ts",{"_index":4590,"title":{},"body":{"modules/SymbolModule.html":{}}}],["packages/ui/src/lib/symbol/symbol.pipe.ts",{"_index":4608,"title":{},"body":{"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.pipe.ts:21",{"_index":4612,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts",{"_index":4616,"title":{},"body":{"injectables/SymbolService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:12",{"_index":4629,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:16",{"_index":4627,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:20",{"_index":4628,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:21",{"_index":4630,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:27",{"_index":4619,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:32",{"_index":4621,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:41",{"_index":4623,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:50",{"_index":4618,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:57",{"_index":4625,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:62",{"_index":4626,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:70",{"_index":4620,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:75",{"_index":4622,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:81",{"_index":4624,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/ui.module.ts",{"_index":4881,"title":{},"body":{"modules/UiModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/component",{"_index":5218,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts",{"_index":2123,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:13",{"_index":2128,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:19",{"_index":2129,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:8",{"_index":2127,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:9",{"_index":2126,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.interface.ts",{"_index":2121,"title":{},"body":{"interfaces/Focus.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/focus/focus.interface.ts:6",{"_index":2122,"title":{},"body":{"interfaces/Focus.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts",{"_index":2873,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:101",{"_index":2936,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:14",{"_index":2941,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:15",{"_index":2943,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:16",{"_index":2940,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:17",{"_index":2942,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:18",{"_index":2931,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:20",{"_index":2944,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:54",{"_index":2935,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:59",{"_index":2939,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:64",{"_index":2938,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:69",{"_index":2932,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:76",{"_index":2934,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:91",{"_index":2933,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:97",{"_index":2937,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/login",{"_index":3485,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/signup",{"_index":4497,"title":{},"body":{"components/SignupFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts",{"_index":4651,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:11",{"_index":4658,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:13",{"_index":4661,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:15",{"_index":4660,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:17",{"_index":4662,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:19",{"_index":4663,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:21",{"_index":4657,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:24",{"_index":4667,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:26",{"_index":4664,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:31",{"_index":4665,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts",{"_index":4671,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:14",{"_index":4691,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:16",{"_index":4680,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:27",{"_index":4689,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:38",{"_index":4683,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:48",{"_index":4684,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:53",{"_index":4687,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/utility.module.ts",{"_index":5004,"title":{},"body":{"modules/UtilityModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/validators/email.validator.ts",{"_index":5229,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/utility/validators/field",{"_index":5231,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/test.ts",{"_index":5233,"title":{},"body":{"coverage.html":{}}}],["packagr/issues/696",{"_index":4633,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packagr/ng",{"_index":4632,"title":{},"body":{"injectables/SymbolService.html":{}}}],["page",{"_index":603,"title":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}},"body":{"guards/AuthGuard.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["page!==1",{"_index":1592,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["pagecontainer",{"_index":4040,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pages",{"_index":3967,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{}}}],["paginate",{"_index":4014,"title":{},"body":{"classes/Pagination.html":{}}}],["paginated",{"_index":3986,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["pagination",{"_index":2960,"title":{"classes/Pagination.html":{}},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["pagination'},{'name",{"_index":287,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pagination.component.html",{"_index":4039,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.first",{"_index":4069,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.getpages",{"_index":4016,"title":{},"body":{"classes/Pagination.html":{}}}],["pagination.last",{"_index":4074,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.next",{"_index":4073,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.of",{"_index":4077,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.prev",{"_index":4070,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.settotal(50",{"_index":4013,"title":{},"body":{"classes/Pagination.html":{}}}],["pagination.size",{"_index":4082,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination/pagination",{"_index":3021,"title":{},"body":{"components/ListComponent.html":{}}}],["pagination/pagination.component",{"_index":3263,"title":{},"body":{"modules/ListModule.html":{}}}],["pagination?.params()?.from",{"_index":4075,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.to",{"_index":4076,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.total",{"_index":4078,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":286,"title":{"components/PaginationComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationconfig",{"_index":2961,"title":{"classes/PaginationConfig.html":{}},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["paginationconfig(this.config",{"_index":4065,"title":{},"body":{"components/PaginationComponent.html":{}}}],["param",{"_index":4572,"title":{},"body":{"classes/Sorter.html":{}}}],["parameter",{"_index":2760,"title":{},"body":{"classes/Item.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":3972,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["parent",{"_index":907,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{},"components/ListItemsComponent.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["parse",{"_index":3783,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["parses",{"_index":3651,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{}}}],["parsetype",{"_index":5871,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["part",{"_index":1000,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"classes/Sorter.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["pass",{"_index":2582,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["passed",{"_index":2337,"title":{},"body":{"injectables/HistoryService.html":{},"classes/Item.html":{},"injectables/LoaderService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["passes",{"_index":4740,"title":{},"body":{"components/TinymceComponent.html":{}}}],["passing",{"_index":3301,"title":{},"body":{"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["password",{"_index":289,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["passwordlabel",{"_index":3499,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordplaceholder",{"_index":3500,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordreset.button",{"_index":4130,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["passwordresetcomponent",{"_index":288,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwort",{"_index":3566,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["pasted",{"_index":4292,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["patch",{"_index":3204,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["path",{"_index":372,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ItemConfig.html":{},"injectables/KeycommandsService.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Symbol.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["paths",{"_index":4233,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"components/TabsComponent.html":{},"additional-documentation/adding-new-packages.html":{}}}],["paths.length",{"_index":4240,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["paths[paths.length",{"_index":4701,"title":{},"body":{"components/TabsComponent.html":{}}}],["pattern",{"_index":1238,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["pattern[0",{"_index":1253,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["pending",{"_index":4416,"title":{},"body":{"injectables/SdkService.html":{}}}],["per",{"_index":3076,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["peripherals",{"_index":3227,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["permission",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{}}}],["permissions",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["permissions[method",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["phone",{"_index":4848,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["pick",{"_index":2507,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LocationPickerComponent.html":{}}}],["picker",{"_index":3397,"title":{},"body":{"components/LocationPickerComponent.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["picker'},{'name",{"_index":269,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["picker.component",{"_index":3386,"title":{},"body":{"modules/LocationModule.html":{}}}],["picker.component.html",{"_index":3399,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.scss",{"_index":3398,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts",{"_index":3396,"title":{},"body":{"components/LocationPickerComponent.html":{},"coverage.html":{}}}],["picker.component.ts:23",{"_index":3404,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:25",{"_index":3406,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:27",{"_index":3405,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:29",{"_index":3421,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:31",{"_index":3424,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:33",{"_index":3418,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:35",{"_index":3403,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:38",{"_index":3417,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:39",{"_index":3416,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:40",{"_index":3419,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:46",{"_index":3411,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:58",{"_index":3415,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:64",{"_index":3413,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:79",{"_index":3422,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:81",{"_index":3407,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:85",{"_index":3408,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:87",{"_index":3409,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["pickers",{"_index":5354,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["pickwriteonly",{"_index":2700,"title":{},"body":{"classes/Item.html":{}}}],["pickwriteonly(value",{"_index":2736,"title":{},"body":{"classes/Item.html":{}}}],["pictures",{"_index":5474,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["pipe",{"_index":1230,"title":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/VisibleFieldsPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["pipe(debouncetime(100",{"_index":1307,"title":{},"body":{"interfaces/Day.html":{}}}],["pipe(debouncetime(800",{"_index":1311,"title":{},"body":{"interfaces/Day.html":{}}}],["pipe(debouncetime(this.debounce",{"_index":4773,"title":{},"body":{"components/TinymceComponent.html":{}}}],["pipes",{"_index":1231,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1242,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["place",{"_index":2285,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["place.geometry",{"_index":2288,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lat",{"_index":2291,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lng",{"_index":2293,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["placed",{"_index":4653,"title":{},"body":{"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["placeholder",{"_index":551,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["placeholders",{"_index":4363,"title":{},"body":{"interfaces/SdkField.html":{}}}],["places",{"_index":3308,"title":{},"body":{"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{}}}],["plain",{"_index":1990,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["plan",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["play",{"_index":5540,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["please",{"_index":2046,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["plugged",{"_index":3268,"title":{},"body":{"components/LoaderComponent.html":{}}}],["plurallabel",{"_index":1094,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["plus/lib",{"_index":5382,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["plus/lib/jsonpath.js",{"_index":5379,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["polyfill",{"_index":2353,"title":{},"body":{"injectables/HistoryService.html":{}}}],["pop",{"_index":1014,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["pop'},{'name",{"_index":218,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pop.alt",{"_index":2555,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component",{"_index":1031,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{}}}],["pop.component.html",{"_index":1635,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts",{"_index":1634,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{}}}],["pop.component.ts:23",{"_index":4293,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:24",{"_index":1649,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:25",{"_index":1648,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:26",{"_index":1650,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:27",{"_index":1660,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:28",{"_index":1692,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:29",{"_index":4296,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:30",{"_index":1665,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:31",{"_index":1647,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:32",{"_index":2513,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:34",{"_index":1689,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:35",{"_index":1690,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:36",{"_index":1688,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:37",{"_index":1687,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:38",{"_index":4295,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:39",{"_index":2515,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:40",{"_index":2516,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:41",{"_index":2517,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:42",{"_index":1671,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:43",{"_index":2512,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:44",{"_index":2511,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:49",{"_index":2510,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:50",{"_index":1673,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:53",{"_index":4294,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:58",{"_index":1670,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.header",{"_index":2570,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.height",{"_index":2568,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.keepratio",{"_index":2558,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.service",{"_index":4154,"title":{},"body":{"components/PopComponent.html":{},"modules/PopModule.html":{}}}],["pop.submitbuttonlabel",{"_index":2521,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.width",{"_index":2563,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop/asset",{"_index":2112,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["pop/entry",{"_index":1030,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["pop/image",{"_index":2119,"title":{},"body":{"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["pop/pop.component",{"_index":3182,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{}}}],["pop/pop.module",{"_index":2162,"title":{},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["pop/pop.service",{"_index":3663,"title":{},"body":{"components/ModalComponent.html":{}}}],["pop/resource",{"_index":4281,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["pop_dialog",{"_index":3758,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["popcolumns",{"_index":1095,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["popcomponent",{"_index":291,"title":{"components/PopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popcomponent:28",{"_index":1651,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:30",{"_index":1693,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:32",{"_index":1659,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:34",{"_index":1653,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:36",{"_index":1656,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:38",{"_index":1661,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:40",{"_index":1696,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:43",{"_index":1667,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:55",{"_index":1697,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:58",{"_index":1678,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:63",{"_index":1686,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:72",{"_index":1683,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:88",{"_index":1675,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popmodule",{"_index":2156,"title":{"modules/PopModule.html":{}},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["popmoduleconfig",{"_index":4179,"title":{},"body":{"modules/PopModule.html":{},"coverage.html":{}}}],["pops",{"_index":1143,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/TinymceComponent.html":{}}}],["popservice",{"_index":1637,"title":{"injectables/PopService.html":{}},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popservice.defaultcolumns",{"_index":1144,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["popservice.stack",{"_index":1676,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["populated",{"_index":3081,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["position",{"_index":3365,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["possesed",{"_index":2761,"title":{},"body":{"classes/Item.html":{}}}],["possessed",{"_index":2728,"title":{},"body":{"classes/Item.html":{}}}],["possesses",{"_index":4258,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["possible",{"_index":1114,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["post",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["prebuilt",{"_index":5605,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["preceding",{"_index":3873,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["preexisting",{"_index":4605,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["prefill",{"_index":2559,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["prefilled",{"_index":5888,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["prefix",{"_index":1761,"title":{},"body":{"injectables/EntryService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["prepare",{"_index":1853,"title":{},"body":{"classes/Field.html":{}}}],["prequisites",{"_index":5409,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["present",{"_index":86,"title":{},"body":{"components/AceComponent.html":{},"guards/AuthGuard.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["preservefilenames",{"_index":1955,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["preserves",{"_index":1962,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["pressing",{"_index":4266,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["pretty",{"_index":5526,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["prev",{"_index":1554,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["prevent",{"_index":4373,"title":{},"body":{"injectables/SdkService.html":{}}}],["prevents",{"_index":2888,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["previous",{"_index":2990,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{}}}],["primitive",{"_index":2706,"title":{},"body":{"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/readme/core-readme.html":{}}}],["primitive.resolve",{"_index":2771,"title":{},"body":{"classes/Item.html":{}}}],["primitve",{"_index":5573,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["private",{"_index":605,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["pro",{"_index":5361,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["problem",{"_index":6063,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["problems",{"_index":5404,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["processing",{"_index":4731,"title":{},"body":{"components/TinymceComponent.html":{}}}],["prod",{"_index":5320,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["production",{"_index":5321,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["programmatically",{"_index":2867,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["project",{"_index":5262,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["project/node_modules/eventsource/lib",{"_index":5376,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["project/node_modules/jsonpath",{"_index":5381,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["promise",{"_index":133,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["promise((resolve",{"_index":2298,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/TinymceComponent.html":{}}}],["promise.all(this.stack.items).then",{"_index":3326,"title":{},"body":{"components/LoaderComponent.html":{}}}],["promise.reject('api_not_found",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject('cannot",{"_index":533,"title":{},"body":{"directives/AssetDirective.html":{}}}],["promise.reject('desktop",{"_index":3948,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["promise.reject('fehler",{"_index":3857,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["promise.reject('getaccount",{"_index":4460,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('getschema",{"_index":4455,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('no_api_found",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject(`ecimage",{"_index":2489,"title":{},"body":{"directives/ImageDirective.html":{}}}],["promise.reject(err",{"_index":1775,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.reject(this.noclientid",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["promise.resolve().then",{"_index":2059,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(>assets",{"_index":2052,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(['get",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(actions(this.actionstack",{"_index":428,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["promise.resolve(api",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(item.config.onsave(item",{"_index":4347,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.resolve(methods",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results.concat(method",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(this",{"_index":2852,"title":{},"body":{"classes/Item.html":{}}}],["promise.resolve(this.config.onsave(this",{"_index":2848,"title":{},"body":{"classes/Item.html":{}}}],["promise.resolve(this.editor",{"_index":176,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["promise.resolve(value",{"_index":3560,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["promises",{"_index":2323,"title":{},"body":{"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["propagate",{"_index":3241,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["propagatechange",{"_index":43,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["propagates",{"_index":3412,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["propagation",{"_index":1221,"title":{},"body":{"components/DatetimeComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["proper",{"_index":5304,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["properly",{"_index":5466,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["properties",{"_index":40,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["property",{"_index":936,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["property.interface",{"_index":1938,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{}}}],["property.interface.ts",{"_index":5060,"title":{},"body":{"coverage.html":{}}}],["proportions",{"_index":5672,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["protected",{"_index":833,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"classes/Item.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{}}}],["protractor",{"_index":5327,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["provded",{"_index":3236,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["provide",{"_index":27,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["provided",{"_index":3148,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["providers",{"_index":25,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["provides",{"_index":1518,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Item.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["providing",{"_index":3914,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["pseudo",{"_index":5511,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["public",{"_index":46,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["public_api",{"_index":5781,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["publicapi",{"_index":489,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["publicapi#getfieldconfig",{"_index":3716,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["publicapi(shortid",{"_index":4450,"title":{},"body":{"injectables/SdkService.html":{}}}],["publicassetlist",{"_index":1968,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["publicassetresource",{"_index":525,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["publicassetresources",{"_index":2039,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["publish",{"_index":5300,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["publishing",{"_index":6195,"title":{"additional-documentation/publishing.html":{}},"body":{}}],["purpose",{"_index":5706,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["pushed",{"_index":3928,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["put",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"classes/Item.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["puttable",{"_index":5791,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["qb1mro56u5katpx9j8o4",{"_index":3392,"title":{},"body":{"modules/LocationModule.html":{}}}],["query",{"_index":3065,"title":{},"body":{"interfaces/ListConfig.html":{},"interfaces/ResourceActionbarState.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["queryfilter",{"_index":4845,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["querylist",{"_index":4053,"title":{},"body":{"components/PaginationComponent.html":{},"components/TabsComponent.html":{}}}],["quick",{"_index":1077,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["quickly",{"_index":5454,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["rack",{"_index":1525,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component",{"_index":2691,"title":{},"body":{"modules/IoModule.html":{}}}],["rack.component.html",{"_index":1514,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component.ts",{"_index":1512,"title":{},"body":{"components/DynamicRackComponent.html":{},"coverage.html":{}}}],["rack.component.ts:10",{"_index":1517,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack/dynamic",{"_index":1511,"title":{},"body":{"components/DynamicRackComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["range",{"_index":4086,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["ranking",{"_index":5513,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["ratio",{"_index":2502,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["raw",{"_index":1239,"title":{},"body":{"pipes/DatetimePipe.html":{},"components/LocationPickerComponent.html":{}}}],["rawfilter",{"_index":3751,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["re",{"_index":92,"title":{},"body":{"components/AceComponent.html":{}}}],["reach",{"_index":4333,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["react",{"_index":584,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reactions",{"_index":3467,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactive",{"_index":3577,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["reactiveformsmodule",{"_index":633,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/UtilityModule.html":{}}}],["read",{"_index":1134,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["readable",{"_index":1913,"title":{},"body":{"classes/Field.html":{}}}],["readme",{"_index":475,"title":{"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["readonly",{"_index":552,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["reads",{"_index":2476,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ready",{"_index":44,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["really",{"_index":5698,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["recent",{"_index":3538,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["recognize",{"_index":5872,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["recommended",{"_index":3867,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reconstruct",{"_index":2996,"title":{},"body":{"components/ListComponent.html":{}}}],["reconstructing",{"_index":2995,"title":{},"body":{"components/ListComponent.html":{}}}],["redirect",{"_index":586,"title":{},"body":{"guards/AuthGuard.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["redirecting",{"_index":601,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reduce((a",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["reduce((max",{"_index":3770,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["refer",{"_index":5456,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["reference",{"_index":2607,"title":{},"body":{"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["referenced",{"_index":5564,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["references",{"_index":5600,"title":{},"body":{"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["reflect",{"_index":1415,"title":{},"body":{"interfaces/Day.html":{}}}],["reflected",{"_index":1284,"title":{},"body":{"interfaces/Day.html":{}}}],["regex",{"_index":5364,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["regexp",{"_index":2864,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["register",{"_index":2422,"title":{},"body":{"injectables/IconService.html":{},"injectables/KeycommandsService.html":{},"injectables/SymbolService.html":{},"components/ToggleComponent.html":{}}}],["register(keyconfig",{"_index":2899,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["registered",{"_index":2448,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["registeronchange",{"_index":58,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["registeronchange(fn",{"_index":95,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registerontouched",{"_index":59,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registers",{"_index":97,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/ToggleComponent.html":{}}}],["registration",{"_index":4493,"title":{},"body":{"components/SignupComponent.html":{}}}],["registry",{"_index":2374,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["registry.find((s",{"_index":4634,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry.indexof(this.get(symbol.name",{"_index":4639,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry.push(symbol",{"_index":4640,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry[index",{"_index":4641,"title":{},"body":{"injectables/SymbolService.html":{}}}],["regular",{"_index":5016,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["reinit/reload",{"_index":2590,"title":{},"body":{"components/InputComponent.html":{}}}],["reinstantiate",{"_index":6006,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["reject",{"_index":2299,"title":{},"body":{"injectables/GeocodeService.html":{},"components/TinymceComponent.html":{}}}],["reject(status",{"_index":2304,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["related",{"_index":628,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/LocationModule.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{}}}],["relation",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["relations",{"_index":4406,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["relative",{"_index":1416,"title":{},"body":{"interfaces/Day.html":{},"components/TabComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["relativeto",{"_index":4714,"title":{},"body":{"components/TabsComponent.html":{}}}],["release",{"_index":1767,"title":{},"body":{"injectables/EntryService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["releasing",{"_index":5297,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["relevant",{"_index":455,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["relevantkeys",{"_index":3804,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.foreach((key",{"_index":3808,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.length",{"_index":3807,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["reload",{"_index":4221,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["reloading",{"_index":5491,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["reloads",{"_index":1004,"title":{},"body":{"components/CrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rely",{"_index":5572,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["remain",{"_index":1123,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["remaining",{"_index":2841,"title":{},"body":{"classes/Item.html":{}}}],["removal",{"_index":1112,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["remove",{"_index":839,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["remove(item",{"_index":885,"title":{},"body":{"classes/Collection.html":{}}}],["removeall",{"_index":840,"title":{},"body":{"classes/Collection.html":{}}}],["removeall(items",{"_index":889,"title":{},"body":{"classes/Collection.html":{}}}],["removed",{"_index":1110,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"classes/Item.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["removeitem",{"_index":5878,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["removes",{"_index":887,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["removing",{"_index":3279,"title":{},"body":{"components/LoaderComponent.html":{}}}],["rename",{"_index":2871,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{}}}],["renamed",{"_index":5371,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["render",{"_index":958,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ListComponent.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["rendered",{"_index":2145,"title":{},"body":{"interfaces/FormConfig.html":{},"components/OutputComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["rendering",{"_index":3956,"title":{},"body":{"components/OutputComponent.html":{}}}],["renders",{"_index":1387,"title":{},"body":{"interfaces/Day.html":{},"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{}}}],["replace",{"_index":1068,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["replaces",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["replacewith",{"_index":841,"title":{},"body":{"classes/Collection.html":{}}}],["replacewith(items",{"_index":892,"title":{},"body":{"classes/Collection.html":{}}}],["repo",{"_index":5291,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["repository",{"_index":5279,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["represented",{"_index":1263,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["represents",{"_index":1899,"title":{},"body":{"classes/Field.html":{}}}],["request",{"_index":4098,"title":{},"body":{"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{}}}],["requested",{"_index":2468,"title":{},"body":{"directives/ImageDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["requests",{"_index":4417,"title":{},"body":{"injectables/SdkService.html":{}}}],["require",{"_index":451,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["require(\"path",{"_index":5399,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["required",{"_index":1840,"title":{},"body":{"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["requires",{"_index":2423,"title":{},"body":{"injectables/IconService.html":{}}}],["res",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["reset",{"_index":357,"title":{},"body":{"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["reset'},{'name",{"_index":290,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["reset.component",{"_index":642,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset.component.html",{"_index":4101,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts",{"_index":4096,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:16",{"_index":4112,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:18",{"_index":4111,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:20",{"_index":4104,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:22",{"_index":4106,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:24",{"_index":4107,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:26",{"_index":4103,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:28",{"_index":4110,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:30",{"_index":4108,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":641,"title":{},"body":{"modules/AuthModule.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset?e=1",{"_index":4100,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["resetfilter",{"_index":3141,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["resetpassword",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(email",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(this.email",{"_index":4116,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["resets",{"_index":3532,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["resolution",{"_index":2542,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.height",{"_index":2549,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.width",{"_index":2548,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolve",{"_index":1908,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["resolve(name",{"_index":2431,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["resolve(property",{"_index":2738,"title":{},"body":{"classes/Item.html":{}}}],["resolve(results",{"_index":2303,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["resolve(tinymce.init(settings",{"_index":4786,"title":{},"body":{"components/TinymceComponent.html":{}}}],["resolveassets",{"_index":2040,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resolveassets(assets",{"_index":2092,"title":{},"body":{"injectables/FileService.html":{}}}],["resolved",{"_index":424,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{}}}],["resolved.find((resource",{"_index":2062,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resolved.length",{"_index":435,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["resolvedapi",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvefn",{"_index":3113,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolvefn(list",{"_index":3115,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolver",{"_index":160,"title":{},"body":{"components/AceComponent.html":{}}}],["resolves",{"_index":135,"title":{},"body":{"components/AceComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{}}}],["resolvevariables",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevariables(string",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["resouce",{"_index":5812,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["resource",{"_index":293,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["resource.assetid",{"_index":2063,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resource.del().then((res",{"_index":4357,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource.newhistory",{"_index":2362,"title":{},"body":{"injectables/HistoryService.html":{}}}],["resource.save",{"_index":4349,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource/resource.module",{"_index":1185,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["resource[identifier",{"_index":4205,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resource[key",{"_index":4354,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource[label",{"_index":4206,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceaction",{"_index":4231,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceactionbarcomponent",{"_index":292,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceactionbarstate",{"_index":4197,"title":{"interfaces/ResourceActionbarState.html":{}},"body":{"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["resourceconfig",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourceconfig#set",{"_index":5823,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["resourcecrudcomponent",{"_index":294,"title":{"components/ResourceCrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcedeletepopcomponent",{"_index":295,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceform",{"_index":5157,"title":{},"body":{"coverage.html":{}}}],["resourceformcomponent",{"_index":297,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelist",{"_index":1970,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["resourcelist(relation",{"_index":4224,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourcelistcomponent",{"_index":298,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelistpopcomponent",{"_index":299,"title":{"components/ResourceListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcemodule",{"_index":1158,"title":{"modules/ResourceModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcepopcomponent",{"_index":300,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resources",{"_index":4228,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceselectcomponent",{"_index":301,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservice",{"_index":1718,"title":{"injectables/ResourceService.html":{}},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservice.change",{"_index":1759,"title":{},"body":{"injectables/EntryService.html":{}}}],["response",{"_index":2036,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["response['getallitems",{"_index":2035,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["responsive",{"_index":6059,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["rest",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{}}}],["result",{"_index":340,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["results",{"_index":342,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["results.length",{"_index":3432,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["results.push(method",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["results[0].formatted_address",{"_index":3433,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["retoggle",{"_index":5946,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["retrieve",{"_index":3088,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["retrieve(key",{"_index":3094,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["retrieves",{"_index":3710,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["return",{"_index":188,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["returned",{"_index":1806,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/SdkField.html":{}}}],["returns",{"_index":89,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":2266,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"classes/Sorter.html":{}}}],["reversed",{"_index":5942,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["revert",{"_index":5750,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["reverted",{"_index":5699,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["reworked",{"_index":5786,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["role",{"_index":457,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["root",{"_index":384,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"classes/Config.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["roots",{"_index":4380,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["route",{"_index":969,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["route.params",{"_index":1034,"title":{},"body":{"components/CrudComponent.html":{}}}],["route.queryparams",{"_index":1035,"title":{},"body":{"components/CrudComponent.html":{}}}],["router",{"_index":970,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["routermodule",{"_index":1167,"title":{},"body":{"modules/DataModule.html":{},"modules/UtilityModule.html":{}}}],["routes",{"_index":577,"title":{"additional-documentation/project-setup-tutorial/routes.html":{}},"body":{"guards/AuthGuard.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["routing",{"_index":5418,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["routing.module.ts",{"_index":5460,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["row",{"_index":2862,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["run",{"_index":2744,"title":{},"body":{"classes/Item.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["running",{"_index":5287,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["runs",{"_index":1910,"title":{},"body":{"classes/Field.html":{}}}],["runtime",{"_index":4377,"title":{},"body":{"injectables/SdkService.html":{}}}],["rxfilter",{"_index":4331,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs",{"_index":597,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"dependencies.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["rxjs/operators",{"_index":1270,"title":{},"body":{"interfaces/Day.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{}}}],["rxjs/subject",{"_index":6184,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["s.name",{"_index":4635,"title":{},"body":{"injectables/SymbolService.html":{}}}],["safari",{"_index":5963,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["safedelete",{"_index":1096,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["safeput",{"_index":1750,"title":{},"body":{"injectables/EntryService.html":{}}}],["same",{"_index":853,"title":{},"body":{"classes/Collection.html":{},"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["sandbox.scss",{"_index":5425,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["save",{"_index":1722,"title":{},"body":{"injectables/EntryService.html":{},"classes/Field.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["save(item",{"_index":4325,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["save(model",{"_index":1742,"title":{},"body":{"injectables/EntryService.html":{}}}],["save(safeput",{"_index":1786,"title":{},"body":{"injectables/EntryService.html":{}}}],["save(value",{"_index":2742,"title":{},"body":{"classes/Item.html":{}}}],["saved",{"_index":1125,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["saves",{"_index":1745,"title":{},"body":{"injectables/EntryService.html":{},"classes/Item.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["saving",{"_index":2749,"title":{},"body":{"classes/Item.html":{}}}],["scaffolding",{"_index":5314,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["scale",{"_index":3706,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema",{"_index":3688,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["schemarequests",{"_index":4381,"title":{},"body":{"injectables/SdkService.html":{}}}],["script",{"_index":5295,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["scss",{"_index":5367,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/style-readme.html":{}}}],["sdk",{"_index":462,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["sdk.api",{"_index":493,"title":{},"body":{"directives/AssetDirective.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{}}}],["sdk.init",{"_index":4375,"title":{},"body":{"injectables/SdkService.html":{}}}],["sdk.service",{"_index":4371,"title":{},"body":{"modules/SdkModule.html":{}}}],["sdk/history.service",{"_index":1186,"title":{},"body":{"modules/DataModule.html":{}}}],["sdk/sdk.module",{"_index":1187,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{}}}],["sdk/sdk.service",{"_index":468,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["sdkfield",{"_index":4358,"title":{"interfaces/SdkField.html":{}},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["sdkmodule",{"_index":1159,"title":{"modules/SdkModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules.html":{},"overview.html":{}}}],["sdkservice",{"_index":465,"title":{"injectables/SdkService.html":{}},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sdkservice#api",{"_index":3464,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["search",{"_index":1859,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["search'},{'name",{"_index":271,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["search.component",{"_index":3387,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["search.component.html",{"_index":3436,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts",{"_index":3435,"title":{},"body":{"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:12",{"_index":3440,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:14",{"_index":3439,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:16",{"_index":3446,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:18",{"_index":3438,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:22",{"_index":3442,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:28",{"_index":3443,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["searchbar",{"_index":1638,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/GeocodeService.html":{},"interfaces/ItemConfig.html":{},"components/LocationSearchComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["searchbar'},{'name",{"_index":303,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["searchbar/searchbar.component",{"_index":3264,"title":{},"body":{"modules/ListModule.html":{}}}],["searchbarcomponent",{"_index":302,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchinput",{"_index":3437,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["second",{"_index":3015,"title":{},"body":{"components/ListComponent.html":{}}}],["section",{"_index":4152,"title":{},"body":{"components/PopComponent.html":{}}}],["see",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"classes/Item.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["sein",{"_index":5488,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["seite",{"_index":609,"title":{},"body":{"guards/AuthGuard.html":{}}}],["select",{"_index":254,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["select#togglepop",{"_index":5817,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["select'},{'name",{"_index":212,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select(item",{"_index":1672,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["select(page",{"_index":4001,"title":{},"body":{"classes/Pagination.html":{}}}],["select(tab",{"_index":4685,"title":{},"body":{"components/TabsComponent.html":{}}}],["select.component",{"_index":1181,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{}}}],["select.component.html",{"_index":546,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts",{"_index":545,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:11",{"_index":559,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:12",{"_index":556,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:13",{"_index":557,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:14",{"_index":558,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:15",{"_index":560,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:16",{"_index":555,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:17",{"_index":4969,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:18",{"_index":562,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:19",{"_index":4970,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:20",{"_index":561,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:22",{"_index":4972,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:24",{"_index":4973,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:25",{"_index":4971,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:26",{"_index":4968,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:28",{"_index":4986,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:30",{"_index":4987,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:32",{"_index":4984,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:34",{"_index":4967,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:36",{"_index":4982,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:38",{"_index":4974,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:41",{"_index":4975,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:46",{"_index":4976,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:53",{"_index":4980,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:59",{"_index":4978,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.emit(item",{"_index":2982,"title":{},"body":{"components/ListComponent.html":{}}}],["select/asset",{"_index":2113,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/assetgroup",{"_index":544,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["select/entry",{"_index":1180,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["select/resource",{"_index":4307,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["select/select.component",{"_index":377,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.component.html",{"_index":379,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.module",{"_index":4883,"title":{},"body":{"modules/UiModule.html":{}}}],["select/tag",{"_index":2120,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/upload",{"_index":2118,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["selectable",{"_index":2975,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["selectbyurl",{"_index":4679,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectbyurl(url",{"_index":4688,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectcomponent",{"_index":304,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectday(_moment",{"_index":1399,"title":{},"body":{"interfaces/Day.html":{}}}],["selected",{"_index":976,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["selectentry",{"_index":974,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectentry(item",{"_index":1010,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectindex",{"_index":2957,"title":{},"body":{"components/ListComponent.html":{}}}],["selectindex(index",{"_index":2997,"title":{},"body":{"components/ListComponent.html":{}}}],["selecting",{"_index":3441,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["selection",{"_index":908,"title":{},"body":{"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["selection.config.solo",{"_index":2074,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["selection.select(upload.item",{"_index":2075,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["selection.toggle",{"_index":2984,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["selection.toggleall(upload.items",{"_index":2076,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["selectmode",{"_index":3066,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["selectmodule",{"_index":4463,"title":{"modules/SelectModule.html":{}},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["selectmoduleconfig",{"_index":4472,"title":{},"body":{"modules/SelectModule.html":{},"coverage.html":{}}}],["selector",{"_index":33,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["selects",{"_index":1108,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["selecttemplate",{"_index":378,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["selectupload",{"_index":2082,"title":{},"body":{"injectables/FileService.html":{}}}],["selectupload(upload",{"_index":2072,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["self",{"_index":4238,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["self.indexof(value",{"_index":4239,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["semicolon",{"_index":6185,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["send",{"_index":4097,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["sends",{"_index":4109,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["sensitivity",{"_index":4556,"title":{},"body":{"classes/Sorter.html":{}}}],["sent",{"_index":4115,"title":{},"body":{"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["seperate",{"_index":5918,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["seperated",{"_index":5498,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["seperately",{"_index":5849,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["seperation",{"_index":5500,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["seperator",{"_index":5900,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["serialization",{"_index":2748,"title":{},"body":{"classes/Item.html":{}}}],["serialize",{"_index":2701,"title":{},"body":{"classes/Item.html":{}}}],["serialize(value",{"_index":2746,"title":{},"body":{"classes/Item.html":{}}}],["serializers",{"_index":2745,"title":{},"body":{"classes/Item.html":{}}}],["serve",{"_index":5312,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["server",{"_index":5310,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["server:generic",{"_index":5398,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["serveral",{"_index":4672,"title":{},"body":{"components/TabsComponent.html":{}}}],["service",{"_index":1711,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["services",{"_index":629,"title":{},"body":{"modules/AuthModule.html":{},"components/DefaultInputComponent.html":{},"modules/LocationModule.html":{},"modules/SymbolModule.html":{}}}],["session",{"_index":4382,"title":{},"body":{"injectables/SdkService.html":{}}}],["session(environment.environment",{"_index":4440,"title":{},"body":{"injectables/SdkService.html":{}}}],["set",{"_index":534,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/publishing.html":{}}}],["set(key",{"_index":3096,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["set(property",{"_index":3728,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["set(symbols",{"_index":2435,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["set(type",{"_index":4835,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["setapi(api",{"_index":4423,"title":{},"body":{"injectables/SdkService.html":{}}}],["setclientid",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["setdate(date",{"_index":1392,"title":{},"body":{"interfaces/Day.html":{}}}],["setdisabledstate",{"_index":1198,"title":{},"body":{"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1212,"title":{},"body":{"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setemptystringstonull",{"_index":4313,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["setfilter",{"_index":3142,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["setfilter(field",{"_index":3163,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["setgroup",{"_index":4891,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setgroup(group",{"_index":4907,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setmode",{"_index":60,"title":{},"body":{"components/AceComponent.html":{}}}],["setmode(mode",{"_index":105,"title":{},"body":{"components/AceComponent.html":{}}}],["sets",{"_index":87,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setter",{"_index":940,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["settheme",{"_index":61,"title":{},"body":{"components/AceComponent.html":{}}}],["settheme(theme",{"_index":110,"title":{},"body":{"components/AceComponent.html":{}}}],["settimeout",{"_index":440,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/DefaultInputComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"components/UploadSelectComponent.html":{}}}],["settimeout(resolve",{"_index":3303,"title":{},"body":{"components/LoaderComponent.html":{}}}],["setting",{"_index":2723,"title":{},"body":{"classes/Item.html":{},"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["settings",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{},"components/TinymceComponent.html":{}}}],["settings.ts",{"_index":5177,"title":{},"body":{"coverage.html":{}}}],["settoday",{"_index":1421,"title":{},"body":{"interfaces/Day.html":{}}}],["settotal",{"_index":3973,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(itemcount",{"_index":4032,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(total",{"_index":4004,"title":{},"body":{"classes/Pagination.html":{}}}],["setup",{"_index":4592,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/publishing.html":{}}}],["seturl",{"_index":2462,"title":{},"body":{"directives/ImageDirective.html":{}}}],["seturl(url",{"_index":2477,"title":{},"body":{"directives/ImageDirective.html":{}}}],["setvalue",{"_index":3346,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setvalue(value",{"_index":3361,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["sh",{"_index":5292,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["shift",{"_index":2878,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["short",{"_index":3179,"title":{},"body":{"components/ListHeaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["shortcuts",{"_index":2889,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["shorthand",{"_index":5419,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["shortid",{"_index":3798,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["shouldbepartofform",{"_index":2186,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldbepartofform(field",{"_index":2204,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldn't",{"_index":5555,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["show",{"_index":1642,"title":{},"body":{"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/publishing.html":{}}}],["show(e",{"_index":1682,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["showerror",{"_index":3494,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showerror(err",{"_index":3533,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showheader",{"_index":2958,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["showing",{"_index":1287,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["showlabels",{"_index":3501,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["shown",{"_index":583,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["shownotification",{"_index":3850,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["showrawvalue",{"_index":3401,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["shows",{"_index":1684,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["showurlinput",{"_index":4959,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["sie",{"_index":614,"title":{},"body":{"guards/AuthGuard.html":{},"components/PasswordResetComponent.html":{}}}],["signup",{"_index":308,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{}}}],["signup'},{'name",{"_index":306,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["signup(email",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(undefined",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{}}}],["signup(value",{"_index":4514,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signup.component.html",{"_index":4476,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":643,"title":{},"body":{"modules/AuthModule.html":{}}}],["signupcomponent",{"_index":305,"title":{"components/SignupComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupformcomponent",{"_index":307,"title":{"components/SignupFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["silent",{"_index":4002,"title":{},"body":{"classes/Pagination.html":{},"interfaces/WithNotifications.html":{}}}],["simi",{"_index":950,"title":{},"body":{"classes/Config.html":{}}}],["simibug",{"_index":1588,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["similar",{"_index":1878,"title":{},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"classes/Item.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["simple",{"_index":3847,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["sind",{"_index":615,"title":{},"body":{"guards/AuthGuard.html":{}}}],["single",{"_index":513,"title":{},"body":{"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntryDirective.html":{}}}],["singleton",{"_index":4537,"title":{},"body":{"classes/Sorter.html":{}}}],["singularlabel",{"_index":1097,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["site",{"_index":3310,"title":{},"body":{"components/LoaderComponent.html":{}}}],["situations",{"_index":4819,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["size",{"_index":432,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["sizes",{"_index":3069,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["skiproute",{"_index":4686,"title":{},"body":{"components/TabsComponent.html":{}}}],["slice",{"_index":3974,"title":{},"body":{"classes/Pagination.html":{}}}],["slice(items",{"_index":4008,"title":{},"body":{"classes/Pagination.html":{}}}],["slices",{"_index":3569,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"classes/Pagination.html":{}}}],["slot",{"_index":1528,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{},"components/TabsComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["slot'},{'name",{"_index":236,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["slot.component",{"_index":2625,"title":{},"body":{"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{}}}],["slot.component.html",{"_index":1529,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["slot.component.ts",{"_index":1527,"title":{},"body":{"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["slot.component.ts:11",{"_index":1532,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:14",{"_index":1537,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:17",{"_index":1535,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot/dynamic",{"_index":1526,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["slothostdirective",{"_index":337,"title":{"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["smoother",{"_index":4092,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["snippet",{"_index":5493,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["soeben",{"_index":4119,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["solo",{"_index":2962,"title":{},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{}}}],["somebody",{"_index":2044,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["somemodule",{"_index":2396,"title":{},"body":{"components/IconComponent.html":{}}}],["sometimes",{"_index":6039,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["somewhere",{"_index":164,"title":{},"body":{"components/AceComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["soon",{"_index":474,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sophisticated",{"_index":830,"title":{},"body":{"classes/Collection.html":{}}}],["sort",{"_index":1923,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["sort((a",{"_index":4021,"title":{},"body":{"classes/Pagination.html":{}}}],["sort(items",{"_index":4548,"title":{},"body":{"classes/Sorter.html":{}}}],["sort(property",{"_index":2750,"title":{},"body":{"classes/Item.html":{}}}],["sortable",{"_index":1841,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["sortboolean",{"_index":4543,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortboolean(a",{"_index":4563,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortby",{"_index":3067,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["sorted",{"_index":3077,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sorter",{"_index":4535,"title":{"classes/Sorter.html":{}},"body":{"classes/Sorter.html":{},"coverage.html":{}}}],["sorting",{"_index":2752,"title":{},"body":{"classes/Item.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sortnumber",{"_index":4542,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortnumber(a",{"_index":4561,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorts",{"_index":4550,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["sortstring",{"_index":4541,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortstring(a",{"_index":4559,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorttype",{"_index":4539,"title":{},"body":{"classes/Sorter.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{}}}],["source.addeventlistener",{"_index":2366,"title":{},"body":{"injectables/HistoryService.html":{}}}],["spacer",{"_index":6042,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["span",{"_index":1286,"title":{},"body":{"interfaces/Day.html":{}}}],["spanchanged",{"_index":1298,"title":{},"body":{"interfaces/Day.html":{}}}],["spancolor",{"_index":1288,"title":{},"body":{"interfaces/Day.html":{}}}],["speakingurl",{"_index":5568,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["spec",{"_index":6107,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["specific",{"_index":1900,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["specified",{"_index":107,"title":{},"body":{"components/AceComponent.html":{},"injectables/IconService.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{}}}],["specify",{"_index":3463,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["splice(1",{"_index":3675,"title":{},"body":{"components/ModalComponent.html":{}}}],["split",{"_index":3674,"title":{},"body":{"components/ModalComponent.html":{}}}],["spreadsheet",{"_index":1992,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["square",{"_index":2470,"title":{},"body":{"directives/ImageDirective.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["src",{"_index":2460,"title":{},"body":{"directives/ImageDirective.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["src/app/app",{"_index":5459,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/app/app.component.html",{"_index":5447,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/app.module",{"_index":5437,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/muffins/muffins.component.html",{"_index":5458,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/environments",{"_index":5427,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.prod.ts",{"_index":5434,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.ts",{"_index":5432,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl",{"_index":5443,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["stack",{"_index":385,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["stackblitz",{"_index":6190,"title":{"additional-documentation/stackblitz.html":{}},"body":{"additional-documentation/stackblitz.html":{}}}],["stage",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["staging",{"_index":5429,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["standards",{"_index":6168,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["stands",{"_index":942,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["start",{"_index":1203,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"pipes/MaxItemsPipe.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["started",{"_index":5028,"title":{"changelog.html":{},"index.html":{}},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["startof('day",{"_index":1372,"title":{},"body":{"interfaces/Day.html":{}}}],["startof('month",{"_index":1363,"title":{},"body":{"interfaces/Day.html":{}}}],["startof('week",{"_index":1364,"title":{},"body":{"interfaces/Day.html":{}}}],["state",{"_index":1714,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["statement",{"_index":5844,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["statements",{"_index":5039,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3129,"title":{},"body":{"components/ListHeaderComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["static",{"_index":801,"title":{},"body":{"modules/CalendarModule.html":{},"modules/DataModule.html":{},"injectables/IconService.html":{},"modules/LocationModule.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{}}}],["status",{"_index":2301,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{}}}],["stay",{"_index":2440,"title":{},"body":{"injectables/IconService.html":{},"classes/Notification.html":{},"injectables/SymbolService.html":{}}}],["stays",{"_index":1695,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["step",{"_index":3793,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["steps",{"_index":6165,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["sticky",{"_index":1067,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["still",{"_index":4864,"title":{},"body":{"injectables/TypeConfigService.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["stop",{"_index":2045,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["storage",{"_index":3080,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{}}}],["storagekey",{"_index":3068,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["storagekeyresolver",{"_index":3085,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["store",{"_index":3078,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{}}}],["store(key",{"_index":3098,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig",{"_index":3089,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig(list",{"_index":3100,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["stored",{"_index":5318,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["stores",{"_index":2341,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["strategy=endless",{"_index":1593,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["stream",{"_index":2331,"title":{},"body":{"injectables/HistoryService.html":{}}}],["string",{"_index":69,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["string.replace",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["stringify",{"_index":5853,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["strings",{"_index":1796,"title":{},"body":{"injectables/EntryService.html":{},"injectables/IconService.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"miscellaneous/functions.html":{}}}],["strong",{"_index":5522,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strong.component.ts",{"_index":5519,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strongcomponent",{"_index":5518,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["structured",{"_index":1903,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{}}}],["stuff",{"_index":3271,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["style",{"_index":3624,"title":{"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/style-changelog.html":{}},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AceComponent.html":{},"components/DefaultInputComponent.html":{},"components/IconComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["styles.scss",{"_index":5421,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["styleurls",{"_index":35,"title":{},"body":{"components/AceComponent.html":{},"components/DefaultInputComponent.html":{},"components/IconComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sub",{"_index":943,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["subbranches",{"_index":2869,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["subclass",{"_index":3528,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["subject",{"_index":596,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"additional-documentation/adding-new-packages.html":{}}}],["submit",{"_index":2144,"title":{},"body":{"interfaces/FormConfig.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["submitbuttonlabel",{"_index":2142,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{}}}],["submitted",{"_index":3492,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["submitting",{"_index":5533,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["subscribe",{"_index":1036,"title":{},"body":{"components/CrudComponent.html":{}}}],["subscribe((day",{"_index":1308,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe((editor",{"_index":4774,"title":{},"body":{"components/TinymceComponent.html":{}}}],["subscribe((timespan",{"_index":1312,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribed",{"_index":1716,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["subscribers",{"_index":4334,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["subscribes",{"_index":3444,"title":{},"body":{"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["subtract(weeksbefore",{"_index":1365,"title":{},"body":{"interfaces/Day.html":{}}}],["succesful",{"_index":3524,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["success",{"_index":3455,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["success/error",{"_index":3864,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["successful",{"_index":3456,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["successfully",{"_index":1124,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{}}}],["such",{"_index":1907,"title":{},"body":{"classes/Field.html":{}}}],["suitable",{"_index":1914,"title":{},"body":{"classes/Field.html":{},"additional-documentation/readme/location-readme.html":{}}}],["summary.json",{"_index":6189,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["super",{"_index":3738,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["super(elementref",{"_index":394,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["super(formservice",{"_index":470,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["super(popservice",{"_index":1700,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["super(sdk",{"_index":2483,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.filterdropdownlist(listcomponent",{"_index":4241,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["super.load",{"_index":2472,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load(id).then(this.use.bind(this",{"_index":2487,"title":{},"body":{"directives/ImageDirective.html":{}}}],["support",{"_index":3670,"title":{},"body":{"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["supported",{"_index":1133,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ModalComponent.html":{}}}],["supports",{"_index":5489,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sure",{"_index":79,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["svg",{"_index":5332,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1117,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["switchmap",{"_index":2278,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["symbol",{"_index":981,"title":{"interfaces/Symbol.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol's",{"_index":4596,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.content",{"_index":4637,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.interface",{"_index":4614,"title":{},"body":{"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["symbol.language",{"_index":4601,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.pipe",{"_index":4607,"title":{},"body":{"modules/SymbolModule.html":{}}}],["symbol.service",{"_index":4606,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{}}}],["symbol/symbol.interface",{"_index":2403,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["symbol/symbol.module",{"_index":2171,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["symbol/symbol.service",{"_index":1244,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{}}}],["symbolmodule",{"_index":2160,"title":{"modules/SymbolModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["symbolpipe",{"_index":4589,"title":{"injectables/SymbolPipe.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"coverage.html":{},"overview.html":{}}}],["symbols",{"_index":2434,"title":{},"body":{"injectables/IconService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbols.map((symbol",{"_index":4638,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice",{"_index":982,"title":{"injectables/SymbolService.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice#set",{"_index":4597,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice.get(name",{"_index":4636,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.registry",{"_index":2429,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["symbolservice.resolve",{"_index":4613,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["symbolservice.resolve('moment.format.date",{"_index":2174,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve('moment.format.month",{"_index":2176,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve('moment.format.time",{"_index":2175,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve(name",{"_index":4649,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.set(symbols",{"_index":4650,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.sets[object.keys(symbolservice.sets)[0",{"_index":2450,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["symbolservice:12",{"_index":2455,"title":{},"body":{"injectables/IconService.html":{}}}],["symbolservice:16",{"_index":2451,"title":{},"body":{"injectables/IconService.html":{}}}],["symbolservice:20",{"_index":2452,"title":{},"body":{"injectables/IconService.html":{}}}],["symbolservice:21",{"_index":2456,"title":{},"body":{"injectables/IconService.html":{}}}],["symbolservice:27",{"_index":2427,"title":{},"body":{"injectables/IconService.html":{}}}],["symbolservice:32",{"_index":2432,"title":{},"body":{"injectables/IconService.html":{}}}],["symbolservice:41",{"_index":2436,"title":{},"body":{"injectables/IconService.html":{}}}],["symbolservice:57",{"_index":2443,"title":{},"body":{"injectables/IconService.html":{}}}],["symbolservice:62",{"_index":2445,"title":{},"body":{"injectables/IconService.html":{}}}],["symbolservice:70",{"_index":2430,"title":{},"body":{"injectables/IconService.html":{}}}],["symbolservice:75",{"_index":2433,"title":{},"body":{"injectables/IconService.html":{}}}],["symbolservice:81",{"_index":2441,"title":{},"body":{"injectables/IconService.html":{}}}],["symlinks",{"_index":5285,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["syntax",{"_index":5506,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["system",{"_index":1741,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["t",{"_index":854,"title":{},"body":{"classes/Collection.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{}}}],["tab",{"_index":4652,"title":{},"body":{"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["tab's",{"_index":4659,"title":{},"body":{"components/TabComponent.html":{}}}],["tab'},{'name",{"_index":310,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tab.activate",{"_index":4711,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.component.html",{"_index":4654,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.el.nativeelement.getattribute('selected",{"_index":4706,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.label",{"_index":4716,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.parent",{"_index":4705,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.route",{"_index":4712,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab/tab.component",{"_index":4694,"title":{},"body":{"components/TabsComponent.html":{},"modules/UtilityModule.html":{}}}],["tabcomponent",{"_index":309,"title":{"components/TabComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["table",{"_index":1273,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5234,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":4675,"title":{},"body":{"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["tabs'},{'name",{"_index":312,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tabs.component.html",{"_index":4676,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.component",{"_index":4668,"title":{},"body":{"components/TabComponent.html":{},"modules/UtilityModule.html":{}}}],["tabscomponent",{"_index":311,"title":{"components/TabsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":314,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["tags",{"_index":517,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Field.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["tagselectcomponent",{"_index":313,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["takes",{"_index":957,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["taking",{"_index":1127,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["target",{"_index":3314,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"components/TinymceComponent.html":{}}}],["targeted",{"_index":150,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["task",{"_index":5298,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tell",{"_index":5554,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["tells",{"_index":1884,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Pagination.html":{},"interfaces/SdkField.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/publishing.html":{}}}],["templated",{"_index":4692,"title":{},"body":{"components/TabsComponent.html":{}}}],["templateref",{"_index":3638,"title":{},"body":{"components/ModalComponent.html":{}}}],["templates",{"_index":449,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/ModalComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["templateurl",{"_index":37,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["test",{"_index":5323,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tests",{"_index":4551,"title":{},"body":{"classes/Sorter.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["text",{"_index":1468,"title":{},"body":{"components/DefaultOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["textarea",{"_index":4839,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["thats",{"_index":5450,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["theme",{"_index":67,"title":{},"body":{"components/AceComponent.html":{}}}],["themelist.js",{"_index":172,"title":{},"body":{"components/AceComponent.html":{}}}],["then((_entry",{"_index":1773,"title":{},"body":{"injectables/EntryService.html":{}}}],["then((_methods",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((_resource",{"_index":4352,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((_upload",{"_index":4943,"title":{},"body":{"components/UploadComponent.html":{}}}],["then((account",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["then((actions",{"_index":4226,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["then((asset",{"_index":2527,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["then((assetlist",{"_index":2022,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((assets",{"_index":2037,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((available",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((dmassetlist",{"_index":2057,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((entry",{"_index":1630,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/EntryService.html":{}}}],["then((list",{"_index":1596,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/ResourceActionbarState.html":{}}}],["then((loadedentry",{"_index":1058,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((minlevel",{"_index":1050,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((res",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((resolvedapi",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((resource",{"_index":4356,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((response",{"_index":2034,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((source",{"_index":2358,"title":{},"body":{"injectables/HistoryService.html":{}}}],["then((upload",{"_index":2028,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((url",{"_index":2529,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["then((user",{"_index":3478,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["then(this.seturl.bind(this",{"_index":2496,"title":{},"body":{"directives/ImageDirective.html":{}}}],["therefor",{"_index":5603,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["therefore",{"_index":2868,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["third",{"_index":2759,"title":{},"body":{"classes/Item.html":{}}}],["this._api",{"_index":4395,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.gettoken",{"_index":4462,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.me",{"_index":4461,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then",{"_index":4434,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then((api",{"_index":4453,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.setclientid(environment.clientid",{"_index":4452,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._toggle.emit(this.active",{"_index":4170,"title":{},"body":{"components/PopComponent.html":{}}}],["this.accounts",{"_index":4391,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.actionstack[this.currentid",{"_index":409,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.activate(this.keys[e.key",{"_index":2884,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.activated",{"_index":4166,"title":{},"body":{"components/PopComponent.html":{}}}],["this.activated.next",{"_index":4669,"title":{},"body":{"components/TabComponent.html":{}}}],["this.active",{"_index":1502,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["this.add(item",{"_index":922,"title":{},"body":{"classes/Collection.html":{}}}],["this.add.subscribe((item",{"_index":395,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.addall(items",{"_index":927,"title":{},"body":{"classes/Collection.html":{}}}],["this.additem(item",{"_index":4249,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.api",{"_index":535,"title":{},"body":{"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["this.apiresolved",{"_index":4435,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.app.tick",{"_index":4777,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.asset",{"_index":541,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.assetgroupid",{"_index":2537,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.assetgrouplistpromise",{"_index":2066,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.assetgroups",{"_index":569,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.assetid",{"_index":530,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["this.auth",{"_index":3477,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["this.auth.getallowedmodelmethods(this.model",{"_index":1038,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.auth.getallowedresourcemethods(this.relation",{"_index":4284,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.autofocus",{"_index":2132,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.autofocusfirst",{"_index":3036,"title":{},"body":{"components/ListComponent.html":{}}}],["this.autoload",{"_index":531,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["this.backdrop",{"_index":3679,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.bakery.bake().then",{"_index":3871,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.body",{"_index":2717,"title":{},"body":{"classes/Item.html":{}}}],["this.body[property",{"_index":2799,"title":{},"body":{"classes/Item.html":{}}}],["this.calendar.writevalue(value",{"_index":1228,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["this.canalter(value",{"_index":1418,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cdr.markforcheck",{"_index":1041,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/PopComponent.html":{}}}],["this.cells",{"_index":1358,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[0",{"_index":1328,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[this.cells.length",{"_index":1329,"title":{},"body":{"interfaces/Day.html":{}}}],["this.center",{"_index":3364,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.asobservable",{"_index":3981,"title":{},"body":{"classes/Pagination.html":{}}}],["this.change.next(this.config",{"_index":4029,"title":{},"body":{"classes/Pagination.html":{}}}],["this.changed.emit",{"_index":2531,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.changed.emit(change",{"_index":2648,"title":{},"body":{"components/InputComponent.html":{}}}],["this.changed.emit(coords",{"_index":3451,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.changed.emit(position",{"_index":3369,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.changed.emit(this.list",{"_index":3040,"title":{},"body":{"components/ListComponent.html":{}}}],["this.changed.emit(this.value",{"_index":4776,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.changes.asobservable",{"_index":4343,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.asobservable().pipe(rxfilter((change",{"_index":4344,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.next",{"_index":4338,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changesenvironment.next(environment",{"_index":4438,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.changespan",{"_index":1310,"title":{},"body":{"interfaces/Day.html":{}}}],["this.changespan.next(this.timespan",{"_index":1327,"title":{},"body":{"interfaces/Day.html":{}}}],["this.checkpermission(`${model}:${method",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkpermission(`${this.resolvevariables(permissions[method",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.classes",{"_index":3673,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.clean(oldvalues",{"_index":1789,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clean(value",{"_index":1783,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clear",{"_index":4925,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.clearfilter",{"_index":3203,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.clickevent",{"_index":4160,"title":{},"body":{"components/PopComponent.html":{}}}],["this.collection",{"_index":3031,"title":{},"body":{"components/ListComponent.html":{}}}],["this.colors",{"_index":1342,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors[_moment.toisostring",{"_index":1343,"title":{},"body":{"interfaces/Day.html":{}}}],["this.columnclicked.emit(item",{"_index":1070,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.columnclicked.observers.length",{"_index":1069,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.component",{"_index":3964,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(component",{"_index":1543,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.componentinstance",{"_index":2627,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.control",{"_index":2646,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.control.valuechanges.pipe(debouncetime(this.debounce)).subscribe((change",{"_index":2647,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.disabled",{"_index":2653,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.focusevent",{"_index":2629,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.focusevent.emit(focus",{"_index":2630,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchange",{"_index":2654,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchange(this.propagatechange",{"_index":2655,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.setdisabledstate",{"_index":2659,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.setdisabledstate(isdisabled",{"_index":2660,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalue",{"_index":2657,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalue(value",{"_index":2658,"title":{},"body":{"components/InputComponent.html":{}}}],["this.config",{"_index":434,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/EntryListPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["this.config.alwaysloadentry",{"_index":1053,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.availablesizes",{"_index":4037,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.classes",{"_index":2821,"title":{},"body":{"classes/Item.html":{}}}],["this.config.classes(this",{"_index":2822,"title":{},"body":{"classes/Item.html":{}}}],["this.config.fields",{"_index":1049,"title":{},"body":{"components/CrudComponent.html":{},"classes/Item.html":{}}}],["this.config.fields[property",{"_index":2812,"title":{},"body":{"classes/Item.html":{}}}],["this.config.fields[property].action",{"_index":2854,"title":{},"body":{"classes/Item.html":{}}}],["this.config.fields[property].action(this",{"_index":2855,"title":{},"body":{"classes/Item.html":{}}}],["this.config.fields[property].immutable",{"_index":2834,"title":{},"body":{"classes/Item.html":{}}}],["this.config.fields[property].immutable(this",{"_index":2835,"title":{},"body":{"classes/Item.html":{}}}],["this.config.fields[property].readonly",{"_index":2831,"title":{},"body":{"classes/Item.html":{}}}],["this.config.fields[property].resolve",{"_index":2813,"title":{},"body":{"classes/Item.html":{}}}],["this.config.fields[property].resolve(this.body",{"_index":2814,"title":{},"body":{"classes/Item.html":{}}}],["this.config.fields[property][action",{"_index":2817,"title":{},"body":{"classes/Item.html":{}}}],["this.config.fields[property][action](value",{"_index":2818,"title":{},"body":{"classes/Item.html":{}}}],["this.config.identifier",{"_index":2807,"title":{},"body":{"classes/Item.html":{}}}],["this.config.label",{"_index":2824,"title":{},"body":{"classes/Item.html":{}}}],["this.config.levels",{"_index":1052,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.methods",{"_index":1040,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods).then((methods",{"_index":1039,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods.indexof(method",{"_index":1042,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.onsave",{"_index":2847,"title":{},"body":{"classes/Item.html":{}}}],["this.config.page",{"_index":4023,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.resolve",{"_index":2810,"title":{},"body":{"classes/Item.html":{}}}],["this.config.resolve(this.body",{"_index":2811,"title":{},"body":{"classes/Item.html":{}}}],["this.config.singularlabel",{"_index":1707,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.config.size",{"_index":4019,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.title",{"_index":2805,"title":{},"body":{"classes/Item.html":{}}}],["this.config[key",{"_index":953,"title":{},"body":{"classes/Config.html":{}}}],["this.config[key][property",{"_index":954,"title":{},"body":{"classes/Config.html":{}}}],["this.configinput",{"_index":3027,"title":{},"body":{"components/ListComponent.html":{}}}],["this.configure('model",{"_index":3740,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.connectcontrol",{"_index":2644,"title":{},"body":{"components/InputComponent.html":{}}}],["this.container.nativeelement",{"_index":4781,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.container.nativeelement.innerhtml",{"_index":3604,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.control",{"_index":2635,"title":{},"body":{"components/InputComponent.html":{}}}],["this.control.errors[key",{"_index":2678,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.copytoclipboard(json.stringify(item.resolve(property",{"_index":2916,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.create(model",{"_index":1772,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.create(relation",{"_index":4351,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.create.emit(query",{"_index":4248,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.create.observers.length",{"_index":4247,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.createclicked.next",{"_index":4289,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.createclicked.observers.length",{"_index":4288,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.currentactions",{"_index":4234,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.custom",{"_index":4935,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.datamanager",{"_index":4448,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.datamanager.datamanager(this._api.datamanagerid",{"_index":4430,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.date",{"_index":1394,"title":{},"body":{"interfaces/Day.html":{}}}],["this.date.clone().add(value",{"_index":1411,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dateformat",{"_index":1241,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["this.dayclicked.emit(_moment",{"_index":1403,"title":{},"body":{"interfaces/Day.html":{}}}],["this.deactivated.next",{"_index":4670,"title":{},"body":{"components/TabComponent.html":{}}}],["this.defaultmonthformat",{"_index":1304,"title":{},"body":{"interfaces/Day.html":{}}}],["this.defaulttime",{"_index":3954,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.deleteimmutableproperties(value",{"_index":2840,"title":{},"body":{"classes/Item.html":{}}}],["this.desktopnotification(instance",{"_index":3941,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.destroy",{"_index":4779,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.disabled",{"_index":1229,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["this.disabledragend",{"_index":1336,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disabledragstart",{"_index":1335,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disableupdates(key",{"_index":2356,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.displaydate(true",{"_index":4849,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.dmassetconfig",{"_index":2000,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.drag",{"_index":1305,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.next(day",{"_index":1340,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged",{"_index":1315,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.first",{"_index":1317,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.last",{"_index":1319,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropday(day",{"_index":1309,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropdownlist",{"_index":441,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.dropdownlist.focusfirst",{"_index":442,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.ecasset",{"_index":529,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.ecdropzone.emit(e",{"_index":1507,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.ecfocus.emit(true",{"_index":2133,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecfocus.subscribe((event",{"_index":2134,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecimage",{"_index":2484,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.ecimage.assetid",{"_index":2485,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.editor",{"_index":173,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.editor.buttons.image.onclick(true",{"_index":4791,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.destroy",{"_index":3610,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.execcommand('mceinsertcontent",{"_index":4796,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.getcontent",{"_index":3608,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.on('change",{"_index":4793,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.on('dblclick",{"_index":4789,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.remove",{"_index":4778,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.session.setmode('ace/mode",{"_index":189,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setcontent(this.value",{"_index":4788,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.settheme('ace/theme",{"_index":190,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setvalue(this.value",{"_index":182,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.subscribe('editableinput",{"_index":3607,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.element.nativeelement.blur",{"_index":2136,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.element.nativeelement.focus",{"_index":2135,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.elementref",{"_index":4161,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement",{"_index":4164,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.classlist.add('modal",{"_index":3664,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.classlist.add(`modal",{"_index":3680,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.classlist.remove(`${type",{"_index":3678,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.contains(element",{"_index":4163,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.src",{"_index":2498,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.emitter.asobservable",{"_index":3934,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.emitter.next(instance",{"_index":3942,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.enableupdates(resource",{"_index":2357,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.endless",{"_index":1589,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entry",{"_index":1631,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entryid",{"_index":1627,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entrylist",{"_index":1601,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.follownextlink().then((list",{"_index":1607,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.followprevlink().then((list",{"_index":1608,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.getallitems",{"_index":1602,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasfirstlink",{"_index":1610,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasnextlink",{"_index":1609,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrypop.edit(loadedentry",{"_index":1059,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.entryservice.change({model:'muffin",{"_index":1762,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.entryservice.save(model",{"_index":3801,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.environment",{"_index":4398,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.error",{"_index":1818,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.code",{"_index":1820,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.emit(err",{"_index":3557,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.error.message",{"_index":1821,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.next(error",{"_index":3482,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.errormessage",{"_index":3554,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.event",{"_index":4936,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.eventsources[key",{"_index":2359,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[key].close",{"_index":2361,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[relation",{"_index":2355,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.fb.group",{"_index":3550,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.field",{"_index":1451,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.field.autofocus",{"_index":1452,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.field.config",{"_index":2639,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init",{"_index":2650,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init(this.componentinstance",{"_index":2651,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.input",{"_index":2642,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.output",{"_index":3965,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.field.property",{"_index":2638,"title":{},"body":{"components/InputComponent.html":{}}}],["this.fieldhost.viewcontainerref",{"_index":1544,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.fileinput",{"_index":4924,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.click",{"_index":4926,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.value",{"_index":4931,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.assetgrouplist().then((assetgroups",{"_index":568,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.fileservice.defaultoptions",{"_index":4898,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.fileservice.isnewassetgroupid(this.assetgroupid",{"_index":4940,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.isoldassetgroupid(this.assetgroupid",{"_index":2518,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{}}}],["this.fileservice.uploadassets(files",{"_index":4941,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadfiles(files",{"_index":4942,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filestoupload",{"_index":4934,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filteredfield",{"_index":3200,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filteredfield.property",{"_index":3201,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterfield(this.list.config.defaultfilter",{"_index":3190,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform",{"_index":3188,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.form.getfield(property",{"_index":3208,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group",{"_index":3206,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(property",{"_index":3205,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(property).patchvalue(this.list.getfiltervalue(property",{"_index":3207,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(this.filteredfield.property).reset",{"_index":3211,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterformconfig",{"_index":3194,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterinput",{"_index":3186,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterinput.focus(true",{"_index":3193,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterpop.hide",{"_index":3202,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterpop.show",{"_index":3209,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.focus",{"_index":1453,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.focusevent",{"_index":2640,"title":{},"body":{"components/InputComponent.html":{}}}],["this.focusevent.emit(focus",{"_index":1454,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.focusevent.emit(true",{"_index":4989,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.focusfirst",{"_index":3038,"title":{},"body":{"components/ListComponent.html":{}}}],["this.focusitem",{"_index":3039,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.focusnext",{"_index":3052,"title":{},"body":{"components/ListComponent.html":{}}}],["this.form",{"_index":3549,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.get('password').setvalue",{"_index":3556,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.reset",{"_index":3564,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.valid",{"_index":3562,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.formatted",{"_index":1396,"title":{},"body":{"interfaces/Day.html":{}}}],["this.formservice.shouldbepartofform(field",{"_index":5019,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["this.generateconfig",{"_index":2796,"title":{},"body":{"classes/Item.html":{}}}],["this.generateconfig(model",{"_index":3759,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.geocodelatlng(new",{"_index":2306,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocodeservice.autocompleteaddress(this.searchinput.nativeelement).subscribe((coords",{"_index":3450,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.geocodeservice.getnearestaddress(value).then((results",{"_index":3431,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.getaccount().then((user",{"_index":4446,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.getalgorithm(items",{"_index":4574,"title":{},"body":{"classes/Sorter.html":{}}}],["this.getapi(email",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getapi(email)).then((resolvedapi",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getdaycolor(date",{"_index":1380,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getdayheat(date",{"_index":1381,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getfieldconfig(model).then((fieldconfig",{"_index":3802,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getformdata(files",{"_index":2020,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.getlightmodel(model",{"_index":3792,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getmonth(date.clone",{"_index":1398,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getmonth(this.date.clone",{"_index":1359,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getpage",{"_index":4034,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpages",{"_index":4035,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpermission().then",{"_index":3951,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.getproperties().foreach((property",{"_index":2797,"title":{},"body":{"classes/Item.html":{}}}],["this.getproperties()[0",{"_index":2825,"title":{},"body":{"classes/Item.html":{}}}],["this.getresourcelistactions(list",{"_index":4225,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.getstoragekey(list",{"_index":3116,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.getsystemfields",{"_index":3775,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getvalidators(field",{"_index":2225,"title":{},"body":{"injectables/FormService.html":{}}}],["this.group",{"_index":2636,"title":{},"body":{"components/InputComponent.html":{}}}],["this.group.get(this.field.property",{"_index":2637,"title":{},"body":{"components/InputComponent.html":{}}}],["this.groupchanged.emit(group",{"_index":4927,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.has(item",{"_index":918,"title":{},"body":{"classes/Collection.html":{}}}],["this.hasbody",{"_index":2809,"title":{},"body":{"classes/Item.html":{}}}],["this.heatmap",{"_index":1345,"title":{},"body":{"interfaces/Day.html":{}}}],["this.heatmap[_moment.toisostring",{"_index":1346,"title":{},"body":{"interfaces/Day.html":{}}}],["this.hide",{"_index":2530,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.hideonclickoutside",{"_index":4159,"title":{},"body":{"components/PopComponent.html":{}}}],["this.hideonescape",{"_index":4167,"title":{},"body":{"components/PopComponent.html":{}}}],["this.host.nativeelement.classlist.add('is",{"_index":3320,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.host.nativeelement.classlist.remove('is",{"_index":3321,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.icon",{"_index":2404,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.get(this.name",{"_index":2405,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.registry",{"_index":2409,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.set(emojiicons",{"_index":2400,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.use(emojiicons",{"_index":2397,"title":{},"body":{"components/IconComponent.html":{}}}],["this.id",{"_index":1940,"title":{},"body":{"classes/Field.html":{}}}],["this.imageform",{"_index":2519,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimage",{"_index":2536,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimg",{"_index":2554,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.index(item",{"_index":913,"title":{},"body":{"classes/Collection.html":{}}}],["this.init",{"_index":191,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.init(new",{"_index":3028,"title":{},"body":{"components/ListComponent.html":{}}}],["this.initmethods",{"_index":4282,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.initmode",{"_index":3681,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.initselection",{"_index":439,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.inittabs",{"_index":4709,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.input",{"_index":2896,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.invite",{"_index":4525,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.isfirst",{"_index":4027,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isimmutableproperty(key",{"_index":1797,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.isimmutableproperty(property",{"_index":2838,"title":{},"body":{"classes/Item.html":{}}}],["this.islast",{"_index":4026,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isnewasset(a",{"_index":2004,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.isnewasset(unresolved",{"_index":2053,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.isoldassetgroupid(assetgroupid",{"_index":1996,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.isoutside($event.target",{"_index":4162,"title":{},"body":{"components/PopComponent.html":{}}}],["this.isreadonly(field",{"_index":2228,"title":{},"body":{"injectables/FormService.html":{}}}],["this.item",{"_index":2632,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.item.getfield(this.property",{"_index":2633,"title":{},"body":{"components/InputComponent.html":{}}}],["this.items",{"_index":909,"title":{},"body":{"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.items.concat(items",{"_index":1603,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.filter((item",{"_index":1604,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.find((_item",{"_index":1605,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.indexof(item",{"_index":912,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.length",{"_index":921,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.push(item",{"_index":911,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(index",{"_index":928,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.index(item",{"_index":923,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.items.indexof(item",{"_index":929,"title":{},"body":{"classes/Collection.html":{}}}],["this.keys[e.key",{"_index":2881,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.keys[keyconfig.key",{"_index":2900,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.label",{"_index":1943,"title":{},"body":{"classes/Field.html":{}}}],["this.lazy",{"_index":2626,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["this.legacyassetconfig",{"_index":1997,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.levels",{"_index":1629,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.lightmodel",{"_index":1702,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.list",{"_index":430,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.change$.subscribe",{"_index":3035,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["this.list.change$.subscribe((newlist",{"_index":3250,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.clearfilter",{"_index":3212,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config",{"_index":436,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["this.list.config.alwaysshowheader",{"_index":3048,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.defaultfilter",{"_index":3189,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.disableheader",{"_index":3045,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.fields",{"_index":3192,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.fields[field.property",{"_index":3196,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.selectmode",{"_index":3043,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.config.title",{"_index":3047,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.fields",{"_index":3216,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.fields.filter((f",{"_index":3218,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.fields.length",{"_index":3046,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filter(property",{"_index":3056,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filterablefields().reduce((fields",{"_index":3195,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.isempty",{"_index":3049,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.isfiltered",{"_index":3037,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.isfiltered(this.filteredfield.property",{"_index":3210,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.items",{"_index":4214,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.list.items[index",{"_index":3050,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page",{"_index":3249,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.page.indexof(this.focusitem",{"_index":3053,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page.length",{"_index":3055,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page[index",{"_index":3054,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.setfilter",{"_index":3184,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.togglevisibility(field",{"_index":3214,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.listconfig.applyconfig(this.list",{"_index":3034,"title":{},"body":{"components/ListComponent.html":{}}}],["this.listconfig.storeconfig(this.list",{"_index":3215,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.load",{"_index":532,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"classes/Pagination.html":{}}}],["this.loadactions",{"_index":4244,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.loadactions(actionsbefore",{"_index":410,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(concatted",{"_index":4220,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.loadactions(item.getbody().children",{"_index":402,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.actions",{"_index":411,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.actionstack[this.currentid",{"_index":419,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactionsbefore",{"_index":406,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadcomponent",{"_index":3963,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.loadcomponent(this.component",{"_index":2641,"title":{},"body":{"components/InputComponent.html":{}}}],["this.loaded.emit(asset",{"_index":542,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.loaded.emit(entry",{"_index":1632,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.loader",{"_index":1072,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["this.loader.wait(login",{"_index":3484,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.loader.wait(registration",{"_index":4496,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.loader.wait(reset",{"_index":4129,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.loader.wait(this.promise",{"_index":1600,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.loaderservice.use(this.globalloader",{"_index":3300,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.wait(loading",{"_index":2371,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(new",{"_index":3302,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.wait(this.loadentry(item",{"_index":1071,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.loaderservice.wait(this.promises[key",{"_index":2360,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(this.uploadpromise",{"_index":4950,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.loadresourcelistactions",{"_index":4202,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.localloader",{"_index":3305,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.localloader.wait(new",{"_index":3306,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.lockform",{"_index":4125,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.login(this.form.value).then((res",{"_index":3563,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.map.setvalue(value",{"_index":3426,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.map.value",{"_index":3429,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.maploader.load().then",{"_index":2305,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.matches(change",{"_index":4345,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.meta",{"_index":2886,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.mode",{"_index":177,"title":{},"body":{"components/AceComponent.html":{},"components/ModalComponent.html":{}}}],["this.mode.replace(this.type",{"_index":3668,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.mode.split",{"_index":3666,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.model",{"_index":1037,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.modelconfig",{"_index":1047,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.modelconfig.getlightmodel(this.model).then((model",{"_index":1701,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.modelconfig.set('muffin",{"_index":5473,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.monthformat",{"_index":1302,"title":{},"body":{"interfaces/Day.html":{}}}],["this.mustreload(item",{"_index":1054,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.mute(e",{"_index":2893,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.muted",{"_index":2883,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.name",{"_index":2407,"title":{},"body":{"components/IconComponent.html":{}}}],["this.nestedcrudconfig",{"_index":4858,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.ngzone.run",{"_index":2284,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.noapi",{"_index":4431,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noapi(api",{"_index":4454,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noclientid",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notifications",{"_index":1062,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["this.notifications.add(notification",{"_index":3896,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.emit",{"_index":607,"title":{},"body":{"guards/AuthGuard.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{}}}],["this.notifications.remove(notification",{"_index":3900,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.removeall(notification.hide",{"_index":3887,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.defaulttime",{"_index":3884,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.emit",{"_index":1060,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["this.notificationservice.emitter$.subscribe((notification",{"_index":3885,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.emit",{"_index":2912,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.observeelement(el",{"_index":2297,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.oldassetgroupids.includes(assetgroupid",{"_index":1998,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.openurl(this.router.serializeurl(this.router.createurltree(path",{"_index":2921,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.options",{"_index":1595,"title":{},"body":{"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"components/UploadComponent.html":{}}}],["this.options.page",{"_index":1590,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.options.placeholder",{"_index":3605,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.pages",{"_index":4024,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pages.length",{"_index":4025,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pagination",{"_index":3030,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["this.pagination.getpage",{"_index":4066,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pickwriteonly(value",{"_index":2839,"title":{},"body":{"classes/Item.html":{}}}],["this.placeholder",{"_index":1942,"title":{},"body":{"classes/Field.html":{},"components/MediumEditorComponent.html":{}}}],["this.pop",{"_index":4290,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.create",{"_index":4291,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.edit(item.getbody",{"_index":4285,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.hide",{"_index":4946,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.pop.show",{"_index":4937,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.popservice.stack.add(this",{"_index":4168,"title":{},"body":{"components/PopComponent.html":{}}}],["this.popservice.stack.remove(this",{"_index":4171,"title":{},"body":{"components/PopComponent.html":{}}}],["this.promise",{"_index":539,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.promises[key",{"_index":2354,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.propagatechange",{"_index":194,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(++this.value",{"_index":5590,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(change",{"_index":2649,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this.editor.getvalue",{"_index":187,"title":{},"body":{"components/AceComponent.html":{}}}],["this.propagatechange(this.value",{"_index":3609,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["this.propagatechange(value",{"_index":3428,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.property",{"_index":1944,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{}}}],["this.property}_${date.now",{"_index":1941,"title":{},"body":{"classes/Field.html":{}}}],["this.ready",{"_index":175,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.ready.emit(this",{"_index":2645,"title":{},"body":{"components/InputComponent.html":{}}}],["this.ready.then",{"_index":4429,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.ready.then((editor",{"_index":184,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.redirect.next",{"_index":617,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.registry",{"_index":4642,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.relation",{"_index":4283,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.reload",{"_index":4250,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.remove(item",{"_index":924,"title":{},"body":{"classes/Collection.html":{}}}],["this.remove.subscribe((item",{"_index":404,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.removeall(undefined",{"_index":925,"title":{},"body":{"classes/Collection.html":{}}}],["this.resetfilter",{"_index":3213,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.resolve",{"_index":2410,"title":{},"body":{"components/IconComponent.html":{}}}],["this.resolve(property",{"_index":2762,"title":{},"body":{"classes/Item.html":{}}}],["this.resolve(this.config.identifier",{"_index":2808,"title":{},"body":{"classes/Item.html":{}}}],["this.resourceconfig.get('dmasset",{"_index":1980,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get('legacyasset",{"_index":1982,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get(relation",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.resourceconfig.get(relation).permissions",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceconfig.get(this.relation",{"_index":4298,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["this.resourceconfig.get(this.state.relation",{"_index":4242,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.resourceservice.change(filter",{"_index":1768,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.resourceservice.change({relation:'model.muffin",{"_index":1764,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.resourceservice.changes.next",{"_index":1787,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"interfaces/Upload.html":{}}}],["this.retrieve(key",{"_index":3107,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.root",{"_index":415,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.roots[this._api.datamanagerid",{"_index":4428,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.route",{"_index":4715,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":4695,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate",{"_index":4713,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate(['profile",{"_index":5469,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["this.router.navigate(path",{"_index":2922,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.router.url.split('?')[0",{"_index":2332,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.schemarequests[model",{"_index":4456,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].api",{"_index":4457,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].request",{"_index":4459,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.accounts",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.me",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.signup(email",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api",{"_index":536,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["this.sdk.api).then((res",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.asset(unresolved[0]).then((asset",{"_index":2060,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.asset(value).then((asset",{"_index":2539,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.assetgrouplist",{"_index":2067,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.assetlist",{"_index":2061,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createasset(data",{"_index":2032,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createassets(data",{"_index":2033,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.dmasset(this.assetgroupid",{"_index":2545,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.entry(this.model",{"_index":1056,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.sdk.api.getfieldconfig(model).then((fieldconfig",{"_index":3773,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.api.logout",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.me",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.modellist()).then((models",{"_index":3813,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.changesenvironment.subscribe(env",{"_index":4337,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.sdk.environment",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.environment.clientid",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.init",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then",{"_index":3812,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.sdk.ready.then((user",{"_index":606,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.sdk.ready.then(account",{"_index":4412,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.session",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.search.clear",{"_index":3425,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.search.searchinput.nativeelement.value",{"_index":3430,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.searchbar.clear",{"_index":403,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.searchbar.focusevent.emit(true",{"_index":1706,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.searchinput",{"_index":3448,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.searchinput.nativeelement.value",{"_index":3449,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.select(match",{"_index":4703,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.select(tab",{"_index":4707,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(event.url",{"_index":4696,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(this.router.url",{"_index":4708,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectday(moment",{"_index":1422,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selected",{"_index":1393,"title":{},"body":{"interfaces/Day.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["this.selected.deactivate",{"_index":4710,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.emit(selection",{"_index":3042,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selected.startof('day').diff(_moment",{"_index":1408,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selection",{"_index":413,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.selection.add(item",{"_index":398,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.getvalue",{"_index":444,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.isempty",{"_index":414,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/EntryListPopComponent.html":{}}}],["this.selection.items.length",{"_index":1709,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.selection.items[this.selection.items.length",{"_index":416,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.remove(item",{"_index":405,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.removeall",{"_index":418,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.select(this.list.items[index",{"_index":3051,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.toggle(item",{"_index":1705,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.selection.update$.subscribe((newlist",{"_index":3251,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.selection.update$.subscribe((selection",{"_index":3041,"title":{},"body":{"components/ListComponent.html":{}}}],["this.session",{"_index":4439,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.session.setclientid(environment.clientid",{"_index":4442,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.setdate",{"_index":1333,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(_moment",{"_index":1401,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(day.date.clone().subtract(1",{"_index":1332,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(moment",{"_index":1420,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date",{"_index":1354,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date.clone().add(value",{"_index":1419,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.selected",{"_index":1352,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setmode(this.mode",{"_index":178,"title":{},"body":{"components/AceComponent.html":{}}}],["this.sets[key",{"_index":4645,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.sets[object.keys(this.sets)[0",{"_index":4644,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.settheme(this.theme",{"_index":180,"title":{},"body":{"components/AceComponent.html":{}}}],["this.settings",{"_index":4780,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settings.setup",{"_index":4783,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settings.setup(editor",{"_index":4784,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settotal(total",{"_index":4022,"title":{},"body":{"classes/Pagination.html":{}}}],["this.setup.emit(editor",{"_index":4785,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setvalue(position",{"_index":3368,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.shouldbepartofform(field",{"_index":2223,"title":{},"body":{"injectables/FormService.html":{}}}],["this.show",{"_index":3323,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.show(e",{"_index":4165,"title":{},"body":{"components/PopComponent.html":{}}}],["this.showurlinput",{"_index":4988,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.signup(this.form.value).then((res",{"_index":4527,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.solo",{"_index":3044,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.sorttype[types[0",{"_index":4570,"title":{},"body":{"classes/Sorter.html":{}}}],["this.spanchanged.emit(this.timespan",{"_index":1313,"title":{},"body":{"interfaces/Day.html":{}}}],["this.stack.add(promise",{"_index":3322,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stack.items.length",{"_index":4192,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.items[this.stack.items.length",{"_index":4194,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.remove(latestpop",{"_index":4196,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.removeall",{"_index":3327,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.state",{"_index":4222,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.storagekeyresolver",{"_index":3114,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.store(key",{"_index":3120,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.submitted",{"_index":3561,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit",{"_index":4126,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.success.emit(_upload",{"_index":4944,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.success.emit(res",{"_index":3565,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit(user",{"_index":3480,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.symbol.resolve('datetime.local",{"_index":3789,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('entries.load.error",{"_index":1599,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.symbol.resolve('entry.load.error",{"_index":1633,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.symbol.resolve('error",{"_index":1819,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.symbol.resolve('error.input",{"_index":2679,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.input.invalid",{"_index":2680,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.load",{"_index":1066,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.symbol.resolve('error.upload",{"_index":4949,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('field.creator.ecuser",{"_index":4875,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('field.label.created",{"_index":3747,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.creator",{"_index":3755,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.id",{"_index":3743,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.modified",{"_index":3753,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('image",{"_index":2520,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.symbol.resolve('login.button.label",{"_index":3508,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.label",{"_index":3510,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.placeholder",{"_index":3513,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.error",{"_index":3481,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('login.password.label",{"_index":3517,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.password.placeholder",{"_index":3519,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.success",{"_index":3479,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('moment.format.date",{"_index":1247,"title":{},"body":{"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('moment.format.month",{"_index":1303,"title":{},"body":{"interfaces/Day.html":{}}}],["this.symbol.resolve('moment.format.time",{"_index":4873,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('resource",{"_index":2244,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('resource.generic",{"_index":2194,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('signup.button.label",{"_index":4500,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.error",{"_index":4495,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('signup.invite.placeholder",{"_index":4502,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.success",{"_index":4494,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('success.upload",{"_index":4945,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve(name",{"_index":4615,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["this.symbols.set(en",{"_index":4595,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["this.tabs",{"_index":4697,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.find((tab",{"_index":4700,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.foreach((tab",{"_index":4704,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.theme",{"_index":179,"title":{},"body":{"components/AceComponent.html":{}}}],["this.thumb",{"_index":2493,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.time",{"_index":3883,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.timespan",{"_index":1326,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timespan[1",{"_index":1379,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timestamp",{"_index":3325,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.total",{"_index":4028,"title":{},"body":{"classes/Pagination.html":{}}}],["this.transform('classes",{"_index":2820,"title":{},"body":{"classes/Item.html":{}}}],["this.transform('display",{"_index":2823,"title":{},"body":{"classes/Item.html":{}}}],["this.transform('group",{"_index":2819,"title":{},"body":{"classes/Item.html":{}}}],["this.transform('serialize",{"_index":2844,"title":{},"body":{"classes/Item.html":{}}}],["this.transform('sort",{"_index":2827,"title":{},"body":{"classes/Item.html":{}}}],["this.trees",{"_index":3008,"title":{},"body":{"components/ListComponent.html":{}}}],["this.type",{"_index":3665,"title":{},"body":{"components/ModalComponent.html":{},"classes/Notification.html":{}}}],["this.typeconfig.displayaccount",{"_index":3756,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.displaydate",{"_index":3748,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.get(fieldconfig[field].type).inputviews",{"_index":3766,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.get(type",{"_index":3786,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.groupdate",{"_index":3749,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.isodate",{"_index":3750,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.set('location",{"_index":5610,"title":{},"body":{"additional-documentation/readme/location-readme.html":{}}}],["this.types.foreach((type",{"_index":3677,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.includes(this.type",{"_index":3667,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.join",{"_index":3671,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types[type",{"_index":4865,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.unmute(e",{"_index":2894,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.update",{"_index":1817,"title":{},"body":{"components/ErrorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.update(model",{"_index":1771,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.update(relation",{"_index":4350,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.update.asobservable",{"_index":857,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this",{"_index":919,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this.editor",{"_index":4795,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.updateaddress",{"_index":3427,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.upload(files",{"_index":4938,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploader.trigger(e",{"_index":4993,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploader.uploadfiles(urls",{"_index":4990,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploadfiles(e.target.files",{"_index":4930,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise",{"_index":4939,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise.then",{"_index":4951,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploads.emit(upload",{"_index":2029,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.url",{"_index":2497,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.urlstoupload",{"_index":4992,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.use(this.ecimage",{"_index":2486,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.use(this.sets[key",{"_index":4648,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.usedatamanager(environment.datamanagerid",{"_index":4445,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.usedesktopnotifications",{"_index":3940,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.uselist(list",{"_index":1597,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.user",{"_index":4447,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.value",{"_index":181,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.view",{"_index":1946,"title":{},"body":{"classes/Field.html":{}}}],["this.visible",{"_index":3319,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.writevalue(this.value",{"_index":2656,"title":{},"body":{"components/InputComponent.html":{}}}],["this[occasion",{"_index":1945,"title":{},"body":{"classes/Field.html":{}}}],["those",{"_index":1935,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["thought",{"_index":2769,"title":{},"body":{"classes/Item.html":{}}}],["three",{"_index":3700,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["through",{"_index":2338,"title":{},"body":{"injectables/HistoryService.html":{},"classes/Item.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["throw",{"_index":537,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{},"classes/Item.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["throwerror",{"_index":3542,"title":{},"body":{"components/LoginFormComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["throwerror(err",{"_index":3558,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["throwing",{"_index":6003,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["thrown",{"_index":1816,"title":{},"body":{"components/ErrorComponent.html":{}}}],["throws",{"_index":3315,"title":{},"body":{"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{}}}],["thumb",{"_index":2463,"title":{},"body":{"directives/ImageDirective.html":{}}}],["tick",{"_index":4728,"title":{},"body":{"components/TinymceComponent.html":{}}}],["time",{"_index":822,"title":{},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["times",{"_index":5537,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["timespan",{"_index":1266,"title":{},"body":{"interfaces/Day.html":{}}}],["timestamp",{"_index":3274,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tiny",{"_index":4733,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce",{"_index":4718,"title":{"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}},"body":{"components/TinymceComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tinymce'},{'name",{"_index":316,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tinymce.component.html",{"_index":4721,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.component.scss",{"_index":4720,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autolink",{"_index":4758,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autoresize",{"_index":4759,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/code",{"_index":4760,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/colorpicker",{"_index":4761,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/contextmenu",{"_index":4762,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/fullscreen",{"_index":4763,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/link",{"_index":4764,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/lists",{"_index":4765,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/paste",{"_index":4766,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/table",{"_index":4767,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/template",{"_index":4768,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/textcolor",{"_index":4769,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/visualblocks",{"_index":4770,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/themes/modern",{"_index":4771,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce",{"_index":4757,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce.component",{"_index":4802,"title":{},"body":{"modules/TinymceModule.html":{}}}],["tinymcecomponent",{"_index":315,"title":{"components/TinymceComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tinymcemodule",{"_index":4797,"title":{"modules/TinymceModule.html":{}},"body":{"modules/TinymceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["tinymcemoduleconfig",{"_index":4803,"title":{},"body":{"modules/TinymceModule.html":{},"coverage.html":{}}}],["tip",{"_index":5362,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["titel",{"_index":3742,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{}}}],["titel&#39",{"_index":3732,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["title",{"_index":373,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["titles",{"_index":5934,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["toast",{"_index":3659,"title":{},"body":{"components/ModalComponent.html":{}}}],["today",{"_index":1262,"title":{},"body":{"interfaces/Day.html":{}}}],["todo",{"_index":564,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Config.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["todos",{"_index":5886,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["together",{"_index":1916,"title":{},"body":{"classes/Field.html":{}}}],["toggle",{"_index":842,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["toggle'},{'name",{"_index":318,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["toggle(e",{"_index":1685,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["toggle(item",{"_index":894,"title":{},"body":{"classes/Collection.html":{}}}],["toggle(resource",{"_index":2339,"title":{},"body":{"injectables/HistoryService.html":{}}}],["toggle.component.html",{"_index":4807,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle/toggle.component",{"_index":2166,"title":{},"body":{"modules/FormModule.html":{}}}],["togglecomponent",{"_index":317,"title":{"components/ToggleComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":4134,"title":{},"body":{"components/PopComponent.html":{}}}],["toggledfilterpop",{"_index":3143,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["toggledfilterpop(active",{"_index":3165,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["toggles",{"_index":896,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{},"components/ResourceListPopComponent.html":{},"components/ToggleComponent.html":{}}}],["toggleurlinput",{"_index":4962,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["togglevisibility",{"_index":3144,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["togglevisibility(field",{"_index":3167,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["token",{"_index":5435,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["tommy",{"_index":2772,"title":{},"body":{"classes/Item.html":{}}}],["tommy.display('name",{"_index":2774,"title":{},"body":{"classes/Item.html":{}}}],["tommy.group('name",{"_index":2775,"title":{},"body":{"classes/Item.html":{}}}],["tommy.resolve('name",{"_index":2773,"title":{},"body":{"classes/Item.html":{}}}],["tommy.sort('name",{"_index":2776,"title":{},"body":{"classes/Item.html":{}}}],["top",{"_index":3702,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["total",{"_index":3968,"title":{},"body":{"classes/Pagination.html":{}}}],["total>0",{"_index":6012,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["touch",{"_index":4812,"title":{},"body":{"components/ToggleComponent.html":{}}}],["track",{"_index":2319,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"classes/Pagination.html":{}}}],["tracked",{"_index":2671,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["tracking",{"_index":3980,"title":{},"body":{"classes/Pagination.html":{}}}],["transform",{"_index":1236,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"classes/Item.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["transform(action",{"_index":2753,"title":{},"body":{"classes/Item.html":{}}}],["transform(array",{"_index":3571,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["transform(fields",{"_index":5014,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["transform(items",{"_index":2313,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["transform(name",{"_index":4611,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["transform(value",{"_index":1237,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["transformation",{"_index":1906,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{}}}],["transforming",{"_index":2276,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["transforms",{"_index":1911,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["translate",{"_index":4047,"title":{},"body":{"components/PaginationComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["translates",{"_index":4609,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["translation",{"_index":4059,"title":{},"body":{"components/PaginationComponent.html":{}}}],["traverse",{"_index":2740,"title":{},"body":{"classes/Item.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["tries",{"_index":3453,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["trigger",{"_index":2994,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{}}}],["trigger(e",{"_index":4909,"title":{},"body":{"components/UploadComponent.html":{}}}],["triggered",{"_index":3270,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["triggering",{"_index":4911,"title":{},"body":{"components/UploadComponent.html":{}}}],["triggers",{"_index":2981,"title":{},"body":{"components/ListComponent.html":{},"components/UploadComponent.html":{}}}],["triggerupload",{"_index":4963,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["triggerupload(e",{"_index":4977,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["true",{"_index":32,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["try",{"_index":6061,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["ts",{"_index":897,"title":{},"body":{"classes/Collection.html":{},"classes/Field.html":{},"classes/Item.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{}}}],["tsconfig.json",{"_index":6175,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["tslib",{"_index":5253,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":2130,"title":{},"body":{"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["turned",{"_index":3072,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["turns",{"_index":1470,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{}}}],["tutorial",{"_index":5408,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["tutorials",{"_index":5455,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["twice",{"_index":5841,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["two",{"_index":3703,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["type",{"_index":68,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["type's",{"_index":4818,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["type.includes('asset",{"_index":3780,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["type.replace('a",{"_index":3781,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typealiases",{"_index":5337,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeconfig",{"_index":1994,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/readme/location-readme.html":{}}}],["typeconfig.inputview",{"_index":3791,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfig.placeholder",{"_index":3790,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfigservice",{"_index":1162,"title":{"injectables/TypeConfigService.html":{}},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["typeconfigservice#get",{"_index":3717,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typed",{"_index":1249,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typed.isvalid",{"_index":1251,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typeof",{"_index":425,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"injectables/ListConfigService.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["types",{"_index":450,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/ModalComponent.html":{},"interfaces/SdkField.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["types.length",{"_index":4569,"title":{},"body":{"classes/Sorter.html":{}}}],["types.ts",{"_index":5136,"title":{},"body":{"coverage.html":{}}}],["types[0",{"_index":4571,"title":{},"body":{"classes/Sorter.html":{}}}],["typescript",{"_index":847,"title":{},"body":{"classes/Collection.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"modules/SymbolModule.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["typical",{"_index":3863,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["typing",{"_index":5874,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["typo",{"_index":5794,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["udated",{"_index":5666,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["ui",{"_index":989,"title":{"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ui/src/notifications/notification",{"_index":6181,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["ui/src/notifications/with",{"_index":6182,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["uimodule",{"_index":355,"title":{"modules/UiModule.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["uimoduleconfig",{"_index":4884,"title":{},"body":{"modules/UiModule.html":{},"coverage.html":{}}}],["ul",{"_index":4062,"title":{},"body":{"components/PaginationComponent.html":{}}}],["undefined",{"_index":1732,"title":{},"body":{"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"components/ListComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["under",{"_index":2342,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/Symbol.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ungültiges",{"_index":4852,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["unique",{"_index":859,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["unit",{"_index":5322,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["unmute",{"_index":2929,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["unmute(e",{"_index":2898,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["unresolved",{"_index":2047,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["unresolved.length",{"_index":2051,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["until",{"_index":3283,"title":{},"body":{"components/LoaderComponent.html":{}}}],["up",{"_index":1105,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Item.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/publishing.html":{}}}],["update",{"_index":834,"title":{"interfaces/Update.html":{}},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["update(model",{"_index":1749,"title":{},"body":{"injectables/EntryService.html":{}}}],["update(relation",{"_index":4328,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["updateaddress",{"_index":3400,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["updated",{"_index":1748,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["updateon",{"_index":2229,"title":{},"body":{"injectables/FormService.html":{}}}],["updates",{"_index":1414,"title":{},"body":{"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"injectables/HistoryService.html":{},"components/LocationPickerComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["updatesize",{"_index":3975,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["updatesize(size",{"_index":4011,"title":{},"body":{"classes/Pagination.html":{}}}],["updatesize(value",{"_index":4049,"title":{},"body":{"components/PaginationComponent.html":{}}}],["updating",{"_index":2231,"title":{},"body":{"injectables/FormService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["upgrade",{"_index":5340,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{}}],["upload",{"_index":322,"title":{"interfaces/Upload.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["upload'},{'name",{"_index":320,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["upload(files",{"_index":4912,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.assetgroup",{"_index":4952,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.browse",{"_index":4997,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.component.html",{"_index":4887,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.deduplicate",{"_index":4957,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.ignoreduplicates",{"_index":4956,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.includeassetidinpath",{"_index":4955,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.link",{"_index":4994,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.or",{"_index":4995,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.preservefilenames",{"_index":4954,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.url",{"_index":4996,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.url.start",{"_index":4998,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload/upload.component",{"_index":2117,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{}}}],["uploadassets",{"_index":2083,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadassets(files",{"_index":2015,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["uploadcomponent",{"_index":319,"title":{"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uploaded",{"_index":1973,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["uploader",{"_index":4960,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadfiles",{"_index":2084,"title":{},"body":{"injectables/FileService.html":{},"components/UploadComponent.html":{}}}],["uploadfiles(files",{"_index":2031,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadfromurls",{"_index":4964,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadfromurls(urls",{"_index":4979,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploading",{"_index":1972,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadpromise",{"_index":4890,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploads",{"_index":1121,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadselectcomponent",{"_index":321,"title":{"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["upon",{"_index":1717,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["url",{"_index":1118,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/KeycommandsService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["url(url",{"_index":4698,"title":{},"body":{"components/TabsComponent.html":{}}}],["urls",{"_index":4981,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["urlstoupload",{"_index":4961,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["usage",{"_index":1917,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["use",{"_index":491,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"classes/Item.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["use(asset",{"_index":2479,"title":{},"body":{"directives/ImageDirective.html":{}}}],["use(loader",{"_index":3336,"title":{},"body":{"injectables/LoaderService.html":{}}}],["use(symbols",{"_index":2442,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["useconfig",{"_index":2702,"title":{},"body":{"classes/Item.html":{}}}],["useconfig(config",{"_index":2763,"title":{},"body":{"classes/Item.html":{}}}],["used",{"_index":72,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["usedatamanager",{"_index":4385,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedatamanager(shortid",{"_index":4401,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedesktopnotifications",{"_index":3909,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["useexisting",{"_index":29,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["useful",{"_index":3876,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["uselist",{"_index":1555,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["uselist(entrylist",{"_index":1576,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["user",{"_index":579,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["uses",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["usese",{"_index":4828,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["useset",{"_index":2425,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["useset(key",{"_index":2444,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["usevalue",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/LocationModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["using",{"_index":505,"title":{},"body":{"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"components/LocationSearchComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["utility/focus/focus.interface",{"_index":1448,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["utility/keycommands/keycommands.service",{"_index":1450,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["utility/utility.module",{"_index":2172,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["utility/validators/field",{"_index":4524,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["utilitymodule",{"_index":2157,"title":{"modules/UtilityModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["utilitymoduleconfig",{"_index":5007,"title":{},"body":{"modules/UtilityModule.html":{},"coverage.html":{}}}],["utilizes",{"_index":3715,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["ux",{"_index":4093,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["v",{"_index":2815,"title":{},"body":{"classes/Item.html":{},"interfaces/ResourceActionbarState.html":{}}}],["v.name",{"_index":3768,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["v[property",{"_index":2816,"title":{},"body":{"classes/Item.html":{}}}],["valid",{"_index":4582,"title":{},"body":{"interfaces/Symbol.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validate",{"_index":1842,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validatefactory",{"_index":2187,"title":{},"body":{"injectables/FormService.html":{}}}],["validatefactory(field",{"_index":2209,"title":{},"body":{"injectables/FormService.html":{}}}],["validating",{"_index":5486,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validation",{"_index":1426,"title":{},"body":{"components/DefaultEntryInputComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["validationerrors",{"_index":2212,"title":{},"body":{"injectables/FormService.html":{}}}],["validatorfn",{"_index":2201,"title":{},"body":{"injectables/FormService.html":{}}}],["validators",{"_index":2200,"title":{},"body":{"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.push(this.validatefactory(field",{"_index":2239,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.push(validators.required",{"_index":2238,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.required",{"_index":3551,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.ts",{"_index":5232,"title":{},"body":{"coverage.html":{}}}],["validators/field",{"_index":3547,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["value",{"_index":45,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["value)).then((_value",{"_index":2849,"title":{},"body":{"classes/Item.html":{}}}],["value).then((asset",{"_index":2546,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.alt",{"_index":2532,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.hasownproperty(key",{"_index":1793,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["value.hasownproperty(property",{"_index":2837,"title":{},"body":{"classes/Item.html":{}}}],["value.height",{"_index":2525,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.img",{"_index":2535,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.latitude",{"_index":4860,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.length",{"_index":1921,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{}}}],["value.longitude",{"_index":4859,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.name",{"_index":4862,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.split",{"_index":4846,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.title",{"_index":4861,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.touppercase",{"_index":1920,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{}}}],["value[key",{"_index":1794,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["value[property",{"_index":2832,"title":{},"body":{"classes/Item.html":{}}}],["values",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"classes/Item.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["var",{"_index":202,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["variable",{"_index":4682,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["variables",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["variables[key",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["various",{"_index":3269,"title":{},"body":{"components/LoaderComponent.html":{}}}],["verify",{"_index":2287,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["versendet",{"_index":4117,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["version",{"_index":5307,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["versions",{"_index":5299,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["via",{"_index":585,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["viable",{"_index":1932,"title":{},"body":{"classes/Field.html":{}}}],["video",{"_index":1988,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["view",{"_index":1278,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"classes/Item.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"directives/SlotHostDirective.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["viewchild",{"_index":153,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["viewchild('container",{"_index":125,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["viewchild('fileinput",{"_index":4916,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild('filterpop",{"_index":3173,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchild('globalloader",{"_index":3296,"title":{},"body":{"components/LoaderComponent.html":{}}}],["viewchild('imageloader",{"_index":2514,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["viewchild('localloader",{"_index":3298,"title":{},"body":{"components/LoaderComponent.html":{}}}],["viewchild('pagecontainer",{"_index":4060,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchild('search",{"_index":3445,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["viewchild(calendarcomponent",{"_index":1217,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["viewchild(entrylistcomponent",{"_index":1016,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(entrypopcomponent",{"_index":1012,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(loadercomponent",{"_index":1019,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{}}}],["viewchild(locationmapcomponent",{"_index":3420,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(locationsearchcomponent",{"_index":3423,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(popcomponent",{"_index":4920,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild(resourcelistcomponent",{"_index":4274,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(resourcepopcomponent",{"_index":4277,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(searchbarcomponent",{"_index":1691,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["viewchild(slothostdirective",{"_index":1538,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["viewchild(uploadcomponent",{"_index":4985,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["viewchildren",{"_index":4064,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchildren('page",{"_index":4054,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewcontainer",{"_index":4533,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["viewcontainerref",{"_index":1519,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/SlotHostDirective.html":{}}}],["viewcontainerref.clear",{"_index":1545,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactory",{"_index":1546,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewed",{"_index":1385,"title":{},"body":{"interfaces/Day.html":{}}}],["viewencapsulation",{"_index":3020,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["viewencapsulation.none",{"_index":2949,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["views",{"_index":1522,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/ModelConfigService.html":{}}}],["views.find((v",{"_index":3767,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["visibility",{"_index":2143,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["visible",{"_index":1007,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["visiblecolumns",{"_index":3217,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["visiblecolumns[visiblecolumns.length",{"_index":3220,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["visiblefields",{"_index":5013,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["visiblefieldspipe",{"_index":2154,"title":{"pipes/VisibleFieldsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["vm",{"_index":5380,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["void",{"_index":90,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["vscode",{"_index":5363,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["wait",{"_index":3275,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["wait(promise",{"_index":3281,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["waited",{"_index":3284,"title":{},"body":{"components/LoaderComponent.html":{}}}],["want",{"_index":2609,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["warning",{"_index":2389,"title":{},"body":{"components/IconComponent.html":{},"components/ModalComponent.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["way",{"_index":76,"title":{},"body":{"components/AceComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{}}}],["webpack",{"_index":5383,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack.config.js",{"_index":5396,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack:browser",{"_index":5394,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["week",{"_index":1224,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weekdays",{"_index":1197,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weiteren",{"_index":4122,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["well",{"_index":1513,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{}}}],["werden",{"_index":613,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wether",{"_index":1863,"title":{},"body":{"classes/Field.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/data-readme.html":{}}}],["whenever",{"_index":2594,"title":{},"body":{"components/InputComponent.html":{}}}],["whitelistednonpeerdependencies",{"_index":6179,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["whole",{"_index":1934,"title":{},"body":{"classes/Field.html":{},"classes/Item.html":{},"components/LoaderComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["whose",{"_index":4133,"title":{},"body":{"components/PopComponent.html":{}}}],["width",{"_index":1142,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{}}}],["wildcard",{"_index":1898,"title":{},"body":{"classes/Field.html":{}}}],["window",{"_index":3936,"title":{},"body":{"injectables/NotificationsService.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["window.addeventlistener('keydown",{"_index":2879,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"injectables/PopService.html":{}}}],["window.addeventlistener('keyup",{"_index":2882,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["window.addeventlistener('mousedown",{"_index":2885,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["window.location.origin).pathname.split",{"_index":4699,"title":{},"body":{"components/TabsComponent.html":{}}}],["window.notification(notification.title",{"_index":3952,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.permission",{"_index":3944,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.requestpermission().then((permission",{"_index":3945,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.open(url",{"_index":2918,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["withloader",{"_index":963,"title":{"interfaces/WithLoader.html":{}},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{}}}],["withnotifications",{"_index":964,"title":{"interfaces/WithNotifications.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/adding-new-packages.html":{}}}],["without",{"_index":1128,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Item.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["won't",{"_index":5445,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["wont",{"_index":1113,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/LoginFormComponent.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["work",{"_index":3004,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["workaround",{"_index":161,"title":{},"body":{"components/AceComponent.html":{},"injectables/NotificationsService.html":{}}}],["works",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{}}}],["workspaces",{"_index":5278,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["wrap",{"_index":5544,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["wrapper",{"_index":1663,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"classes/Item.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wrapper_backdrop",{"_index":1664,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ModalComponent.html":{}}}],["wraps",{"_index":13,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"classes/Item.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["writes",{"_index":115,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["writevalue",{"_index":62,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["writevalue(value",{"_index":113,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wrong",{"_index":5890,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["wurst",{"_index":2786,"title":{},"body":{"classes/Item.html":{}}}],["wysiwyg",{"_index":5270,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["x",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.ui",{"_index":3625,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["x.ui.10.0.0",{"_index":5667,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["x.ui/src/_config",{"_index":5423,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui",{"_index":5424,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui.scss",{"_index":5609,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["x1f682;&#x1f683;&#x1f683;&#x1f683",{"_index":471,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["xlcss/sass/xlcss.scss",{"_index":5422,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["xxxxxxxx",{"_index":5433,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["yarn",{"_index":5277,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["yes",{"_index":507,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"pipes/DatetimePipe.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"classes/Item.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{}}}],["yields",{"_index":1679,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["you'll",{"_index":5538,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["yourself",{"_index":4376,"title":{},"body":{"injectables/SdkService.html":{}}}],["yyyy",{"_index":819,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["z",{"_index":3796,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["z0",{"_index":2007,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["za",{"_index":2006,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"interfaces/Upload.html":{}}}],["zone",{"_index":1471,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["zone.js",{"_index":5255,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":356,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["zurücksetzen",{"_index":4128,"title":{},"body":{"components/PasswordResetComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AceComponent.html":{"url":"components/AceComponent.html","title":"component - AceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ace/src/lib/ace.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps ace editor as angular component. Implements ControlValueAccessor!\nhttps://components.entrecode.de/misc/ace?e=1\n\n    \n\n    \n        Extends\n    \n    \n                DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-ace\n            \n\n            \n                styleUrls\n                ace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                input\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setMode\n                            \n                            \n                                setTheme\n                            \n                            \n                                writeValue\n                            \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:47\n                            \n                        \n                \n                    \n                        mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:51\n                            \n                        \n                \n                    \n                        theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ace/src/lib/ace.component.ts:54\n                \n            \n\n\n            \n                \n                    creates new ace instance if not present and sets mode and theme if given \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/ace/src/lib/ace.component.ts:97\n                \n            \n\n\n            \n                \n                    Re-inits the editor \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ace/src/lib/ace.component.ts:93\n                \n            \n\n\n            \n                \n                    Inits the editor \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn)\n                \n            \n\n\n            \n                \n                    Defined in packages/ace/src/lib/ace.component.ts:115\n                \n            \n\n\n            \n                \n                    Registers change callback \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in packages/ace/src/lib/ace.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMode\n                        \n                        \n                    \n                \n            \n            \n                \nsetMode(mode: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ace/src/lib/ace.component.ts:75\n                \n            \n\n\n            \n                \n                    Sets the editor mode to the specified language (after ace/mode/) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ace/src/lib/ace.component.ts:84\n                \n            \n\n\n            \n                \n                    Sets the editor theme to the specified theme (after ace/theme/) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/ace/src/lib/ace.component.ts:102\n                \n            \n\n\n            \n                \n                    writes value to editor on outside model change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus(focus)\n                \n            \n\n\n            \n                \n                    Inherited from         DefaultInputComponent\n\n                \n            \n            \n                \n                        Defined in         DefaultInputComponent:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    focus\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DefaultInputComponent\n\n                \n            \n            \n                \n                        Defined in         DefaultInputComponent:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element for ace editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:29\n                            \n                        \n\n                \n                    \n                        The ace editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:39\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:37\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:33\n                            \n                        \n\n                \n                    \n                        The current value of the editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:21\n\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:15\n\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:23\n\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:19\n\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:17\n\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:26\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, Input, OnChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\n\nimport 'ace-builds/src-noconflict/ace';\nimport 'ace-builds/webpack-resolver';\n\n/** Workaround that expects ace to be imported somewhere else... */\ndeclare const ace: any;\n\n/** Wraps ace editor as angular component. Implements ControlValueAccessor!\n *\n * https://components.entrecode.de/misc/ace?e=1\n */\n@Component({\n  selector: 'ec-ace',\n  templateUrl: 'ace.component.html',\n  styleUrls: ['ace.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AceComponent),\n      multi: true,\n    },\n  ],\n})\nexport class AceComponent extends DefaultInputComponent implements ControlValueAccessor, OnInit, OnChanges {\n  /** The ace editor instance */\n  editor: any;\n  /**\n   * The current value of the editor\n   */\n  value = '';\n  /**\n   * Promise that resolves when the editor has been initialized.\n   */\n  ready: Promise;\n  /** Form input component */\n  input: InputComponent;\n  /**\n   * container element for ace editor\n   */\n  @ViewChild('container') container: ElementRef;\n  /**\n   * mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n   */\n  @Input() mode: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-modelist.js\n  /**\n   * theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n   */\n  @Input() theme: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-themelist.js\n\n  /** creates new ace instance if not present and sets mode and theme if given */\n  init() {\n    if (!this.editor) {\n      this.editor = ace.edit(this.container.nativeElement);\n    }\n    this.ready = Promise.resolve(this.editor);\n    if (this.mode) {\n      this.setMode(this.mode);\n    }\n    if (this.theme) {\n      this.setTheme(this.theme);\n    }\n    if (this.value) {\n      this.editor.setValue(this.value, 1);\n    }\n    this.ready.then((editor) => {\n      editor.on('change', (e) => {\n        this.propagateChange(this.editor.getValue());\n      });\n    });\n  }\n  /** Sets the editor mode to the specified language (after ace/mode/) */\n  setMode(mode: string) {\n    this.mode = mode;\n    if (!this.editor) {\n      return;\n    }\n    this.editor.session.setMode('ace/mode/' + this.mode);\n  }\n\n  /** Sets the editor theme to the specified theme (after ace/theme/) */\n  setTheme(theme: string) {\n    this.theme = theme;\n    if (!this.editor) {\n      return;\n    }\n    this.editor.setTheme('ace/theme/' + this.theme);\n  }\n\n  /** Inits the editor */\n  ngOnInit() {\n    this.init();\n  }\n  /** Re-inits the editor */\n  ngOnChanges() {\n    this.init();\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (!this.ready) {\n      return;\n    }\n    this.ready.then((editor) => {\n      editor.setValue(this.value, 1);\n    });\n  }\n\n  propagateChange = (_: any) => {};\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ace.component.scss\n                \n                .ec-ace {\n    min-height: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AceModule.html":{"url":"modules/AceModule.html","title":"module - AceModule","body":"\n                   \n\n\n\n\n    Modules\n    AceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_imports\n\n\n\ncluster_AceModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n AceComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n AceComponent), multi: true,\n}->AceComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}->AceComponent\n\n\n\n\n\nUiModule\n\nUiModule\n\nAceModule -->\n\nUiModule->AceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ace/src/lib/ace.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AceComponent } from './ace.component';\nimport { UiModule } from '@ec.components/ui';\n\nexport const aceModuleConfig = {\n  imports: [UiModule],\n  exports: [AceComponent],\n  declarations: [AceComponent],\n  entryComponents: [AceComponent],\n  providers: [],\n};\n\n@NgModule(aceModuleConfig)\nexport class AceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/actionbar/actionbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        select\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { selectTemplate } from '../select/select.component.html';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport type ActionFunction = (item?: Item | any, actionbar?: ActionbarComponent) => any;\n\nexport interface Action {\n  title: string;\n  id: string;\n  path?: string;\n  data?: any;\n  select?: boolean;\n  action?: ActionFunction;\n}\n\nexport interface ActionbarConfig extends ListConfig { }\n\n@Component({\n  selector: 'ec-actionbar',\n  template: selectTemplate,\n})\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n  @Input() root = 'ROOT'; // id of root stack item\n  @Input() config: ActionbarConfig = {\n    label: 'title',\n    identifier: 'id',\n    fields: {\n      title: {},\n    },\n  };\n  @Input() actions: Action[];\n  actionStack: { [id: string]: Action[] } = {};\n\n  constructor(public elementRef: ElementRef, public cdr: ChangeDetectorRef) {\n    super(elementRef, cdr);\n    this.add.subscribe((item) => {\n      if (item.getBody().select !== false) {\n        this.selection.add(item);\n      }\n      if (item.getBody().action) {\n        item.getBody().action(item, this);\n      }\n      if (item.getBody().children) {\n        this.loadActions(item.getBody().children);\n      }\n      // this.searchbar.clear();\n    });\n    this.remove.subscribe((item) => {\n      this.selection.remove(item);\n      this.loadActionsBefore();\n    });\n  }\n\n  loadActionsBefore() {\n    const actionsBefore = this.actionStack[this.currentID()];\n    if (actionsBefore) {\n      this.loadActions(actionsBefore);\n    }\n  }\n\n  ngOnInit() {\n    this.loadActions(this.actions);\n  }\n\n  currentID() {\n    if (!this.selection || this.selection.isEmpty()) {\n      return this.root;\n    }\n    return this.selection.items[this.selection.items.length - 1].id();\n  }\n\n  reset() {\n    this.selection.removeAll();\n    this.loadActions(this.actionStack[this.currentID()]);\n  }\n\n  currentActions() {\n    return this.actionStack[this.currentID()];\n  }\n\n  async loadActions(actions, addToStack = true) {\n    let resolved;\n    if (typeof actions === 'function') {\n      resolved = await Promise.resolve(actions(this.actionStack, this));\n    } else {\n      resolved = [].concat(actions);\n    }\n    if (addToStack) {\n      this.actionStack[this.currentID()] = actions;\n    }\n    this.list = new List(resolved, { size: 1000, ...this.config });\n    if (resolved.length > this.list.config) {\n      console.warn('actions exceed list size...');\n    }\n    if (!this.selection) {\n      this.initSelection();\n    }\n    setTimeout(() => {\n      if (this.dropdownList) {\n        this.dropdownList.focusFirst();\n      }\n    });\n  }\n\n  getPath() {\n    return this.selection.getValue();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionbarConfig.html":{"url":"interfaces/ActionbarConfig.html","title":"interface - ActionbarConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionbarConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/actionbar/actionbar.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ListConfig\n            \n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { selectTemplate } from '../select/select.component.html';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport type ActionFunction = (item?: Item | any, actionbar?: ActionbarComponent) => any;\n\nexport interface Action {\n  title: string;\n  id: string;\n  path?: string;\n  data?: any;\n  select?: boolean;\n  action?: ActionFunction;\n}\n\nexport interface ActionbarConfig extends ListConfig { }\n\n@Component({\n  selector: 'ec-actionbar',\n  template: selectTemplate,\n})\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n  @Input() root = 'ROOT'; // id of root stack item\n  @Input() config: ActionbarConfig = {\n    label: 'title',\n    identifier: 'id',\n    fields: {\n      title: {},\n    },\n  };\n  @Input() actions: Action[];\n  actionStack: { [id: string]: Action[] } = {};\n\n  constructor(public elementRef: ElementRef, public cdr: ChangeDetectorRef) {\n    super(elementRef, cdr);\n    this.add.subscribe((item) => {\n      if (item.getBody().select !== false) {\n        this.selection.add(item);\n      }\n      if (item.getBody().action) {\n        item.getBody().action(item, this);\n      }\n      if (item.getBody().children) {\n        this.loadActions(item.getBody().children);\n      }\n      // this.searchbar.clear();\n    });\n    this.remove.subscribe((item) => {\n      this.selection.remove(item);\n      this.loadActionsBefore();\n    });\n  }\n\n  loadActionsBefore() {\n    const actionsBefore = this.actionStack[this.currentID()];\n    if (actionsBefore) {\n      this.loadActions(actionsBefore);\n    }\n  }\n\n  ngOnInit() {\n    this.loadActions(this.actions);\n  }\n\n  currentID() {\n    if (!this.selection || this.selection.isEmpty()) {\n      return this.root;\n    }\n    return this.selection.items[this.selection.items.length - 1].id();\n  }\n\n  reset() {\n    this.selection.removeAll();\n    this.loadActions(this.actionStack[this.currentID()]);\n  }\n\n  currentActions() {\n    return this.actionStack[this.currentID()];\n  }\n\n  async loadActions(actions, addToStack = true) {\n    let resolved;\n    if (typeof actions === 'function') {\n      resolved = await Promise.resolve(actions(this.actionStack, this));\n    } else {\n      resolved = [].concat(actions);\n    }\n    if (addToStack) {\n      this.actionStack[this.currentID()] = actions;\n    }\n    this.list = new List(resolved, { size: 1000, ...this.config });\n    if (resolved.length > this.list.config) {\n      console.warn('actions exceed list size...');\n    }\n    if (!this.selection) {\n      this.initSelection();\n    }\n    setTimeout(() => {\n      if (this.dropdownList) {\n        this.dropdownList.focusFirst();\n      }\n    });\n  }\n\n  getPath() {\n    return this.selection.getValue();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminEntryInputComponent.html":{"url":"components/AdminEntryInputComponent.html","title":"component - AdminEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/admin-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that require having the DatamanagerResource as api.\nThis is currently relevant for account and role fields which come from the ec.api.\n\n    \n\n    \n        Extends\n    \n    \n                DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./admin-entry-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                        KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus(focus)\n                \n            \n\n\n            \n                \n                    Inherited from         DefaultInputComponent\n\n                \n            \n            \n                \n                        Defined in         DefaultInputComponent:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    focus\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DefaultInputComponent\n\n                \n            \n            \n                \n                        Defined in         DefaultInputComponent:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataManagerResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:21\n\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:15\n\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:23\n\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:19\n\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:17\n\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:26\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SdkService } from '../sdk/sdk.service';\nimport { Component } from '@angular/core';\nimport { DefaultInputComponent, FormService, KeycommandsService } from '@ec.components/ui';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** This component holds the input templates for all field types that require having the DatamanagerResource as api.\n * This is currently relevant for account and role fields which come from the ec.api.\n */\n@Component({\n  templateUrl: './admin-entry-input.component.html',\n})\nexport class AdminEntryInputComponent extends DefaultInputComponent {\n  api: DataManagerResource;\n  constructor(public sdk: SdkService, public formService: FormService, public keycommands: KeycommandsService) {\n    super(formService, keycommands);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AssetDirective.html":{"url":"directives/AssetDirective.html","title":"directive - AssetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AssetDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/asset/asset.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset by id to the template.\nassets/asset\nhttps://components.entrecode.de/assets/asset?e=1\n\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecAsset]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asset\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                sdk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetId\n                            \n                            \n                                autoload\n                            \n                            \n                                ecAsset\n                            \n                            \n                                levels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:26\n                            \n                        \n                \n                    \n                        The api to use. Defaults to sdk.api \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        assetId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:18\n                            \n                        \n                \n                    \n                        The asset id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:22\n                            \n                        \n                \n                    \n                        Should the asset be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ecAsset\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:20\n                            \n                        \n                \n                    \n                        The asset id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:24\n                            \n                        \n                \n                    \n                        The levels to use. \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:28\n                            \n                        \n                \n                    \n                        Fires as soon as the asset has been loaded. \n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload(id?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:47\n                \n            \n\n\n            \n                \n                    Loads the asset. Can be called from template when using autoload=false \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:36\n                \n            \n\n\n            \n                \n                    as soon as model and id are known, the asset will be loaded. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                        The current loaded asset \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:16\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ecAsset\nThis directive can be used to load a single asset directly from the template:\n```html\n\n  id: {{myAsset.asset?.assetID}}\n  title: {{myAsset.asset?.title}}\n  tags: {{myAsset.asset?.tags}}\n  created: {{myAsset.asset?.created}}\n  type: {{myAsset.asset?.type}}\n  files: {{myAsset.asset?.files?.length}}\n\n```\n\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SdkService } from '../../sdk/sdk.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset by id to the template.\n * assets/asset\n * https://components.entrecode.de/assets/asset?e=1\n */\n@Directive({\n  selector: '[ecAsset]',\n  exportAs: 'ecAsset',\n})\nexport class AssetDirective implements OnChanges {\n  /** The loading promise */\n  promise: any;\n  /** The asset id that should be loaded*/\n  @Input() assetId: string;\n  /** The asset id that should be loaded*/\n  @Input() ecAsset: string;\n  /** Should the asset be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** The api to use. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Fires as soon as the asset has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The current loaded asset */\n  public asset: any;\n\n  /** Injects the sdk */\n  constructor(public sdk: SdkService) {}\n\n  /** as soon as model and id are known, the asset will be loaded. */\n  ngOnChanges() {\n    if (this.ecAsset) {\n      this.assetId = this.ecAsset;\n    }\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the asset. Can be called from template when using autoload=false */\n  load(id?: string) {\n    this.assetId = id || this.assetId;\n    if (!this.assetId) {\n      return Promise.reject('cannot load asset: no assetId is set');\n    }\n    const api = this.api || this.sdk.api;\n    if (!api) {\n      throw new Error('cannot load asset: no api was set!');\n    }\n    this.promise = api.asset(this.assetId).then((asset) => {\n      this.asset = asset;\n      this.loaded.emit(asset);\n      return asset;\n    });\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetgroupSelectComponent.html":{"url":"components/AssetgroupSelectComponent.html","title":"component - AssetgroupSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetgroupSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-assetgroup-select\n            \n\n\n\n\n            \n                templateUrl\n                ./assetgroup-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                assetGroups\n                            \n                            \n                                disableLegacy\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroups\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableLegacy\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'select assetgroup..'\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FileService } from '../file.service';\n\n// TODO: add demo + doc\n\n@Component({\n  selector: 'ec-assetgroup-select',\n  templateUrl: './assetgroup-select.component.html',\n})\nexport class AssetgroupSelectComponent implements OnInit {\n  @Input() placeholder = 'select assetgroup..';\n  @Input() assetGroupID: string;\n  @Input() assetGroups: string[];\n  @Input() disableLegacy: boolean;\n  @Input() readOnly: boolean;\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n\n  constructor(public fileService: FileService) {}\n\n  ngOnInit() {\n    this.fileService.assetGroupList().then((assetGroups) => (this.assetGroups = assetGroups));\n  }\n}\n\n    \n\n    \n        \n    {{placeholder}}\n    {{assetGroup}}\n    legacy Assets -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{placeholder}}    {{assetGroup}}    legacy Assets -->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetgroupSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                packages/data/src/lib/auth/auth-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    This guard can be used on routes that only can be activated when a user is present in the SdkService.\nIf no user is found, an error message is shown. You can then react via the redirect output. \n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth-guard.service.ts:16\n                \n            \n\n\n            \n                \n                    Checks if the sdk contains a user, if not an error message is shown. \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { NotificationsService } from '@ec.components/ui';\nimport { Subject } from 'rxjs';\n\n/** This guard can be used on routes that only can be activated when a user is present in the SdkService.\n * If no user is found, an error message is shown. You can then react via the redirect output. */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /** Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) */\n  redirect: Subject = new Subject();\n\n  constructor(private sdk: SdkService, private notifications: NotificationsService) {}\n  /** Checks if the sdk contains a user, if not an error message is shown. */\n  canActivate() {\n    return this.sdk.ready.then((user) => {\n      if (!!user) {\n        return true;\n      }\n      this.notifications.emit({\n        type: 'error',\n        title: 'Diese Seite kann nicht angezeigt werden.',\n        message: 'Sie sind nicht eingeloggt.',\n      });\n      this.redirect.next();\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\ncookieFactory()\n\ncookieFactory()\n\nAuthModule -->\n\ncookieFactory()->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/auth/auth.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for all auth related components and services. \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordResetComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                        \n                            cookieFactory()\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordResetComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { CookieModule } from 'ngx-cookie';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\nimport { LoginComponent } from './login/login.component';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\nimport { SignupComponent } from './signup/signup.component';\n\n/** loads CookieModule */\nexport function cookieFactory(): ModuleWithProviders {\n  // https://github.com/auth0/angular2-jwt/issues/305\n  return CookieModule.forRoot();\n}\n/** Module for all auth related components and services. */\n@NgModule({\n  declarations: [PasswordResetComponent, LoginComponent, SignupComponent],\n  imports: [FormsModule, cookieFactory(), CommonModule, ReactiveFormsModule, UiModule],\n  exports: [ReactiveFormsModule, PasswordResetComponent, LoginComponent, SignupComponent],\n  providers: [AuthGuard, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\njson\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }\nThe environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPermission\n                            \n                            \n                                getAccount\n                            \n                            \n                                getAllowedModelMethods\n                            \n                            \n                                getAllowedResourceMethods\n                            \n                            \n                                getApi\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                noClientID\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resolveVariables\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                        ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkPermission\n                        \n                        \n                    \n                \n            \n            \n                \ncheckPermission(permission: string, api?)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth.service.ts:71\n                \n            \n\n\n            \n                \n                    checks given public permission for given api, defaults to this.sdk.api. Also works as ec user \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    permission\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    api\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAccount\n                        \n                        \n                    \n                \n            \n            \n                \ngetAccount(api)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth.service.ts:59\n                \n            \n\n\n            \n                \n                    Returns the current account. Works for all apis \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    api\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.sdk.api\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllowedModelMethods\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllowedModelMethods(model: string, methods?: string[])\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth.service.ts:128\n                \n            \n\n\n            \n                \n                    Returns an array of all allowed methods for the given relation \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    methods\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllowedResourceMethods\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllowedResourceMethods(relation: string, variables: Object, methods?: string[], api?: Core)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth.service.ts:89\n                \n            \n\n\n            \n                \n                    Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    relation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    variables\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    methods\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    api\n                                    \n                                            Core\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getApi\n                        \n                        \n                    \n                \n            \n            \n                \ngetApi(email: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(undefined, api?)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n                    Generic login that works with both public and admin API. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    api\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout(api?)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth.service.ts:160\n                \n            \n\n\n            \n                \n                    Generic logout that works with both public and admin API. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            noClientID\n                        \n                        \n                    \n                \n            \n            \n                \nnoClientID()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(email, api?)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth.service.ts:149\n                \n            \n\n\n            \n                \n                    Generic password reset that works with both public and admin API. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    api\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveVariables\n                        \n                        \n                    \n                \n            \n            \n                \nresolveVariables(string: string, variables: Object)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth.service.ts:81\n                \n            \n\n\n            \n                \n                    replaces all variables by values in a string \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    variables\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(undefined, api?)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/auth.service.ts:44\n                \n            \n\n\n            \n                \n                    Generic Signup, works for accounts API and PublicAPI \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    api\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class AuthService {\n  /** Calls init and sets ready to true when finished. */\n  constructor(private resourceConfig: ResourceConfig, private sdk: SdkService) {}\n\n  /** Generic login that works with both public and admin API. */\n  login({ email, password }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.session;\n        return !_api ? Promise.reject('api_not_found') : _api.login(email, password);\n      })\n      .then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  /** Generic Signup, works for accounts API and PublicAPI */\n  signup({ email, password, invite }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api\n      ? api.signup(email, password, invite)\n      : this.sdk.api\n          .signup(email, password, invite)\n          .catch(() => this.sdk.accounts.signup(email, password, invite))\n          .then((res) => {\n            return this.sdk.init();\n          });\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.sdk.api) {\n    return api\n      .me()\n      .then((account) => {\n        return account || this.sdk.accounts.me();\n      })\n      .catch((err) => {\n        return this.sdk.api.me();\n      });\n  }\n\n  /** checks given public permission for given api, defaults to this.sdk.api. Also works as ec user */\n  checkPermission(permission: string, api?) {\n    return this.sdk.ready.then((user) => {\n      /* if (!user) {\n        return false;\n      } */\n      api = api || this.sdk.api;\n      return api.checkPermission(permission);\n    });\n  }\n  /** replaces all variables by values in a string */\n  resolveVariables(string: string, variables: Object) {\n    Object.keys(variables).forEach((key) => {\n      string = string.replace(``, variables[key]);\n    });\n    return string;\n  }\n\n  /** Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. */\n  getAllowedResourceMethods(\n    relation: string,\n    variables: Object = {},\n    methods?: string[],\n    api?: Core,\n  ): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    if (!this.resourceConfig.get(relation) || !this.resourceConfig.get(relation).permissions) {\n      /* console.warn(`relation ${relation} has no defined permissions, defaulting to all methods available`); */\n      return Promise.resolve(['get', 'post', 'put', 'delete']);\n    }\n    const permissions = this.resourceConfig.get(relation).permissions;\n    return Object.keys(permissions)\n      .map((method) => (results) => {\n        return !permissions[method]\n          ? Promise.resolve(results)\n          : permissions[method] === true\n          ? Promise.resolve(results.concat(method))\n          : this.checkPermission(`${this.resolveVariables(permissions[method], variables)}`, api)\n              .then((res) => {\n                if (res) {\n                  results.push(method);\n                }\n                return results;\n              })\n              .catch((err) => {\n                return results;\n              });\n      })\n      .reduce((a, b) => a.then((r) => b(r)), Promise.resolve([]))\n      .then((_methods) => {\n        _methods.filter((x) => !!x);\n        return _methods;\n      });\n  }\n\n  /** Returns an array of all allowed methods for the given relation */\n  getAllowedModelMethods(model: string, methods?: string[]): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    return ['get', 'post', 'put', 'delete']\n      .map((method) => (results) =>\n        this.checkPermission(`${model}:${method}`, this.sdk.api).then((res) => {\n          if (res) {\n            results.push(method);\n          }\n          return results;\n        }),\n      )\n      .reduce((a, b) => a.then((r) => b(r)), Promise.resolve([]))\n      .then((_methods) => {\n        _methods.filter((x) => !!x);\n        return _methods;\n      });\n  }\n\n  /** Generic password reset that works with both public and admin API. */\n  resetPassword(email, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email)).then((resolvedAPI) => {\n      const _api = resolvedAPI || this.sdk.accounts;\n      return !_api ? Promise.reject('api_not_found') : _api.resetPassword(email);\n    });\n  }\n\n  /** Generic logout that works with both public and admin API. */\n  logout(api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api\n      ? api.logout()\n      : this.sdk.session\n          .logout()\n          .catch(() => this.sdk.api.logout())\n          .then(() => {\n            return this.sdk.init();\n          });\n  }\n\n  getApi(email: string) {\n    if (!this.sdk.api && !this.sdk.accounts) {\n      return Promise.reject('no_api_found');\n    }\n    return this.sdk.api\n      .emailAvailable(email)\n      .then((available) => {\n        if (!available) {\n          return this.sdk.api;\n        }\n      })\n      .catch(() => {\n        return;\n      });\n  }\n\n  noClientID() {\n    if (!this.sdk.environment || !this.sdk.environment.clientID) {\n      return `\nNo clientID set in environment! To enable all auth related functionalities,\nyou can create a client in your datamanager settings and provide it with your environment:\n\n  providers: [\n    {\n      provide: 'environment',\n      useValue: {\n        datamanagerID: '83cc6374',\n        clientID: 'myClient',\n      }\n    }\n  ]\n`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CalendarModule.html":{"url":"modules/CalendarModule.html","title":"module - CalendarModule","body":"\n                   \n\n\n\n\n    Modules\n    CalendarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_exports\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nCalendarModule -->\n\nDaterangeComponent->CalendarModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nCalendarModule -->\n\nDatetimePipe->CalendarModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nCalendarModule -->\n\nHeatmapComponent->CalendarModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nCalendarModule -->\n\nMonthComponent->CalendarModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nCalendarModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nCalendarModule->DaterangeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nCalendarModule->DatetimePipe \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nCalendarModule->HeatmapComponent \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nCalendarModule->MonthComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/calendar/src/lib/calendar.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module contains all calendar related components \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            DaterangeComponent\n                        \n                        \n                            DatetimePipe\n                        \n                        \n                            HeatmapComponent\n                        \n                        \n                            MonthComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            DaterangeComponent\n                        \n                        \n                            DatetimePipe\n                        \n                        \n                            HeatmapComponent\n                        \n                        \n                            MonthComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(formats: literal type)\n                \n            \n\n\n            \n                \n                    Defined in packages/calendar/src/lib/calendar.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formats\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DatetimePipe } from './datetime.pipe';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { HeatmapComponent } from './heatmap/heatmap.component';\nimport { DaterangeComponent } from './daterange/daterange.component';\nimport { MonthComponent } from './calendar/month.component';\nimport { CommonModule } from '@angular/common';\n\nexport const calendarModuleConfig = {\n  imports: [CommonModule],\n  exports: [DatetimePipe, CalendarComponent, HeatmapComponent, DaterangeComponent, MonthComponent],\n  declarations: [DatetimePipe, CalendarComponent, HeatmapComponent, DaterangeComponent, MonthComponent],\n  providers: [\n    {\n      provide: 'moment.format.date',\n      useValue: 'DD.MM.YYYY',\n    },\n    {\n      provide: 'moment.format.time',\n      useValue: 'HH:mm',\n    },\n    {\n      provide: 'moment.format.month',\n      useValue: 'MMMM YYYY',\n    },\n  ],\n};\n\n/** This Module contains all calendar related components */\n@NgModule(calendarModuleConfig)\nexport class CalendarModule {\n  static forRoot(formats: { date?; time?; month? }): ModuleWithProviders {\n    return {\n      ngModule: CalendarModule,\n      providers: [\n        {\n          provide: 'moment.format.date',\n          useValue: formats.date,\n        },\n        {\n          provide: 'moment.format.time',\n          useValue: formats.time,\n        },\n        {\n          provide: 'moment.format.month',\n          useValue: formats.month,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/collection/collection.ts\n        \n\n            \n                Description\n            \n            \n                A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Public\n                                update$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addAll\n                            \n                            \n                                has\n                            \n                            \n                                hasAll\n                            \n                            \n                                index\n                            \n                            \n                                isEmpty\n                            \n                            \n                                move\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                replaceWith\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: Array)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/collection/collection.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs the collection with the given item Array (optional).\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                            typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   *\n\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:10\n                            \n                        \n\n                \n                    \n                        The items must all have the same type T.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            update\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:12\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.update.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:14\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items change \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(item: T, unique?: boolean, event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/collection/collection.ts:71\n                \n            \n\n\n            \n                \n                    Adds the given item to the Collection. If the unique flag is set, the item will only be added\nif it is not contained.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unique\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            typescript\n   * numbers.add(4);\n   *\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAll\n                        \n                        \n                    \n                \n            \n            \n                \naddAll(items: Array, unique: boolean, event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/collection/collection.ts:89\n                \n            \n\n\n            \n                \n                    Adds the given items to the Collection. If the unique flag is set, only items that are not\ncontained will be added.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    unique\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            typescript\n   * numbers.addAll([5, 6, 7]);\n   *\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(item: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/collection/collection.ts:42\n                \n            \n\n\n            \n                \n                    Checks if the Collection contains the given item.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            typescript\n   * numbers.has(2); //true\n   *\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasAll\n                        \n                        \n                    \n                \n            \n            \n                \nhasAll(items: Array)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/collection/collection.ts:53\n                \n            \n\n\n            \n                \n                    Checks if the Collection contains all given items.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            typescript\n   * numbers.has([1,2]); //true\n   *\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            index\n                        \n                        \n                    \n                \n            \n            \n                \nindex(item: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/collection/collection.ts:31\n                \n            \n\n\n            \n                \n                    Returns the index of the given item \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmpty()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/collection/collection.ts:160\n                \n            \n\n\n            \n                \n                    Returns true if the collection is empty \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove(item: T, index: number, event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/collection/collection.ts:165\n                \n            \n\n\n            \n                \n                    Moves the given item to the given array index. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(item: T, event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/collection/collection.ts:106\n                \n            \n\n\n            \n                \n                    Removes the given item from the Collection.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            typescript\n   * numbers.remove(4);\n   *\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAll\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAll(items?: Array, event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/collection/collection.ts:123\n                \n            \n\n\n            \n                \n                    Removes all items from the Collection.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            typescript\n   * numbers.removeAll();\n   *\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            replaceWith\n                        \n                        \n                    \n                \n            \n            \n                \nreplaceWith(items: Array, event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/collection/collection.ts:147\n                \n            \n\n\n            \n                \n                    Replaces all current items with the given items. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle(item: T, event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/collection/collection.ts:138\n                \n            \n\n\n            \n                \n                    Toggles the item in and out of collection \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n    \n        Collection\nCollection is a more sophisticated Array:\nts\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();\nIt is the Parent Class of List and Selection.\n\n    \n\n    \n        import { Observable, Subject } from 'rxjs';\n\n/**\n * A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n */\nexport class Collection {\n  /**\n   * The items must all have the same type T.\n   */\n  public items: Array;\n  /** Subject that is nexted when the items update */\n  protected update: Subject> = new Subject();\n  /** Subject that is nexted when the items change */\n  public update$: Observable> = this.update.asObservable();\n\n  /**\n   * Constructs the collection with the given item Array (optional).\n   * @example\n   * ```typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   * ```\n   */\n  constructor(items: Array = []) {\n    this.items = [];\n    items.forEach((item) => {\n      this.items.push(item);\n    });\n  }\n\n  /** Returns the index of the given item */\n  index(item: T): number {\n    return this.items.indexOf(item);\n  }\n\n  /**\n   * Checks if the Collection contains the given item.\n   * @example\n   * ```typescript\n   * numbers.has(2); //true\n   * ```\n   */\n  has(item: T): boolean {\n    return this.index(item) !== -1;\n  }\n\n  /**\n   * Checks if the Collection contains all given items.\n   * @example\n   * ```typescript\n   * numbers.has([1,2]); //true\n   * ```\n   */\n  hasAll(items: Array = []): boolean {\n    if (items === null) {\n      // console.warn('has all fail', this, items);\n      return false;\n    }\n    return items.reduce((has, item) => {\n      return has && this.has(item);\n    }, true);\n  }\n\n  /**\n   * Adds the given item to the Collection. If the unique flag is set, the item will only be added\n   * if it is not contained.\n   * @example\n   * ```typescript\n   * numbers.add(4);\n   * ```\n   */\n  add(item: T, unique?: boolean, event: boolean = true) {\n    if (unique && this.has(item)) {\n      return false;\n    }\n    this.items.push(item);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Adds the given items to the Collection. If the unique flag is set, only items that are not\n   * contained will be added.\n   * @example\n   * ```typescript\n   * numbers.addAll([5, 6, 7]);\n   * ```\n   */\n  addAll(items: Array = [], unique: boolean = false, event: boolean = true) {\n    const length = this.items.length;\n    items.forEach((item) => {\n      this.add(item, unique, false);\n    });\n    if (this.items.length > length && event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes the given item from the Collection.\n   * @example\n   * ```typescript\n   * numbers.remove(4);\n   * ```\n   */\n  remove(item: T, event: boolean = true) {\n    if (!this.has(item)) {\n      return false;\n    }\n    this.items.splice(this.index(item), 1);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes all items from the Collection.\n   * @example\n   * ```typescript\n   * numbers.removeAll();\n   * ```\n   */\n  removeAll(items?: Array, event: boolean = true) {\n    const length = this.items.length;\n    if (items) {\n      items.forEach((item) => {\n        this.remove(item, false);\n      });\n    } else {\n      this.items.length = 0;\n    }\n    if (this.items.length , event: boolean = true) {\n    if (this.items && this.items.length) {\n      this.removeAll(undefined, false);\n    }\n    if (items.length) {\n      this.addAll(items, false, false);\n    }\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Returns true if the collection is empty */\n  isEmpty() {\n    return this.items.length === 0;\n  }\n\n  /** Moves the given item to the given array index. */\n  move(item: T, index: number, event: boolean = true) {\n    if (!this.has(item) || this.items.indexOf(item) === index) {\n      return;\n    }\n    this.items.splice(index, 0, this.items.splice(this.items.indexOf(item), 1)[0]);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/config/config.ts\n        \n\n            \n                Description\n            \n            \n                The Root class for all Configurations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/config/config.ts:5\n                            \n                        \n\n                \n                    \n                        The config object. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Optional\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(key: string, property: string, config?: Object)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/config/config.ts:13\n                \n            \n\n\n            \n                \n                    This method is a getter and setter for configurations. The key stands for the config (e.g. model).\nThe property is a sub property if the config (e.g. fields => model.fields).\nIf no config is given, the method just returns the configuration for the given property.\nIf a config is given, the property config is merged via Object.assign. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Config {\n  // TODO use Map !!!! (like simi did in EventEmitter.ts)\n  /** The config object. */\n  private config: {\n    [key: string]: Object;\n  } = {};\n\n  /** This method is a getter and setter for configurations. The key stands for the config (e.g. model).\n   * The property is a sub property if the config (e.g. fields => model.fields).\n   * If no config is given, the method just returns the configuration for the given property.\n   * If a config is given, the property config is merged via Object.assign. */\n  public configure?(key: string, property: string, config?: Object) {\n    if (!this.config[key]) {\n      this.config[key] = {};\n    }\n    if (!config) {\n      return this.config[key][property];\n    }\n    if (!this.config[key][property]) {\n      this.config[key][property] = {};\n    }\n    Object.assign(this.config[key][property], config);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CrudComponent.html":{"url":"components/CrudComponent.html","title":"component - CrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/crud/crud.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\nhtml\n * \n *\nhttps://components.entrecode.de/entries/crud?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    WithLoader\n                    WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./crud.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryPop\n                            \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                    Private\n                                loadEntry\n                            \n                            \n                                    Public\n                                mustReload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                selectEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, modelConfig: ModelConfigService, notificationService: NotificationsService, symbol: SymbolService, cdr: ChangeDetectorRef, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/crud/crud.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                        ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         CrudConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:32\n                            \n                        \n                \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:30\n                            \n                        \n                \n                    \n                        The model that should be crud'ed. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:34\n                            \n                        \n                \n                    \n                        The selection that should be used \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:42\n                            \n                        \n                \n                    \n                        Emits when a list element is clicked \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:44\n                            \n                        \n                \n                    \n                        Emits when the selection has changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasMethod\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasMethod(method: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/crud/crud.component.ts:77\n                \n            \n\n\n            \n                \n                    Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEntry(item)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/crud/crud.component.ts:89\n                \n            \n\n\n            \n                \n                    Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mustReload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustReload(item)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/crud/crud.component.ts:82\n                \n            \n\n\n            \n                \n                    Returns true if the visible fields in the list differ from the visible fields in the form\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/crud/crud.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectEntry(item)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/crud/crud.component.ts:116\n                \n            \n\n\n            \n                \n                    Is called when an item in the list is clicked. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryPop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EntryPopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EntryPopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:38\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EntryListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EntryListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:36\n                            \n                        \n\n                \n                    \n                        The EntryList inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:40\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:46\n                            \n                        \n\n                \n                    \n                        Emitted Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CrudConfig } from './crud-config.interface';\nimport { EntryListComponent } from '../entry-list/entry-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { AuthService } from '../auth/auth.service';\nimport { EntryPopComponent } from '../entry-pop/entry-pop.component';\nimport { WithLoader } from '@ec.components/ui';\nimport { Notification, WithNotifications, SymbolService } from '@ec.components/ui';\nimport { ModelConfigService } from '../model-config/model-config.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * https://components.entrecode.de/entries/crud?e=1\n * */\n@Component({\n  selector: 'ec-crud',\n  templateUrl: './crud.component.html',\n})\nexport class CrudComponent implements OnInit, WithLoader, WithNotifications {\n  /** The model that should be crud'ed. */\n  @Input() model: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The EntryList inside the template. */\n  @ViewChild(EntryListComponent) list: EntryListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(EntryPopComponent) entryPop: EntryPopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Emitted Notifications */\n  notifications: Notification[] = [];\n\n  constructor(\n    private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private modelConfig: ModelConfigService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n    private cdr: ChangeDetectorRef,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute,\n  ) {\n    /* if (route) {\n      merge(route.data, route.params, route.queryParams)\n        .subscribe(({ model }) => {\n          if (model) {\n            this.model = model;\n          }\n        });\n    } */\n  }\n\n  ngOnInit() {\n    this.auth.getAllowedModelMethods(this.model, this.config.methods).then((methods) => {\n      this.config.methods = methods;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Returns true if the visible fields in the list differ from the visible fields in the form*/\n  public mustReload(item) {\n    return !Object.keys(item.config.fields).reduce((equal, property) => {\n      return equal && (item.config.fields[property].list !== false || item.config.fields[property].form === false);\n    }, true);\n  }\n\n  /** Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. */\n  private loadEntry(item) {\n    return this.modelConfig\n      .getMinLevel(this.model, this.config.fields)\n      .then((minLevel) => {\n        const levels = Math.max(minLevel, this.config.levels || 1);\n        if (!this.config.alwaysLoadEntry && !this.mustReload(item) && levels === 1) {\n          return item.getBody();\n        }\n        return this.sdk.api.entry(this.model, item.id(), levels);\n      })\n      .then((loadedEntry) => {\n        this.entryPop.edit(loadedEntry);\n        this.notificationService.emit({ hide: this.notifications });\n      })\n      .catch((err) => {\n        console.log('error while loading entry to edit', err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.load'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications,\n        });\n      });\n  }\n\n  /** Is called when an item in the list is clicked. */\n  public selectEntry(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.loaderService.wait(this.loadEntry(item), this.loader);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ config?.createLabel }}\n      \n        \n      \n    \n  \n  \n    \n    \n  \n\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ config?.createLabel }}                                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'CrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudConfig.html":{"url":"interfaces/CrudConfig.html","title":"interface - CrudConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/crud/crud-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                The CrudConfig allows a quick customization of an ec-crud component. \n\n            \n\n            \n                Extends\n            \n            \n                        ListConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysLoadEntry\n                                \n                                \n                                            Optional\n                                        createLabel\n                                \n                                \n                                            Optional\n                                        customUpload\n                                \n                                \n                                            Optional\n                                        deleteOnRemove\n                                \n                                \n                                            Optional\n                                        develop\n                                \n                                \n                                            Optional\n                                        disableCreatePop\n                                \n                                \n                                            Optional\n                                        disableListPop\n                                \n                                \n                                            Optional\n                                        disableRemove\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        disableSelectSwitch\n                                \n                                \n                                            Optional\n                                        disableUrlUpload\n                                \n                                \n                                            Optional\n                                        dropdownFields\n                                \n                                \n                                            Optional\n                                        fileOptions\n                                \n                                \n                                            Optional\n                                        hideAssetGroupSelect\n                                \n                                \n                                            Optional\n                                        keepPopOpen\n                                \n                                \n                                            Optional\n                                        levels\n                                \n                                \n                                            Optional\n                                        loader\n                                \n                                \n                                            Optional\n                                        methods\n                                \n                                \n                                            Optional\n                                        nestedPopActive\n                                \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        pluralLabel\n                                \n                                \n                                            Optional\n                                        popColumns\n                                \n                                \n                                            Optional\n                                        safeDelete\n                                \n                                \n                                            Optional\n                                        singularLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysLoadEntry\n                                    \n                                \n                                \n                                    \n                                        alwaysLoadEntry:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an entry is always loaded when opened, even with lvl1 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createLabel\n                                    \n                                \n                                \n                                    \n                                        createLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for the entry create button \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customUpload\n                                    \n                                \n                                \n                                    \n                                        customUpload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, a pop will open before upload to set up custom options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteOnRemove\n                                    \n                                \n                                \n                                    \n                                        deleteOnRemove:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, selects will delete entries that are removed from the selection \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        develop\n                                    \n                                \n                                \n                                    \n                                        develop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an extra develop button will be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCreatePop\n                                    \n                                \n                                \n                                    \n                                        disableCreatePop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no create pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableListPop\n                                    \n                                \n                                \n                                    \n                                        disableListPop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no list pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRemove\n                                    \n                                \n                                \n                                    \n                                        disableRemove:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, removal of items wont be possible (select) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be accessible \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSelectSwitch\n                                    \n                                \n                                \n                                    \n                                        disableSelectSwitch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select mode switch will be shown \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableUrlUpload\n                                    \n                                \n                                \n                                    \n                                        disableUrlUpload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, assets cannot be upload via url \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdownFields\n                                    \n                                \n                                \n                                    \n                                        dropdownFields:         FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The fields that are used in select dropdowns, defaults to label field only. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileOptions\n                                    \n                                \n                                \n                                    \n                                        fileOptions:         FileOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default options for file uploads \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideAssetGroupSelect\n                                    \n                                \n                                \n                                    \n                                        hideAssetGroupSelect:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Hides the assetGroup select in asset-list-pop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepPopOpen\n                                    \n                                \n                                \n                                    \n                                        keepPopOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the entry pop will remain open after the entry has been successfully saved. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levels\n                                    \n                                \n                                \n                                    \n                                        levels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:         LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoaderComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external loader component that should be used, falls back to internal. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methods\n                                    \n                                \n                                \n                                    \n                                        methods:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An Array of Methods that should be supported. Possible values are create, read, update and delete\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nestedPopActive\n                                    \n                                \n                                \n                                    \n                                        nestedPopActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, a nested pop will be active immediately \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:         NotificationsComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotificationsComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external notifications component that should be used, falls back to internal \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    maps the permissions to the methods post put create delete \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sets a placeholder. Used e.g. for empty entry-select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluralLabel\n                                    \n                                \n                                \n                                    \n                                        pluralLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for multiple entities \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popColumns\n                                    \n                                \n                                \n                                    \n                                        popColumns:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines the column width of the pops used. Defaults to popService.defaultColumns \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeDelete\n                                    \n                                \n                                \n                                    \n                                        safeDelete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, delete operations need confirmation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singularLabel\n                                    \n                                \n                                \n                                    \n                                        singularLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for one entity \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ListConfig, FieldConfig } from '@ec.components/core';\nimport { NotificationsComponent, LoaderComponent } from '@ec.components/ui';\nimport { FileOptions } from '../files/file.service';\n\n/** The CrudConfig allows a quick customization of an ec-crud component. */\nexport interface CrudConfig extends ListConfig {\n  /** The fields that are used in select dropdowns, defaults to label field only. */\n  dropdownFields?: FieldConfig;\n  /** The label for one entity */\n  singularLabel?: string;\n  /** The label for multiple entities */\n  pluralLabel?: string;\n  /** The label for the entry create button */\n  createLabel?: string;\n  /** An Array of Methods that should be supported. Possible values are create, read, update and delete*/\n  methods?: Array;\n  /** An external loader component that should be used, falls back to internal. */\n  loader?: LoaderComponent;\n  /** An external notifications component that should be used, falls back to internal */\n  notifications?: NotificationsComponent;\n  /** If true, an extra develop button will be shown*/\n  develop?: boolean;\n  /** If true, the entry pop will remain open after the entry has been successfully saved. */\n  keepPopOpen?: boolean;\n  /** With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)*/\n  levels?: number;\n  /** If true, an entry is always loaded when opened, even with lvl1 */\n  alwaysLoadEntry?: boolean;\n  /** maps the permissions to the methods post put create delete */\n  permissions?: { put?: string | boolean; post?: string | boolean; get?: string | boolean; delete?: string | boolean };\n  /** If true, no select mode switch will be shown */\n  disableSelectSwitch?: boolean;\n  /** If true, no list pop will be available at selects */\n  disableListPop?: boolean;\n  /** If true, assets cannot be upload via url */\n  disableUrlUpload?: boolean;\n  /** If true, no create pop will be available at selects */\n  disableCreatePop?: boolean;\n  /** If true, no dropdown will be accessible */\n  disableSearchbar?: boolean;\n  /** If true, removal of items wont be possible (select) */\n  disableRemove?: boolean;\n  /** If true, selects will delete entries that are removed from the selection */\n  deleteOnRemove?: boolean;\n  /** If true, delete operations need confirmation */\n  safeDelete?: boolean;\n  /** Hides the assetGroup select in asset-list-pop */\n  hideAssetGroupSelect?: boolean;\n  /** Default options for file uploads */\n  fileOptions?: FileOptions;\n  /** If true, a pop will open before upload to set up custom options */\n  customUpload?: boolean;\n  /** Defines the column width of the pops used. Defaults to popService.defaultColumns */\n  popColumns?: number;\n  /** If true, a nested pop will be active immediately */\n  nestedPopActive?: boolean;\n  /** Sets a placeholder. Used e.g. for empty entry-select */\n  placeholder?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryActionbarComponent\n\nEntryActionbarComponent\n\nDataModule -->\n\nEntryActionbarComponent->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryActionbarComponent \n\nEntryActionbarComponent \n\nEntryActionbarComponent  -->\n\nDataModule->EntryActionbarComponent \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nEntryService\n\nEntryService\n\nDataModule -->\n\nEntryService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/data.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminEntryInputComponent\n                        \n                        \n                            CrudComponent\n                        \n                        \n                            DefaultEntryInputComponent\n                        \n                        \n                            DefaultEntryOutputComponent\n                        \n                        \n                            EntriesDirective\n                        \n                        \n                            EntryActionbarComponent\n                        \n                        \n                            EntryDirective\n                        \n                        \n                            EntryFormComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntryPopComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdminEntryInputComponent\n                        \n                        \n                            DefaultEntryInputComponent\n                        \n                        \n                            DefaultEntryOutputComponent\n                        \n                        \n                            EntryActionbarComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            EntryService\n                        \n                        \n                            HistoryService\n                        \n                        \n                            ModelConfigService\n                        \n                        \n                            TypeConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CrudComponent\n                        \n                        \n                            EntriesDirective\n                        \n                        \n                            EntryActionbarComponent\n                        \n                        \n                            EntryDirective\n                        \n                        \n                            EntryFormComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntryPopComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forEnvironment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forEnvironment(environment)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/data.module.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    environment\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@ec.components/ui';\nimport { DndModule } from 'ngx-drag-drop';\nimport { AuthModule } from './auth/auth.module';\nimport { CrudComponent } from './crud/crud.component';\nimport { EntryService } from './entry/entry.service';\nimport { EntriesDirective } from './entries/entries.directive';\nimport { AdminEntryInputComponent } from './entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from './entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from './entry-form/default-entry-output.component';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { EntryListPopComponent } from './entry-list-pop/entry-list-pop.component';\nimport { EntryListComponent } from './entry-list/entry-list.component';\nimport { EntryPopComponent } from './entry-pop/entry-pop.component';\nimport { EntrySelectComponent } from './entry-select/entry-select.component';\nimport { EntryDirective } from './entry/entry.directive';\nimport { FilesModule } from './files/files.module';\nimport { ModelConfigService } from './model-config/model-config.service';\nimport { TypeConfigService } from './model-config/type-config.service';\nimport { ResourceModule } from './resource/resource.module';\nimport { HistoryService } from './sdk/history.service';\nimport { SdkModule } from './sdk/sdk.module';\nimport { EntryListSelectComponent } from './entry-list-select/entry-list-select.component';\nimport { EntryActionbarComponent } from './entry-actionbar/entry-actionbar.component';\n\nexport const dataModuleConfig = {\n  entryComponents: [\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntrySelectComponent,\n    EntryActionbarComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n  ],\n  declarations: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntryListSelectComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryActionbarComponent,\n    EntryListPopComponent,\n  ],\n  imports: [FormsModule, CommonModule, UiModule, SdkModule, FilesModule, AuthModule, ResourceModule, DndModule],\n  exports: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryActionbarComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n    RouterModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule,\n  ],\n  providers: [\n    EntryService,\n    TypeConfigService,\n    ModelConfigService,\n    HistoryService,\n    {\n      provide: 'environment',\n      useValue: {\n        environment: 'live',\n        datamanagerID: '83cc6374',\n      },\n    },\n  ],\n};\n\n@NgModule(dataModuleConfig)\nexport class DataModule {\n  static forEnvironment(environment): ModuleWithProviders {\n    return {\n      ngModule: DataModule,\n      providers: [\n        {\n          provide: 'environment',\n          useValue: Object.assign(\n            {\n              environment: 'live',\n            },\n            environment,\n          ),\n        },\n      ],\n    };\n  }\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeComponent.html":{"url":"components/DatetimeComponent.html","title":"component - DatetimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/datetime/datetime.component.ts\n\n\n    \n        Description\n    \n    \n        Input for a datetime.\nhttps://components.entrecode.de/ui/datetime?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatetimeComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-datetime\n            \n\n\n\n\n            \n                templateUrl\n                datetime.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                disabled\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disableTime\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         moment.Moment\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:24\n                            \n                        \n                \n                    \n                        The date that should be displayed at start. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableTime\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:32\n                            \n                        \n                \n                    \n                        If true, the time will not be displayed nor will be editable. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:26\n                            \n                        \n                \n                    \n                        The form control that holds the date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:34\n                            \n                        \n                \n                    \n                        The input's placeholder \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:47\n                \n            \n\n\n            \n                \n                    registerOnChange implementation of ControlValueAccessor \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:52\n                \n            \n\n\n            \n                \n                    registerOnTouched implementation of ControlValueAccessor \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:39\n                \n            \n\n\n            \n                \n                    Selects the given Date when the model changes. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalendarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CalendarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:28\n                            \n                        \n\n                \n                    \n                        The used calendar component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:36\n                            \n                        \n\n                \n                    \n                        If true, the time cannot be changed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:44\n                            \n                        \n\n                \n                    \n                        Change propagation for ControlValueAccessor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weekdays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:30\n                            \n                        \n\n                \n                    \n                        Array of the days of a week. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport moment from 'moment-es6';\nimport { CalendarComponent } from '@ec.components/calendar';\n\n/** Input for a datetime.\n *\n * https://components.entrecode.de/ui/datetime?e=1\n *\n */\n@Component({\n  selector: 'ec-datetime',\n  templateUrl: 'datetime.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatetimeComponent),\n      multi: true,\n    },\n  ],\n})\nexport class DatetimeComponent implements ControlValueAccessor {\n  /** The date that should be displayed at start. */\n  @Input() date: moment.Moment;\n  /** The form control that holds the date */\n  @Input() formControl: FormControl = new FormControl();\n  /** The used calendar component */\n  @ViewChild(CalendarComponent) calendar: CalendarComponent;\n  /** Array of the days of a week. */\n  public weekdays: string[];\n  /** If true, the time will not be displayed nor will be editable. */\n  @Input() disableTime: boolean;\n  /** The input's placeholder */\n  @Input() placeholder = '';\n  /** If true, the time cannot be changed */\n  disabled: boolean;\n\n  /** Selects the given Date when the model changes. */\n  writeValue(value: Date) {\n    this.calendar.writeValue(value);\n  }\n\n  /** Change propagation for ControlValueAccessor */\n  propagateChange = (_: any) => {};\n\n  /** registerOnChange implementation of ControlValueAccessor */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** registerOnTouched implementation of ControlValueAccessor */\n  registerOnTouched() {}\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n                \n            \n        \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DatetimePipe.html":{"url":"pipes/DatetimePipe.html","title":"pipe - DatetimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DatetimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/calendar/src/lib/datetime.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        datetime\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: Date | string, pattern: string | string[], raw?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/calendar/src/lib/datetime.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Date | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pattern\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.dateFormat\n                                    \n\n                                \n                                \n                                    raw\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Inject } from '@angular/core';\nimport moment from 'moment-es6';\n/* import { SymbolService } from '../../symbol/symbol.service'; */\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'datetime',\n})\nexport class DatetimePipe implements PipeTransform {\n  constructor(@Inject('moment.format.date') private dateFormat /* private symbol: SymbolService */) {}\n  transform(\n    value: Date | string,\n    pattern: string | string[] = this.dateFormat /* this.symbol.resolve('moment.format.date') */,\n    raw?: string,\n  ): string {\n    if (!value) {\n      return '';\n    }\n    if (raw) {\n      console.log('raw', raw);\n    }\n    const typed = moment(value, pattern, true);\n    if (!typed.isValid()) {\n      return '';\n    }\n    if (Array.isArray(pattern)) {\n      pattern = pattern[0];\n    }\n    return moment(value).format(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/calendar/src/lib/calendar/month.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a day inside the a month.\nhttps://components.entrecode.de/ui/datetime?e=1\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        draggable\n                                \n                                \n                                        first\n                                \n                                \n                                        format\n                                \n                                \n                                            Optional\n                                        heat\n                                \n                                \n                                        index\n                                \n                                \n                                        last\n                                \n                                \n                                        today\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The moment that is represented by the day. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    determines if the day can be dragged to change the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the first in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The formatted day number. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heat\n                                    \n                                \n                                \n                                    \n                                        heat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cell index \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the last in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag that is true if the day is today. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can be given a type, to set a class. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output, Inject } from '@angular/core';\n/* import { SymbolService } from '../../symbol/symbol.service'; */\nimport moment from 'moment-es6';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n/** Interface for a day inside the a month.\n * https://components.entrecode.de/ui/datetime?e=1\n * */\nexport interface Day {\n  /** The cell index */\n  index: number;\n  /** The moment that is represented by the day. */\n  date: moment.Moment;\n  /** Can be given a type, to set a class. */\n  type?: string;\n  /** The formatted day number. */\n  format: string;\n  /** Flag that is true if the day is today. */\n  today: boolean;\n  /** if the day is the first in the timespan */\n  first: boolean;\n  /** if the day is the last in the timespan */\n  last: boolean;\n  /** determines if the day can be dragged to change the timespan */\n  draggable: boolean;\n  /** custom class */\n  heat?: string;\n}\n\n/** Displays the days of a month in a calendarish table. */\n@Component({\n  selector: 'ec-month',\n  templateUrl: 'month.component.html',\n})\nexport class MonthComponent implements OnInit, OnChanges {\n  dragged: any;\n  /** The current selected date */\n  @Input() selected: moment.Moment;\n  /** Color mapping for day cells. E.g. to view a month heatmap */\n  @Input() colors: Object;\n  /** Class mapping for day cells. E.g. to apply different background classes */\n  @Input() heatmap: Object;\n  /** Timespan that is reflected. Marks days inside the span */\n  @Input() timespan: moment.Moment[];\n  /** The current date (for showing month) */\n  @Input() date: moment.Moment;\n  /** The color of days that are inside the timespan */\n  @Input() spancolor = '#ccc';\n  /** If true, the timespan start cannot be dragged */\n  @Input() disableDragStart = false;\n  /** If true, the timespan end cannot be dragged */\n  @Input() disableDragEnd = false;\n  /** If true, nothing can be changed */\n  @Input() disabled;\n  /** The current month as string */\n  public formatted: string;\n  /** The cells containing the days */\n  public cells: Array;\n  /** Format for month in header */\n  public monthFormat = 'MMMM YYYY';\n  /** Emits when the selected day changes. */\n  @Output() dayClicked: EventEmitter = new EventEmitter();\n  /** Changed Timespan selection */\n  @Output() spanChanged: EventEmitter = new EventEmitter();\n\n  protected drag: Subject = new Subject();\n  protected changeSpan: Subject = new Subject();\n\n  /* public symbol: SymbolService */\n  constructor(@Inject('moment.format.month') protected defaultMonthFormat) {\n    /* this.monthFormat = this.symbol.resolve('moment.format.month') || this.monthFormat; */\n    this.monthFormat = this.defaultMonthFormat || this.monthFormat;\n    this.drag\n      .asObservable()\n      .pipe(debounceTime(100))\n      .subscribe((day) => this.dropDay(day));\n    this.changeSpan\n      .asObservable()\n      .pipe(debounceTime(800))\n      .subscribe((timespan) => this.spanChanged.emit(this.timespan));\n  }\n\n  dropDay(day: Day) {\n    if (!this.dragged || ((day.first && this.dragged.first) || (day.last && this.dragged.last))) {\n      return;\n    }\n    const newTimespan = [].concat(this.timespan);\n    newTimespan[this.dragged.first ? 0 : 1] = day.date.clone();\n    if (newTimespan[0].isAfter(newTimespan[1])) {\n      this.dragged.first = !this.dragged.first;\n      this.dragged.last = !this.dragged.last;\n      newTimespan.reverse();\n    }\n    this.timespan = newTimespan;\n    this.changeSpan.next(this.timespan);\n    /* if (this.cells[0] === day || this.cells[this.cells.length - 1] === day) {\n      // change month if dragging to edge\n      this.setDate(day.date.clone().subtract(1, 'days'));\n    } else {\n      this.setDate();\n    } */\n    this.setDate();\n  }\n\n  dragStart(day, e) {\n    if ((this.disableDragStart && day.first) || (this.disableDragEnd && day.last)) {\n      return;\n    }\n    this.dragged = day;\n    e.preventDefault();\n  }\n\n  mouseUp(day, e) {\n    if (!this.dragged) {\n      return;\n    }\n    delete this.dragged;\n    e.preventDefault();\n  }\n\n  mouseOver(day, e) {\n    if (!this.dragged || this.dragged === day) {\n      return;\n    }\n    e.preventDefault();\n    this.drag.next(day);\n  }\n\n  getDayColor(_moment: moment.Moment) {\n    if (this.colors && this.colors[_moment.toISOString()]) {\n      return this.colors[_moment.toISOString()];\n    }\n  }\n\n  getDayHeat(_moment: moment.Moment) {\n    if (this.heatmap && this.heatmap[_moment.toISOString()]) {\n      return this.heatmap[_moment.toISOString()];\n    }\n  }\n\n  /** Initializes the calendar. */\n  ngOnInit() {\n    this.setDate();\n  }\n\n  /** When changing the date or selected input, the calendar will update its view to display the month containing it. */\n  ngOnChanges(change) {\n    if (change.selected) {\n      this.setDate(this.selected);\n      return;\n    } else if (change.date) {\n      this.setDate(this.date);\n    } else if (change.timespan) {\n      this.setDate();\n    }\n    if (change.colors || change.heatmap) {\n      this.cells = this.getMonth(this.date.clone(), 'current');\n    }\n  }\n\n  /** Returns days of current month */\n  getMonth(day = moment(), type?: string): Array {\n    const begin = day\n      .clone()\n      .startOf('month')\n      .startOf('week'); // .subtract(weeksbefore * 7, 'days');\n    return new Array(42)\n      .fill(0)\n      .map((d, index) => begin.clone().add(index, 'days'))\n      .map((date, index) => {\n        const isStart =\n          this.timespan &&\n          date\n            .clone()\n            .startOf('day')\n            .isSame(this.timespan[0].clone().startOf('day'));\n        const isEnd =\n          this.timespan &&\n          date\n            .clone()\n            .startOf('day')\n            .isSame(this.timespan[1].clone().startOf('day'));\n        return {\n          index,\n          date,\n          type: date.format('MM YYYY') === day.format('MM YYYY') ? 'current' : 'other',\n          active: this.timespan && date.isBetween(this.timespan[0], this.timespan[1], 'days', '[]'),\n          first: isStart,\n          last: isEnd,\n          draggable: (!this.disableDragStart && isStart) || (!this.disableDragEnd && isEnd),\n          color: this.getDayColor(date),\n          heat: this.getDayHeat(date),\n          format: date.format('DD'),\n          today:\n            moment()\n              .startOf('day')\n              .diff(date, 'days') === 0,\n        };\n      });\n  }\n\n  /** Sets the calendars viewed date to the given moment's month. Renders always 42 cells to keep the layout consistent. */\n  setDate(date: moment.Moment = this.selected || this.date || moment()) {\n    if (this.disabled) {\n      return;\n    }\n    this.date = date.clone();\n    this.formatted = date.format(this.monthFormat);\n    this.cells = this.getMonth(date.clone(), 'current');\n  }\n\n  /** Selects the day of the given moment. */\n  selectDay(_moment: moment.Moment, emit = true): void {\n    if (this.disabled) {\n      return;\n    }\n    this.setDate(_moment);\n    this.selected = _moment;\n    if (emit) {\n      this.dayClicked.emit(_moment);\n    }\n  }\n\n  /** Clears the current selected date*/\n  clearSelection(): void {\n    delete this.selected;\n  }\n\n  /** Returns true if the given moment is currently selected (on a day basis) */\n  isSelected(_moment: moment.Moment): boolean {\n    if (!this.selected) {\n      return;\n    }\n    return this.selected.startOf('day').diff(_moment, 'days') === 0;\n  }\n\n  canAlter(value, span: string) {\n    if (!this.timespan) {\n      return true;\n    }\n    const newDate = this.date.clone().add(value, span);\n    return newDate.isBetween(this.timespan[0], this.timespan[1], 'months', '[]');\n  }\n\n  /** Updates the viewed date to reflect the given relative changes. */\n  alter(value, span: string): void {\n    if (!this.canAlter(value, span)) {\n      return;\n    }\n    this.setDate(this.date.clone().add(value, span));\n  }\n\n  /** Sets the current viewed date to today. */\n  today(): void {\n    this.setDate(moment());\n  }\n\n  /** Sets the current selected date to today. */\n  setToday(): void {\n    this.selectDay(moment());\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryInputComponent.html":{"url":"components/DefaultEntryInputComponent.html","title":"component - DefaultEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/default-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that can not be represented by the default input template. \n\n    \n\n    \n        Extends\n    \n    \n                DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-entry-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                        KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus(focus)\n                \n            \n\n\n            \n                \n                    Inherited from         DefaultInputComponent\n\n                \n            \n            \n                \n                        Defined in         DefaultInputComponent:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    focus\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DefaultInputComponent\n\n                \n            \n            \n                \n                        Defined in         DefaultInputComponent:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:21\n\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:15\n\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:23\n\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:19\n\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:17\n\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:26\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DefaultInputComponent, FormService, KeycommandsService } from '@ec.components/ui';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** This component holds the input templates for all field types that can not be represented by the default input template. */\n@Component({\n  templateUrl: './default-entry-input.component.html',\n})\nexport class DefaultEntryInputComponent extends DefaultInputComponent {\n  constructor(public sdk: SdkService, public formService: FormService, public keycommands: KeycommandsService) {\n    super(formService, keycommands);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n        &#x1F682;&#x1F683;&#x1F683;&#x1F683; Caution: Using single entry fields without validation is experimental\n    \n    \n  \n  \n    \n        &#x1F682;&#x1F683;&#x1F683;&#x1F683; No model set in field validation. Use inputView \"entries-actionbar\" or set validation...\n    \n    \n  \n  \n    \n  \n  \n    \n    \n    \n        &#x1F682;&#x1F683;&#x1F683;&#x1F683; No model set in field validation. Use inputView \"entries-actionbar\" or set validation...\n    \n    \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                🚂🚃🚃🚃 Caution: Using single entry fields without validation is experimental                        🚂🚃🚃🚃 No model set in field validation. Use inputView \"entries-actionbar\" or set validation...                                        🚂🚃🚃🚃 No model set in field validation. Use inputView \"entries-actionbar\" or set validation...                                                              🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryOutputComponent.html":{"url":"components/DefaultEntryOutputComponent.html","title":"component - DefaultEntryOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/default-entry-output.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all output types that cannot be represented by the default output component. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-entry-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-entry-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-output.component.ts:11\n                            \n                        \n\n                \n                    \n                        The field to output. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The item to display \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field, Item } from '@ec.components/core';\n\n/** This component holds the templates for all output types that cannot be represented by the default output component. */\n@Component({\n  selector: 'ec-default-entry-output',\n  templateUrl: './default-entry-output.component.html',\n})\nexport class DefaultEntryOutputComponent {\n  /** The field to output. */\n  field: Field;\n  /** The item to display */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n    JSON\n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} output coming soon!-->\n    {{item?.display(field.property)}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          JSON        🚂🚃🚃🚃 {{field.type}} output coming soon!-->    {{item?.display(field.property)}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultInputComponent.html":{"url":"components/DefaultInputComponent.html","title":"component - DefaultInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/default-input/default-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all basic field types. \n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    Focus\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./default-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./default-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:23\n                            \n                        \n\n                \n                    \n                            Injects the services. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                        KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus(focus)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    focus\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:21\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:15\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:23\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:19\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:17\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, AfterViewInit, OnChanges } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Field, Item } from '@ec.components/core';\nimport { Focus } from '../../utility/focus/focus.interface';\nimport { FormService } from '../form.service';\nimport { KeycommandsService } from '../../utility/keycommands/keycommands.service';\n\n/** This component holds the templates for all basic field types. */\n@Component({\n  templateUrl: './default-input.component.html',\n  styleUrls: ['./default-input.component.scss'],\n})\nexport class DefaultInputComponent implements AfterViewInit, Focus {\n  /** The field for which the input is meant. */\n  public field: Field;\n  /** The item that is targeted by the input */\n  public item: Item;\n  /** The form group that is used */\n  public group: FormGroup;\n  /** The form control that is used */\n  public control: FormControl;\n  /** Emitter to focus the input field */\n  focusEvent: EventEmitter = new EventEmitter();\n\n  /** Injects the services. */\n  constructor(public formService: FormService, public keycommands: KeycommandsService) {}\n\n  ngAfterViewInit() {\n    if (this.field && this.field.autofocus) {\n      this.focus();\n    }\n  }\n\n  focus(focus = true) {\n    setTimeout(() => {\n      this.focusEvent.emit(focus);\n    }, 100);\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n\n  \n    \n      \n    \n    \n  \n\n  \n    \n    {{ field.getPlaceholder() }}\n  \n\n  \n\n  \n\n  \n  \n\n  \n\n  \n    \n      {{ field.getPlaceholder() }}\n      \n        {{ option.label ? option.label : option }}\n      \n    \n    \n    {{ formService.isReadOnly(field, item) ? field.display() : '' }}\n  \n\n  \n    \n      {{ item?.display(field.property) }}\n    \n  \n\n  \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./default-input.component.scss\n                \n                :host {\n  flex: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ field.getPlaceholder() }}                        {{ field.getPlaceholder() }}              {{ option.label ? option.label : option }}                  {{ formService.isReadOnly(field, item) ? field.display() : \\'\\' }}              {{ item?.display(field.property) }}                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultOutputComponent.html":{"url":"components/DefaultOutputComponent.html","title":"component - DefaultOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/default-output/default-output.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the templates to output item field values. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-output/default-output.component.ts:11\n                            \n                        \n\n                \n                    \n                        The field that should be displayed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-output/default-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field, Item } from '@ec.components/core';\n\n/** Holds the templates to output item field values. */\n@Component({\n  selector: 'ec-default-output',\n  templateUrl: './default-output.component.html',\n})\nexport class DefaultOutputComponent {\n  /** The field that should be displayed */\n  field: Field;\n  /** The item that is targeted by the input */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n      {{ label }}\n    \n     (field.maxItems || 10)\">\n      &hellip;\n    \n  \n\n  \n    {{ item?.display(field.property) }}\n  \n\n  \n    &#10004;\n  \n  \n    {{ item?.display(field.property) }}\n  \n\n  \n    {{ item?.display(field.property) }}\n  \n  \n    {{ item?.display(field.property) }}\n  \n\n  \n    \n    {{ item?.display(field.property) }}\n  \n\n  \n    \n  \n\n  \n    \n    {{ item?.resolve(field.property)?.length }}\n  \n\n  \n    \n  \n\n  \n    \n    {{ item?.resolve(field.property)?.length }}\n  \n\n  \n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    \n  \n\n  \n    {{ item?.display(field.property) }}\n    \n  \n\n  \n    \n    text\n  \n  \n    {{item?.display(field.property)}}-->\n    JSON\n  \n  \n    {{ item?.display(field.property) }}\n    \n  \n  \n    {{ item?.display(field.property) }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}         (field.maxItems || 10)\">      …            {{ item?.display(field.property) }}        ✔        {{ item?.display(field.property) }}        {{ item?.display(field.property) }}        {{ item?.display(field.property) }}            {{ item?.display(field.property) }}                    {{ item?.resolve(field.property)?.length }}                    {{ item?.resolve(field.property)?.length }}                                          {{ item?.display(field.property) }}                text        {{item?.display(field.property)}}-->    JSON        {{ item?.display(field.property) }}            {{ item?.display(field.property) }}      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropzoneDirective.html":{"url":"directives/DropzoneDirective.html","title":"directive - DropzoneDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropzoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/dropzone/dropzone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that turns any element into a zone to drop files. TODO: demo \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecDropzone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecDropzone\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.is-active\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:11\n                            \n                        \n                \n                    \n                        If true the element acts normal \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ecDropzone\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:9\n                            \n                        \n                \n                    \n                        Emits when files are dropped \n\n                    \n                \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:7\n                            \n                        \n\n                \n                    \n                        The is-active class is bound to the host when dragover is active \n\n                    \n                \n\n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            dragleave\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndragleave(e)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:37\n                \n            \n\n\n            \n                \n                    flips active to false on dragleave \n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragover\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndragover(e)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:13\n                \n            \n\n\n            \n                \n                    flips active to true on dragover \n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndrop(e)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:24\n                \n            \n\n\n            \n                \n                    emits dropped files and flips active to false on drop \n\n\n                \n            \n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n/** Directive that turns any element into a zone to drop files. TODO: demo */\n@Directive({ selector: '[ecDropzone]' })\nexport class DropzoneDirective {\n  /** The is-active class is bound to the host when dragover is active */\n  @HostBinding('class.is-active') public active: boolean;\n  /** Emits when files are dropped */\n  @Output() ecDropzone: EventEmitter = new EventEmitter();\n  /** If true the element acts normal */\n  @Input() disabled = false;\n  /** flips active to true on dragover */\n  @HostListener('dragover', ['$event']) onDragOver(e) {\n    if (this.disabled) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.active) {\n      this.active = true;\n    }\n  }\n  /** emits dropped files and flips active to false on drop */\n  @HostListener('drop', ['$event']) onDrop(e) {\n    if (this.disabled) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    if (!e.dataTransfer.files || !e.dataTransfer.files.length) {\n      return;\n    }\n    this.ecDropzone.emit(e);\n    this.active = false;\n  }\n  /** flips active to false on dragleave */\n  @HostListener('dragleave', ['$event']) onDragLeave(e) {\n    if (this.disabled) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.active) {\n      this.active = false;\n    }\n  }\n  constructor(private el: ElementRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicRackComponent.html":{"url":"components/DynamicRackComponent.html","title":"component - DynamicRackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicRackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./dynamic-rack.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver } from '@angular/core';\n\n// import { CustomFieldComponent } from './custom-field.component';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  // selector: 'ec-dynamic-rack',\n  templateUrl: './dynamic-rack.component.html',\n})\nexport class DynamicRackComponent {\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n}\n\n    \n\n    \n        \n  \n    -->\n    -->\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      -->    -->  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicRackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicSlotComponent.html":{"url":"components/DynamicSlotComponent.html","title":"component - DynamicSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicSlotComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-dynamic-slot\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadComponent\n                        \n                        \n                    \n                \n            \n            \n                \nloadComponent(component: Type, attributes: Object)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:17\n                \n            \n\n\n            \n                \n                    Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    attributes\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewChild } from '@angular/core';\nimport { SlotHostDirective } from '../slot-host.directive';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-dynamic-slot',\n  templateUrl: './dynamic-slot.component.html',\n})\nexport class DynamicSlotComponent {\n  /** The FieldHostDirective will  be used to nest custom components into the field */\n  @ViewChild(SlotHostDirective) fieldHost: SlotHostDirective;\n\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(public componentFactoryResolver: ComponentFactoryResolver) {}\n\n  /** Loads the given component inside the fieldHost. Sets current item and field by default. */\n  loadComponent(component: Type, attributes: Object = {}): ComponentRef {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    const viewContainerRef = this.fieldHost.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    Object.assign(componentRef.instance, attributes);\n    return componentRef;\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntriesDirective.html":{"url":"directives/EntriesDirective.html","title":"directive - EntriesDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EntriesDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entries/entries.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entryList of a given model with the given config.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n                            WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecEntries]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                entryList\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Private\n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                load\n                            \n                            \n                                next\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                prev\n                            \n                            \n                                useList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                endless\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entries/entries.directive.ts:35\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:30\n                            \n                        \n                \n                    \n                        Should the entries be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endless\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:28\n                            \n                        \n                \n                    \n                        If true, calling next will append the next page to the items, making the list grow.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :         LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:32\n                            \n                        \n                \n                    \n                        The loader that should be used. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:24\n                            \n                        \n                \n                    \n                        The model to load from. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:26\n                            \n                        \n                \n                    \n                        The filterOptions for loading. \n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entries\n                        \n                        \n                    \n                \n            \n            \n                \nentries()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entries/entries.directive.ts:111\n                \n            \n\n\n            \n                \n                    This helper returns all items of the current entryList. \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isFirst\n                        \n                        \n                    \n                \n            \n            \n                \nisFirst()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entries/entries.directive.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLast\n                        \n                        \n                    \n                \n            \n            \n                \nisLast()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entries/entries.directive.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entries/entries.directive.ts:58\n                \n            \n\n\n            \n                \n                    Loads the entries \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            next\n                        \n                        \n                    \n                \n            \n            \n                \nnext()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entries/entries.directive.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entries/entries.directive.ts:45\n                \n            \n\n\n            \n                \n                    When the model is known, the entryList will be loaded. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prev\n                        \n                        \n                    \n                \n            \n            \n                \nprev()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entries/entries.directive.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            useList\n                        \n                        \n                    \n                \n            \n            \n                \nuseList(entryList)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entries/entries.directive.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entryList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entryList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EntryList\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:34\n                            \n                        \n\n                \n                    \n                        The current loaded entryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryResource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:22\n                            \n                        \n\n                \n                    \n                        The promise of the entryList call. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entries\nThis component can be used to load a list of entries from the template:\n```html\n\n  \n  {{muffin.name}}\n  \n\n```\n\n    \n\n    \n        import { Directive, Input, OnChanges } from '@angular/core';\nimport { LoaderComponent, WithLoader, NotificationsService } from '@ec.components/ui';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\nimport { SymbolService } from '@ec.components/ui';\n\n// import { filterOptions } from 'ec.sdk/lib/resources/ListResource';\n\n/** Loads an entryList of a given model with the given config.\n * https://components.entrecode.de/entries/entries?e=1\n */\n@Directive({\n  selector: '[ecEntries]',\n  exportAs: 'ecEntries',\n})\nexport class EntriesDirective implements OnChanges, WithLoader {\n  /** The promise of the entryList call. */\n  private promise: any;\n  /** The model to load from. */\n  @Input() model: string;\n  /** The filterOptions for loading. */\n  @Input() options: any = {}; // TODO cannot import #simibug : filterOptions;\n  /** If true, calling next will append the next page to the items, making the list grow.*/\n  @Input() endless = false;\n  /** Should the entries be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entryList */\n  private entryList: EntryList;\n  public items: EntryResource[] = [];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService,\n  ) {}\n\n  /** When the model is known, the entryList will be loaded. */\n  ngOnChanges() {\n    if (!this.model) {\n      return;\n    }\n    if (this.endless && this.options.page && this.options.page > 1) {\n      console.warn('cannot init ecEntries on page!==1 with strategy=endless');\n    }\n    if (this.autoload !== false) {\n      this.load();\n    }\n  }\n\n  /** Loads the entries */\n  load() {\n    this.promise = this.sdk.api\n      .entryList(this.model, this.options)\n      .then((list) => this.useList(list))\n      .catch((error) =>\n        this.notificationService.emit({\n          title: this.symbol.resolve('entries.load.error'),\n          error,\n        }),\n      );\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n\n  useList(entryList) {\n    this.entryList = entryList;\n    const items = this.entryList.getAllItems();\n    if (this.endless) {\n      this.items = this.items.concat(items);\n      this.items = this.items.filter((item) => this.items.find((_item) => _item.id === item.id));\n    } else {\n      this.items = this.entryList.getAllItems();\n    }\n  }\n\n  next() {\n    this.promise = this.entryList.followNextLink().then((list) => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  prev() {\n    this.promise = this.entryList.followPrevLink().then((list) => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  isLast() {\n    return !this.entryList || !this.entryList.hasNextLink();\n  }\n\n  isFirst() {\n    if (this.endless) {\n      return true;\n    }\n    return !this.entryList || !this.entryList.hasFirstLink();\n  }\n\n  /** This helper returns all items of the current entryList. */\n  entries() {\n    if (!this.entryList) {\n      return [];\n    }\n    return this.entryList.getAllItems();\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntryDirective.html":{"url":"directives/EntryDirective.html","title":"directive - EntryDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EntryDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entry/entry.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entry by id to the template.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n                            WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecEntry]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                entryId\n                            \n                            \n                                levels\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:25\n                            \n                        \n                \n                    \n                        Should the entry be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entryId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:21\n                            \n                        \n                \n                    \n                        The entry id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:27\n                            \n                        \n                \n                    \n                        The levels to use. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :         LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:31\n                            \n                        \n                \n                    \n                        The loader that should be used. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:23\n                            \n                        \n                \n                    \n                        The model to load from \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:29\n                            \n                        \n                \n                    \n                        Fires as soon as the entry has been loaded. \n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry/entry.directive.ts:51\n                \n            \n\n\n            \n                \n                    Loads the entry. Can be called from template when using autoload=false \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry/entry.directive.ts:43\n                \n            \n\n\n            \n                \n                    as soon as model and id are known, the entry will be loaded. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                        The current loaded entry \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:19\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entry\nThis directive can be used to load a single entry directly from the template:\n```html\n\n{{muffin.entry?.name}}\n```\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent, NotificationsService } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui';\n\n/** Loads an entry by id to the template.\n * https://components.entrecode.de/entries/entries?e=1\n * */\n@Directive({\n  selector: '[ecEntry]',\n  exportAs: 'ecEntry',\n})\nexport class EntryDirective implements OnChanges, WithLoader {\n  /** The loading promise */\n  promise: any;\n  /** The entry id that should be loaded*/\n  @Input() entryId: string;\n  /** The model to load from */\n  @Input() model: string;\n  /** Should the entry be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** Fires as soon as the entry has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entry */\n  entry: any;\n\n  /** Injects the sdk */\n  constructor(\n    private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService,\n  ) {}\n\n  /** as soon as model and id are known, the entry will be loaded. */\n  ngOnChanges() {\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the entry. Can be called from template when using autoload=false */\n  load() {\n    if (!this.entryId || !this.model) {\n      return;\n    }\n    this.promise = this.sdk.api\n      .entry(this.model, this.entryId, this.levels)\n      .then((entry) => {\n        this.entry = entry;\n        this.loaded.emit(entry);\n        return entry;\n      })\n      .catch((error) =>\n        this.notificationService.emit({\n          title: this.symbol.resolve('entry.load.error'),\n          error,\n        }),\n      );\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListPopComponent.html":{"url":"components/EntryListPopComponent.html","title":"component - EntryListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop that contains an entry list. TODO: add demo \n\n    \n\n    \n        Extends\n    \n    \n                PopComponent\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-entry-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./entry-list-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                modelConfig\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHeader\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelConfig: ModelConfigService, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                        ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                        PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         CrudConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:28\n\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:34\n\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:36\n\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:32\n\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:38\n\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ec-list-pop modal-wrapper modal-wrapper_backdrop'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:30\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click($event)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:43\n\n                \n            \n\n\n            \n                \n                    Listens for document:click and hides \n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHeader\n                        \n                        \n                    \n                \n            \n            \n                \ngetHeader(entryList)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entryList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(item)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:50\n                \n            \n\n\n            \n                \n                    emits columnClicked event or toggles selection if no observers. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:88\n\n                \n            \n\n\n            \n                \n                    Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOutside\n                        \n                        \n                    \n                \n            \n            \n                \nisOutside(element)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:58\n\n                \n            \n\n\n            \n                \n                    yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(e?)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:72\n\n                \n            \n\n\n            \n                \n                    Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle(e?)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:63\n\n                \n            \n\n\n            \n                \n                    Shows if not active, hides if active. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SearchbarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:30\n\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:55\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Item, Selection } from '@ec.components/core';\nimport { PopComponent, PopService, SearchbarComponent } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ModelConfigService } from '../model-config/model-config.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\n\n/** A Pop that contains an entry list. TODO: add demo */\n@Component({\n  selector: 'ec-entry-list-pop',\n  templateUrl: './entry-list-pop.component.html',\n})\nexport class EntryListPopComponent extends PopComponent implements OnChanges {\n  @Input() model: string;\n  @Input() config: CrudConfig;\n  @Input() selection: Selection;\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n  /** Set host class to make sure the type is used */\n  @HostBinding('class') class = 'ec-list-pop modal-wrapper modal-wrapper_backdrop';\n  lightModel: any;\n\n  constructor(\n    public modelConfig: ModelConfigService,\n    public popService: PopService,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(popService, elementRef, cdr);\n  }\n\n  ngOnChanges() {\n    if (this.model) {\n      this.modelConfig.getLightModel(this.model).then((model) => (this.lightModel = model));\n    }\n    this.config = Object.assign({}, this.config || {}, { hidePagination: true, disableHeader: true });\n  }\n\n  /** emits columnClicked event or toggles selection if no observers. */\n  select(item) {\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    } else if (this.selection) {\n      this.selection.toggle(item);\n    }\n    // this.searchbar.focusEvent.emit(true);\n  }\n  getHeader(entryList) {\n    const label = this.config.singularLabel || `${entryList.model}`;\n    if (!this.selection || this.selection.isEmpty()) {\n      return `${label}`;\n    }\n    return `${label}: ${this.selection.items.length} selected`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    {{ getHeader(entryList) }}\n  \n  \n  \n    \n    \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ getHeader(entryList) }}                      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntryService.html":{"url":"injectables/EntryService.html","title":"injectable - EntryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EntryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entry/entry.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resourceService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                save\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry/entry.service.ts:14\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                        ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            change\n                        \n                        \n                    \n                \n            \n            \n                \nchange(filter?: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry/entry.service.ts:19\n                \n            \n\n\n            \n                \n                    Yields an observable that emits for all updates that match the given filter \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clean\n                        \n                        \n                    \n                \n            \n            \n                \nclean(value: Object, config?: ItemConfig, cleanReadOnly)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry/entry.service.ts:76\n                \n            \n\n\n            \n                \n                    Removes all null or undefined values from the given object \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    config\n                                    \n                                                ItemConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    cleanReadOnly\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(model: string, value: Object)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry/entry.service.ts:100\n                \n            \n\n\n            \n                \n                    Creates a new entry with the given value for the given model. Fires the \"create\" change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            del\n                        \n                        \n                    \n                \n            \n            \n                \ndel(model: string, entry: EntryResource)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry/entry.service.ts:114\n                \n            \n\n\n            \n                \n                    deletes the given entry and emits the \"delete\" change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entry\n                                    \n                                            EntryResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isImmutableProperty\n                        \n                        \n                    \n                \n            \n            \n                \nisImmutableProperty(key: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry/entry.service.ts:71\n                \n            \n\n\n            \n                \n                    Returns true if the given field key is an immutable system property \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(model: string, entryItem: Item, value: Object)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry/entry.service.ts:37\n                \n            \n\n\n            \n                \n                    Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entryItem\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(model, entryItem: Item, value: Object, safePut)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/entry/entry.service.ts:52\n                \n            \n\n\n            \n                \n                    Updates the given entry with the new value. Fires the \"update\" change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    entryItem\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    safePut\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { Item, ItemConfig } from '@ec.components/core';\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class EntryService {\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public resourceService: ResourceService) {}\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: any): Observable {\n    if (filter.model) {\n      filter.relation = `model.${filter.model}`;\n      delete filter.model;\n    }\n    console.warn(`EntryService.change is deprecated! Use ResourceService.change instead!\n    Make sure to change the \"model\" property to \"relation\" with prefix \"model.\":\n\n    this.entryService.change({model:'muffin'}) // OLD\n    // CHANGE TO\n    this.resourceService.change({relation:'model.muffin'}) // NEW\n\n    The EntryService#change method will be removed in a future release!\n    `);\n    return this.resourceService.change(filter);\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entryItem: Item, value: Object) {\n    const entry = entryItem.getBody();\n    if (entry && entry.save) {\n      return this.update(model, entryItem, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  async update(model, entryItem: Item, value: Object, safePut = true): Promise {\n    const oldValues = {}; // save old values\n    const entry = entryItem.getBody();\n    Object.keys(value).forEach((key) => (oldValues[key] = entry[key]));\n    // TODO: EDITOR-263 get model config, clean readOnly fields too. Add custom filter argument to clean method\n    Object.assign(entry, this.clean(value, entryItem.config, true)); // assign new form values\n    return entry\n      .save(safePut)\n      .then((_entry) => {\n        this.resourceService.changes.next({ relation: `model.${model}`, resource: _entry, type: 'put' });\n        return _entry;\n      })\n      .catch((err) => {\n        Object.assign(entry, this.clean(oldValues)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' || ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object, config?: ItemConfig, cleanReadOnly = false): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') {\n          // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) {\n          // filter system properties\n          delete value[key];\n        }\n        if (config && config.fields && config.fields[key]) {\n          if (config.fields[key].immutable || (cleanReadOnly && config.fields[key].readOnly)) {\n            delete value[key];\n          } else if (config.fields[key].beforeSave) {\n            value[key] = config.fields[key].beforeSave(value[key], config.fields[key], value);\n          }\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api\n      .createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // TODO: make sure leveled entries are returned leveled\n        this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'post' });\n        return entry;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/notifications/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/error/error.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:12\n                            \n                        \n                \n                    \n                        The error that should be displayed \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:21\n                \n            \n\n\n            \n                \n                    change update \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:17\n                \n            \n\n\n            \n                \n                    initial update \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:25\n                \n            \n\n\n            \n                \n                    updates error message  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  */\n@Component({\n  selector: 'ec-error',\n  templateUrl: './error.component.html',\n})\n/** Displays an error thrown by the SDK. */\nexport class ErrorComponent implements OnInit, OnChanges {\n  /** The error that should be displayed */\n  @Input() error: any;\n\n  constructor(private symbol: SymbolService) {}\n\n  /** initial update */\n  ngOnInit() {\n    this.update();\n  }\n  /** change update */\n  ngOnChanges() {\n    this.update();\n  }\n  /** updates error message  */\n  update() {\n    if (!this.error) {\n      return;\n    }\n    const message = this.symbol.resolve('error.' + this.error.code);\n    if (message) {\n      this.error.message = message;\n    }\n  }\n}\n\n    \n\n    \n        {{error.code}}\n{{error.dataPath}}\n{{error?.message}}\n{{error.detail}}{{error.verbose?': '+error.verbose:''}}\n\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{error.code}}{{error.dataPath}}{{error?.message}}{{error.detail}}{{error.verbose?\\': \\'+error.verbose:\\'\\'}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/field/field.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            FieldConfigProperty\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                autofocus\n                            \n                            \n                                    Optional\n                                beforeSave\n                            \n                            \n                                class\n                            \n                            \n                                    Optional\n                                filterable\n                            \n                            \n                                    Optional\n                                filterOperator\n                            \n                            \n                                    Optional\n                                filterPopClass\n                            \n                            \n                                    Optional\n                                form\n                            \n                            \n                                    Optional\n                                hidden\n                            \n                            \n                                    Optional\n                                hideFormLabel\n                            \n                            \n                                    Optional\n                                hideFormLabelIfEmpty\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                input\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                maxItems\n                            \n                            \n                                    Optional\n                                output\n                            \n                            \n                                    Optional\n                                placeholder\n                            \n                            \n                                    Optional\n                                property\n                            \n                            \n                                    Optional\n                                required\n                            \n                            \n                                    Optional\n                                sortable\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                validate\n                            \n                            \n                                values\n                            \n                            \n                                    Optional\n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getLabel\n                            \n                            \n                                getPlaceholder\n                            \n                            \n                                getView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, config: FieldConfigProperty)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/field/field.ts:55\n                            \n                        \n\n                \n                    \n                            A Field is constructed by assigning the given config and the property to itself\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        FieldConfigProperty\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            autofocus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:13\n                            \n                        \n\n                \n                    \n                        If true, the field will autofocus after view init \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            beforeSave\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:21\n                            \n                        \n\n                \n                    \n                        Custom clean function to prepare for save \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:43\n                            \n                        \n\n                \n                    \n                        Class string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:49\n                            \n                        \n\n                \n                    \n                        if false, the field will not be filterable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterOperator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:31\n                            \n                        \n\n                \n                    \n                        The operator to use for filtering: exact, search, any etc.. see ec.sdk doc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterPopClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:33\n                            \n                        \n\n                \n                    \n                        Defines the class for the filter pop, e.g. in list header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:39\n                            \n                        \n\n                \n                    \n                        Wether or not the field should appear in default forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:11\n                            \n                        \n\n                \n                    \n                        If true, the field will not be visible anywhere \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hideFormLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:35\n                            \n                        \n\n                \n                    \n                        If true, the form input label will always be hidden \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hideFormLabelIfEmpty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:37\n                            \n                        \n\n                \n                    \n                        If true, the form input label will be hidden if no value is set \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:53\n                            \n                        \n\n                \n                    \n                        Icon name that should be associated with the field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:45\n                            \n                        \n\n                \n                    \n                        id for form labels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:23\n                            \n                        \n\n                \n                    \n                        Custom Component to display form input *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:29\n                            \n                        \n\n                \n                    \n                        Label for Inputs. Defaults to property name. If false, the label is empty. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:51\n                            \n                        \n\n                \n                    \n                        Defines the maximum of visible item (for tags view or similar). Defaults to 10 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:25\n                            \n                        \n\n                \n                    \n                        Custom Component to display value *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:27\n                            \n                        \n\n                \n                    \n                        Placeholder in inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the field's property \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:7\n                            \n                        \n\n                \n                    \n                        Tells if the field is required in forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:47\n                            \n                        \n\n                \n                    \n                        if false, the field will not be sortable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:15\n                            \n                        \n\n                \n                    \n                        The field's type \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:19\n                            \n                        \n\n                \n                    \n                        Custom Validation function \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:41\n                            \n                        \n\n                \n                    \n                        Possible Values e.g. in a select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:17\n                            \n                        \n\n                \n                    \n                        The field's view \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetComponent(occasion?)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/field/field.ts:82\n                \n            \n\n\n            \n                \n                    Returns the component for the given occasion \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occasion\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/field/field.ts:71\n                \n            \n\n\n            \n                \n                    Returns the fields label \n\n\n                    \n                        Returns :     string | true\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPlaceholder\n                        \n                        \n                    \n                \n            \n            \n                \ngetPlaceholder()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/field/field.ts:67\n                \n            \n\n\n            \n                \n                    Returns placeholder if any \n\n\n                    \n                        Returns :     string | true\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getView\n                        \n                        \n                    \n                \n            \n            \n                \ngetView(occasion?)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/field/field.ts:78\n                \n            \n\n\n            \n                \n                    Returns the view for the given occasion \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occasion\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/field/field.ts:53\n                            \n                        \n                \n                    \n                        wildcard for custom config values \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n    \n        Field\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nts\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5\nThe above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n    \n\n    \n        import { FieldConfigProperty } from '../config/field-config-property.interface';\n\nexport class Field implements FieldConfigProperty {\n  /** Tells if the field is required in forms */\n  required?: boolean;\n  /** The name of the field's property */\n  property?: string;\n  /** If true, the field will not be visible anywhere */\n  hidden?: boolean;\n  /** If true, the field will autofocus after view init */\n  autofocus?: boolean;\n  /** The field's type */\n  type?: string;\n  /** The field's view */\n  view?: string;\n  /** Custom Validation function */\n  validate?: (value, field) => any;\n  /** Custom clean function to prepare for save */\n  beforeSave?: (value?, field?, body?) => any;\n  /** Custom Component to display form input **/\n  input?: any;\n  /** Custom Component to display value **/\n  output?: any;\n  /** Placeholder in inputs */\n  placeholder?: string;\n  /** Label for Inputs. Defaults to property name. If false, the label is empty. */\n  label?: string | boolean;\n  /** The operator to use for filtering: exact, search, any etc.. see ec.sdk doc */\n  filterOperator?: string;\n  /** Defines the class for the filter pop, e.g. in list header. */\n  filterPopClass?: string;\n  /** If true, the form input label will always be hidden */\n  hideFormLabel?: boolean;\n  /** If true, the form input label will be hidden if no value is set */\n  hideFormLabelIfEmpty?: boolean;\n  /** Wether or not the field should appear in default forms */\n  form?: boolean;\n  /** Possible Values e.g. in a select */\n  values: any[] = [];\n  /** Class string */\n  class = '';\n  /** id for form labels */\n  id: string;\n  /** if false, the field will not be sortable in a list */\n  sortable?: boolean;\n  /** if false, the field will not be filterable in a list */\n  filterable?: boolean;\n  /** Defines the maximum of visible item (for tags view or similar). Defaults to 10 */\n  maxItems?: number;\n  /** Icon name that should be associated with the field */\n  icon?: string;\n  /** wildcard for custom config values */\n  [key: string]: any;\n\n  /** A Field is constructed by assigning the given config and the property to itself*/\n  constructor(property: string, config: FieldConfigProperty) {\n    if (config) {\n      Object.assign(this, config);\n    }\n    Object.assign(this, { property: property });\n    this.id = `${this.property}_${Date.now()}`;\n  }\n\n  /** Returns placeholder if any */\n  getPlaceholder() {\n    return this.placeholder || this.label || this.property;\n  }\n  /** Returns the fields label */\n  getLabel() {\n    if (this.label === false) {\n      return '';\n    }\n    return this.label || this.property;\n  }\n  /** Returns the view for the given occasion */\n  getView(occasion?) {\n    return this[occasion + 'View'] || this.view;\n  }\n  /** Returns the component for the given occasion */\n  getComponent(occasion?) {\n    return this[occasion + 'Component'];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConfig.html":{"url":"interfaces/FieldConfig.html","title":"interface - FieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/config/field-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for list fields.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/config/field-config.interface.ts:6\n                            \n                        \n                \n                    \n                        Each field can be configured in the form of FieldConfigProperty. \n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { FieldConfigProperty } from './field-config-property.interface';\n\n/**\n * Configuration for list fields.\n */\nexport interface FieldConfig {\n  /** Each field can be configured in the form of FieldConfigProperty. */\n  [key: string]: FieldConfigProperty;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for file options used by new assets \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        deduplicate\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        fileName\n                                \n                                \n                                            Optional\n                                        ignoreDuplicates\n                                \n                                \n                                            Optional\n                                        includeAssetIDInPath\n                                \n                                \n                                            Optional\n                                        preserveFilenames\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deduplicate\n                                    \n                                \n                                \n                                    \n                                        deduplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Deduplicate upload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom file form fieldName \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                    \n                                \n                                \n                                    \n                                        fileName:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional custom names for assets. Mapped by indices to assets. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreDuplicates\n                                    \n                                \n                                \n                                    \n                                        ignoreDuplicates:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ignores duplicates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeAssetIDInPath\n                                    \n                                \n                                \n                                    \n                                        includeAssetIDInPath:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Includes assetID in path \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFilenames\n                                    \n                                \n                                \n                                    \n                                        preserveFilenames:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Preserves Filenames \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the FileService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource;\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[];\n  /** The uploaded asset as item */\n  item?: Item;\n  /** The uploaded asset as item */\n  items?: Array>;\n  /** The list where it happened. */\n  list?: ResourceList;\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean;\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean;\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean;\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[];\n  /** Custom file form fieldName */\n  fieldName?: string;\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: [],\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig,\n  ) {}\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, config.filter || {}, {\n          type: assetGroupID,\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) => (only && (match && this.isNewAsset(a))) || (!only && (match || this.isNewAsset(a))),\n        only,\n      );\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id);\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n        if (key in options) {\n          formData.append(key, `${options[key]}`);\n        }\n      });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map((f) => f.url) : this.getFormData(files, options);\n    return api\n      .createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('dmAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve()\n      .then(\n        (): Promise Promise> => {\n          if (files.length === 1) {\n            return this.sdk.api.createAsset(data, {});\n          }\n          return this.sdk.api.createAssets(data, {});\n        },\n      )\n      .then((res) => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      })\n      .then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('legacyAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(\n    assets: Array,\n    assetGroupID?: string,\n  ): Promise> {\n    console.warn(\n      'FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.',\n    );\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) {\n      // new assets\n      return this.sdk.api\n        .dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then((dmAssetList) => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then(\n      (): any => {\n        if (unresolved.length === 1) {\n          return this.sdk.api.asset(unresolved[0]).then((asset) => {\n            return [asset];\n          });\n        }\n        return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 }).then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ? resolved.find((resource) => resource.assetID === asset) : asset,\n          );\n        });\n      },\n    );\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupListPromise\n                            \n                            \n                                    Public\n                                defaultOptions\n                            \n                            \n                                    Public\n                                dmAssetConfig\n                            \n                            \n                                    Public\n                                legacyAssetConfig\n                            \n                            \n                                    Public\n                                oldAssetGroupIDs\n                            \n                            \n                                    Public\n                                uploads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assetGroupList\n                            \n                            \n                                    Public\n                                getAssetConfig\n                            \n                            \n                                    Public\n                                getFormData\n                            \n                            \n                                    Public\n                                isNewAsset\n                            \n                            \n                                    Public\n                                isNewAssetGroupID\n                            \n                            \n                                    Public\n                                isOldAssetGroupID\n                            \n                            \n                                    Public\n                                resolveAssets\n                            \n                            \n                                selectUpload\n                            \n                            \n                                    Public\n                                uploadAssets\n                            \n                            \n                                    Public\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, typeConfig: TypeConfigService, resourceService: ResourceService, resourceConfig: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/file.service.ts:67\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                        TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                        ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                        ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            assetGroupList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assetGroupList(forceReload)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/file.service.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    forceReload\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAssetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAssetConfig(assetGroupID)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/file.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    assetGroupID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormData(files: FileList, options?: FileOptions)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/file.service.ts:104\n                \n            \n\n\n            \n                \n                    Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                                FileList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                FileOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isNewAsset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/file.service.ts:92\n                \n            \n\n\n            \n                \n                    returns true if the given asset is a new one (DMAssetResource) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    asset\n                                    \n                                            Array | string | DMAssetResource | PublicAssetResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    only\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isNewAssetGroupID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNewAssetGroupID(assetGroupID)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/file.service.ts:236\n                \n            \n\n\n            \n                \n                    Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    assetGroupID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isOldAssetGroupID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isOldAssetGroupID(assetGroupID)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/file.service.ts:232\n                \n            \n\n\n            \n                \n                    Yields true if the given assetGroupID is an old one. Also checks for old validation types \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    assetGroupID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolveAssets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveAssets(assets: Array, assetGroupID?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/file.service.ts:184\n                \n            \n\n\n            \n                \n                    Resolves all assetIDs to PublicAssetResources \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    assets\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    assetGroupID\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectUpload\n                        \n                        \n                    \n                \n            \n            \n                \nselectUpload(upload: Upload, selection: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/file.service.ts:241\n                \n            \n\n\n            \n                \n                    method that can be called after the upload to select the uploaded item(s). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upload\n                                    \n                                                Upload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selection\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            uploadAssets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAssets(files, assetGroupID, options: FileOptions, api)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/file.service.ts:122\n                \n            \n\n\n            \n                \n                    Upload New Assets \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    assetGroupID\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                FileOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    api\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.sdk.api\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            uploadFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFiles(files)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/file.service.ts:146\n                \n            \n\n\n            \n                \n                    Upload old assets \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            assetGroupListPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/file.service.ts:51\n                            \n                        \n\n                \n                    \n                        Promise that resolves assetGroupList from sdk \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FileOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: [],\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/file.service.ts:55\n                            \n                        \n\n                \n                    \n                        Default options for file upload \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dmAssetConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, this.resourceConfig.get('dmAsset'))\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/file.service.ts:63\n                            \n                        \n\n                \n                    \n                        config for new assets \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            legacyAssetConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true })\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/file.service.ts:65\n                            \n                        \n\n                \n                    \n                        config for legacy assets \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            oldAssetGroupIDs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset']\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/file.service.ts:67\n                            \n                        \n\n                \n                    \n                        All the possible assetGroupIDs that are interpreted as old. Comes from validation of field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploads\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/file.service.ts:53\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an entry is created or updated. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the FileService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource;\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[];\n  /** The uploaded asset as item */\n  item?: Item;\n  /** The uploaded asset as item */\n  items?: Array>;\n  /** The list where it happened. */\n  list?: ResourceList;\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean;\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean;\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean;\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[];\n  /** Custom file form fieldName */\n  fieldName?: string;\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: [],\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig,\n  ) {}\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, config.filter || {}, {\n          type: assetGroupID,\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) => (only && (match && this.isNewAsset(a))) || (!only && (match || this.isNewAsset(a))),\n        only,\n      );\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id);\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n        if (key in options) {\n          formData.append(key, `${options[key]}`);\n        }\n      });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map((f) => f.url) : this.getFormData(files, options);\n    return api\n      .createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('dmAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve()\n      .then(\n        (): Promise Promise> => {\n          if (files.length === 1) {\n            return this.sdk.api.createAsset(data, {});\n          }\n          return this.sdk.api.createAssets(data, {});\n        },\n      )\n      .then((res) => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      })\n      .then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('legacyAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(\n    assets: Array,\n    assetGroupID?: string,\n  ): Promise> {\n    console.warn(\n      'FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.',\n    );\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) {\n      // new assets\n      return this.sdk.api\n        .dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then((dmAssetList) => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then(\n      (): any => {\n        if (unresolved.length === 1) {\n          return this.sdk.api.asset(unresolved[0]).then((asset) => {\n            return [asset];\n          });\n        }\n        return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 }).then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ? resolved.find((resource) => resource.assetID === asset) : asset,\n          );\n        });\n      },\n    );\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nAssetDirective\n\nAssetDirective\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nTagSelectComponent\n\nTagSelectComponent\n\nFilesModule -->\n\nTagSelectComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nTagSelectComponent \n\nTagSelectComponent \n\nTagSelectComponent  -->\n\nFilesModule->TagSelectComponent \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\n\n\nResourceModule\n\nResourceModule\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AssetDirective\n                        \n                        \n                            AssetListComponent\n                        \n                        \n                            AssetListPopComponent\n                        \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            DropzoneDirective\n                        \n                        \n                            ImageDirective\n                        \n                        \n                            ImageSelectPopComponent\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                        \n                            UploadSelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AssetDirective\n                        \n                        \n                            AssetListComponent\n                        \n                        \n                            AssetListPopComponent\n                        \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            DropzoneDirective\n                        \n                        \n                            ImageDirective\n                        \n                        \n                            ImageSelectPopComponent\n                        \n                        \n                            SdkModule\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                        \n                            UploadSelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { AssetListComponent } from '../asset-list/asset-list.component';\nimport { ResourceModule } from '../resource/resource.module';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { AssetListPopComponent } from './asset-list-pop/asset-list-pop.component';\nimport { AssetSelectComponent } from './asset-select/asset-select.component';\nimport { AssetDirective } from './asset/asset.directive';\nimport { AssetgroupSelectComponent } from './assetgroup-select/assetgroup-select.component';\nimport { DropzoneDirective } from './dropzone/dropzone.directive';\nimport { FileService } from './file.service';\nimport { ImageDirective } from './image/image.directive';\nimport { UploadComponent } from './upload/upload.component';\nimport { UploadSelectComponent } from './upload-select/upload-select.component';\nimport { ImageSelectPopComponent } from './image-select-pop/image-select-pop.component';\nimport { TagSelectComponent } from './tag-select/tag-select.component';\n\n@NgModule({\n  entryComponents: [AssetSelectComponent, AssetgroupSelectComponent, UploadComponent, TagSelectComponent],\n  declarations: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    ImageSelectPopComponent,\n    TagSelectComponent,\n  ],\n  imports: [CommonModule, FormsModule, UiModule, SdkModule, ResourceModule],\n  exports: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    SdkModule,\n    ImageSelectPopComponent,\n    TagSelectComponent,\n  ],\n  providers: [FileService],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Focus.html":{"url":"interfaces/Focus.html","title":"interface - Focus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Focus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/focus/focus.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        focusEvent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngAfterViewInit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/focus/focus.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        focusEvent\n                                    \n                                \n                                \n                                    \n                                        focusEvent:         EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\n\nexport interface Focus {\n  focusEvent: EventEmitter;\n\n  ngAfterViewInit();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/focus/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecFocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                ecFocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ecFocus\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Input, OnInit, AfterViewInit } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ecFocus]',\n})\nexport class FocusDirective implements OnInit, AfterViewInit {\n  @Input() ecFocus: EventEmitter;\n  @Input() autofocus: boolean;\n\n  constructor(private element: ElementRef) {}\n\n  ngAfterViewInit() {\n    if (this.autofocus) {\n      this.ecFocus.emit(true);\n    }\n  }\n\n  ngOnInit() {\n    this.ecFocus.subscribe((event: boolean) => {\n      if (event) {\n        this.element.nativeElement.focus();\n      } else {\n        this.element.nativeElement.blur();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormConfig.html":{"url":"interfaces/FormConfig.html","title":"interface - FormConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/form/form-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                FormConfig is an extension of ItemConfig. \n\n            \n\n            \n                Extends\n            \n            \n                        ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disableColumnFilter\n                                \n                                \n                                            Optional\n                                        hideSubmitButton\n                                \n                                \n                                            Optional\n                                        submitButtonLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableColumnFilter\n                                    \n                                \n                                \n                                    \n                                        disableColumnFilter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the column visibility filter will not be visible \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideSubmitButton\n                                    \n                                \n                                \n                                    \n                                        hideSubmitButton:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no submit button will be rendered. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonLabel\n                                    \n                                \n                                \n                                    \n                                        submitButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label of the submit button \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/** FormConfig is an extension of ItemConfig. */\nexport interface FormConfig extends ItemConfig {\n  /** If true, no submit button will be rendered. */\n  hideSubmitButton?: boolean;\n  /** The label of the submit button */\n  submitButtonLabel?: string;\n  /** If true, the column visibility filter will not be visible */\n  disableColumnFilter?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nFormModule->UtilityModule \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nCalendarModule\n\nCalendarModule\n\nFormModule -->\n\nCalendarModule->FormModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nFormModule -->\n\nUtilityModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DatetimeComponent\n                        \n                        \n                            DefaultInputComponent\n                        \n                        \n                            DefaultOutputComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            MaxItemsPipe\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            VisibleFieldsPipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DefaultInputComponent\n                        \n                        \n                            DefaultOutputComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CalendarModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            IoModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatetimeComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            IoModule\n                        \n                        \n                            MaxItemsPipe\n                        \n                        \n                            PopModule\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            UtilityModule\n                        \n                        \n                            VisibleFieldsPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopModule } from '../pop/pop.module';\nimport { FormService } from './form.service';\nimport { VisibleFieldsPipe } from './visible-fields.pipe';\nimport { IoModule } from '../io/io.module';\nimport { DatetimeComponent } from './datetime/datetime.component';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { IconModule } from '../icon/icon.module';\nimport { MaxItemsPipe } from './max-items.pipe';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { DefaultInputComponent } from './default-input/default-input.component';\nimport { DefaultOutputComponent } from './default-output/default-output.component';\nimport { CalendarModule } from '@ec.components/calendar';\nimport { UtilityModule } from '../utility/utility.module';\n\nexport const formModuleConfig = {\n  entryComponents: [DefaultInputComponent, DefaultOutputComponent],\n  declarations: [\n    FormComponent,\n    DatetimeComponent,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PopModule,\n    IoModule,\n    LoaderModule,\n    IconModule,\n    SymbolModule,\n    CalendarModule,\n    UtilityModule,\n  ],\n  exports: [\n    UtilityModule,\n    ReactiveFormsModule,\n    IoModule,\n    FormComponent,\n    DatetimeComponent,\n    PopModule,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n  ],\n  providers: [\n    FormService,\n    /* {\n      provide: 'moment.format.date',\n      useValue: SymbolService.resolve('moment.format.date')\n    },\n    {\n      provide: 'moment.format.time',\n      useValue: SymbolService.resolve('moment.format.time')\n    },\n    {\n      provide: 'moment.format.month',\n      useValue: SymbolService.resolve('moment.format.month')\n    } */\n  ],\n};\n\n@NgModule(formModuleConfig)\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/form/form.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the interface between Angular Forms and ec.components core classes. \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addField\n                            \n                            \n                                getFormLabel\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                getValidators\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                    Public\n                                shouldBePartOfForm\n                            \n                            \n                                validateFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addField(field: Field, form: Form, group: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/form.service.ts:47\n                \n            \n\n\n            \n                \n                    adds a new field to a form. handles form group and control \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                                Form\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormLabel(form: FormComponent, label)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/form.service.ts:87\n                \n            \n\n\n            \n                \n                    Returns label for given form (e.g. Edit label) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    label\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.symbol.resolve('resource.generic')\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroup(form: Form)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/form.service.ts:25\n                \n            \n\n\n            \n                \n                    Initializes the form group from the form fields\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                Form\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValidators\n                        \n                        \n                    \n                \n            \n            \n                \ngetValidators(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/form.service.ts:55\n                \n            \n\n\n            \n                \n                    Extracts all validators from a given Field instance. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidatorFn[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isReadOnly\n                        \n                        \n                    \n                \n            \n            \n                \nisReadOnly(field, form)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/form.service.ts:82\n                \n            \n\n\n            \n                \n                    Returns true if the field should be readOnly, depending on its config and the form state. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldBePartOfForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldBePartOfForm(field, form)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/form.service.ts:14\n                \n            \n\n\n            \n                \n                    Returns true if the field should be included in the form.\nDecides based on field config values form, edit and create \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateFactory\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateFactory(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/form.service.ts:67\n                \n            \n\n\n            \n                \n                    Returns a Validation function from the given field (using field.validate) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Form, Field } from '@ec.components/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { SymbolService } from '../symbol/symbol.service';\nimport { FormComponent } from '../form/form.component';\n\n/** This service is the interface between Angular Forms and ec.components core classes. */\n@Injectable()\nexport class FormService {\n  constructor(public symbol: SymbolService) {}\n\n  /** Returns true if the field should be included in the form.\n   * Decides based on field config values form, edit and create */\n  public shouldBePartOfForm(field, form) {\n    if (field.create === false && !form.getBody()) {\n      return false;\n    }\n    if (field.edit === false && !!form.getBody()) {\n      return false;\n    }\n    return field.form !== false;\n  }\n\n  /** Initializes the form group from the form fields*/\n  public getGroup(form: Form) {\n    const controls = {};\n    form.fields\n      .filter((field) => this.shouldBePartOfForm(field, form))\n      .forEach((field) => {\n        const validators = this.getValidators(field);\n        let value = form.getValue(field.property);\n        value = value === undefined ? null : value;\n        controls[field.property] = new FormControl(\n          {\n            value,\n            disabled: this.isReadOnly(field, form),\n          },\n          validators,\n        );\n        // TODO use { updateOn: blur } when updating to angular 5.0.0\n        // see https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4\n      });\n    return new FormGroup(controls);\n  }\n\n  /** adds a new field to a form. handles form group and control */\n  public addField(field: Field, form: Form, group: FormGroup) {\n    console.warn('addField is experimental!');\n    const validators = this.getValidators(field);\n    const control = new FormControl({ value: form.getValue(field.property) }, validators);\n    group.addControl(field.property, control);\n  }\n\n  /** Extracts all validators from a given Field instance. */\n  getValidators(field: Field): ValidatorFn[] {\n    const validators = [];\n    if (field.required) {\n      validators.push(Validators.required);\n    }\n    if (field.validate) {\n      validators.push(this.validateFactory(field));\n    }\n    return validators;\n  }\n\n  /** Returns a Validation function from the given field (using field.validate) */\n  validateFactory(field: Field): ValidationErrors | null {\n    return (control: AbstractControl) => {\n      if (!field.validate) {\n        return;\n      }\n      const error = field.validate(control.value, field);\n      if (error) {\n        return {\n          custom: error,\n        };\n      }\n    };\n  }\n\n  /** Returns true if the field should be readOnly, depending on its config and the form state. */\n  isReadOnly(field, form) {\n    return field.immutable || (field.readOnly && form && !!form.getBody());\n  }\n\n  /** Returns label for given form (e.g. Edit label) */\n  getFormLabel(form: FormComponent, label = this.symbol.resolve('resource.generic')) {\n    if (!form || !form.form) {\n      return '';\n    }\n    return `${this.symbol.resolve('resource.' + (form.form.isEditing() ? 'edit' : 'create'))}\n    ${label} ${form.form.display() ? `\"${form.form.display()}\"` : ''}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/location/src/lib/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Wraps google maps api to handle geocode operations \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autocompleteAddress\n                            \n                            \n                                geocodeLatLng\n                            \n                            \n                                    Public\n                                getNearestAddress\n                            \n                            \n                                    Public\n                                observeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapLoader: MapsAPILoader, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/geocode.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapLoader\n                                                  \n                                                        \n                                                                        MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            autocompleteAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    autocompleteAddress(el)\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/geocode.service.ts:41\n                \n            \n\n\n            \n                \n                    Turns an input element to an maps autocomplete searchbar. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            geocodeLatLng\n                        \n                        \n                    \n                \n            \n            \n                \ngeocodeLatLng(geocoder, location)\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/geocode.service.ts:46\n                \n            \n\n\n            \n                \n                    Reverse address lookup for a given location \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    geocoder\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    location\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNearestAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNearestAddress(location: literal type)\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/geocode.service.ts:59\n                \n            \n\n\n            \n                \n                    Returns the nearest address for a given location \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            observeElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    observeElement(el)\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/geocode.service.ts:16\n                \n            \n\n\n            \n                \n                    Observes a given input element, transforming it into an autocomplete \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MapsAPILoader } from '@agm/core';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { from } from 'rxjs';\n\n/** declares google namespace */\ndeclare var google: any;\n\n/** Wraps google maps api to handle geocode operations */\n@Injectable()\nexport class GeocodeService {\n  constructor(private mapLoader: MapsAPILoader, private ngZone: NgZone) {}\n\n  /** Observes a given input element, transforming it into an autocomplete */\n  public observeElement(el) {\n    return new Observable((observer) => {\n      const autocomplete = new google.maps.places.Autocomplete(el, {\n        types: ['address'],\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          // get the place result\n          const place = autocomplete.getPlace();\n          // verify result\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n          const coords = {\n            latitude: place.geometry.location.lat(),\n            longitude: place.geometry.location.lng(),\n          };\n          observer.next(coords);\n          /* observer.complete(); */\n        });\n      });\n    });\n  }\n\n  /** Turns an input element to an maps autocomplete searchbar. */\n  public autocompleteAddress(el): Observable {\n    return from(this.mapLoader.load()).pipe(switchMap(() => this.observeElement(el)));\n  }\n\n  /** Reverse address lookup for a given location */\n  geocodeLatLng(geocoder, location): Promise {\n    return new Promise((resolve, reject) => {\n      geocoder.geocode({ location }, (results, status) => {\n        if (status === 'OK') {\n          resolve(results);\n        } else {\n          reject(status);\n        }\n      });\n    });\n  }\n\n  /** Returns the nearest address for a given location */\n  public getNearestAddress(location: { latitude: number; longitude: number }): Promise> {\n    return this.mapLoader.load().then(() => {\n      return this.geocodeLatLng(new google.maps.Geocoder(), {\n        lat: location.latitude,\n        lng: location.longitude,\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupPipe.html":{"url":"pipes/GroupPipe.html","title":"pipe - GroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/list/group.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        group\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(items: Array>, property: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/group.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                                Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Item } from '@ec.components/core';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'group',\n})\nexport class GroupPipe implements PipeTransform {\n  transform(items: Array>, property: string, value: any): any {\n    if (!property) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.group(property) === value;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/sdk/history.service.ts\n        \n\n            \n                Description\n            \n            \n                The HistoryService keeps track of live updates for models entries and datamanagers. \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventSources\n                            \n                            \n                                    Public\n                                loaderService\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promises\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableUpdates\n                            \n                            \n                                enableUpdates\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService, loaderService: LoaderService, router: Router, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                        ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disableUpdates\n                        \n                        \n                    \n                \n            \n            \n                \ndisableUpdates(key)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/sdk/history.service.ts:47\n                \n            \n\n\n            \n                \n                    Closes the event stream for the given key \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.router.url.split('?')[0]\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableUpdates\n                        \n                        \n                    \n                \n            \n            \n                \nenableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/sdk/history.service.ts:57\n                \n            \n\n\n            \n                \n                    Enables Updates for the given resource. The relation is passed through the Update instances on change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ModelResource | DataManagerResource | EntryResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    relation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.router.url.split('?')[0]\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/sdk/history.service.ts:27\n                \n            \n\n\n            \n                \n                    Toggles live updates on the resource and stores them under the given key.\nThe relation is passed through the Update instances on change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ModelResource | DataManagerResource | EntryResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    relation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.router.url.split('?')[0]\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventSources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                        EventSources that are active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promises\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:15\n                            \n                        \n\n                \n                    \n                        Current loaded histories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport ModelResource from 'ec.sdk/lib/resources/datamanager/ModelResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { Router } from '@angular/router';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport * as EventSource from 'eventsource/lib/eventsource-polyfill';\n\n/** The HistoryService keeps track of live updates for models entries and datamanagers. */\n@Injectable()\nexport class HistoryService {\n  /** Current loaded histories */\n  promises: { [relation: string]: Promise } = {};\n  /** EventSources that are active */\n  eventSources: { [relation: string]: any } = {}; // EventSource[]\n\n  constructor(\n    public notificationService: NotificationsService,\n    public loaderService: LoaderService,\n    public router: Router,\n    public resourceService: ResourceService,\n  ) {}\n  /** Toggles live updates on the resource and stores them under the given key.\n   * The relation is passed through the Update instances on change. */\n  toggle(\n    resource: ModelResource | DataManagerResource | EntryResource,\n    relation: string,\n    key = this.router.url.split('?')[0],\n  ) {\n    if (this.promises[key] && !this.eventSources[relation]) {\n      return this.promises[key];\n    }\n    this.disableUpdates(key);\n    this.promises[key] = this.enableUpdates(resource, relation, key)\n      .then((source) => {\n        this.eventSources[key] = source;\n      })\n      .catch((error) => {\n        delete this.promises[key];\n      });\n    this.loaderService.wait(this.promises[key]);\n  }\n\n  /** Closes the event stream for the given key */\n  disableUpdates(key = this.router.url.split('?')[0]) {\n    if (this.eventSources[key]) {\n      this.eventSources[key].close();\n      delete this.promises[key];\n      delete this.eventSources[key];\n      return;\n    }\n  }\n\n  /** Enables Updates for the given resource. The relation is passed through the Update instances on change. */\n  enableUpdates(\n    resource: ModelResource | DataManagerResource | EntryResource,\n    relation: string,\n    key = this.router.url.split('?')[0],\n  ) {\n    if (!resource || !resource.newHistory) {\n      throw new Error('cannot get history: no newHistory method found on given resource');\n    }\n    if (this.promises[key]) {\n      return this.promises[key];\n    }\n    DataManager.enableHistoryEvents(EventSource);\n    const loading = resource\n      .newHistory()\n      .then((source) => {\n        source.addEventListener(\n          'entryUpdated',\n          (e) => {\n            const data = JSON.parse(e.data);\n            this.resourceService.changes.next({\n              relation,\n              type: 'put',\n              identifier: data ? data.entryID : '',\n            });\n          },\n          false,\n        );\n        source.addEventListener(\n          'entryCreated',\n          (e) => {\n            const data = JSON.parse(e.data);\n            this.resourceService.changes.next({\n              relation,\n              type: 'post',\n              identifier: data ? data.entryID : '',\n            });\n          },\n          false,\n        );\n        return source;\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: 'History Error',\n          error,\n        });\n      });\n    this.loaderService.wait(loading);\n    return loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        Displays icons by name. If the matching Icon (from registry contains a content, the content is shown.\nIf not, is is expected to be a ec-icon.\nhttps://components.entrecode.de/ui/icons?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-icon\n            \n\n            \n                styleUrls\n                ./icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/icon/icon.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                        IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:17\n                            \n                        \n                \n                    \n                        The name of the icon. An Icon with this name is expected to be present in the current iconService registry. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/icon/icon.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/icon/icon.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/icon/icon.component.ts:22\n                \n            \n\n\n            \n                \n                    The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Symbol\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:19\n                            \n                        \n\n                \n                    \n                        The resolved icon (by name) \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Icon\nOpen Demo\nDisplays an icon:\nhtml\n\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\nhtml\n  \nUsing another icon set\nYou can also use other icons:\njs\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}\nOverriding icons\nYou can also override the current icon registry:\njs\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}\nThis will override the icon registry with the given icons, but keep the rest.\n\n    \n\n    \n        import { Component, OnInit, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { IconService } from './icon.service';\nimport { Symbol } from '../symbol/symbol.interface';\n\n/** Displays icons by name. If the matching Icon (from registry contains a content, the content is shown.\n * If not, is is expected to be a ec-icon.\n * https://components.entrecode.de/ui/icons?e=1\n */\n@Component({\n  selector: 'ec-icon',\n  templateUrl: './icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent implements OnInit, OnChanges {\n  /** The name of the icon. An Icon with this name is expected to be present in the current iconService registry. */\n  @Input() name: string;\n  /** The resolved icon (by name) */\n  icon: Symbol;\n  constructor(private iconService: IconService) {}\n  /** The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. */\n  resolve() {\n    this.icon = this.iconService.get(this.name);\n    if (!this.icon) {\n      console.warn(`Icon ${this.name} cannot be found. Using the following icon registry:`, this.iconService.registry);\n    }\n  }\n  ngOnInit() {\n    this.resolve();\n  }\n  ngOnChanges() {\n    this.resolve();\n  }\n}\n\n    \n\n    \n        {{ icon.content }}\n\n  \n\n\n    \n\n    \n                \n                    ./icon.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ icon.content }}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IconModule.html":{"url":"modules/IconModule.html","title":"module - IconModule","body":"\n                   \n\n\n\n\n    Modules\n    IconModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\n\nIconComponent\n\nIconComponent\n\n\n\nIconModule\n\nIconModule\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/icon/icon.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IconComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            IconService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IconComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconComponent } from './icon.component';\nimport { IconService } from './icon.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [IconComponent],\n  exports: [IconComponent],\n  providers: [IconService],\n})\nexport class IconModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/icon/icon.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons)\nhttps://components.entrecode.de/ui/icons?e=1\n\n            \n\n            \n                Extends\n            \n            \n                        SymbolService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Static\n                                registry\n                            \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Static\n                                sets\n                            \n                            \n                                    Public\n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                get\n                            \n                            \n                                    Static\n                                resolve\n                            \n                            \n                                resolve\n                            \n                            \n                                    Static\n                                set\n                            \n                            \n                                set\n                            \n                            \n                                use\n                            \n                            \n                                useSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(name: string, registry)\n                \n            \n\n\n            \n                \n                    Inherited from         SymbolService\n\n                \n            \n            \n                \n                        Defined in         SymbolService:27\n\n                \n            \n\n\n            \n                \n                    finds a symbol in the registry by name \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    registry\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        SymbolService.registry\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Symbol\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SymbolService\n\n                \n            \n            \n                \n                        Defined in         SymbolService:70\n\n                \n            \n\n\n            \n                \n                    finds a symbol in the registry by name \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Symbol\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(name: string, registry)\n                \n            \n\n\n            \n                \n                    Inherited from         SymbolService\n\n                \n            \n            \n                \n                        Defined in         SymbolService:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    registry\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        SymbolService.registry\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SymbolService\n\n                \n            \n            \n                \n                        Defined in         SymbolService:75\n\n                \n            \n\n\n            \n                \n                    resolves a symbols content by name \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(symbols: Symbol[], registry)\n                \n            \n\n\n            \n                \n                    Inherited from         SymbolService\n\n                \n            \n            \n                \n                        Defined in         SymbolService:41\n\n                \n            \n\n\n            \n                \n                    Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    symbols\n                                    \n                                                Symbol[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    registry\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        SymbolService.registry\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(symbols: Symbol[])\n                \n            \n\n\n            \n                \n                    Inherited from         SymbolService\n\n                \n            \n            \n                \n                        Defined in         SymbolService:81\n\n                \n            \n\n\n            \n                \n                    Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    symbols\n                                    \n                                                Symbol[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(symbols: Symbol[])\n                \n            \n\n\n            \n                \n                    Inherited from         SymbolService\n\n                \n            \n            \n                \n                        Defined in         SymbolService:57\n\n                \n            \n\n\n            \n                \n                    Uses the given symbol set. Replaces registry. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    symbols\n                                    \n                                                Symbol[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            useSet\n                        \n                        \n                    \n                \n            \n            \n                \nuseSet(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SymbolService\n\n                \n            \n            \n                \n                        Defined in         SymbolService:62\n\n                \n            \n\n\n            \n                \n                    uses the set with the given key \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : ixo\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.service.ts:11\n                            \n                        \n\n                \n                    \n                        The current icon set that is registered to the service. It will be used to resolve icons from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : Object.keys(SymbolService.sets).length\n    ? SymbolService.sets[Object.keys(SymbolService.sets)[0]]\n    : []\n                        \n                    \n                            \n                                \n                                    Inherited from         SymbolService\n\n                                \n                            \n                        \n                            \n                                    Defined in         SymbolService:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Symbol[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SymbolService\n\n                                \n                            \n                        \n                            \n                                    Defined in         SymbolService:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    en,\n    de,\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from         SymbolService\n\n                                \n                            \n                        \n                            \n                                    Defined in         SymbolService:12\n\n                            \n                        \n\n                \n                    \n                        The current symbol set that is registered to the service. It will be used to resolve strings from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    en,\n    de,\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from         SymbolService\n\n                                \n                            \n                        \n                            \n                                    Defined in         SymbolService:21\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ixo } from './ixo';\nimport { Symbol } from '../symbol/symbol.interface';\nimport { SymbolService } from '../symbol/symbol.service';\n/** Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons)\n * https://components.entrecode.de/ui/icons?e=1\n */\n@Injectable()\nexport class IconService extends SymbolService {\n  /** The current icon set that is registered to the service. It will be used to resolve icons from. */\n  public registry: Symbol[] = ixo;\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDirective.html":{"url":"directives/ImageDirective.html","title":"directive - ImageDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ImageDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/image/image.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. \n\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        img [ecImage]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setUrl\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecImage\n                            \n                            \n                                size\n                            \n                            \n                                thumb\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/image/image.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecImage\n                    \n                \n                \n                    \n                        Type :     string | DMAssetResource\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:18\n                            \n                        \n                \n                    \n                        The assetID that should be loaded \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:16\n                            \n                        \n                \n                    \n                        The size that should be requested. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        thumb\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:14\n                            \n                        \n                \n                    \n                        If true, the image will be requested as thumb (square) \n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload(id?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/image/image.directive.ts:39\n                \n            \n\n\n            \n                \n                    Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/image/image.directive.ts:27\n                \n            \n\n\n            \n                \n                    Reads ecImage input as assetId and loads if autoload is not false \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/image/image.directive.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(asset: PublicAssetResource | DMAssetResource)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/image/image.directive.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    asset\n                                    \n                                            PublicAssetResource | DMAssetResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:20\n                            \n                        \n\n                \n                    \n                        Resolved asset url. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ecImage\nThis directive can be used to load an image:\n```html\n\nID: {{myImage.asset?.assetID}}\n```\n\n    \n\n    \n        import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { AssetDirective } from '../asset/asset.directive';\nimport { SdkService } from '../../sdk/sdk.service';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\n\n/** Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. */\n@Directive({\n  selector: 'img [ecImage]',\n  exportAs: 'ecImage',\n})\nexport class ImageDirective extends AssetDirective implements OnChanges {\n  /** If true, the image will be requested as thumb (square) */\n  @Input() thumb: boolean;\n  /** The size that should be requested. */\n  @Input() size = 200;\n  /** The assetID that should be loaded */\n  @Input() ecImage: string | DMAssetResource;\n  /** Resolved asset url. */\n  url: string;\n\n  constructor(public sdk: SdkService, private elementRef: ElementRef) {\n    super(sdk);\n  }\n\n  /** Reads ecImage input as assetId and loads if autoload is not false */\n  ngOnChanges() {\n    if (typeof this.ecImage === 'string') {\n      this.assetId = this.ecImage;\n    } else if (this.ecImage && this.ecImage.assetID) {\n      this.use(this.ecImage);\n    }\n    if (this.autoload !== false && this.assetId) {\n      this.load();\n    }\n  }\n\n  /** Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) */\n  load(id?: string) {\n    return super.load(id).then(this.use.bind(this));\n  }\n\n  use(asset: PublicAssetResource | DMAssetResource) {\n    return Promise.resolve()\n      .then(() => {\n        if (asset.type !== 'image') {\n          return Promise.reject(`ecImage only works for assets of type image.\n        Loaded id ${asset.id} is of type ${asset.type}`);\n        }\n        if (asset instanceof DMAssetResource) {\n          // new asset\n          return asset.getFileVariant(this.size, this.thumb);\n        } else if (asset instanceof PublicAssetResource) {\n          // old asset\n          if (this.thumb) {\n            return asset.getImageThumbUrl(this.size, '');\n          }\n          return asset.getImageUrl(this.size, '');\n        }\n      })\n      .then(this.setUrl.bind(this));\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n    this.elementRef.nativeElement.src = this.url;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageSelectPopComponent.html":{"url":"components/ImageSelectPopComponent.html","title":"component - ImageSelectPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageSelectPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a pop with a form to add images. You can set an the alternative Text and the size.\nThe size inputs will keep the image ratio by default.  \n\n    \n\n    \n        Extends\n    \n    \n                PopComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-image-select-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./image-select-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                imageForm\n                            \n                            \n                                imageLoader\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                defaultSize\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, sdk: SdkService, symbol: SymbolService, fileService: FileService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                        PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:26\n                            \n                        \n                \n                    \n                        The assetGroupID to pick from \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultSize\n                    \n                \n                \n                    \n                        Default value : 400\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:28\n                            \n                        \n                \n                    \n                        The default size used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:28\n\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:34\n\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:36\n\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:32\n\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:30\n                            \n                        \n                \n                    \n                        Ouput that emits when image changes  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:38\n\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ec-image-select-pop modal-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:36\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click($event)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:43\n\n                \n            \n\n\n            \n                \n                    Listens for document:click and hides \n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:49\n                \n            \n\n\n            \n                \n                    Inits the form \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:88\n\n                \n            \n\n\n            \n                \n                    Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOutside\n                        \n                        \n                    \n                \n            \n            \n                \nisOutside(element)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:58\n\n                \n            \n\n\n            \n                \n                    yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(e?)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:72\n\n                \n            \n\n\n            \n                \n                    Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle(e?)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:63\n\n                \n            \n\n\n            \n                \n                    Shows if not active, hides if active. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:32\n                            \n                        \n\n                \n                    \n                        The instance of the imageForm  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('imageLoader')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:34\n                            \n                        \n\n                \n                    \n                        The loader that is shown after an image has been selected  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:30\n\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:55\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { FormConfig } from '@ec.components/core';\nimport { FormComponent, LoaderComponent, PopComponent, PopService, SymbolService } from '@ec.components/ui';\nimport { DefaultEntryInputComponent } from '../../entry-form/default-entry-input.component';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileService } from '../file.service';\n\n/** This component is a pop with a form to add images. You can set an the alternative Text and the size.\n * The size inputs will keep the image ratio by default.  */\n@Component({\n  selector: 'ec-image-select-pop',\n  templateUrl: './image-select-pop.component.html',\n})\nexport class ImageSelectPopComponent extends PopComponent implements OnInit {\n  /** The assetGroupID to pick from */\n  @Input() assetGroupID;\n  /** The default size used */\n  @Input() defaultSize = 400;\n  /** Ouput that emits when image changes  */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** The instance of the imageForm  */\n  imageForm: FormConfig;\n  /** The loader that is shown after an image has been selected  */\n  @ViewChild('imageLoader') imageLoader: LoaderComponent;\n  /** Set host class to make sure the type is used */\n  @HostBinding('class') class = 'ec-image-select-pop modal-wrapper';\n\n  constructor(\n    public popService: PopService,\n    public sdk: SdkService,\n    public symbol: SymbolService,\n    public fileService: FileService,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(popService, elementRef, cdr);\n  }\n  /** Inits the form */\n  ngOnInit() {\n    const isOldAssetGroupID = this.fileService.isOldAssetGroupID(this.assetGroupID);\n    this.imageForm = {\n      submitButtonLabel: this.symbol.resolve('image-select-pop.submitButtonLabel'),\n      onSave: (form, value: { img; height; width; alt }) => {\n        const size = Math.max(value.width, value.height);\n        if (isOldAssetGroupID) {\n          this.sdk.api\n            .asset(value.img)\n            .then((asset) => asset.getImageUrl(size, ''))\n            .then((url) => {\n              this.hide();\n              this.changed.emit({ url, alt: value.alt, size });\n            });\n        } else {\n          const loadImage = this.sdk.api\n            .dmAsset(this.assetGroupID, value.img)\n            .then((asset) => asset.getImageUrl(size))\n            .then((url) => {\n              this.hide();\n              this.changed.emit({ url, alt: value.alt, size });\n            });\n          this.imageLoader.wait(loadImage);\n        }\n      },\n      fields: {\n        img: {\n          label: ' ',\n          input: DefaultEntryInputComponent,\n          inputView: isOldAssetGroupID ? 'asset-select' : 'dmAsset-select',\n          relation: !isOldAssetGroupID ? this.assetGroupID : 'legacyAsset',\n          required: true,\n          changed: (value, form) => {\n            const loadImg = Promise.resolve()\n              .then(() => {\n                if (isOldAssetGroupID) {\n                  return this.sdk.api.asset(value).then((asset) => {\n                    const original = asset.getOriginalFile();\n                    const resolution = original.resolution;\n                    return { resolution, title: asset.title };\n                  });\n                } else {\n                  return this.sdk.api.dmAsset(this.assetGroupID, value).then((asset) => {\n                    const resolution = asset.file.resolution;\n                    return { resolution, title: asset.title };\n                  });\n                }\n              })\n              .then(({ resolution, title }) => {\n                const ratio = resolution.width / resolution.height;\n                const width = Math.min(this.defaultSize, resolution.width);\n                form.group.controls.width.setValue(width);\n                form.group.controls.alt.setValue(title);\n                form.group.controls.ratio.setValue(ratio);\n              });\n            this.imageLoader.wait(loadImg);\n          },\n        },\n        alt: {\n          label: this.symbol.resolve('image-select-pop.alt'),\n          view: 'string',\n        },\n        ratio: {\n          hideInForm: true,\n          view: 'number',\n        },\n        keepRatio: {\n          label: this.symbol.resolve('image-select-pop.keepRatio'),\n          view: 'boolean',\n          prefill: true,\n          changed: (value) => {\n            if (value === true) {\n              console.log('should fix ratio now...');\n            }\n          },\n        },\n        width: {\n          label: this.symbol.resolve('image-select-pop.width'),\n          view: 'number',\n          columns: 6,\n          changed: (value, form: FormComponent) => {\n            const ratio = form.getValue('ratio');\n            if (ratio && form.getValue('keepRatio')) {\n              form.group.controls.height.setValue(Math.round(value / ratio));\n            }\n          },\n        },\n        height: {\n          label: this.symbol.resolve('image-select-pop.height'),\n          view: 'number',\n          columns: 6,\n          changed: (value, form) => {\n            const ratio = form.getValue('ratio');\n            if (ratio && form.getValue('keepRatio')) {\n              form.group.controls.width.setValue(Math.round(value * ratio));\n            }\n          },\n        },\n      },\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    {{ 'image-select-pop.header' | symbol }}\n  \n  \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ \\'image-select-pop.header\\' | symbol }}              '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImageSelectPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/input/input.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n    \n        Extends\n    \n    \n                DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-input\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentInstance\n                            \n                            \n                                disabled\n                            \n                            \n                                focusEvent\n                            \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connectControl\n                            \n                            \n                                focus\n                            \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                config\n                            \n                            \n                                control\n                            \n                            \n                                debounce\n                            \n                            \n                                field\n                            \n                            \n                                group\n                            \n                            \n                                item\n                            \n                            \n                                lazy\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                ready\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:52\n                            \n                        \n                \n                    \n                        Overrides the default component \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:50\n                            \n                        \n                \n                    \n                        Config that should be used, only needed when not using field input \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:36\n                            \n                        \n                \n                    \n                        The belonging form control. This is not required if you pass in a field and group. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:42\n                            \n                        \n                \n                    \n                        Debounce time in ms before the changed event emits. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         Field\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:44\n                            \n                        \n                \n                    \n                        The instance of field that should be used in the template, can also be a property name. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        group\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:32\n                            \n                        \n                \n                    \n                        The belonging form group \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:48\n                            \n                        \n                \n                    \n                        The belonging item \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:54\n                            \n                        \n                \n                    \n                        If true, the input will never reinit/reload. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:46\n                            \n                        \n                \n                    \n                        The property name that is edited. Expects a form as item input \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:38\n                            \n                        \n                \n                    \n                        The changed ouput emits whenever the form control of the input changes. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:40\n                            \n                        \n                \n                    \n                        Emits when the component has been loaded \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connectControl\n                        \n                        \n                    \n                \n            \n            \n                \nconnectControl()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/io/input/input.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus(focus)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/io/input/input.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    focus\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/io/input/input.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes?)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/io/input/input.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/io/input/input.component.ts:143\n                \n            \n\n\n            \n                \n                    Registers change callback \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/io/input/input.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/io/input/input.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/io/input/input.component.ts:133\n                \n            \n\n\n            \n                \n                    writes value to editor on outside model change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadComponent\n                        \n                        \n                    \n                \n            \n            \n                \nloadComponent(component: Type, attributes: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         DynamicSlotComponent\n\n                \n            \n            \n                \n                        Defined in         DynamicSlotComponent:17\n\n                \n            \n\n\n            \n                \n                    Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    attributes\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:57\n                            \n                        \n\n                \n                    \n                        Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\nYou can access a form's InputComponents via FormComponent#inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:34\n                            \n                        \n\n                \n                    \n                        If true, the input is readonly. Is set by ControlValueAccessor#setDisabled \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:61\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:140\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:59\n                            \n                        \n\n                \n                    \n                        The current value of the input. Needs to be saved for the case the component is not yet loaded \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DynamicSlotComponent:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DynamicSlotComponent:11\n\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  Output,\n  Type,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, AbstractControl } from '@angular/forms';\nimport { FieldConfigProperty, Field, Form, Item } from '@ec.components/core';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { DefaultInputComponent } from '../../form/default-input/default-input.component';\nimport { debounceTime } from 'rxjs/operators';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-input',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class InputComponent extends DynamicSlotComponent implements ControlValueAccessor, OnChanges {\n  /** The belonging form group */\n  @Input() group: FormGroup;\n  /** If true, the input is readonly. Is set by ControlValueAccessor#setDisabled */\n  disabled: FormGroup;\n  /** The belonging form control. This is not required if you pass in a field and group. */\n  @Input() control: AbstractControl;\n  /** The changed ouput emits whenever the form control of the input changes. */\n  @Output() changed = new EventEmitter();\n  /** Emits when the component has been loaded */\n  @Output() ready = new EventEmitter();\n  /** Debounce time in ms before the changed event emits. */\n  @Input() debounce = 0;\n  /** The instance of field that should be used in the template, can also be a property name. */\n  @Input() field: Field;\n  /** The property name that is edited. Expects a form as item input */\n  @Input() property: string;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Config that should be used, only needed when not using field input */\n  @Input() config: FieldConfigProperty;\n  /** Overrides the default component */\n  @Input() component: Type;\n  /** If true, the input will never reinit/reload. */\n  @Input() lazy: boolean;\n  /** Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\n   * You can access a form's InputComponents via FormComponent#inputs */\n  componentInstance: InputComponent;\n  /** The current value of the input. Needs to be saved for the case the component is not yet loaded */\n  value: any;\n  /** Emitter to focus the input field */\n  focusEvent: EventEmitter = new EventEmitter();\n\n  ngOnChanges(changes?) {\n    if (!this.lazy || !this.componentInstance || changes.field) {\n      this.init();\n    }\n  }\n\n  focus(focus = true) {\n    if (this.componentInstance && this.componentInstance.focusEvent) {\n      this.componentInstance.focusEvent.emit(focus);\n    } else {\n      console.warn('could not focus component', this.componentInstance);\n    }\n  }\n\n  init() {\n    if (this.property && this.item instanceof Form) {\n      this.field = this.item.getField(this.property);\n    } else if (!this.field && this.config) {\n      this.field = new Field(this.property || 'input', this.config);\n    }\n    if (!this.field) {\n      return;\n    }\n    if (!this.control) {\n      this.control = this.group ? this.group.get(this.field.property) : new FormControl();\n    }\n    if (!this.group) {\n      this.group = new FormGroup({\n        [this.property || this.field.property || 'input']: this.control,\n      });\n    }\n    const data = {\n      group: this.group,\n      control: this.control || this.group ? this.group.get(this.field.property) : null,\n      item: this.item,\n      field: this.field,\n      input: this,\n      config: this.config || this.field.config || {},\n      focusEvent: this.focusEvent,\n    };\n    const componentRef = this.loadComponent(this.component || this.field.input || DefaultInputComponent, data);\n    this.componentInstance = componentRef.instance;\n    this.connectControl();\n    this.ready.emit(this);\n    if (this.componentInstance.control) {\n      this.componentInstance.control.valueChanges.pipe(debounceTime(this.debounce)).subscribe((change) => {\n        this.changed.emit(change);\n        this.propagateChange(change);\n      });\n    }\n    if (this.field && typeof this.field.init === 'function') {\n      this.field.init(this.componentInstance, this);\n    }\n  }\n\n  connectControl() {\n    if (!this.componentInstance) {\n      // console.warn('could not connect control: no instance loaded');\n      return;\n    }\n    this.componentInstance.disabled = this.disabled;\n    if (this.componentInstance.registerOnChange && this.propagateChange) {\n      this.componentInstance.registerOnChange(this.propagateChange);\n    }\n    if (this.value !== undefined) {\n      this.writeValue(this.value);\n    }\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    if (this.componentInstance && this.componentInstance.writeValue) {\n      this.componentInstance.writeValue(value);\n    }\n    this.value = value;\n  }\n\n  propagateChange = (_: any) => {};\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n    this.connectControl();\n  }\n\n  registerOnTouched() {}\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    if (this.componentInstance) {\n      if (this.componentInstance.setDisabledState) {\n        this.componentInstance.setDisabledState(isDisabled);\n      } else {\n        this.componentInstance.disabled = isDisabled;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputErrorsComponent.html":{"url":"components/InputErrorsComponent.html","title":"component - InputErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/input-errors/input-errors.component.ts\n\n\n    \n        Description\n    \n    \n        This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-input-errors\n            \n\n\n\n\n            \n                templateUrl\n                ./input-errors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:12\n                            \n                        \n\n                \n                    \n                            Imported error messages. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:12\n                            \n                        \n                \n                    \n                        The form control that should be tracked \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getErrors()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:17\n                \n            \n\n\n            \n                \n                    This method will iterate over the control errors and generate objects for the template. \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. */\n@Component({\n  selector: 'ec-input-errors',\n  templateUrl: './input-errors.component.html',\n})\nexport class InputErrorsComponent {\n  /** The form control that should be tracked */\n  @Input() control: FormControl;\n  /** Imported error messages. */\n  constructor(public symbol: SymbolService) {}\n\n  /** This method will iterate over the control errors and generate objects for the template. */\n  public getErrors() {\n    return Object.keys(this.control.errors).reduce((errs, key) => {\n      let message;\n      if (key === 'custom') {\n        message = this.control.errors[key];\n      } else {\n        message = this.symbol.resolve('error.input.' + key) || this.symbol.resolve('error.input.invalid');\n      }\n      errs.push({\n        key: key,\n        error: this.control.errors[key],\n        message,\n      });\n      return errs;\n    }, []);\n  }\n}\n\n    \n\n    \n        \n  {{error.message}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{error.message}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IoModule.html":{"url":"modules/IoModule.html","title":"module - IoModule","body":"\n                   \n\n\n\n\n    Modules\n    IoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\n\n\nIoModule\n\nIoModule\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/io/io.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DynamicRackComponent\n                        \n                        \n                            DynamicSlotComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                        \n                            SlotHostDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DynamicRackComponent\n                        \n                        \n                            DynamicSlotComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                        \n                            SlotHostDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DynamicSlotComponent } from './dynamic-slot/dynamic-slot.component';\nimport { SlotHostDirective } from './slot-host.directive';\nimport { OutputComponent } from './output/output.component';\nimport { InputComponent } from './input/input.component';\nimport { InputErrorsComponent } from './input-errors/input-errors.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicRackComponent } from './dynamic-rack/dynamic-rack.component';\n\n@NgModule({\n  entryComponents: [InputComponent, OutputComponent, InputErrorsComponent],\n  declarations: [\n    InputErrorsComponent,\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n  ],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n})\nexport class IoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Item.html":{"url":"classes/Item.html","title":"class - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Item\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/item/item.ts\n        \n\n            \n                Description\n            \n            \n                An Item basically wraps an Object and provides a config with metadata and helper methods to access the object. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                classes\n                            \n                            \n                                clear\n                            \n                            \n                                deleteImmutableProperties\n                            \n                            \n                                display\n                            \n                            \n                                    Protected\n                                generateConfig\n                            \n                            \n                                getBody\n                            \n                            \n                                getConfig\n                            \n                            \n                                getProperties\n                            \n                            \n                                group\n                            \n                            \n                                hasBody\n                            \n                            \n                                id\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                pickWriteOnly\n                            \n                            \n                                resolve\n                            \n                            \n                                save\n                            \n                            \n                                serialize\n                            \n                            \n                                sort\n                            \n                            \n                                    Public\n                                transform\n                            \n                            \n                                useConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(body: T, config: ItemConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/item/item.ts:8\n                            \n                        \n\n                \n                    \n                            Each item is constructed with its body and an optional config. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ItemConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/item/item.ts:6\n                            \n                        \n\n                \n                    \n                        The value body of the item. This can be either a primitive value or an Object. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ItemConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/item/item.ts:8\n                            \n                        \n\n                \n                    \n                        The config of the item. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            action\n                        \n                        \n                    \n                \n            \n            \n                \naction(property, e)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:229\n                \n            \n\n\n            \n                \n                    Action method that is meant to be called on a button click or similar.\nCalls the config#action method with the item and the property name \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            classes\n                        \n                        \n                    \n                \n            \n            \n                \nclasses(property?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:135\n                \n            \n\n\n            \n                \n                    If no property given: Returns the output of the config.classes method or ''.\nIf property given: Returns the output of the config.fields[property].classes method or '' \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:47\n                \n            \n\n\n            \n                \n                    deletes the item body \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteImmutableProperties\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteImmutableProperties(value: Object)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.body\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            display\n                        \n                        \n                    \n                \n            \n            \n                \ndisplay(property?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:147\n                \n            \n\n\n            \n                \n                    Returns the output of the config.display transformation function with the given property value.\nIf no display function is set, it will just return the property value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateConfig()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:17\n                \n            \n\n\n            \n                \n                    Generates a config from the body by setting view to the properties type. \n\n\n                    \n                        Returns :         ItemConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBody\n                        \n                        \n                    \n                \n            \n            \n                \ngetBody()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:37\n                \n            \n\n\n            \n                \n                    Returns the item's body \n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:57\n                \n            \n\n\n            \n                \n                    Returns the item's config \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProperties\n                        \n                        \n                    \n                \n            \n            \n                \ngetProperties()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:62\n                \n            \n\n\n            \n                \n                    Returns an Array of properties possessed by the body. \n\n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            group\n                        \n                        \n                    \n                \n            \n            \n                \ngroup(property: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:129\n                \n            \n\n\n            \n                \n                    Returns the output of the config.group transformation function with the given property value.\nIf no group function is set, it will just return the property value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasBody\n                        \n                        \n                    \n                \n            \n            \n                \nhasBody()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:42\n                \n            \n\n\n            \n                \n                    Returns true if the body is defined and not null\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:73\n                \n            \n\n\n            \n                \n                    Returns the value of the the Item's identifier property. \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isImmutableProperty\n                        \n                        \n                    \n                \n            \n            \n                \nisImmutableProperty(property: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pickWriteOnly\n                        \n                        \n                    \n                \n            \n            \n                \npickWriteOnly(value)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:160\n                \n            \n\n\n            \n                \n                    Returns value with all readOnly properties removed \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.body\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(property?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:82\n                \n            \n\n\n            \n                \n                    Returns either the whole body (if no property is given) or the value of the given property.\nThis method will traverse the body via the config.resolve function (if given). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(value: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:217\n                \n            \n\n\n            \n                \n                    Saves the given value. Run serializers before assigning the new value. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.body\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value, put: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:195\n                \n            \n\n\n            \n                \n                    Transforms the given field's value for serialization when saving. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    put\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \nsort(property: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:155\n                \n            \n\n\n            \n                \n                    Transforms the given field's value for sorting \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(action: string, property: string, value: any, defaultValue: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:112\n                \n            \n\n\n            \n                \n                    The main method for transformation functions like resolve, display and group.\nIf you dont set the third parameter, the current item value will be used.\nThe third parameter can be used to transform a value that is not yet possesed (e.g. to\nserialize) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.resolve(property)\n                                    \n\n                                \n                                \n                                    defaultValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.resolve(property)\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            useConfig\n                        \n                        \n                    \n                \n            \n            \n                \nuseConfig(config: ItemConfig)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/item/item.ts:52\n                \n            \n\n\n            \n                \n                    Assigns the given config to the existing via Object.assign \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                ItemConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n    \n        Item\nThe foundation for all entities is the Item class.\nIt consists of a body (value) and a config (see ItemConfig).\nIt can be used with arbitrary body values but is mainly thought to be a wrapper for objects.\nPrimitive use:\nts\nconst primitive = new Item('a');\nprimitive.resolve(); //'a'\nDefault use:\nts\nconst tommy = new Item({ name: 'tommy' });\ntommy.resolve('name'); //'tommy'\ntommy.display('name'); //'tommy'\ntommy.group('name'); //'tommy'\ntommy.sort('name'); //'tommy'\nItem with fields definition\nWhen using it with objects, it can be passed a config (see ItemConfig) to set up its field config (see FieldConfig.\nEach item can call directly call a transformation function for a field:\nts\nconst bobby = new Item({ value: { name: 'bobby' } }, {\n  fields: {\n    name: {\n      resolve: (body) => body.value.name,\n      display: (value) => value.toUpperCase(),\n      group: (value) => value.length + ' Buchstaben',\n      sort: (value) => value.length\n    }\n  }\n});\nbobby.resolve('name'); //'bobby'\nbobby.display('name'); //'Bobby'\nbobby.group('name'); //'5 Buchstaben'\nbobby.sort('name'); //5\nIdentifiers and labels\nAn Item also brings the concept of identifiers and labels:\nts\nconst e = new Item({ nr: '#AYQ', title: 'Wurst' }, { identifier: 'nr', label: 'title');\ne.id(); //'#AYQ'\ne.display(); //'Wurst'\nSaving items\nYou can set up a callback that is invoked when calling item.save():\nts\nconst n = new Item(1, { onSave: (item, body) => body+1 });\nn.save();\nn.resolve(); //2\n\n    \n\n    \n        import { ItemConfig } from './item-config.interface';\n\n/** An Item basically wraps an Object and provides a config with metadata and helper methods to access the object. */\nexport class Item {\n  /** The value body of the item. This can be either a primitive value or an Object. */\n  public body: T;\n  /** The config of the item. */\n  public config: ItemConfig;\n\n  /** Each item is constructed with its body and an optional config. */\n  constructor(body: T, config: ItemConfig = {}) {\n    this.body = body;\n    this.config = config || this.generateConfig();\n  }\n\n  /** Generates a config from the body by setting view to the properties type. */\n  protected generateConfig(): ItemConfig {\n    const config = { fields: {} };\n    if (this.body === undefined) {\n      return config;\n    }\n    this.getProperties().forEach((property) => {\n      config.fields[property] = {\n        view: typeof this.body[property],\n        type: typeof this.body[property],\n      };\n      if (config.fields[property].view === 'object' && Array.isArray(this.body[property])) {\n        config.fields[property].view = 'array';\n        config.fields[property].values = this.body[property];\n        // config.fields[property].solo = true;\n      }\n    });\n    return config;\n  }\n\n  /** Returns the item's body */\n  getBody() {\n    return this.body;\n  }\n\n  /** Returns true if the body is defined and not null*/\n  hasBody() {\n    return this.body !== undefined && this.body !== null;\n  }\n\n  /** deletes the item body */\n  clear() {\n    delete this.body;\n  }\n\n  /** Assigns the given config to the existing via Object.assign */\n  useConfig(config: ItemConfig) {\n    this.config = (Object).assign(this.config, config);\n  }\n\n  /** Returns the item's config */\n  getConfig() {\n    return this.config;\n  }\n\n  /** Returns an Array of properties possessed by the body. */\n  getProperties(): Array {\n    if (!this.body || typeof this.body !== 'object') {\n      if (typeof this.body !== 'object') {\n        return [this.config && this.config.title ? this.config.title : 'body'];\n      }\n      return [];\n    }\n    return Object.keys(this.body);\n  }\n\n  /** Returns the value of the the Item's identifier property. */\n  id(): any {\n    if (!this.config.identifier) {\n      throw new Error('cannot get id of item without identifier!');\n    }\n    return this.resolve(this.config.identifier);\n  }\n\n  /** Returns either the whole body (if no property is given) or the value of the given property.\n   * This method will traverse the body via the config.resolve function (if given). */\n  resolve(property?: string): any {\n    if (!this.hasBody()) {\n      return;\n    }\n    if (typeof this.body !== 'object') {\n      return this.body;\n    }\n    if (!this.config) {\n      return property ? this.body[property] : this.body;\n    }\n    if (!property) {\n      if (this.config.resolve) {\n        return this.config.resolve(this.body);\n      }\n      return this.body;\n    }\n    if (this.config.fields && this.config.fields[property] && this.config.fields[property].resolve) {\n      return this.config.fields[property].resolve(this.body, this, property);\n    }\n    if (!this.config.resolve) {\n      return this.body[property];\n    }\n    const v = this.config.resolve(this.body);\n    return v ? v[property] : null;\n  }\n\n  /** The main method for transformation functions like resolve, display and group.\n   * If you dont set the third parameter, the current item value will be used.\n   * The third parameter can be used to transform a value that is not yet possesed (e.g. to\n   * serialize) */\n  public transform(\n    action: string,\n    property: string,\n    value: any = this.resolve(property),\n    defaultValue: any = this.resolve(property),\n  ) {\n    if (!this.hasBody()) {\n      return;\n    }\n    if (this.config.fields && this.config.fields[property] && this.config.fields[property][action]) {\n      return this.config.fields[property][action](value, this.body, property);\n    }\n    return defaultValue;\n  }\n\n  /** Returns the output of the config.group transformation function with the given property value.\n   * If no group function is set, it will just return the property value.*/\n  group(property: string): any {\n    return this.transform('group', property);\n  }\n\n  /** If no property given: Returns the output of the config.classes method or ''.\n   * If property given: Returns the output of the config.fields[property].classes method or '' */\n  classes(property?: string): string {\n    if (property) {\n      return this.transform('classes', property, this.resolve(property), '') || '';\n    }\n    if (!this.config || !this.config.classes) {\n      return '';\n    }\n    return this.config.classes(this);\n  }\n\n  /** Returns the output of the config.display transformation function with the given property value.\n   * If no display function is set, it will just return the property value.*/\n  display(property?: string): any {\n    if (!property) {\n      return this.transform('display', this.config.label || this.getProperties()[0]); // Object.keys(this.resolve())[0]\n    }\n    return this.transform('display', property);\n  }\n\n  /** Transforms the given field's value for sorting */\n  sort(property: string): any {\n    return this.transform('sort', property);\n  }\n\n  /** Returns value with all readOnly properties removed */\n  pickWriteOnly(value = this.body) {\n    return (Object).assign(\n      {},\n      ...Object.keys(value)\n        .map((property) => {\n          if (this.config.fields[property].readOnly) {\n            return;\n          }\n          return { [property]: value[property] };\n        })\n        .filter((v) => !!v),\n    );\n  }\n\n  isImmutableProperty(property: string): boolean {\n    if (\n      this.config &&\n      this.config.fields &&\n      this.config.fields[property] &&\n      typeof this.config.fields[property].immutable === 'function'\n    ) {\n      return this.config.fields[property].immutable(this);\n    }\n    return this.config.fields[property].immutable;\n  }\n\n  deleteImmutableProperties(value: Object = this.body) {\n    Object.keys(this.config.fields).forEach((property) => {\n      if (value.hasOwnProperty(property) && this.isImmutableProperty(property)) {\n        delete value[property];\n      }\n    });\n  }\n\n  /** Transforms the given field's value for serialization when saving. */\n  serialize(value, put: boolean = false): any {\n    if (put) {\n      value = this.pickWriteOnly(value);\n    }\n    this.deleteImmutableProperties(value);\n    /** Run the remaining properties through serializers */\n    Object.keys(value).map((property) => {\n      (Object).assign(value, {\n        [property]: this.transform('serialize', property, value[property]), // TODO: fix\n      });\n    });\n    return value;\n\n    /** Run the remaining properties through serializers */\n    /*return Object.keys(value).reduce((serialized, property) => {\n      return Object.assign(serialized, {\n        [property]: this.transform('serialize', property, value[property])\n      });\n    }, {});*/\n  }\n\n  /** Saves the given value. Run serializers before assigning the new value. */\n  save(value: T = this.body): Promise> {\n    if (this.config.onSave) {\n      return Promise.resolve(this.config.onSave(this, value)).then((_value: T) => {\n        this.body = _value;\n        return this;\n      });\n    }\n    this.body = (Object).assign(this.resolve() || {}, value);\n    return Promise.resolve(this);\n  }\n  /** Action method that is meant to be called on a button click or similar.\n   * Calls the config#action method with the item and the property name */\n  action(property, e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.config.fields[property].action) {\n      this.config.fields[property].action(this, property);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemConfig.html":{"url":"interfaces/ItemConfig.html","title":"interface - ItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/item/item-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An ItemConfig describes an abstract entity with certain properties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classes\n                                \n                                \n                                            Optional\n                                        fields\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        identifierPattern\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        onEdit\n                                \n                                \n                                            Optional\n                                        onSave\n                                \n                                \n                                            Optional\n                                        parent\n                                \n                                \n                                            Optional\n                                        resolve\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                    \n                                \n                                \n                                    \n                                        classes:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:         FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Items field Config \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to identify items from another (e.g. in a selection). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierPattern\n                                    \n                                \n                                \n                                    \n                                        identifierPattern:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Pattern of the identifier field. Is used e.g. in the searchbar \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to display the item for humans \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEdit\n                                    \n                                \n                                \n                                    \n                                        onEdit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked before the item is edited \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSave\n                                    \n                                \n                                \n                                    \n                                        onSave:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked when the item is saved \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom resolve path function. It can be used e.g. to access subbranches of an Object. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For primitive values only: the title for the item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the Item. It determines how it will be displayed in different contexts \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Item } from './item';\nimport { FieldConfig } from '../config/field-config.interface';\n\n/** An ItemConfig describes an abstract entity with certain properties.*/\nexport interface ItemConfig {\n  /** For primitive values only: the title for the item */\n  title?: string;\n  /** The Property that is used to identify items from another (e.g. in a selection). */\n  identifier?: string;\n  /** Pattern of the identifier field. Is used e.g. in the searchbar */\n  identifierPattern?: RegExp;\n  /** The Property that is used to display the item for humans */\n  label?: string;\n  /** The Items field Config */\n  fields?: FieldConfig;\n  /** The type of the Item. It determines how it will be displayed in different contexts */\n  type?: string;\n  /** Custom resolve path function. It can be used e.g. to access subbranches of an Object. */\n  resolve?: (body: T) => any;\n  /** Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.*/\n  parent?: any;\n  /** Callback that is invoked when the item is saved */\n  onSave?: (item?: Item, value?: Object) => Promise | T; // TODO rename to save\n  /** Callback that is invoked before the item is edited */\n  onEdit?: (value?: T) => Promise | T; // TODO rename to save\n  /** This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class */\n  classes?: (item?: Item) => string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyAction.html":{"url":"interfaces/KeyAction.html","title":"interface - KeyAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                            Optional\n                                        canActivate\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canActivate\n                                    \n                                \n                                \n                                    \n                                        canActivate:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NotificationsService } from '../../notifications/notifications.service';\n\nexport interface KeyAction {\n  key: string;\n  description: string;\n  action: (e?) => void;\n  canActivate?: (e?) => boolean;\n}\n\n@Injectable()\nexport class KeycommandsService {\n  keys: { [key: string]: KeyAction } = {};\n  muted = false;\n  input;\n  meta = false;\n  shift = false;\n\n  constructor(public router: Router, public notificationsService: NotificationsService) {\n    window.addEventListener('keydown', (e) => {\n      if (e.altKey && this.keys[e.key]) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n      }\n    });\n    window.addEventListener('keyup', (e) => {\n      if ((!this.muted || e.altKey) && this.keys[e.key]) {\n        this.activate(this.keys[e.key], e);\n      }\n    });\n    window.addEventListener('mousedown', (e) => {\n      this.meta = e.metaKey;\n    });\n    // prevents shortcuts to be fired when inputs are focused\n    document.addEventListener(\n      'focus',\n      (e) => {\n        this.mute(e);\n      },\n      true,\n    );\n\n    document.addEventListener(\n      'blur',\n      (e) => {\n        this.unmute(e);\n      },\n      true,\n    );\n  }\n\n  mute(e?) {\n    this.input = e.target;\n    this.muted = true;\n  }\n\n  unmute(e?) {\n    delete this.input;\n    this.muted = false;\n  }\n\n  register(keyconfig: KeyAction) {\n    this.keys[keyconfig.key] = keyconfig;\n    return this;\n  }\n\n  activate(keyconfig: KeyAction, e?) {\n    if (!keyconfig.canActivate(e)) {\n      return;\n    }\n    keyconfig.action(e);\n  }\n\n  copyToClipBoard(value, label) {\n    const el = document.createElement('textarea');\n    el.value = value;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n\n    this.notificationsService.emit({\n      title: `${label} has been copied to the clipboard`,\n      message: value,\n      type: 'info',\n    });\n  }\n\n  copyCellToClipboard(label = 'Cell') {\n    return (item, property) => {\n      this.copyToClipBoard(JSON.stringify(item.resolve(property) || ''), label);\n    };\n  }\n\n  openUrl(url) {\n    window.open(url, '_blank');\n  }\n\n  navigate(path: string[], options = {}) {\n    if (this.meta) {\n      this.openUrl(this.router.serializeUrl(this.router.createUrlTree(path, options)));\n    } else {\n      this.router.navigate(path, options);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeycommandsService.html":{"url":"injectables/KeycommandsService.html","title":"injectable - KeycommandsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  KeycommandsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                            \n                                keys\n                            \n                            \n                                meta\n                            \n                            \n                                muted\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                shift\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                copyCellToClipboard\n                            \n                            \n                                copyToClipBoard\n                            \n                            \n                                mute\n                            \n                            \n                                navigate\n                            \n                            \n                                openUrl\n                            \n                            \n                                register\n                            \n                            \n                                unmute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate(keyconfig: KeyAction, e?)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyconfig\n                                    \n                                                KeyAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    e\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyCellToClipboard\n                        \n                        \n                    \n                \n            \n            \n                \ncopyCellToClipboard(label: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Cell'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (item: any, property: any) => void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyToClipBoard\n                        \n                        \n                    \n                \n            \n            \n                \ncopyToClipBoard(value, label)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    label\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mute\n                        \n                        \n                    \n                \n            \n            \n                \nmute(e?)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \nnavigate(path: string[], options: object)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openUrl\n                        \n                        \n                    \n                \n            \n            \n                \nopenUrl(url)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(keyconfig: KeyAction)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyconfig\n                                    \n                                                KeyAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unmute\n                        \n                        \n                    \n                \n            \n            \n                \nunmute(e?)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            muted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shift\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NotificationsService } from '../../notifications/notifications.service';\n\nexport interface KeyAction {\n  key: string;\n  description: string;\n  action: (e?) => void;\n  canActivate?: (e?) => boolean;\n}\n\n@Injectable()\nexport class KeycommandsService {\n  keys: { [key: string]: KeyAction } = {};\n  muted = false;\n  input;\n  meta = false;\n  shift = false;\n\n  constructor(public router: Router, public notificationsService: NotificationsService) {\n    window.addEventListener('keydown', (e) => {\n      if (e.altKey && this.keys[e.key]) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n      }\n    });\n    window.addEventListener('keyup', (e) => {\n      if ((!this.muted || e.altKey) && this.keys[e.key]) {\n        this.activate(this.keys[e.key], e);\n      }\n    });\n    window.addEventListener('mousedown', (e) => {\n      this.meta = e.metaKey;\n    });\n    // prevents shortcuts to be fired when inputs are focused\n    document.addEventListener(\n      'focus',\n      (e) => {\n        this.mute(e);\n      },\n      true,\n    );\n\n    document.addEventListener(\n      'blur',\n      (e) => {\n        this.unmute(e);\n      },\n      true,\n    );\n  }\n\n  mute(e?) {\n    this.input = e.target;\n    this.muted = true;\n  }\n\n  unmute(e?) {\n    delete this.input;\n    this.muted = false;\n  }\n\n  register(keyconfig: KeyAction) {\n    this.keys[keyconfig.key] = keyconfig;\n    return this;\n  }\n\n  activate(keyconfig: KeyAction, e?) {\n    if (!keyconfig.canActivate(e)) {\n      return;\n    }\n    keyconfig.action(e);\n  }\n\n  copyToClipBoard(value, label) {\n    const el = document.createElement('textarea');\n    el.value = value;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n\n    this.notificationsService.emit({\n      title: `${label} has been copied to the clipboard`,\n      message: value,\n      type: 'info',\n    });\n  }\n\n  copyCellToClipboard(label = 'Cell') {\n    return (item, property) => {\n      this.copyToClipBoard(JSON.stringify(item.resolve(property) || ''), label);\n    };\n  }\n\n  openUrl(url) {\n    window.open(url, '_blank');\n  }\n\n  navigate(path: string[], options = {}) {\n    if (this.meta) {\n      this.openUrl(this.router.serializeUrl(this.router.createUrlTree(path, options)));\n    } else {\n      this.router.navigate(path, options);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        The ListComponent will render a list containing the given items or collection.\nhttps://components.entrecode.de/ui/list/basic?e=1\nhttps://components.entrecode.de/ui/list/transforms?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list\n            \n\n\n\n            \n                template\n                listTemplate\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                config\n                            \n                            \n                                focusItem\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                filter\n                            \n                            \n                                focusFirst\n                            \n                            \n                                focusNext\n                            \n                            \n                                focusPrev\n                            \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectIndex\n                            \n                            \n                                showHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoFocusFirst\n                            \n                            \n                                collection\n                            \n                            \n                                config\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                pagination\n                            \n                            \n                                paginationConfig\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                        ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoFocusFirst\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:58\n                            \n                        \n                \n                    \n                        If true, the first item in the list will always be focused after changed \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        collection\n                    \n                \n                \n                    \n                        Type :         Collection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:42\n                            \n                        \n                \n                    \n                        The used collection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ListConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:40\n                            \n                        \n                \n                    \n                        The visible items \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:52\n                            \n                        \n                \n                    \n                        The Instance of the List \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                \n                \n                    \n                        Type :         Pagination\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:54\n                            \n                        \n                \n                    \n                        Pagination that should be used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        paginationConfig\n                    \n                \n                \n                    \n                        Type :         PaginationConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:56\n                            \n                        \n                \n                    \n                        Custom PaginationConfig \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:44\n                            \n                        \n                \n                    \n                        The used selection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:46\n                            \n                        \n                \n                    \n                        If true, only one item is selectable next \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:62\n                            \n                        \n                \n                    \n                        emits after the list changed \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:48\n                            \n                        \n                \n                    \n                        Event emitter on item selection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:50\n                            \n                        \n                \n                    \n                        Event emitter on selection change \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            columnClick\n                        \n                        \n                    \n                \n            \n            \n                \ncolumnClick(item)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list.component.ts:104\n                \n            \n\n\n            \n                \n                    Column click handler. Triggers select.emit(item) with fallback to selection.toggle\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(property, value)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list.component.ts:162\n                \n            \n\n\n            \n                \n                    Filters the list \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focusFirst\n                        \n                        \n                    \n                \n            \n            \n                \nfocusFirst()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focusNext\n                        \n                        \n                    \n                \n            \n            \n                \nfocusNext()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list.component.ts:136\n                \n            \n\n\n            \n                \n                    Selects the next item \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focusPrev\n                        \n                        \n                    \n                \n            \n            \n                \nfocusPrev()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list.component.ts:149\n                \n            \n\n\n            \n                \n                    Selects the previous item \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit(list: List)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                List\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes?)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list.component.ts:68\n                \n            \n\n\n            \n                \n                    Changing items or collection will trigger reconstructing the list with the new items.\nChanging the selection will reconstruct the selection \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectIndex\n                        \n                        \n                    \n                \n            \n            \n                \nselectIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list.component.ts:123\n                \n            \n\n\n            \n                \n                    Selects the item with the given index \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showHeader\n                        \n                        \n                    \n                \n            \n            \n                \nshowHeader()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list.component.ts:112\n                \n            \n\n\n            \n                \n                    Decides if the header should be visible or not \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:33\n                            \n                        \n\n                \n                    \n                        The current list config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:60\n                            \n                        \n\n                \n                    \n                        Current focus \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:36\n                            \n                        \n\n                \n                    \n                        Config input for List \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        List\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\ntypescript\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})\nThis is how you display a List instance into your template:\nhtml\n\n\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Collection, List, ListConfig, Selection, Pagination } from '@ec.components/core';\nimport { Item } from '@ec.components/core';\nimport { PaginationConfig } from './pagination/pagination-config.interface';\nimport { ListConfigService } from './list-config.service';\n\nimport { listTemplate } from './list.component.html';\n\n/**\n * The ListComponent will render a list containing the given items or collection.\n *\n * https://components.entrecode.de/ui/list/basic?e=1\n * https://components.entrecode.de/ui/list/transforms?e=1\n * */\n@Component({\n  selector: 'ec-list',\n  /* templateUrl: './list.component.html', */\n  template: listTemplate,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListComponent implements OnChanges {\n  /** The current list config */\n  config: ListConfig = {};\n  /** Config input for List */\n  /** Flag that flips true when loading. */\n  isLoading = false;\n  // tslint:disable-next-line:no-input-rename\n  @Input('config') configInput: ListConfig;\n  /** The visible items */\n  @Input() items: Array;\n  /** The used collection */\n  @Input() collection: Collection;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Event emitter on selection change */\n  @Output() selected: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Pagination that should be used */\n  @Input() pagination: Pagination;\n  /** Custom PaginationConfig */\n  @Input() paginationConfig: PaginationConfig;\n  /** If true, the first item in the list will always be focused after changed */\n  @Input() autoFocusFirst = false;\n  /** Current focus */\n  focusItem: Item;\n  /** emits after the list changed */\n  @Output() changed: EventEmitter> = new EventEmitter();\n\n  constructor(public listConfig: ListConfigService, public cdr: ChangeDetectorRef) {}\n\n  /** Changing items or collection will trigger reconstructing the list with the new items.\n   * Changing the selection will reconstruct the selection */\n  ngOnChanges(changes?) {\n    this.config = Object.assign(this.config || {}, this.configInput || {});\n    if (this.items) {\n      this.init(new List(this.items, this.config, this.pagination));\n    } else if (this.collection) {\n      this.init(new List(this.collection.items, this.config, this.pagination));\n    }\n  }\n\n  init(list: List) {\n    if (!list) {\n      console.warn('tried to init list.component with undefined list');\n      return;\n    }\n    this.list = list;\n    this.listConfig.applyConfig(this.list);\n    this.list.change$.subscribe(() => {\n      if (this.autoFocusFirst || this.list.isFiltered()) {\n        this.focusFirst();\n      } else {\n        delete this.focusItem;\n      }\n      this.cdr.markForCheck();\n      this.changed.emit(this.list);\n    });\n    if (!this.selection) {\n      this.selection = new Selection([], this.list.config);\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((selection: Selection) => {\n        this.selected.emit(selection);\n      });\n    }\n  }\n\n  /** Column click handler. Triggers select.emit(item) with fallback to selection.toggle*/\n  columnClick(item) {\n    if (this.list.config.selectMode && this.selection) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      return this.columnClicked.emit(item);\n    }\n  }\n  /** Decides if the header should be visible or not */\n  showHeader() {\n    return (\n      this.list &&\n      this.list.config &&\n      !this.list.config.disableHeader &&\n      (this.list.fields.length || this.list.config.title)\n    );\n    /* && (this.list.config.alwaysShowHeader || !this.list.isEmpty()); */\n  }\n\n  /** Selects the item with the given index */\n  selectIndex(index: number) {\n    if (!this.selection || this.list.isEmpty() || !this.list.items[index]) {\n      return;\n    }\n    this.selection.select(this.list.items[index]);\n  }\n\n  focusFirst() {\n    delete this.focusItem;\n    this.focusNext();\n  }\n\n  /** Selects the next item */\n  focusNext() {\n    if (!this.list) {\n      return;\n    }\n    let index = 0;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Selects the previous item */\n  focusPrev() {\n    if (!this.list) {\n      return;\n    }\n    let index = this.list.page.length - 1;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + this.list.page.length - 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Filters the list */\n  filter(property, value) {\n    this.list.filter(property, value);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'listTemplate'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListConfig.html":{"url":"interfaces/ListConfig.html","title":"interface - ListConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/list/list-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for List Classes.\n\n            \n\n            \n                Extends\n            \n            \n                        ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysShowHeader\n                                \n                                \n                                            Optional\n                                        autoload\n                                \n                                \n                                            Optional\n                                        availableSizes\n                                \n                                \n                                            Optional\n                                        defaultFilter\n                                \n                                \n                                            Optional\n                                        desc\n                                \n                                \n                                            Optional\n                                        disableColumnFilter\n                                \n                                \n                                            Optional\n                                        disableDrag\n                                \n                                \n                                            Optional\n                                        disableDropdown\n                                \n                                \n                                            Optional\n                                        disableHeader\n                                \n                                \n                                            Optional\n                                        disableRemove\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        display\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        hidePagination\n                                \n                                \n                                            Optional\n                                        maxColumns\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        popColumns\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        selectMode\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        solo\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        storageKey\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysShowHeader\n                                    \n                                \n                                \n                                    \n                                        alwaysShowHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the header will also be shown when the list is empty. Defaults to false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoload\n                                    \n                                \n                                \n                                    \n                                        autoload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will automatically load on change \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availableSizes\n                                    \n                                \n                                \n                                    \n                                        availableSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The available sizes. If not set, the size cannot be changed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultFilter\n                                    \n                                \n                                \n                                    \n                                        defaultFilter:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, a filter input for the given field property will be shown by default \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set to true, the sorting will be descending \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableColumnFilter\n                                    \n                                \n                                \n                                    \n                                        disableColumnFilter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no column filter will be shown in the list header \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDrag\n                                    \n                                \n                                \n                                    \n                                        disableDrag:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, select items cannot be dragged \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDropdown\n                                    \n                                \n                                \n                                    \n                                        disableDropdown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be shown for a select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableHeader\n                                    \n                                \n                                \n                                    \n                                        disableHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will have no header. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRemove\n                                    \n                                \n                                \n                                    \n                                        disableRemove:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, removal of items wont be possible (select) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select dropdown will be shown on ec-select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Transforms the Items before they are displayed, e.g. to apply a filter for the view *\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    tells the list to show only items that match the filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidePagination\n                                    \n                                \n                                \n                                    \n                                        hidePagination:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the default pagination will not be visible. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxColumns\n                                    \n                                \n                                \n                                    \n                                        maxColumns:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximal visible columns. Defaults to 8 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current active page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popColumns\n                                    \n                                \n                                \n                                    \n                                        popColumns:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    how many columns should the pop have? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    a query that will be turned in to a filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectMode\n                                    \n                                \n                                \n                                    \n                                        selectMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will show its checkboxes and will select on column click.\nThe columnClicked output will be ignored as long selectMode is active \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of items per page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solo\n                                    \n                                \n                                \n                                    \n                                        solo:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should the selection be solo? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of properties that is sorted after, experimental... \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The property name that is sorted after \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageKey\n                                    \n                                \n                                \n                                    \n                                        storageKey:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The key that should store the lists config in the local storage.\nIf set, the key will be populated on config changes. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For lists with primitive values only: the title of the list header \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\nimport { List } from '../list/list';\nimport { Item } from '../item/item';\n\n/**\n *  Configuration for List Classes.\n * */\nexport interface ListConfig extends ItemConfig {\n  /** For lists with primitive values only: the title of the list header */\n  title?: string;\n  /** The property name that is sorted after */\n  sortBy?: string;\n  /** Array of properties that is sorted after, experimental... */\n  sort?: string[];\n  /** If set to true, the sorting will be descending */\n  desc?: boolean;\n  /** If true, the list will show its checkboxes and will select on column click.\n   * The columnClicked output will be ignored as long selectMode is active */\n  selectMode?: boolean;\n  /** If true, no select dropdown will be shown on ec-select */\n  disableSearchbar?: boolean;\n  /** If true, the list will have no header. */\n  disableHeader?: boolean;\n  /** If true, the header will also be shown when the list is empty. Defaults to false */\n  alwaysShowHeader?: boolean;\n  /** If true, no dropdown will be shown for a select */\n  disableDropdown?: boolean;\n  /** If true, removal of items wont be possible (select) */\n  disableRemove?: boolean;\n  /** If true, no column filter will be shown in the list header */\n  disableColumnFilter?: boolean;\n  /** If true, select items cannot be dragged */\n  disableDrag?: boolean;\n  /** If true, the default pagination will not be visible. */\n  hidePagination?: boolean;\n  /** The current active page */\n  page?: number;\n  /** The number of items per page */\n  size?: number;\n  /** The available sizes. If not set, the size cannot be changed */\n  availableSizes?: number[];\n  /** Should the selection be solo? */\n  solo?: boolean;\n  /** tells the list to show only items that match the filter */\n  filter?: { [key: string]: any };\n  /** a query that will be turned in to a filter */\n  query?: { [key: string]: any };\n  /** Maximal visible columns. Defaults to 8 */\n  maxColumns?: number;\n  /** how many columns should the pop have? */\n  popColumns?: number;\n  /** If true, the list will automatically load on change */\n  autoload?: boolean;\n  /** The key that should store the lists config in the local storage.\n   * If set, the key will be populated on config changes. */\n  storageKey?: string | ((list: List) => string);\n  /** Transforms the Items before they are displayed, e.g. to apply a filter for the view **/\n  display?: (items: Item[]) => Item[];\n  /** If set, a filter input for the given field property will be shown by default */\n  defaultFilter?: string | boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListConfigService.html":{"url":"injectables/ListConfigService.html","title":"injectable - ListConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/list/list-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                storageKeyResolver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyConfig\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                retrieve\n                            \n                            \n                                set\n                            \n                            \n                                store\n                            \n                            \n                                storeConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyConfig\n                        \n                        \n                    \n                \n            \n            \n                \napplyConfig(list: List)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-config.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                List\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStorageKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetStorageKey(list: List)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-config.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                List\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \nretrieve(key)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-config.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(key, value)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-config.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            store\n                        \n                        \n                    \n                \n            \n            \n                \nstore(key, config)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-config.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            storeConfig\n                        \n                        \n                    \n                \n            \n            \n                \nstoreConfig(list: List)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-config.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                List\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storageKeyResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { List } from '@ec.components/core';\n\n@Injectable()\nexport class ListConfigService {\n  public storageKeyResolver: (list: List) => string;\n\n  retrieve(key) {\n    const config = localStorage.getItem(key);\n    return config ? JSON.parse(config) : null;\n  }\n\n  set(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  store(key, config) {\n    const existing = this.retrieve(key) || {};\n    localStorage.setItem(key, JSON.stringify(Object.assign(existing, config)));\n  }\n\n  getStorageKey(list: List) {\n    if (!list || !list.fields || !list.config || !list.config.storageKey) {\n      // console.log('cannot apply config: no storage key or list set');\n      return;\n    }\n    const resolveFn = list.config.storageKey || this.storageKeyResolver;\n    if (typeof resolveFn === 'function') {\n      return resolveFn(list);\n    }\n    return list.config.storageKey;\n  }\n\n  storeConfig(list: List) {\n    const key = this.getStorageKey(list);\n    if (!key) {\n      return;\n    }\n    const config = { hide: list.fields.filter((f) => f.hideInList).map((f) => f.property) };\n    this.store(key, config);\n  }\n\n  applyConfig(list: List) {\n    const key = this.getStorageKey(list);\n    if (!key) {\n      return;\n    }\n    const existing = this.retrieve(key);\n    if (existing && existing.hide) {\n      list.fields.forEach((field) => (field.hideInList = false));\n      existing.hide.forEach((property) => {\n        const field = list.fields.find((f) => f.property === property);\n        if (!field) {\n          console.warn('field ', property, ' not found');\n          return;\n        }\n        field.hideInList = true;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListHeaderComponent.html":{"url":"components/ListHeaderComponent.html","title":"component - ListHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list-header/list-header.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders, as the name states, the header of a list.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-header\n            \n\n\n\n\n            \n                templateUrl\n                ./list-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                filteredField\n                            \n                            \n                                filterForm\n                            \n                            \n                                filterFormConfig\n                            \n                            \n                                filterInput\n                            \n                            \n                                filterPop\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFilter\n                            \n                            \n                                    Public\n                                filterField\n                            \n                            \n                                initFilterForm\n                            \n                            \n                                inputReady\n                            \n                            \n                                isLastColumn\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                resetFilter\n                            \n                            \n                                setFilter\n                            \n                            \n                                toggledFilterPop\n                            \n                            \n                                    Public\n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                        ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:16\n                            \n                        \n                \n                    \n                        The list instance \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:18\n                            \n                        \n                \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearFilter\n                        \n                        \n                    \n                \n            \n            \n                \nclearFilter()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            filterField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterField(property)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:83\n                \n            \n\n\n            \n                \n                    opens the given filter pop and closes all others \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFilterForm\n                        \n                        \n                    \n                \n            \n            \n                \ninitFilterForm(filterForm)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterForm\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inputReady\n                        \n                        \n                    \n                \n            \n            \n                \ninputReady(input)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLastColumn\n                        \n                        \n                    \n                \n            \n            \n                \nisLastColumn(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:138\n                \n            \n\n\n            \n                \n                    Yields true if the given field is the last column of the current list header \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes?)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetFilter\n                        \n                        \n                    \n                \n            \n            \n                \nresetFilter()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFilter\n                        \n                        \n                    \n                \n            \n            \n                \nsetFilter(field, value)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggledFilterPop\n                        \n                        \n                    \n                \n            \n            \n                \ntoggledFilterPop(active)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    active\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleVisibility\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleVisibility(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:132\n                \n            \n\n\n            \n                \n                    Toggles the fields visibility in the list \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterFormConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:22\n                            \n                        \n\n                \n                    \n                        The config for the filter form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterPop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('filterPop')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:20\n                            \n                        \n\n                \n                    \n                        The pop dropdowns that contain the filtering \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        List Header\nThis document conceptualizes the ec-list-header.\nIdea\nThe list-header displays the field labels in columns. If a fields are sortable or filterable, a clickeable icons will be shown.\nFiltering\nIf a field has the option \"filterable\" set to true, a search icon will be shown. When clicking the icon, an input field will appear above the list header which can be used to filter the list by the field property.\n\nThe input field will be autofocused\nNo validation errors should be shown\nWhen the input value changes, the list will load after a short debounce.\nWhen the input is closed, the filter will be cleared.\nWhen another field's search icon is clicked, all previous filters will be cleared.\n\n\n    \n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { Field, List, ListConfig, Selection } from '@ec.components/core';\nimport { FormComponent } from '../../form/form.component';\nimport { PopComponent } from '../../pop/pop.component';\nimport { ListConfigService } from '../list-config.service';\nimport { InputComponent } from '../../io/input/input.component';\n\n/** This component renders, as the name states, the header of a list.*/\n@Component({\n  selector: 'ec-list-header',\n  templateUrl: './list-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListHeaderComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** The pop dropdowns that contain the filtering */\n  @ViewChild('filterPop') filterPop: PopComponent;\n  /** The config for the filter form */\n  filterFormConfig: ListConfig;\n  filteredField: any;\n  filterForm: FormComponent;\n  filterInput: InputComponent;\n\n  constructor(public listConfig: ListConfigService, public cdr: ChangeDetectorRef) {}\n\n  setFilter(field, value) {\n    this.list.setFilter({ [field.property]: value });\n  }\n\n  inputReady(input) {\n    this.filterInput = input;\n    input.focus(true);\n  }\n\n  initFilterForm(filterForm) {\n    // is called when form is ready\n    this.filterForm = filterForm;\n    if (this.list.config.defaultFilter) {\n      this.filterField(this.list.config.defaultFilter);\n    }\n  }\n\n  ngOnChanges(changes?) {\n    if (!changes.list) {\n      return;\n    }\n    if (!this.list || !this.list.config || !this.list.config.fields) {\n      return;\n    }\n    /* this.list.change$.subscribe(() => {\n      if (this.filterInput) {\n        // this.filterInput.focus(true);\n      }\n    }); */\n    this.filterFormConfig = {\n      ...this.list.config,\n      fields: this.list.filterableFields().reduce((fields, field) => {\n        return {\n          ...fields,\n          [field.property]: {\n            ...this.list.config.fields[field.property],\n            view: field.getView('filter'),\n            required: false,\n            readOnly: false,\n            immutable: false,\n            create: true,\n            form: true,\n            autofocus: true,\n            nestedCrudConfig: {\n              ...field.nestedCrudConfig,\n              methods: ['get'],\n            },\n          },\n        };\n      }, {}),\n    };\n  }\n\n  /** opens the given filter pop and closes all others */\n  public filterField(property) {\n    if (this.filteredField) {\n      if (this.filteredField.property === property) {\n        /* this.filterPop.hide(); */\n        if (this.filterInput) {\n          this.filterInput.focus(true);\n        }\n        return;\n      }\n      this.clearFilter();\n    }\n    // patch current filter value to control\n    const control = this.filterForm.group.get(property);\n    if (!control) {\n      console.warn('no control found for ' + property + '. Is it filterable?', this.list.config, this.filterForm.group);\n      return;\n    }\n    this.filterForm.group.get(property).patchValue(this.list.getFilterValue(property));\n    this.filteredField = this.filterForm.form.getField(property);\n    setTimeout(() => this.filterPop.show());\n  }\n\n  resetFilter() {\n    if (!this.filteredField || !this.list || !this.list.isFiltered(this.filteredField.property)) {\n      return;\n    }\n    this.filterForm.group.get(this.filteredField.property).reset();\n    this.list.clearFilter();\n  }\n\n  clearFilter() {\n    if (!this.filteredField || !this.list.isFiltered(this.filteredField.property)) {\n      delete this.filteredField;\n      return;\n    }\n    this.resetFilter();\n    delete this.filteredField;\n  }\n\n  toggledFilterPop(active) {\n    if (!active) {\n      this.clearFilter();\n    }\n    if (this.filterInput) {\n      this.filterInput.focus(true);\n    }\n  }\n\n  /** Toggles the fields visibility in the list */\n  public toggleVisibility(field: Field) {\n    this.list.toggleVisibility(field);\n    this.listConfig.storeConfig(this.list);\n  }\n\n  /** Yields true if the given field is the last column of the current list header */\n  isLastColumn(field: Field) {\n    if (!this.list || !this.list.fields) {\n      return;\n    }\n    const visibleColumns = this.list.fields.filter((f) => !f.hideInList);\n    return field.property === visibleColumns[visibleColumns.length - 1].property;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          \n            \n          \n          \n            \n              \n                \n                  \n                  \n                \n                {{ field.getLabel() }}\n              \n            \n          \n        \n      \n    \n  \n\n\n  \n  \n    \n      \n    \n    \n      \n      \n        \n      \n      \n        \n       -->\n\n      \n        {{ field.getLabel() }}\n      \n      \n        \n        \n      \n    \n\n    \n      &#9776;\n      \n        \n          {{ field.getLabel() }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                            {{ field.getLabel() }}                                                                                                                             -->              {{ field.getLabel() }}                                                ☰                        {{ field.getLabel() }}                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemsComponent.html":{"url":"components/ListItemsComponent.html","title":"component - ListItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list-items/list-items.component.ts\n\n\n    \n        Description\n    \n    \n        The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\nIt can either be given an Array of Items or just the list parent to control the shown items. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-items\n            \n\n\n\n\n            \n                templateUrl\n                ./list-items.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                hasFocus\n                            \n                            \n                                isClickable\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focusItem\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        focusItem\n                    \n                \n                \n                    \n                        Type :         Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:22\n                            \n                        \n                \n                    \n                        The current focused item \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :         Item[]\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:18\n                            \n                        \n                \n                    \n                        An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:14\n                            \n                        \n                \n                    \n                        The list instance \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:16\n                            \n                        \n                \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:20\n                            \n                        \n                \n                    \n                        If true, only one item is selectable next \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:24\n                            \n                        \n                \n                    \n                        Event emitter on item clicked \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            columnClick\n                        \n                        \n                    \n                \n            \n            \n                \ncolumnClick(item: Item, e: Event)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:53\n                \n            \n\n\n            \n                \n                    Propagate clicked item to host or toggle selection. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasFocus\n                        \n                        \n                    \n                \n            \n            \n                \nhasFocus(item)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:44\n                \n            \n\n\n            \n                \n                    yields true if the item is focussed \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isClickable\n                        \n                        \n                    \n                \n            \n            \n                \nisClickable()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:28\n                \n            \n\n\n            \n                \n                    Checks for host and uses its list. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Item, List, Selection } from '@ec.components/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\n\n/** The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\n * It can either be given an Array of Items or just the list parent to control the shown items. */\n@Component({\n  selector: 'ec-list-items',\n  templateUrl: './list-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListItemsComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.*/\n  @Input() items: Item[];\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** The current focused item */\n  @Input() focusItem: Item;\n  /** Event emitter on item clicked */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n\n  constructor(public cdr: ChangeDetectorRef) {}\n  /** Checks for host and uses its list. */\n  ngOnChanges() {\n    if (!this.items && this.list) {\n      this.items = this.list.page;\n    }\n    if (this.list) {\n      this.list.change$.subscribe((newList) => {\n        this.cdr.markForCheck();\n      });\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((newList) => {\n        this.cdr.markForCheck();\n      });\n    }\n  }\n  /** yields true if the item is focussed */\n  hasFocus(item) {\n    return this.focusItem === item;\n  }\n\n  isClickable() {\n    return this.columnClicked.observers.length || (this.selection && this.list && this.list.config.selectMode);\n  }\n\n  /** Propagate clicked item to host or toggle selection. */\n  columnClick(item: Item, e: Event) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.selection && this.list && this.list.config.selectMode) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n    Modules\n    ListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\n\nGroupPipe\n\nGroupPipe\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/list/list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupPipe\n                        \n                        \n                            ListComponent\n                        \n                        \n                            ListHeaderComponent\n                        \n                        \n                            ListItemsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SearchbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ListConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormModule\n                        \n                        \n                            GroupPipe\n                        \n                        \n                            ListComponent\n                        \n                        \n                            ListHeaderComponent\n                        \n                        \n                            ListItemsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SearchbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormModule } from '../form/form.module';\nimport { IconModule } from '../icon/icon.module';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { UtilityModule } from '../utility/utility.module';\nimport { GroupPipe } from './group.pipe';\nimport { ListHeaderComponent } from './list-header/list-header.component';\nimport { ListItemsComponent } from './list-items/list-items.component';\nimport { ListComponent } from './list.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\nimport { ListConfigService } from './list-config.service';\nimport { FormsModule } from '@angular/forms';\n\nexport const listModuleConfig = {\n  declarations: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n  ],\n  imports: [CommonModule, FormsModule, FormModule, IconModule, SymbolModule, UtilityModule],\n  exports: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n    FormModule,\n  ],\n  providers: [ListConfigService],\n};\n\n@NgModule(listModuleConfig)\nexport class ListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        The ec-loader can be plugged into various components to be triggered when they load stuff.\nhttps://components.entrecode.de/ui/loader?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-loader\n            \n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stack\n                            \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                show\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                            Injects the host element. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/loader/loader.component.ts:30\n                \n            \n\n\n            \n                \n                    Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/loader/loader.component.ts:24\n                \n            \n\n\n            \n                \n                    Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \nwait(promise: Promise)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/loader/loader.component.ts:37\n                \n            \n\n\n            \n                \n                    Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\nMake sure the given promise is catched (so the loader will stop loading on error)! \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    promise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Collection>\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                        The current stack of loading promises.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                        The timestamp of the last time a promise has been added to the stack. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                        The loader's visibility status. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Loader\nThe loader can be used to indicate any kind of loading activity\nTemplate\nhtml\n\n\nGlobal Loader\nLocal Loader\nThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nts\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}\nThe advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n    \n\n    \n        import { Component, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Collection } from '@ec.components/core';\n\n/** The ec-loader can be plugged into various components to be triggered when they load stuff.\n * https://components.entrecode.de/ui/loader?e=1\n */\n@Component({\n  selector: 'ec-loader',\n  templateUrl: './loader.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent {\n  /** The current stack of loading promises.*/\n  private stack: Collection> = new Collection([]);\n  /** The loader's visibility status. */\n  private visible = false;\n  /** The timestamp of the last time a promise has been added to the stack. */\n  private timestamp;\n\n  /** Injects the host element. */\n  constructor(private host: ElementRef) {}\n\n  /** Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, */\n  private show() {\n    this.visible = true; // show loader\n    this.host.nativeElement.classList.add('is-active');\n  }\n\n  /** Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, */\n  private hide() {\n    this.visible = false; // hide loader\n    this.host.nativeElement.classList.remove('is-active');\n  }\n\n  /** Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\n   * Make sure the given promise is catched (so the loader will stop loading on error)! */\n  wait(promise: Promise) {\n    this.stack.add(promise); // add promise to stack\n    this.show();\n    const timestamp = Date.now();\n    this.timestamp = timestamp; // get timestamp\n    Promise.all(this.stack.items).then(() => {\n      if (timestamp === this.timestamp) {\n        this.hide();\n        this.stack.removeAll();\n      }\n    });\n    return promise;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoaderModule.html":{"url":"modules/LoaderModule.html","title":"module - LoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    LoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\n\n\nLoaderModule\n\nLoaderModule\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/loader/loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoaderService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\nimport { LoaderService } from './loader.service';\n\n@NgModule({\n  declarations: [LoaderComponent],\n  imports: [CommonModule],\n  exports: [LoaderComponent],\n  providers: [LoaderService],\n})\nexport class LoaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/loader/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The loader service registers promises \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(loader: LoaderComponent)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/loader/loader.service.ts:11\n                \n            \n\n\n            \n                \n                    Sets a global loader that can be triggered without having the reference. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loader\n                                    \n                                                LoaderComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \nwait(promise: Promise, loader: LoaderComponent)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/loader/loader.service.ts:16\n                \n            \n\n\n            \n                \n                    Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    promise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    loader\n                                    \n                                                LoaderComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.loader\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoaderComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:8\n                            \n                        \n\n                \n                    \n                        The global loader that should be used if not loader is passed to wait. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\n\n/** The loader service registers promises */\n@Injectable()\nexport class LoaderService {\n  /** The global loader that should be used if not loader is passed to wait. */\n  loader: LoaderComponent;\n\n  /** Sets a global loader that can be triggered without having the reference. */\n  use(loader: LoaderComponent) {\n    this.loader = loader;\n  }\n\n  /** Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)*/\n  wait(promise: Promise, loader: LoaderComponent = this.loader) {\n    if (!loader || !promise) {\n      console.warn('cannot trigger loader: no promise or loader given');\n      return;\n    }\n    return loader.wait(promise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationMapComponent.html":{"url":"components/LocationMapComponent.html","title":"component - LocationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-map.component.ts\n\n\n    \n        Description\n    \n    \n        Shows Google Maps Map \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-map\n            \n\n            \n                styleUrls\n                ./location-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markerDragEnd\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disabled\n                            \n                            \n                                readOnly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { latitude: 48.8093253, longitude: 9.159388100000001 }\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:11\n                            \n                        \n                \n                    \n                        The desired map center \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:15\n                            \n                        \n                \n                    \n                        If true, no marker can be chaned \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:13\n                            \n                        \n                \n                    \n                        If true, no markers can be changed or set \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:19\n                            \n                        \n                \n                    \n                        Form input component \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:17\n                            \n                        \n                \n                    \n                        Emits when the marker has been changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            markerDragEnd\n                        \n                        \n                    \n                \n            \n            \n                \nmarkerDragEnd(coords)\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/location-map.component.ts:36\n                \n            \n\n\n            \n                \n                    changes value on marker dragend \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coords\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(value)\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/location-map.component.ts:25\n                \n            \n\n\n            \n                \n                    sets the value cand changes the center \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/** Shows Google Maps Map */\n@Component({\n  selector: 'ec-location-map',\n  templateUrl: './location-map.component.html',\n  styleUrls: ['./location-map.component.scss'],\n})\nexport class LocationMapComponent {\n  /** The desired map center */\n  @Input() center: { longitude: any; latitude: any } = { latitude: 48.8093253, longitude: 9.159388100000001 };\n  /** If true, no markers can be changed or set */\n  @Input() readOnly: boolean;\n  /** If true, no marker can be chaned */\n  @Input() disabled: boolean;\n  /** Emits when the marker has been changed */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** Form input component */\n  @Input() value: {\n    longitude: number;\n    latitude: number;\n  };\n\n  /** sets the value cand changes the center */\n  setValue(value) {\n    if (this.disabled) {\n      console.warn('cannot change map value: disabled!');\n      return;\n    }\n    this.value = value;\n    if (value) {\n      this.center = value;\n    }\n  }\n  /** changes value on marker dragend */\n  markerDragEnd(coords) {\n    if (!coords) {\n      console.warn('no coords');\n      return;\n    }\n    if (this.disabled) {\n      return;\n    }\n    const position = { longitude: coords.lng, latitude: coords.lat };\n    this.setValue(position);\n    this.changed.emit(position);\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./location-map.component.scss\n                \n                :host {\n    height: 300px;\n}\nagm-map {\n    height: 300px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/location/src/lib/location.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module holds all location/map related components and services \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LocationMapComponent\n                        \n                        \n                            LocationPickerComponent\n                        \n                        \n                            LocationSearchComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            LOCATION_COMPONENTS\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GeocodeService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocationMapComponent\n                        \n                        \n                            LocationPickerComponent\n                        \n                        \n                            LocationSearchComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(undefined)\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/location.module.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationPickerComponent } from './location-picker.component';\nimport { LocationSearchComponent } from './location-search.component';\n/** The components of this module */\nconst LOCATION_COMPONENTS = [LocationMapComponent, LocationSearchComponent, LocationPickerComponent];\n\nexport const locationModuleConfig = {\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UiModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyAdgEUE1Yxo1F-qb1MrO56u5KATpX9j8o4',\n      libraries: ['places'],\n    }),\n  ],\n  exports: LOCATION_COMPONENTS,\n  declarations: LOCATION_COMPONENTS,\n  entryComponents: LOCATION_COMPONENTS,\n  providers: [GeocodeService],\n};\n/** This module holds all location/map related components and services */\n@NgModule(locationModuleConfig)\nexport class LocationModule {\n  static forRoot({ apiKey }): ModuleWithProviders {\n    return {\n      ngModule: LocationModule,\n      providers: [\n        {\n          provide: 'googlemaps.apiKey',\n          useValue: apiKey,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationPickerComponent.html":{"url":"components/LocationPickerComponent.html","title":"component - LocationPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-picker.component.ts\n\n\n    \n        Description\n    \n    \n        Component with map and autocomplete input to pick a location. Implements ControlValueAccessor \n\n    \n\n    \n        Extends\n    \n    \n                DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => LocationPickerComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-location-picker\n            \n\n            \n                styleUrls\n                ./location-picker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-picker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                geocodeService\n                            \n                            \n                                input\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                            \n                                map\n                            \n                            \n                                propagateChange\n                            \n                            \n                                search\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setValue\n                            \n                            \n                                updateAddress\n                            \n                            \n                                writeValue\n                            \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                            \n                                showRawValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/location-picker.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                        GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                        KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:35\n                            \n                        \n                \n                    \n                        readonly? \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:23\n                            \n                        \n                \n                    \n                        The form control that holds the location \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:27\n                            \n                        \n                \n                    \n                        Placeholder for search input \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showRawValue\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:25\n                            \n                        \n                \n                    \n                        If true, the raw location value will be visible\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn)\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/location-picker.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/location-picker.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled)\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/location-picker.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(value, fromSearch?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/location-picker.component.ts:46\n                \n            \n\n\n            \n                \n                    Sets value of map and propagates change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fromSearch\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAddress\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAddress()\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/location-picker.component.ts:64\n                \n            \n\n\n            \n                \n                    updates the address string by reverse geo lookup  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/location-picker.component.ts:58\n                \n            \n\n\n            \n                \n                    Writes value to editor on outside model change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus(focus)\n                \n            \n\n\n            \n                \n                    Inherited from         DefaultInputComponent\n\n                \n            \n            \n                \n                        Defined in         DefaultInputComponent:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    focus\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DefaultInputComponent\n\n                \n            \n            \n                \n                        Defined in         DefaultInputComponent:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geocodeService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeocodeService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocationMapComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LocationMapComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:29\n                            \n                        \n\n                \n                    \n                        The nested LocationMapComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocationSearchComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LocationSearchComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:31\n                            \n                        \n\n                \n                    \n                        The nested LocationSearchComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:21\n\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:15\n\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:23\n\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:19\n\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:17\n\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultInputComponent:26\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent, FormService, KeycommandsService } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationSearchComponent } from './location-search.component';\n\n/** Component with map and autocomplete input to pick a location. Implements ControlValueAccessor */\n@Component({\n  selector: 'ec-location-picker',\n  templateUrl: './location-picker.component.html',\n  styleUrls: ['./location-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => LocationPickerComponent),\n      multi: true,\n    },\n  ],\n})\nexport class LocationPickerComponent extends DefaultInputComponent implements ControlValueAccessor {\n  /** The form control that holds the location */\n  @Input() formControl: FormControl;\n  /** If true, the raw location value will be visible*/\n  @Input() showRawValue = true;\n  /** Placeholder for search input */\n  @Input() placeholder;\n  /** The nested LocationMapComponent */\n  @ViewChild(LocationMapComponent) map: LocationMapComponent;\n  /** The nested LocationSearchComponent */\n  @ViewChild(LocationSearchComponent) search: LocationSearchComponent;\n  /** Form input component */\n  input: InputComponent;\n  /** readonly? */\n  @Input() disabled: boolean;\n\n  constructor(\n    public geocodeService: GeocodeService,\n    public formService: FormService,\n    public keycommands: KeycommandsService,\n  ) {\n    super(formService, keycommands);\n  }\n\n  /** Sets value of map and propagates change */\n  setValue(value, fromSearch?: boolean) {\n    if (!value) {\n      this.search.clear();\n    }\n    this.map.setValue(value);\n    if (!fromSearch) {\n      this.updateAddress();\n    }\n    this.propagateChange(value);\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.map.setValue(value);\n    this.updateAddress();\n  }\n\n  /** updates the address string by reverse geo lookup  */\n  updateAddress() {\n    const value = this.map.value;\n    if (!value) {\n      this.search.searchInput.nativeElement.value = '';\n      return;\n    }\n    this.geocodeService.getNearestAddress(value).then((results) => {\n      if (results.length) {\n        this.search.searchInput.nativeElement.value = results[0].formatted_address;\n      } else {\n        this.search.searchInput.nativeElement.value = '';\n      }\n    });\n  }\n\n  propagateChange = (_: any) => {};\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n{{map.value | json}}\n    \n\n    \n                \n                    ./location-picker.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{map.value | json}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationSearchComponent.html":{"url":"components/LocationSearchComponent.html","title":"component - LocationSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-search.component.ts\n\n\n    \n        Description\n    \n    \n        Google Maps Location Searchbar \n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-search\n            \n\n\n\n\n            \n                templateUrl\n                ./location-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/location-search.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                        GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:14\n                            \n                        \n                \n                    \n                        If true, the input cannot be used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'Search Location...'\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:12\n                            \n                        \n                \n                    \n                        Placeholder for input \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:18\n                            \n                        \n                \n                    \n                        emits when the coords have been changed (after selecting a match) \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/location-search.component.ts:22\n                \n            \n\n\n            \n                \n                    Clears the searchbar input value \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/location/src/lib/location-search.component.ts:28\n                \n            \n\n\n            \n                \n                    subscribes to changes from the inputs autocomplete using geocodeService. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('search')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:16\n                            \n                        \n\n                \n                    \n                        The search input element \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, Input, NgZone, Output, ViewChild } from '@angular/core';\nimport {} from 'googlemaps';\nimport { GeocodeService } from './geocode.service';\n\n/** Google Maps Location Searchbar */\n@Component({\n  selector: 'ec-location-search',\n  templateUrl: './location-search.component.html',\n})\nexport class LocationSearchComponent implements AfterViewInit {\n  /** Placeholder for input */\n  @Input() placeholder = 'Search Location...';\n  /** If true, the input cannot be used */\n  @Input() disabled;\n  /** The search input element */\n  @ViewChild('search') searchInput: ElementRef;\n  /** emits when the coords have been changed (after selecting a match) */\n  @Output() changed: EventEmitter = new EventEmitter();\n\n  constructor(private geocodeService: GeocodeService, private ngZone: NgZone) {}\n  /** Clears the searchbar input value */\n  clear() {\n    if (this.searchInput) {\n      this.searchInput.nativeElement.value = '';\n    }\n  }\n  /** subscribes to changes from the inputs autocomplete using geocodeService. */\n  ngAfterViewInit() {\n    this.geocodeService.autocompleteAddress(this.searchInput.nativeElement).subscribe((coords) => {\n      this.changed.emit(coords);\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/auth?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                    WithLoader\n                    WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login\n            \n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:23\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:27\n                            \n                        \n                \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:25\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(undefined)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/login/login.component.ts:39\n                \n            \n\n\n            \n                \n                    Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:29\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport {\n  SymbolService,\n  WithNotifications,\n  Notification,\n  LoaderComponent,\n  NotificationsService,\n  WithLoader,\n} from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport { AuthService } from '../auth.service';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/auth?e=1\n */\n@Component({\n  selector: 'ec-login',\n  templateUrl: 'login.component.html',\n})\nexport class LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Subject that is nexted when an error occurs. For custom error reactions */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  constructor(\n    public auth: AuthService,\n    public notificationService: NotificationsService,\n    public symbol: SymbolService,\n  ) {}\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  login({ email, password }) {\n    const login = this.auth\n      .login({ email, password }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('login.success'),\n          hide: this.notifications,\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('login.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications,\n        });\n        this.error.next(error);\n        console.log('could not login', error);\n      });\n    this.loader.wait(login);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login-form\n            \n\n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                            Injects the FormBuilder\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:42\n                            \n                        \n                \n                    \n                        Additional Button classes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.button.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:40\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:32\n                            \n                        \n                \n                    \n                        The Label of the Mail field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:34\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :         LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:28\n                            \n                        \n                \n                    \n                        The loader that should be shown during login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:36\n                            \n                        \n                \n                    \n                        The Label of the password field. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:38\n                            \n                        \n                \n                    \n                        The Placeholder of the password field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:30\n                            \n                        \n                \n                    \n                        If true, email and password wont have labels \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:26\n                            \n                        \n                \n                    \n                        Event that emits when calling showError. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:24\n                            \n                        \n                \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(value)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:66\n                \n            \n\n\n            \n                \n                    Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:50\n                \n            \n\n\n            \n                \n                    Initializes the form \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:72\n                \n            \n\n\n            \n                \n                    Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showError\n                        \n                        \n                    \n                \n            \n            \n                \nshowError(err)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:58\n                \n            \n\n\n            \n                \n                    Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Login Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\nhtml\n    \n\n    \n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { throwError } from 'rxjs';\nimport { LoaderComponent } from '../../loader/loader.component';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { SymbolService } from '../../symbol/symbol.service';\nimport { FieldValidators } from '../validators/field-validators';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n */\n@Component({\n  selector: 'ec-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, WithLoader {\n  /** The login's form group.*/\n  public form: FormGroup;\n  /** Flips true when submitted. */\n  protected submitted: boolean;\n  /** Contains possible error messages. */\n  public errorMessage: string;\n  /** Event that emits on succesful submit of the form, passing the login credentials. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Event that emits when calling showError. */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The loader that should be shown during login */\n  @Input() loader: LoaderComponent;\n  /** If true, email and password wont have labels */\n  @Input() showLabels = true;\n  /** The Label of the Mail field */\n  @Input() emailLabel = this.symbol.resolve('login.email.label');\n  /** The Placeholder of the mail Field */\n  @Input() emailPlaceholder = this.symbol.resolve('login.email.placeholder');\n  /** The Label of the password field. */\n  @Input() passwordLabel = this.symbol.resolve('login.password.label');\n  /** The Placeholder of the password field */\n  @Input() passwordPlaceholder = this.symbol.resolve('login.password.placeholder');\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('login.button.label');\n  /** Additional Button classes */\n  @Input() buttonClasses = '';\n  /** Recent error Notifications */\n  notifications: Notification[];\n\n  /** Injects the FormBuilder*/\n  constructor(protected fb: FormBuilder, public symbol: SymbolService) {}\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /** Shows the given error in the form. Clears the password field and emits the error event. */\n  showError(err): any {\n    this.errorMessage = err.message;\n    this.form.get('password').setValue('');\n    this.error.emit(err);\n    throwError(err);\n  }\n\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  login(value) {\n    // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.login(this.form.value).then((res) => {\n      this.form.reset();\n      this.success.emit(res);\n    });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    {{ emailLabel }}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    {{ buttonLabel }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}        {{ emailLabel }}                Passwort                {{ buttonLabel }}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MaxItemsPipe.html":{"url":"pipes/MaxItemsPipe.html","title":"pipe - MaxItemsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MaxItemsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/max-items.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe slices an array after the nth item \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        maxItems\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(array: Array, maxItems: number, start: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/max-items.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    maxItems\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/** This pipe slices an array after the nth item */\n@Pipe({\n  name: 'maxItems',\n})\nexport class MaxItemsPipe implements PipeTransform {\n  transform(array: Array = [], maxItems: number, start: number = 0): any {\n    return array.slice(start, maxItems);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediumEditorComponent.html":{"url":"components/MediumEditorComponent.html","title":"component - MediumEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediumEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/medium-editor/src/lib/medium-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps medium-editor to a reactive form component.\nhttps://components.entrecode.de/misc/medium-editor?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-medium-editor\n            \n\n            \n                styleUrls\n                ./medium-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                medium-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:35\n                            \n                        \n                \n                    \n                        data model \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:37\n                            \n                        \n                \n                    \n                        MediumEditor options \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:39\n                            \n                        \n                \n                    \n                        empty placeholder \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:41\n                            \n                        \n                \n                    \n                        change emitter \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:63\n                \n            \n\n\n            \n                \n                    destroys editor \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:52\n                \n            \n\n\n            \n                \n                    inits editor \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn)\n                \n            \n\n\n            \n                \n                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:68\n                \n            \n\n\n            \n                \n                    Writes value to editor on outside model change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MediumEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:47\n                            \n                        \n\n                \n                    \n                        editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        ready promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:45\n                            \n                        \n\n                \n                    \n                        current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as MediumEditor from 'medium-editor/dist/js/medium-editor';\n\n/** Wraps medium-editor to a reactive form component.\n * https://components.entrecode.de/misc/medium-editor?e=1\n */\n@Component({\n  selector: 'ec-medium-editor',\n  styleUrls: ['./medium-editor.component.scss'],\n  templateUrl: 'medium-editor.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MediumEditorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class MediumEditorComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  /** data model */\n  @Input() model: any;\n  /** MediumEditor [options](https://github.com/yabwe/medium-editor#mediumeditor-options) */\n  @Input() options: any = {};\n  /** empty placeholder */\n  @Input() placeholder: string;\n  /** change emitter */\n  @Output() modelChange: EventEmitter = new EventEmitter();\n  /** container element */\n  @ViewChild('container') container: ElementRef;\n  /** current value */\n  value: any;\n  /** editor instance */\n  private editor: MediumEditor;\n  /** ready promise */\n  public ready: Promise;\n\n  /** inits editor */\n  ngOnInit() {\n    this.container.nativeElement.innerHTML = this.model || '';\n    this.options.placeholder = this.placeholder;\n    this.editor = new MediumEditor(this.container.nativeElement, this.options);\n    this.editor.subscribe('editableInput', () => {\n      this.value = this.editor.getContent();\n      this.propagateChange(this.value);\n    });\n    this.ready = Promise.resolve(this.editor);\n  }\n  /** destroys editor */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    this.ready.then((editor) => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => {};\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./medium-editor.component.scss\n                \n                @import '~medium-editor/src/sass/medium-editor.scss';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediumEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediumEditorModule.html":{"url":"modules/MediumEditorModule.html","title":"module - MediumEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    MediumEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediumEditorModule\n\n\n\ncluster_MediumEditorModule_declarations\n\n\n\ncluster_MediumEditorModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumEditorModule_exports\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumEditorModule\n\nMediumEditorModule\n\nMediumEditorModule -->\n\nMediumEditorComponent->MediumEditorModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumEditorModule->MediumEditorComponent \n\n\n\n MediumEditorComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n MediumEditorComponent), multi: true,\n}->MediumEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}->MediumEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/medium-editor/src/lib/medium-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MediumEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MediumEditorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediumEditorComponent } from './medium-editor.component';\n\nexport const mediumModuleConfig = {\n  imports: [CommonModule],\n  exports: [MediumEditorComponent],\n  declarations: [MediumEditorComponent],\n  providers: [],\n};\n\n@NgModule(mediumModuleConfig)\nexport class MediumEditorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/modal/modal.component.ts\n\n\n    \n        Description\n    \n    \n        A modal is an extension of a pop. It adds different style options that apply x.ui markup.\nhttps://components.entrecode.de/ui/modal?e=1\nhttps://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n\n    \n\n    \n        Extends\n    \n    \n                PopComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                classes\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                templates\n                            \n                            \n                                types\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initMode\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backdrop\n                            \n                            \n                                body\n                            \n                            \n                                columns\n                            \n                            \n                                footer\n                            \n                            \n                                header\n                            \n                            \n                                mode\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/modal/modal.component.ts:43\n                            \n                        \n\n                \n                    \n                            Constructs the modal, injects pop service \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                        PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backdrop\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:31\n                            \n                        \n                \n                    \n                        If true, the modal will have a dark backdrop that disables clicking outside. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:35\n                            \n                        \n                \n                    \n                        Body Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:41\n                            \n                        \n                \n                    \n                        Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        footer\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:37\n                            \n                        \n                \n                    \n                        Footer Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:33\n                            \n                        \n                \n                    \n                        Header Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:29\n                            \n                        \n                \n                    \n                        This property sets the mode + additional options.\nIt expects the type at first and non mandatory options like opens-left afterwards. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:28\n\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:34\n\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:36\n\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:32\n\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:38\n\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click($event)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:43\n\n                \n            \n\n\n            \n                \n                    Listens for document:click and hides \n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initMode\n                        \n                        \n                    \n                \n            \n            \n                \ninitMode()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/modal/modal.component.ts:49\n                \n            \n\n\n            \n                \n                    Is called on init and change. Parses mode input and throws warning if type is not supported. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/modal/modal.component.ts:77\n                \n            \n\n\n            \n                \n                    calls initMode \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/modal/modal.component.ts:73\n                \n            \n\n\n            \n                \n                    calls initMode \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:88\n\n                \n            \n\n\n            \n                \n                    Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOutside\n                        \n                        \n                    \n                \n            \n            \n                \nisOutside(element)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:58\n\n                \n            \n\n\n            \n                \n                    yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(e?)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:72\n\n                \n            \n\n\n            \n                \n                    Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle(e?)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:63\n\n                \n            \n\n\n            \n                \n                    Shows if not active, hides if active. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            classes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:43\n                            \n                        \n\n                \n                    \n                        Will contain the classes (mode - type) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(TemplateRef)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:39\n                            \n                        \n\n                \n                    \n                        Templates for header body and footer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['', 'overlay', 'deck', 'toast']\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:26\n                            \n                        \n\n                \n                    \n                        all possible modes that can be set \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:30\n\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:55\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  ElementRef,\n  OnChanges,\n  TemplateRef,\n  ContentChildren,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { PopComponent } from '../pop/pop.component';\nimport { PopService } from '../pop/pop.service';\n\n/**\n * A modal is an extension of a pop. It adds different style options that apply x.ui markup.\n * https://components.entrecode.de/ui/modal?e=1\n *\n * https://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n */\n@Component({\n  selector: 'ec-modal',\n  templateUrl: './modal.component.html',\n})\nexport class ModalComponent extends PopComponent implements OnInit, OnChanges {\n  /** all possible modes that can be set */\n  types = ['', 'overlay', 'deck', 'toast'];\n  /** This property sets the mode + additional options.\n   * It expects the type at first and non mandatory options like opens-left afterwards. */\n  @Input() mode: string;\n  /** If true, the modal will have a dark backdrop that disables clicking outside. */\n  @Input() backdrop = false;\n  /** Header Template */\n  @Input() header: TemplateRef;\n  /** Body Template */\n  @Input() body: TemplateRef;\n  /** Footer Template */\n  @Input() footer: TemplateRef;\n  /** Templates for header body and footer */\n  @ContentChildren(TemplateRef) templates: TemplateRef[];\n  /** Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). */\n  @Input() columns: number | string;\n  /** Will contain the classes (mode - type) */\n  public classes: string;\n  /** Constructs the modal, injects pop service */\n  constructor(public popService: PopService, public elementRef: ElementRef, public cdr: ChangeDetectorRef) {\n    super(popService, elementRef, cdr);\n  }\n  /** Is called on init and change. Parses mode input and throws warning if type is not supported. */\n  initMode() {\n    this.elementRef.nativeElement.classList.add('modal-wrapper');\n    this.mode = this.mode || '';\n    this.type = this.mode.split(' ')[0];\n    if (!this.types.includes(this.type)) {\n      const fallback = this.mode.replace(this.type, '');\n      console.warn(`ec-modal does not support the mode \"${this.type}\".\n            Use one of ${this.types.join(', ')}.\n            Falling back to ${fallback}.`);\n      this.type = fallback;\n    }\n    this.classes = this.mode\n      .split(' ')\n      .splice(1)\n      .join(' ');\n    this.types.forEach((type) => {\n      this.elementRef.nativeElement.classList.remove(`${type}-wrapper`);\n    });\n    if (this.backdrop) {\n      this.elementRef.nativeElement.classList.add(`modal-wrapper_backdrop`);\n    }\n  }\n\n  /** calls initMode */\n  ngOnInit() {\n    this.initMode();\n  }\n  /** calls initMode */\n  ngOnChanges() {\n    this.initMode();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfig.html":{"url":"interfaces/ModelConfig.html","title":"interface - ModelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:         FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig } from '@ec.components/core';\n\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfig {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelConfigService.html":{"url":"injectables/ModelConfigService.html","title":"injectable - ModelConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The main class for configuring the behaviour of a model.\nBy default, everything is auto generated from the model's schema but can be overriden via the\nset method. \n\n            \n\n            \n                Extends\n            \n            \n                        Config\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                omittedFields\n                            \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateConfig\n                            \n                            \n                                get\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getLightModel\n                            \n                            \n                                getMinLevel\n                            \n                            \n                                getSystemFields\n                            \n                            \n                                set\n                            \n                            \n                                    Public\n                                    Optional\n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entryService: EntryService, sdk: SdkService, typeConfig: TypeConfigService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/model-config/model-config.service.ts:19\n                            \n                        \n\n                \n                    \n                            Injects EntryService and SdkService. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryService\n                                                  \n                                                        \n                                                                        EntryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                        TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateConfig(model: string, customFieldConfig?: FieldConfig)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/model-config.service.ts:210\n                \n            \n\n\n            \n                \n                    Generates a CrudConfig for the given model.\nMerges three configurations into one:\n- default field config, obtained by getFieldConfig\n- global model config (if any) configured via with set\n- customFieldConfig: any custom field config that is merged on top of the other two.\nThis enables the developer to either customize at a global scale to target all lists/forms,\nor just specific components. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    customFieldConfig\n                                    \n                                                FieldConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(property: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/model-config.service.ts:37\n                \n            \n\n\n            \n                \n                    Retrieves the given model config.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            typescript\n   * ModelConfig.get(&#39;muffin&#39;); //returns muffin config;\n   *\n                        \n                    \n                    \n                        Returns :         CrudConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldConfig(model: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/model-config.service.ts:143\n                \n            \n\n\n            \n                \n                    Returns the default field config for the given model.\nUtilizes PublicAPI#getFieldConfig + TypeConfigService#get.\nThis config is meant to deliver the default behaviour when nothing else is configured. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLightModel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLightModel(model)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/model-config.service.ts:241\n                \n            \n\n\n            \n                \n                    Returns light model information \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMinLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetMinLevel(model: string, customFieldConfig?: FieldConfig)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/model-config.service.ts:122\n                \n            \n\n\n            \n                \n                    Parses config for fields that require leveled entries \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    customFieldConfig\n                                    \n                                                FieldConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSystemFields\n                        \n                        \n                    \n                \n            \n            \n                \ngetSystemFields()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/model-config.service.ts:57\n                \n            \n\n\n            \n                \n                    Returns the field config for all system fields \n\n\n                    \n                        Returns :     { id: { label: any; create: boolean; view: string; filterView: string; filterable: boolean; filte...\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(property: string, config: CrudConfig)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/model-config.service.ts:52\n                \n            \n\n\n            \n                \n                    Sets the given model config.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                CrudConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            typescript\n   * ModelConfig.set(&#39;muffin&#39;, {\n   *  fields: {\n   *    title: {\n   *      label: &#39;Muffin Titel&#39;\n   *    }\n   *  });\n   *\n                        \n                    \n                    \n                        Returns :         CrudConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Optional\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(key: string, property: string, config?: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         Config\n\n                \n            \n            \n                \n                        Defined in         Config:13\n\n                \n            \n\n\n            \n                \n                    This method is a getter and setter for configurations. The key stands for the config (e.g. model).\nThe property is a sub property if the config (e.g. fields => model.fields).\nIf no config is given, the method just returns the configuration for the given property.\nIf a config is given, the property config is merged via Object.assign. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            omittedFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'private', 'created', 'creator', 'modified']\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:19\n                            \n                        \n\n                \n                    \n                        Array of property names that are omitted by default. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         Config\n\n                                \n                            \n                        \n                            \n                                    Defined in         Config:5\n\n                            \n                        \n\n                \n                    \n                        The config object. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Config, FieldConfig, Item } from '@ec.components/core';\nimport { SymbolService, DefaultInputComponent } from '@ec.components/ui';\nimport { fields } from 'ec.sdk/lib/PublicAPI';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { EntryService } from '../entry/entry.service';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from './type-config.service';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The main class for configuring the behaviour of a model.\n * By default, everything is auto generated from the model's schema but can be overriden via the\n * set method. */\n@Injectable()\nexport class ModelConfigService extends Config {\n  /** Array of property names that are omitted by default. */\n  omittedFields: Array = ['id', 'private', 'created', 'creator', 'modified'];\n\n  /** Injects EntryService and SdkService. */\n  constructor(\n    private entryService: EntryService,\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private symbol: SymbolService,\n  ) {\n    super();\n  }\n\n  /** Retrieves the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.get('muffin'); //returns muffin config;\n   * ```\n   * */\n  get(property: string): CrudConfig {\n    return this.configure('model', property);\n  }\n\n  /** Sets the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.set('muffin', {\n   *  fields: {\n   *    title: {\n   *      label: 'Muffin Titel'\n   *    }\n   *  });\n   * ```\n   * */\n  set(property: string, config: CrudConfig): CrudConfig {\n    return this.configure('model', property, config);\n  }\n\n  /** Returns the field config for all system fields */\n  getSystemFields() {\n    return {\n      id: {\n        label: this.symbol.resolve('field.label.id'),\n        create: false,\n        view: 'copy',\n        filterView: 'string',\n        filterable: true,\n        filterOperator: 'exact',\n        form: true,\n        immutable: true,\n        hideInList: true,\n        columns: 3,\n      },\n      _created: {\n        label: this.symbol.resolve('field.label.created'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        copy: this.typeConfig.isoDate(),\n        create: false,\n        form: true,\n        columns: 3,\n        view: 'copy',\n        immutable: true,\n        sortable: true,\n        hideInList: true,\n        rawFilter: true,\n      },\n      _modified: {\n        label: this.symbol.resolve('field.label.modified'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        copy: this.typeConfig.isoDate(),\n        create: false,\n        form: true,\n        columns: 3,\n        view: 'copy',\n        immutable: true,\n        sortable: true,\n        hideInList: false,\n        rawFilter: true,\n      },\n      _creator: {\n        label: this.symbol.resolve('field.label.creator'),\n        display: this.typeConfig.displayAccount(),\n        copy: this.typeConfig.displayAccount(),\n        create: false,\n        type: 'account',\n        view: 'copy',\n        columns: 3,\n        form: true,\n        immutable: true,\n        hideInList: true,\n        filterable: true,\n        filterComponent: AdminEntryInputComponent,\n        formComponent: DefaultInputComponent,\n        output: DefaultEntryOutputComponent,\n        readOnly: true,\n        filterPopClass: 'ec-pop_dialog',\n        filterOperator: 'exact',\n      },\n    };\n  }\n\n  /** Parses config for fields that require leveled entries */\n  getMinLevel(model: string, customFieldConfig?: FieldConfig) {\n    return this.generateConfig(model, customFieldConfig).then((modelConfig) => {\n      const fieldConfig = modelConfig.fields;\n      return Object.keys(fieldConfig)\n        .filter((field) => !!fieldConfig[field].type)\n        .map((field) => {\n          const inputView = fieldConfig[field].inputView;\n          const views = this.typeConfig.get(fieldConfig[field].type).inputViews || [];\n          if (!inputView || !views) {\n            return 1;\n          }\n          const match = views.find((v) => v.name === inputView);\n          return match ? match.levels || 1 : 1;\n        })\n        .reduce((max, lvl) => Math.max(max, lvl), 1);\n    });\n  }\n\n  /** Returns the default field config for the given model.\n   * Utilizes PublicAPI#getFieldConfig + TypeConfigService#get.\n   * This config is meant to deliver the default behaviour when nothing else is configured. */\n  getFieldConfig(model: string): Promise {\n    return this.sdk.api.getFieldConfig(model).then((fieldConfig: fields) => {\n      const merged = {};\n      Object.assign(merged, this.getSystemFields());\n      Object.keys(fieldConfig)\n        .map((property) => fieldConfig[property])\n        .forEach(\n          ({ config, type, title, unique, mutable, readOnly, required, validation, description, localizable }) => {\n            /* type = type as string; */\n            config = config || {};\n            if (type.includes('asset')) {\n              type = type.replace('a', 'dmA');\n            }\n            // parse field config\n            const {\n              hideInList,\n              hideInForm,\n              hideOnCreate,\n              hideOnEdit,\n              placeholder,\n              inputView,\n              label,\n              classes,\n              columns = 12,\n            } = config;\n            const typeConfig = this.typeConfig.get(type);\n            // assign default values + merge customFieldConfig if given\n            merged[title] = Object.assign(\n              {\n                property: title,\n                label: label || title + (type === 'datetime' ? ` ${this.symbol.resolve('datetime.local')}` : ''),\n                placeholder,\n                description,\n                validation,\n                relation: validation,\n                immutable: !mutable,\n                readOnly,\n                hideInList,\n                hideInForm,\n                create: !hideOnCreate,\n                edit: !hideOnEdit,\n                classes,\n                unique,\n                required,\n                columns,\n                /* display: ((value) => value), */\n                localizable,\n              },\n              typeConfig,\n              {\n                placeholder: placeholder || typeConfig.placeholder,\n                inputView: inputView || typeConfig.inputView,\n              },\n            );\n          },\n        );\n      return merged;\n    });\n  }\n\n  /** Generates a CrudConfig for the given model.\n   * Merges three configurations into one:\n   * - default field config, obtained by getFieldConfig\n   * - global model config (if any) configured via with set\n   * - customFieldConfig: any custom field config that is merged on top of the other two.\n   * This enables the developer to either customize at a global scale to target all lists/forms,\n   * or just specific components. */\n  async generateConfig(model: string, customFieldConfig?: FieldConfig): Promise> {\n    const lightModel = await this.getLightModel(model);\n    // first step: merge global model config with default entry config\n    const modelConfig = Object.assign(this.get(model) || {}, {\n      identifier: 'id',\n      identifierPattern: /^[0-9A-Za-z-_]{7,14}$/, // shortID pattern\n      label: '_entryTitle',\n      defaultFilter: lightModel.titleField,\n      onSave: (item: Item, value) => this.entryService.save(model, item, value),\n    });\n    return this.getFieldConfig(model).then((fieldConfig: FieldConfig) => {\n      const modelConfigFields = modelConfig.fields || {};\n      const relevantKeys = Object.keys(customFieldConfig || modelConfigFields);\n      const mergedFields = {};\n      if (!relevantKeys.length) {\n        modelConfig.fields = fieldConfig;\n      } else {\n        relevantKeys.forEach((key) => {\n          mergedFields[key] = Object.assign(\n            {},\n            fieldConfig[key] || {},\n            modelConfigFields[key] || {},\n            (customFieldConfig || {})[key],\n          );\n        });\n        modelConfig.fields = mergedFields;\n      }\n      return modelConfig;\n    });\n  }\n  /** Returns light model information */\n  getLightModel(model) {\n    return this.sdk.ready.then(() => this.sdk.api.modelList()).then((models) => models[model]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfiguration.html":{"url":"interfaces/ModelConfiguration.html","title":"interface - ModelConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-configuration.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:         FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig } from '@ec.components/core';\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfiguration {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notification.ts\n        \n\n            \n                Description\n            \n            \n                A Notification is used inside NotificationService and NotificationComponent to display any information to the user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                append\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                hide\n                            \n                            \n                                    Optional\n                                host\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                replace\n                            \n                            \n                                    Optional\n                                sticky\n                            \n                            \n                                    Optional\n                                time\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notification: Notification)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                            The constructor just looks if an error is set, and if yes, sets the type to error. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                        Notification\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            append\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:22\n                            \n                        \n\n                \n                    \n                        If set, the notification will be appended to the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:18\n                            \n                        \n\n                \n                    \n                        If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:20\n                            \n                        \n\n                \n                    \n                        Notifications that should be hidden when this one gets active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            host\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:10\n                            \n                        \n\n                \n                    \n                        The host the is NotificationsComponent that should display the notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:8\n                            \n                        \n\n                \n                    \n                        The message is shown below the title and is meant for further description. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                        If set, the notification will replace all others in the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sticky\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:14\n                            \n                        \n\n                \n                    \n                        If true, the notification will stay forever \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:12\n                            \n                        \n\n                \n                    \n                        The amount of ms it should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:6\n                            \n                        \n\n                \n                    \n                        The title is the headline of a notification and the only value that is required. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:16\n                            \n                        \n\n                \n                    \n                        Determines the looks. Currently info, error and success are defined. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationsComponent } from './notifications.component';\n\n/** A Notification is used inside NotificationService and NotificationComponent to display any information to the user.*/\nexport class Notification {\n  /** The title is the headline of a notification and the only value that is required. */\n  title?: string;\n  /** The message is shown below the title and is meant for further description. */\n  message?: string;\n  /** The host the is NotificationsComponent that should display the notification. */\n  host?: NotificationsComponent;\n  /** The amount of ms it should be visible */\n  time?: number;\n  /** If true, the notification will stay forever */\n  sticky?: boolean;\n  /** Determines the looks. Currently info, error and success are defined. */\n  type?: string;\n  /** If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.*/\n  error?: any;\n  /** Notifications that should be hidden when this one gets active */\n  hide?: this[];\n  /** If set, the notification will be appended to the given array of Notifications when activated */\n  append?: this[];\n  /** If set, the notification will replace all others in the given array of Notifications when activated */\n  replace?: this[];\n\n  /** The constructor just looks if an error is set, and if yes, sets the type to error. */\n  constructor(notification: Notification) {\n    if (notification.error) {\n      this.type = 'error';\n    }\n    Object.assign(this, notification);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/notifications/notifications.component.ts\n\n\n    \n        Description\n    \n    \n        Displays any kind of Notification inside the DOM.\nIt listens on the notificationService.$emitter for notifications.\nhttps://components.entrecode.de/ui/notifications?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-notifications\n            \n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                            Listens on the NotificationService and shows each notification that has this component set as host, or none at all. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        time\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.component.ts:21\n                            \n                        \n                \n                    \n                        The default time for a notification to be visible. Will be ignored if the notification itself has a time set. \n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current stack of notifications that are visible. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Notifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\nhtml\n\n\nEmit notifications via the service\n\n```ts\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}\n```\nThe given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\nhtml\n\n\nA\nB\nAll you have to do, is pass the instance of the component that should display the notification via the host property:\n```ts\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}\n```\nHiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\n```ts\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}\n```\nThe hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n    \n\n    \n        import { Component, Input } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { Notification } from './notification';\nimport { NotificationsService } from './notifications.service';\n\n/** Displays any kind of Notification inside the DOM.\n * It listens on the notificationService.$emitter for notifications.\n * https://components.entrecode.de/ui/notifications?e=1\n * */\n@Component({\n  selector: 'ec-notifications',\n  templateUrl: './notifications.component.html',\n})\nexport class NotificationsComponent {\n  /** The current stack of notifications that are visible. */\n  notifications: Collection = new Collection([]);\n  /** The default time for a notification to be visible. Will be ignored if the notification itself has a time set. */\n  @Input() time: number;\n\n  /** Listens on the NotificationService and shows each notification that has this component set as host, or none at all. */\n  constructor(private notificationService: NotificationsService) {\n    this.time = this.time || this.notificationService.defaultTime;\n    this.notificationService.emitter$.subscribe((notification: Notification) => {\n      if (notification.hide) {\n        this.notifications.removeAll(notification.hide);\n      }\n      if (!notification.title && !notification.message) {\n        // console.warn('tried to emit notification without message and title', notification);\n        return;\n      }\n      if (notification.append) {\n        notification.append.push(notification);\n      }\n      if (notification.replace) {\n        notification.replace.length = 0;\n        notification.replace.push(notification);\n      }\n\n      if (!notification.host || notification.host === this) {\n        this.notifications.add(notification);\n        if (notification.sticky) {\n          if (notification.time) {\n            console.warn('notification.time is ignored because it was set sticky');\n          }\n          return;\n        }\n        setTimeout(() => this.notifications.remove(notification), notification.time || this.time);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{notification.title}}\n    {{notification.message}}\n    \n    \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{notification.title}}    {{notification.message}}                                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notifications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IconModule\n                        \n                        \n                            PopModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotificationsService } from './notifications.service';\nimport { PopModule } from '../pop/pop.module';\nimport { ErrorComponent } from './error/error.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [NotificationsComponent, ErrorComponent],\n  imports: [CommonModule, PopModule, IconModule],\n  exports: [NotificationsComponent, ErrorComponent],\n  providers: [\n    {\n      provide: 'useDesktopNotifications',\n      useValue: false,\n    },\n    NotificationsService,\n  ],\n})\nexport class NotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the main interaction layer for the developer to show notifications.\nYou can use desktop notifications by default by providing:\njson\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }\nin your module's providers.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultTime\n                            \n                            \n                                    Private\n                                emitter\n                            \n                            \n                                    Public\n                                emitter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                desktopNotification\n                            \n                            \n                                emit\n                            \n                            \n                                getPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(useDesktopNotifications)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructors injects the useDesktopNotifications flag from the module.\nIf true, all notifications will be shown as desktop notifications instead. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        useDesktopNotifications\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            desktopNotification\n                        \n                        \n                    \n                \n            \n            \n                \ndesktopNotification(notification: Notification)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:60\n                \n            \n\n\n            \n                \n                    Emits a desktop notification after asking for permission (if not already granted). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notification\n                                    \n                                                Notification\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emit\n                        \n                        \n                    \n                \n            \n            \n                \nemit(notification: Notification, desktop?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:33\n                \n            \n\n\n            \n                \n                    Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notification\n                                    \n                                                Notification\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    desktop\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPermission\n                        \n                        \n                    \n                \n            \n            \n                \ngetPermission()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:47\n                \n            \n\n\n            \n                \n                    Asks for permission to show desktop notifications, if not already granted. \n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                        The default view time for a notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:22\n                            \n                        \n\n                \n                    \n                        The emitter subject to fire notifications. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.emitter.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when a new notification comes in. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Notification } from './notification';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/** Workaround to get window without typescript complaining */\ndeclare const window;\n\n/** This service is the main interaction layer for the developer to show notifications.\n * You can use desktop notifications by default by providing:\n * ```json\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }```\n * in your module's providers.\n *\n * */\n@Injectable()\nexport class NotificationsService {\n  /** The emitter subject to fire notifications. */\n  private emitter: Subject = new Subject();\n  /** Observable that is nexted when a new notification comes in. */\n  public emitter$: Observable = this.emitter.asObservable();\n  /** The default view time for a notification. */\n  public defaultTime = 5000;\n\n  /** The constructors injects the useDesktopNotifications flag from the module.\n   * If true, all notifications will be shown as desktop notifications instead. */\n  constructor(@Inject('useDesktopNotifications') private useDesktopNotifications) {}\n\n  /** Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.*/\n  emit(notification: Notification, desktop?: boolean) {\n    const instance = new Notification(notification);\n    if (desktop || this.useDesktopNotifications) {\n      this.desktopNotification(instance);\n    } else {\n      this.emitter.next(instance);\n    }\n    if (notification && notification.error) {\n      console.error(notification.error);\n    }\n    return instance;\n  }\n\n  /** Asks for permission to show desktop notifications, if not already granted. */\n  getPermission(): Promise {\n    if (window.Notification.permission === 'granted') {\n      return Promise.resolve();\n    }\n    return window.Notification.requestPermission().then((permission) => {\n      // If the user accepts, let's create a notification\n      if (permission !== 'granted') {\n        return Promise.reject('Desktop Notification Permission Denied!');\n      }\n    });\n  }\n\n  /** Emits a desktop notification after asking for permission (if not already granted). */\n  desktopNotification(notification: Notification) {\n    if (!('Notification' in window)) {\n      console.warn('This browser does not support desktop notification');\n    }\n    this.getPermission().then(() => {\n      const message = new window.Notification(notification.title, { body: notification.message });\n      if (notification.sticky) {\n        if (notification.time) {\n          console.warn('notification.time is ignored because it was set sticky');\n        }\n        return;\n      }\n      setTimeout(() => message.close(), notification.time || this.defaultTime);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutputComponent.html":{"url":"components/OutputComponent.html","title":"component - OutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/output/output.component.ts\n\n\n    \n        Description\n    \n    \n        Outputs the given field of the given item, rendering the component dynamically. \n\n    \n\n    \n        Extends\n    \n    \n                DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-output\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:24\n                            \n                        \n                \n                    \n                        Overrides the default component \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         Field\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:20\n                            \n                        \n                \n                    \n                        The instance of field that should be used in the template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:22\n                            \n                        \n                \n                    \n                        The belonging item \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/io/output/output.component.ts:28\n                \n            \n\n\n            \n                \n                    The component is loade as soon as the field and item are known.\nIf the field has no output property set, the DefaultOutputComponent will be rendered. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadComponent\n                        \n                        \n                    \n                \n            \n            \n                \nloadComponent(component: Type, attributes: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         DynamicSlotComponent\n\n                \n            \n            \n                \n                        Defined in         DynamicSlotComponent:17\n\n                \n            \n\n\n            \n                \n                    Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    attributes\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DynamicSlotComponent:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         DynamicSlotComponent:11\n\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  ChangeDetectionStrategy,\n  Type\n} from '@angular/core';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { Field, Item } from '@ec.components/core';\nimport { DefaultOutputComponent } from '../../form/default-output/default-output.component';\n\n/** Outputs the given field of the given item, rendering the component dynamically. */\n@Component({\n  selector: 'ec-output',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OutputComponent extends DynamicSlotComponent implements OnChanges {\n  /** The instance of field that should be used in the template */\n  @Input() field: Field;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Overrides the default component */\n  @Input() component: Type;\n\n  /** The component is loade as soon as the field and item are known.\n   * If the field has no output property set, the DefaultOutputComponent will be rendered. */\n  ngOnChanges() {\n    if (this.field && this.item) {\n      this.loadComponent(\n        this.component || this.field.output || DefaultOutputComponent,\n        {\n          item: this.item,\n          field: this.field\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'OutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/pagination/pagination.ts\n        \n\n            \n                Description\n            \n            \n                This class can be used to control the loading behaviour of external data. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Public\n                                change$\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Protected\n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                getPage\n                            \n                            \n                                getPages\n                            \n                            \n                                isActive\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                last\n                            \n                            \n                                    Protected\n                                load\n                            \n                            \n                                next\n                            \n                            \n                                params\n                            \n                            \n                                prev\n                            \n                            \n                                select\n                            \n                            \n                                setTotal\n                            \n                            \n                                slice\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: ListConfig, total?: number)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/pagination/pagination.ts:15\n                            \n                        \n\n                \n                    \n                            You can init each Pagination instance with an optional config.\nIf no config is provided, it will default to {page: 1, size: 25}. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ListConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:13\n                            \n                        \n\n                \n                    \n                        Subject for tracking changes. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            change$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.change.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:15\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when the pagination has changed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:9\n                            \n                        \n\n                \n                    \n                        The pagination config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:11\n                            \n                        \n\n                \n                    \n                        Array to iterate over the number of pages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:7\n                            \n                        \n\n                \n                    \n                        The total number of items that is being paginated. It can be changed via setTotal. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            first\n                        \n                        \n                    \n                \n            \n            \n                \nfirst()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:97\n                \n            \n\n\n            \n                \n                    Loads the first Page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPage\n                        \n                        \n                    \n                \n            \n            \n                \ngetPage()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:37\n                \n            \n\n\n            \n                \n                    Retrieves the current page \n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPages\n                        \n                        \n                    \n                \n            \n            \n                \ngetPages()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:42\n                \n            \n\n\n            \n                \n                    Retrieves the number of pages \n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive(page: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:111\n                \n            \n\n\n            \n                \n                    Returns true if the given page number is currently active.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isFirst\n                        \n                        \n                    \n                \n            \n            \n                \nisFirst()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:116\n                \n            \n\n\n            \n                \n                    Returns true if the current page is the first one \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLast\n                        \n                        \n                    \n                \n            \n            \n                \nisLast()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:121\n                \n            \n\n\n            \n                \n                    Returns true if the current page is the last one \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            last\n                        \n                        \n                    \n                \n            \n            \n                \nlast()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:102\n                \n            \n\n\n            \n                \n                    Loads the last page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(config?: ListConfig)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:80\n                \n            \n\n\n            \n                \n                    Merges config and fires next on change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                ListConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            next\n                        \n                        \n                    \n                \n            \n            \n                \nnext()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:47\n                \n            \n\n\n            \n                \n                    Loads the next page. Throws error if already on last page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            params\n                        \n                        \n                    \n                \n            \n            \n                \nparams()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:134\n                \n            \n\n\n            \n                \n                    Returns an object with all relevant infos about the current state of pagination \n\n\n                    \n                        Returns :     { page: number; pages: number; total: number; from: number; to: any; size: any; availableSizes: a...\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prev\n                        \n                        \n                    \n                \n            \n            \n                \nprev()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:56\n                \n            \n\n\n            \n                \n                    Loads the previous page. Throws error if already on first page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(page: number, silent)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:88\n                \n            \n\n\n            \n                \n                    Selects the given page number \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    silent\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTotal\n                        \n                        \n                    \n                \n            \n            \n                \nsetTotal(total: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:67\n                \n            \n\n\n            \n                \n                    Sets the total number of items and calculcates the page count.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    total\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            slice\n                        \n                        \n                    \n                \n            \n            \n                \nslice(items: Array)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:129\n                \n            \n\n\n            \n                \n                    slices a given array according to the current pagination state \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSize\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSize(size: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/pagination/pagination.ts:146\n                \n            \n\n\n            \n                \n                    updates the size of the pages.  \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n    \n        Pagination\nPagination can be used to keep track of the pages of arbitrary items.\nts\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5\nSee list.ts/list.component for example usage.\n\n    \n\n    \n        import { Subject, Observable } from 'rxjs';\nimport { ListConfig } from '../list/list-config.interface';\n\n/** This class can be used to control the loading behaviour of external data. */\nexport class Pagination {\n  /** The total number of items that is being paginated. It can be changed via setTotal. */\n  protected total: number;\n  /** The pagination config */\n  protected config: ListConfig;\n  /** Array to iterate over the number of pages. */\n  public pages: Array;\n  /** Subject for tracking changes. */\n  private change = new Subject();\n  /** Observable that is nexted when the pagination has changed. */\n  public change$: Observable = this.change.asObservable();\n\n  /** You can init each Pagination instance with an optional config.\n   * If no config is provided, it will default to ```{page: 1, size: 25}```. */\n  constructor(config?: ListConfig, total?: number) {\n    this.config = { page: 1, size: 25 };\n    Object.assign(this.config, config);\n    Object.assign(this.config, {\n      availableSizes: Array.from(\n        new Set(\n          [this.config.size]\n            .concat(this.config.availableSizes || [10, 25, 50, 100], [this.config.size])\n            .sort((a, b) => a - b),\n        ),\n      ),\n    });\n    if (total) {\n      this.setTotal(total);\n    }\n  }\n\n  /** Retrieves the current page */\n  getPage(): number {\n    return this.config.page;\n  }\n\n  /** Retrieves the number of pages */\n  getPages(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /** Loads the next page. Throws error if already on last page. */\n  next(): void {\n    if (this.isLast()) {\n      return; // already last page\n    }\n    this.config.page += 1;\n    this.load();\n  }\n\n  /** Loads the previous page. Throws error if already on first page. */\n  prev(): void {\n    if (this.isFirst()) {\n      return; // already first page\n    }\n    this.config.page -= 1;\n    this.load();\n  }\n\n  /**\n   * Sets the total number of items and calculcates the page count.\n   * */\n  setTotal(total: number) {\n    /* if (this.total !== total) {\n      this.change.next(this.config);\n    } */\n    this.total = total;\n    this.pages = new Array(Math.ceil(this.total / this.config.size));\n    if (this.config.page !== 1 && this.config.page > this.pages.length) {\n      this.config.page = this.pages.length || 1;\n      this.load();\n    }\n  }\n\n  /** Merges config and fires next on change */\n  protected load(config?: ListConfig): void {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.change.next(this.config);\n  }\n\n  /** Selects the given page number */\n  select(page: number, silent = false): void {\n    if (page === this.config.page || silent) {\n      this.config.page = page;\n      return;\n    }\n    this.load({ page: page });\n  }\n\n  /** Loads the first Page */\n  first(): void {\n    this.load({ page: 1 });\n  }\n\n  /** Loads the last page */\n  last() {\n    if (!this.pages) {\n      throw new Error(`Cannot load last page without knowing the item count.\n        Call setTotal(itemCount) before loading.`);\n    }\n    this.load({ page: this.pages.length });\n  }\n\n  /** Returns true if the given page number is currently active.*/\n  isActive(page: number): boolean {\n    return this.config.page === page;\n  }\n\n  /** Returns true if the current page is the first one */\n  isFirst(): boolean {\n    return this.config.page === 1;\n  }\n\n  /** Returns true if the current page is the last one */\n  isLast(): boolean {\n    if (!this.pages) {\n      return true;\n    }\n    return this.config.page === this.pages.length;\n  }\n\n  /** slices a given array according to the current pagination state */\n  slice(items: Array): Array {\n    return items.slice((this.config.page - 1) * this.config.size, this.config.page * this.config.size);\n  }\n\n  /** Returns an object with all relevant infos about the current state of pagination */\n  params() {\n    return {\n      page: this.getPage(),\n      pages: this.getPages(),\n      total: this.total,\n      from: (this.getPage() - 1) * this.config.size + 1,\n      to: Math.min(this.getPage() * this.config.size, this.total),\n      size: this.config.size,\n      availableSizes: this.config.availableSizes,\n    };\n  }\n  /** updates the size of the pages.  */\n  updateSize(size: number) {\n    if (!size) {\n      return;\n    }\n    this.load({ size, page: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        The Pagination component renders a given instance of the Pagination class.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pagination\n            \n\n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                pageContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         PaginationConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:23\n                            \n                        \n                \n                    \n                        The config that is used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                \n                \n                    \n                        Type :         Pagination\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:15\n                            \n                        \n                \n                    \n                        A Pagination Instance \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible(page)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:39\n                \n            \n\n\n            \n                \n                    Determines if a page should be visible \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:31\n                \n            \n\n\n            \n                \n                    As soon as the pagination is known, the change$ event is subscribed to translate the container on change.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:26\n                \n            \n\n\n            \n                \n                    Init config. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSize\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSize(value: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:17\n                            \n                        \n\n                \n                    \n                        The div container for the pages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('page')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pages li elements. The first one is used to determine the container translation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('pageContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:19\n                            \n                        \n\n                \n                    \n                        The ul around pages \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pagination\nTODO\n\n    \n\n    \n        import { Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Pagination } from '@ec.components/core';\nimport { PaginationConfig } from './pagination-config.interface';\n\n/**\n * The Pagination component renders a given instance of the Pagination class.\n */\n@Component({\n  selector: 'ec-pagination',\n  templateUrl: './pagination.component.html',\n})\nexport class PaginationComponent implements OnChanges, OnInit {\n  /** A Pagination Instance */\n  @Input() pagination: Pagination;\n  /** The div container for the pages*/\n  @ViewChild('container') private container: ElementRef;\n  /** The ul around pages */\n  @ViewChild('pageContainer') private pageContainer: ElementRef;\n  /** The pages li elements. The first one is used to determine the container translation. */\n  @ViewChildren('page') private page: QueryList;\n  /** The config that is used */\n  @Input() config: PaginationConfig;\n\n  /** Init config. */\n  ngOnInit() {\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** As soon as the pagination is known, the change$ event is subscribed to translate the container on change.*/\n  ngOnChanges() {\n    if (!this.pagination) {\n      return;\n    }\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** Determines if a page should be visible */\n  isVisible(page) {\n    const current = this.pagination.getPage();\n    return (\n      Math.abs(current - page) \n    \n\n    \n        \n  1&&!pagination?.isFirst()\">\n    \n      \n        {{'pagination.first' | symbol}}\n      \n    \n    \n      \n        {{'pagination.prev' | symbol}}\n      \n    \n  \n  1\">\n    \n      \n        \n          {{i+1}}\n        \n      \n    \n  \n  1&&!pagination?.isLast()\">\n    \n      \n        {{'pagination.next' | symbol}}\n      \n    \n    \n      \n        {{'pagination.last' | symbol}}\n      \n    \n  \n  \n    {{pagination?.params()?.from}}-{{pagination?.params()?.to}} {{ 'pagination.of' | symbol}} {{pagination?.params()?.total}}\n  \n  \n     1\" (change)=\"updateSize($event.target.value)\" class=\"input input_small\">\n      \n        {{size}} {{'pagination.size' | symbol}}\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  1&&!pagination?.isFirst()\">                  {{\\'pagination.first\\' | symbol}}                            {{\\'pagination.prev\\' | symbol}}              1\">                            {{i+1}}                      1&&!pagination?.isLast()\">                  {{\\'pagination.next\\' | symbol}}                            {{\\'pagination.last\\' | symbol}}                  {{pagination?.params()?.from}}-{{pagination?.params()?.to}} {{ \\'pagination.of\\' | symbol}} {{pagination?.params()?.total}}         1\" (change)=\"updateSize($event.target.value)\" class=\"input input_small\">              {{size}} {{\\'pagination.size\\' | symbol}}            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationConfig.html":{"url":"classes/PaginationConfig.html","title":"class - PaginationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/list/pagination/pagination-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for a pagination component \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideFirstLast\n                            \n                            \n                                hidePages\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: PaginationConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor assigns the config \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        PaginationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideFirstLast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:9\n                            \n                        \n\n                \n                    \n                        Hides first and last Link \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                        Hides pages \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:7\n                            \n                        \n\n                \n                    \n                        Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\nNOTE: For a smoother UX, there are minimum 2 * range + 1 pages visible.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SymbolService } from '../../symbol/symbol.service';\n\n/** Configuration for a pagination component */\nexport class PaginationConfig {\n  /** Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\n   * NOTE: For a smoother UX, there are minimum ```2 * range + 1``` pages visible.*/\n  range = 2;\n  /** Hides first and last Link */\n  hideFirstLast: boolean;\n  /** Hides pages */\n  hidePages: boolean;\n  /** The constructor assigns the config */\n  constructor(config: PaginationConfig) {\n    Object.assign(this, config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/password-reset/password-reset.component.ts\n\n\n    \n        Description\n    \n    \n        Form to send password reset request.\nhttps://components.entrecode.de/auth/password-reset?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                    WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-password-reset\n            \n\n\n\n\n            \n                templateUrl\n                password-reset.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                email\n                            \n                            \n                                loader\n                            \n                            \n                                lockForm\n                            \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:20\n                            \n                        \n                \n                    \n                        Optional api to be used (if not using sdk.api instance) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'E-Mail Adresse...'\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:22\n                            \n                        \n                \n                    \n                        Custom placeholder for email field \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:24\n                            \n                        \n                \n                    \n                        Event after request was successful \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:30\n                \n            \n\n\n            \n                \n                    Sends request through AuthService and shows notifications + loader. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:18\n                            \n                        \n\n                \n                    \n                        The user email \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n                \n                    \n                        The loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:16\n                            \n                        \n\n                \n                    \n                        To ensure the user only sends one request, the form is locked after the request has been sent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\n\n/** Form to send password reset request.\n * https://components.entrecode.de/auth/password-reset?e=1\n *\n */\n@Component({\n  selector: 'ec-password-reset',\n  templateUrl: 'password-reset.component.html',\n})\nexport class PasswordResetComponent implements WithLoader {\n  /** To ensure the user only sends one request, the form is locked after the request has been sent */\n  lockForm: boolean;\n  /** The user email */\n  email: string;\n  /** Optional api to be used (if not using sdk.api instance) */\n  @Input() api: PublicAPI;\n  /** Custom placeholder for email field */\n  @Input() placeholder = 'E-Mail Adresse...';\n  /** Event after request was successful */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The loader */\n  @ViewChild(LoaderComponent) loader;\n\n  constructor(public auth: AuthService, public notifications: NotificationsService) {}\n  /** Sends request through AuthService and shows notifications + loader. */\n  reset() {\n    const reset = this.auth\n      .resetPassword(this.email, this.api)\n      .then(() => {\n        this.notifications.emit({\n          type: 'success',\n          title: 'Mail versendet',\n          message: 'Sie haben soeben eine Mail mit weiteren Anweisungen erhalten',\n          sticky: true,\n        });\n        this.lockForm = true;\n        this.success.emit();\n      })\n      .catch((error) => {\n        this.notifications.emit({\n          title: 'Fehler beim Passwort zurücksetzen',\n          error,\n          sticky: true,\n        });\n        console.log('could not reset password', error);\n      });\n    this.loader.wait(reset);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    {{ 'passwordReset.button' | symbol }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ \\'passwordReset.button\\' | symbol }}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopComponent.html":{"url":"components/PopComponent.html","title":"component - PopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/pop/pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop is an area of content whose visibility can be toggled.\nIt can be used e.g as dialog, drawer or dialog.\nhttps://components.entrecode.de/ui/pop?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/pop/pop.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                        PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:38\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click($event)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/pop/pop.component.ts:43\n                \n            \n\n\n            \n                \n                    Listens for document:click and hides \n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/pop/pop.component.ts:88\n                \n            \n\n\n            \n                \n                    Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOutside\n                        \n                        \n                    \n                \n            \n            \n                \nisOutside(element)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/pop/pop.component.ts:58\n                \n            \n\n\n            \n                \n                    yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(e?)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/pop/pop.component.ts:72\n                \n            \n\n\n            \n                \n                    Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle(e?)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/pop/pop.component.ts:63\n                \n            \n\n\n            \n                \n                    Shows if not active, hides if active. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Pop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\nhtml\n\n  \n    Close\n    \n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n  \n\nShow pop\nThe default pop classes can be looked up here.\n\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  HostBinding,\n  HostListener,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { PopService } from './pop.service';\n\n/** A Pop is an area of content whose visibility can be toggled.\n * It can be used e.g as dialog, drawer or dialog.\n * https://components.entrecode.de/ui/pop?e=1\n * */\n@Component({\n  selector: 'ec-pop',\n  templateUrl: './pop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PopComponent {\n  /** If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  */\n  @Input() @HostBinding('class.is-active') active: boolean;\n  /** Flip and stays true after first show */\n  activated = false;\n  /** The used type on the host element */\n  @Input() type: string;\n  /** If set to true, the pop will hide when a click happens outside the pop. */\n  @Input() hideOnClickOutside = false;\n  /** If set to false, esc will not close the pop */\n  @Input() hideOnEscape = true;\n  // tslint:disable-next-line:no-output-rename\n  @Output('toggle') _toggle: EventEmitter = new EventEmitter();\n\n  clickEvent;\n\n  /** Listens for document:click and hides */\n  @HostListener('document:click', ['$event']) clickedOutside($event) {\n    if (\n      this.hideOnClickOutside &&\n      this.active &&\n      (!this.clickEvent || $event !== this.clickEvent) && // to ensure the show event wont hide immediately\n      this.elementRef &&\n      this.isOutside($event.target)\n    ) {\n      this.hide();\n    }\n  }\n\n  constructor(protected popService: PopService, public elementRef: ElementRef, protected cdr: ChangeDetectorRef) {}\n\n  /** yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) */\n  isOutside(element) {\n    return !this.elementRef.nativeElement.contains(element) /*  ||\n      element === this.elementRef.nativeElement */;\n  } // active: boolean = !this.active, emit: boolean = false\n\n  /** Shows if not active, hides if active. */ public toggle(e?) {\n    if (this.active) {\n      this.hide();\n    } else {\n      this.show(e);\n    }\n  }\n\n  /** Shows the pop. Sets active true and adds pop to popService.stack */\n  public show(e?) {\n    this.active = true;\n    this.activated = true;\n    if (this.hideOnEscape) {\n      this.popService.stack.add(this);\n    }\n    if (e) {\n      this.clickEvent = e;\n    } else if (this.hideOnClickOutside) {\n      // console.warn('To use hideOnClickOutside, you need to pass the click event to the show method of ec-pop!');\n    }\n    this._toggle.emit(this.active);\n    this.cdr.markForCheck();\n  }\n\n  /** Hides the pop. Sets active false and removes pop from popService.stack */\n  public hide() {\n    if (this.hideOnEscape) {\n      this.popService.stack.remove(this);\n    }\n    this.active = false;\n    this._toggle.emit(this.active);\n    this.cdr.markForCheck();\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PopModule.html":{"url":"modules/PopModule.html","title":"module - PopModule","body":"\n                   \n\n\n\n\n    Modules\n    PopModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_imports\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/pop/pop.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            PopComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            PopService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IconModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            PopComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopComponent } from './pop.component';\nimport { PopService } from './pop.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { IconModule } from '../icon/icon.module';\n\nexport const popModuleConfig = {\n  declarations: [PopComponent, ModalComponent],\n  imports: [CommonModule, IconModule],\n  exports: [PopComponent, ModalComponent],\n  providers: [PopService],\n};\n\n@NgModule(popModuleConfig)\nexport class PopModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopService.html":{"url":"injectables/PopService.html","title":"injectable - PopService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/pop/pop.service.ts\n        \n\n            \n                Description\n            \n            \n                Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultColumns\n                            \n                            \n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                            Listens for escape keys and hides latest pop + removes the pop from stack \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 9\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                        default value for columns of any pop \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                        Stack of current opened pops \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { PopComponent } from './pop.component';\n\n/** Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. */\n@Injectable()\nexport class PopService {\n  /** default value for columns of any pop */\n  defaultColumns = 9;\n  /** Stack of current opened pops */\n  stack: Collection = new Collection();\n  /** Listens for escape keys and hides latest pop + removes the pop from stack */\n  constructor() {\n    window.addEventListener('keydown', (event) => {\n      if ((event.keyCode === 27 || event.key === 'Escape') && this.stack.items.length) {\n        const latestPop = this.stack.items[this.stack.items.length - 1];\n        latestPop.hide();\n        this.stack.remove(latestPop);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceActionbarState.html":{"url":"interfaces/ResourceActionbarState.html","title":"interface - ResourceActionbarState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResourceActionbarState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                        actionbar\n                                \n                                \n                                        api\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        relation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionbar\n                                    \n                                \n                                \n                                    \n                                        actionbar:         ActionbarComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionbarComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        api\n                                    \n                                \n                                \n                                    \n                                        api:     Core\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Core\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                    \n                                \n                                \n                                    \n                                        relation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ElementRef, Input, ChangeDetectorRef, EventEmitter, Output } from '@angular/core';\nimport { ActionbarComponent, Action, ActionFunction, selectTemplate } from '@ec.components/ui';\nimport { NotificationsService, ListComponent } from '@ec.components/ui';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport ListResource from 'ec.sdk/lib/resources/ListResource';\nimport Core from 'ec.sdk/lib/Core';\nimport { Item } from '@ec.components/core';\nimport { SdkService } from '../sdk/sdk.service';\n\nexport interface ResourceActionbarState {\n  api: Core;\n  relation: string;\n  actionbar: ActionbarComponent;\n  action?: ActionFunction;\n  options?: Object;\n}\n\n@Component({\n  selector: 'ec-resource-actionbar',\n  template: selectTemplate,\n})\nexport class ResourceActionbarComponent extends ActionbarComponent implements OnInit {\n  state: ResourceActionbarState;\n\n  @Output() create: EventEmitter = new EventEmitter();\n  @Output() select: EventEmitter> = new EventEmitter();\n\n  @Input() actions: Action[];\n\n  constructor(\n    public notificationService: NotificationsService,\n    public sdk: SdkService,\n    public resourceConfig: ResourceConfig,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(elementRef, cdr);\n  }\n\n  ngOnInit() {\n    const state = {\n      api: this.sdk.api,\n      relation: 'tags',\n    };\n    const { api, relation } = state;\n    this.sdk.ready.then(() => {\n      this.loadResourceListActions({\n        api,\n        relation,\n        actionbar: this,\n      });\n    });\n  }\n\n  getResourceListActions(listResource: ListResource, relation: string, action?: ActionFunction): Action[] {\n    const actions: Action[] = listResource.getAllItems().map((resource) => {\n      const { identifier, label } = this.resourceConfig.get(relation);\n      return {\n        id: resource[identifier],\n        title: resource[label] || '- no title -',\n        data: resource,\n        path: relation,\n        action: (item, bar) => {\n          if (action) {\n            action(item.getBody().data, bar);\n          } else {\n            console.log('no action specified..');\n          }\n        },\n      };\n    });\n    if (listResource.hasNextLink()) {\n      actions.push({\n        id: 'next-page',\n        title: `Load Page`,\n        path: null,\n        data: {},\n        select: false,\n        action: () => {\n          listResource.followNextLink().then((list) => {\n            const concatted = this.list.items\n              .map((i) => i.getBody())\n              .filter((i) => i.id !== 'next-page')\n              .concat(this.getResourceListActions(list, relation, action));\n            this.loadActions(concatted);\n          });\n        },\n      });\n    }\n    return actions;\n  }\n\n  reload() {\n    this.loadResourceListActions({\n      ...this.state,\n      options: {},\n    });\n  }\n\n  loadResourceListActions(state: ResourceActionbarState = this.state, stack = true): Promise {\n    const { api, relation, actionbar, action, options } = state;\n    this.state = {\n      ...this.state,\n      ...state,\n    };\n    const loading = api\n      .resourceList(relation, options)\n      .then((list) => {\n        return this.getResourceListActions(list, relation, action);\n      })\n      .then((actions) => {\n        if (actions) {\n          actionbar.loadActions(actions, stack);\n        }\n        return actions;\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: 'Error while loading Resources',\n          error,\n        });\n      })\n      .then((actions) => actions || []);\n    if (actionbar.dropdownLoader) {\n      actionbar.dropdownLoader.wait(loading);\n    }\n    return loading;\n  }\n\n  resourceAction({\n    relation,\n    title,\n    api,\n    action,\n    actionbar,\n    add,\n    path,\n  }: {\n    relation: string;\n    title: string;\n    api: Core;\n    action?: ActionFunction;\n    actionbar?: ActionbarComponent;\n    add?: boolean;\n    path?: string;\n  }) {\n    return {\n      id: path || relation,\n      title: title,\n      add,\n      action: () => this.loadResourceListActions({ api, relation, actionbar, action }),\n    };\n  }\n\n  filterDropdownList(listComponent: ListComponent, query) {\n    const paths = this.currentActions()\n      .map((a) => a.path)\n      .filter((value, index, self) => self.indexOf(value) === index)\n      .filter((v) => !!v);\n    if (!paths.length) {\n      return super.filterDropdownList(listComponent, query);\n    }\n    const { identifier, label } = this.resourceConfig.get(this.state.relation);\n    this.loadResourceListActions(\n      {\n        ...this.state,\n        options: {\n          [label + '~']: { exact: query },\n        },\n      },\n      false,\n    ).then((actions) => {\n      if (actions.length === 0) {\n        this.loadActions(\n          [\n            {\n              title: `\"${query}\" erstellen`,\n              id: 'createnew',\n              select: false,\n              action: () => {\n                if (this.create.observers.length) {\n                  this.create.emit(query);\n                } else {\n                  const item = new Item(\n                    {\n                      id: Date.now() + '',\n                      title: query,\n                    },\n                    this.config,\n                  );\n                  this.addItem(item);\n                  this.searchbar.clear();\n                  this.reload();\n                }\n              },\n            },\n          ],\n          false,\n        );\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceCrudComponent.html":{"url":"components/ResourceCrudComponent.html","title":"component - ResourceCrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceCrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/resource-crud/resource-crud.component.ts\n\n\n    \n        Description\n    \n    \n        The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\nhtml\n * \n *\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-crud.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                initMethods\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                createClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     Core\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:29\n                            \n                        \n                \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         CrudConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:33\n                            \n                        \n                \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:31\n                            \n                        \n                \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:35\n                            \n                        \n                \n                    \n                        The selection that should be used \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:43\n                            \n                        \n                \n                    \n                        Emits when a list element is clicked \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        createClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:47\n                            \n                        \n                \n                    \n                        Output that is nexted when pressing the create button \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:45\n                            \n                        \n                \n                    \n                        Emits when the selection has changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:90\n                \n            \n\n\n            \n                \n                    Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasMethod\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasMethod(method: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:72\n                \n            \n\n\n            \n                \n                    Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initMethods\n                        \n                        \n                    \n                \n            \n            \n                \ninitMethods()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(item)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:77\n                \n            \n\n\n            \n                \n                    Called on list columnClicked \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResourceListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ResourceListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:37\n                            \n                        \n\n                \n                    \n                        The ResourceListComponent inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResourcePopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ResourcePopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:39\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { LoaderService } from '@ec.components/ui';\nimport { NotificationsService } from '@ec.components/ui';\nimport { AuthService } from '../auth/auth.service';\nimport { WithLoader } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport Core from 'ec.sdk/lib/Core';\n\n/** The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * */\n@Component({\n  selector: 'ec-resource-crud',\n  templateUrl: './resource-crud.component.html',\n})\nexport class ResourceCrudComponent implements OnInit, WithLoader {\n  /** The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors */\n  @Input() api: Core; // sdk api connector\n  /** The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) */\n  @Input() relation: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The ResourceListComponent inside the template. */\n  @ViewChild(ResourceListComponent) list: ResourceListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(ResourcePopComponent) pop: ResourcePopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Output that is nexted when pressing the create button */\n  @Output() createClicked: EventEmitter = new EventEmitter();\n\n  constructor(\n    private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.initMethods();\n  }\n\n  initMethods() {\n    if (!this.relation) {\n      return;\n    }\n    this.auth.getAllowedResourceMethods(this.relation, {}, this.config.methods).then((methods) => {\n      this.config.methods = methods;\n    });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Called on list columnClicked */\n  select(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.pop.edit(item.getBody());\n    // TODO: check CrudComponent#loadEntry for further inspiration\n  }\n\n  /** Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. */\n  create() {\n    if (this.createClicked.observers.length) {\n      this.createClicked.next();\n    } else if (this.pop) {\n      this.pop.create();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ config?.createLabel }}\n          \n            \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    \n  \n  \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ config?.createLabel }}                                                                                                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceCrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceListPopComponent.html":{"url":"components/ResourceListPopComponent.html","title":"component - ResourceListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts\n\n\n\n    \n        Extends\n    \n    \n                PopComponent\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-list-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                    Public\n                                resourceConfig\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                pasted\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                        ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                        PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     Core\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ListConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:28\n\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:34\n\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:36\n\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:32\n\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pasted\n                    \n                \n                \n                    \n                        Type :         EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:38\n\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ec-resource-list-pop modal-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click($event)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:43\n\n                \n            \n\n\n            \n                \n                    Listens for document:click and hides \n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(item)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:53\n                \n            \n\n\n            \n                \n                    emits columnClicked event or toggles selection if no observers. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:88\n\n                \n            \n\n\n            \n                \n                    Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOutside\n                        \n                        \n                    \n                \n            \n            \n                \nisOutside(element)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:58\n\n                \n            \n\n\n            \n                \n                    yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(e?)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:72\n\n                \n            \n\n\n            \n                \n                    Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle(e?)\n                \n            \n\n\n            \n                \n                    Inherited from         PopComponent\n\n                \n            \n            \n                \n                        Defined in         PopComponent:63\n\n                \n            \n\n\n            \n                \n                    Shows if not active, hides if active. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SearchbarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:30\n\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         PopComponent:55\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Item, ListConfig, Selection } from '@ec.components/core';\nimport { PopComponent, PopService, SearchbarComponent } from '@ec.components/ui';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n@Component({\n  selector: 'ec-resource-list-pop',\n  templateUrl: './resource-list-pop.component.html',\n})\nexport class ResourceListPopComponent extends PopComponent implements OnChanges {\n  @Input() relation: string;\n  @Input() api: Core;\n  @Input() config: ListConfig;\n  @Input() selection: Selection;\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  @Output() pasted: EventEmitter> = new EventEmitter();\n  @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n  /** Set host class to make sure the type is used */\n  @HostBinding('class') class = 'ec-resource-list-pop modal-wrapper';\n  lightModel: any;\n\n  constructor(\n    public resourceConfig: ResourceConfig,\n    public popService: PopService,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(popService, elementRef, cdr);\n  }\n\n  ngOnChanges() {\n    if (this.relation) {\n      this.config = Object.assign({}, this.config || {}, this.resourceConfig.get(this.relation));\n    }\n    if (this.config) {\n      this.config = Object.assign({ hidePagination: true, disableHeader: true }, this.config);\n    }\n  }\n\n  /** emits columnClicked event or toggles selection if no observers. */\n  select(item) {\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    } else if (this.selection) {\n      this.selection.toggle(item);\n    }\n    // this.searchbar.focusEvent.emit(true);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n  \n    \n    \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceModule.html":{"url":"modules/ResourceModule.html","title":"module - ResourceModule","body":"\n                   \n\n\n\n\n    Modules\n    ResourceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_imports\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\n\nApiActionbarComponent\n\nApiActionbarComponent\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nApiActionbarComponent->ResourceModule\n\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nApiActionbarComponent \n\nApiActionbarComponent \n\nApiActionbarComponent  -->\n\nResourceModule->ApiActionbarComponent \n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/resource/resource.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiActionbarComponent\n                        \n                        \n                            ResourceActionbarComponent\n                        \n                        \n                            ResourceCrudComponent\n                        \n                        \n                            ResourceDeletePopComponent\n                        \n                        \n                            ResourceFormComponent\n                        \n                        \n                            ResourceListComponent\n                        \n                        \n                            ResourceListPopComponent\n                        \n                        \n                            ResourcePopComponent\n                        \n                        \n                            ResourceSelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ResourceListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ResourceConfig\n                        \n                        \n                            ResourceService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiActionbarComponent\n                        \n                        \n                            ResourceActionbarComponent\n                        \n                        \n                            ResourceCrudComponent\n                        \n                        \n                            ResourceDeletePopComponent\n                        \n                        \n                            ResourceFormComponent\n                        \n                        \n                            ResourceListComponent\n                        \n                        \n                            ResourceListPopComponent\n                        \n                        \n                            ResourcePopComponent\n                        \n                        \n                            ResourceSelectComponent\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from '../resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from '../resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from '../resource-select/resource-select.component';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceListPopComponent } from '../resource-list-pop/resource-list-pop.component';\nimport { ResourceActionbarComponent } from '../resource-actionbar/resource-actionbar.component';\nimport { ApiActionbarComponent } from '../resource-actionbar/api-actionbar.component';\n\n@NgModule({\n  entryComponents: [ResourceListComponent],\n  declarations: [\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent,\n    ApiActionbarComponent,\n  ],\n  imports: [CommonModule, FormsModule, UiModule, SdkModule],\n  exports: [\n    UiModule,\n    SdkModule,\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent,\n    ApiActionbarComponent,\n  ],\n  providers: [ResourceService, ResourceConfig],\n})\nexport class ResourceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changes\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, config: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-config/resource.service.ts:35\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            change\n                        \n                        \n                    \n                \n            \n            \n                \nchange(filter?: Update)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-config/resource.service.ts:52\n                \n            \n\n\n            \n                \n                    Yields an observable that emits for all updates that match the given filter \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Update\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clean\n                        \n                        \n                    \n                \n            \n            \n                \nclean(value: Object, setEmptyStringsToNull, deleteNullProperties)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-config/resource.service.ts:102\n                \n            \n\n\n            \n                \n                    Removes all null or undefined values from the given object \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    setEmptyStringsToNull\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                                \n                                    deleteNullProperties\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(relation: string, value: Object, api: Core)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-config/resource.service.ts:122\n                \n            \n\n\n            \n                \n                    Creates a new resource with the given value for the given relation. Fires the \"create\" change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    api\n                                    \n                                            Core\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            del\n                        \n                        \n                    \n                \n            \n            \n                \ndel(relation: string, resource: Resource)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-config/resource.service.ts:135\n                \n            \n\n\n            \n                \n                    deletes the given resource and emits the \"delete\" change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                            Resource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isImmutableProperty\n                        \n                        \n                    \n                \n            \n            \n                \nisImmutableProperty(key: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-config/resource.service.ts:97\n                \n            \n\n\n            \n                \n                    Returns true if the given field key is an immutable system property \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matches\n                        \n                        \n                    \n                \n            \n            \n                \nmatches(change: Update, filter: Update)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-config/resource.service.ts:47\n                \n            \n\n\n            \n                \n                    Gives true if the given change fits all property values of the filter. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    change\n                                    \n                                                Update\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                Update\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(item: Item, value: Object, relation: string, api: Core)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-config/resource.service.ts:61\n                \n            \n\n\n            \n                \n                    Saves the given resource with the given value. If the resource is not yet existing,\nit will be created.Otherwise it will be updated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    relation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    api\n                                    \n                                            Core\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(relation, resource: Resource, value: Object)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/resource-config/resource.service.ts:80\n                \n            \n\n\n            \n                \n                    Updates the given resource with the new value. Fires the \"update\" change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relation\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                            Resource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:35\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an resource is created or updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Subject, Observable } from 'rxjs';\nimport { filter as rxFilter } from 'rxjs/operators';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the ResourceService. */\nexport interface Update {\n  /** The relation that has been updated. */\n  relation: string | string[];\n  /** The relevant resource. */\n  resource?: Resource;\n  /** The list where it happened. */\n  list?: ResourceList;\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete';\n  /** An identifier associated with the update e.g. an entryID */\n  identifier?: string;\n  /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n  broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n  /** The changes event is emitted everytime an resource is created or updated. */\n  public changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public config: ResourceConfig) {\n    /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return change.broadcast || Object.keys(filter).reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().pipe(rxFilter((change: Update) => this.matches(change, filter)));\n  }\n\n  /** Saves the given resource with the given value. If the resource is not yet existing,\n   * it will be created.Otherwise it will be updated. */\n  save(item: Item, value: Object, relation: string, api: Core): Promise {\n    const resource = item.getBody();\n    if (item.config.onSave) {\n      return Promise.resolve(item.config.onSave(item, value));\n    }\n    item.deleteImmutableProperties(value);\n    if (resource && resource.save) {\n      return this.update(relation, resource, value);\n    }\n    return this.create(relation, value, api)\n      .then((_resource) => {\n        return _resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given resource with the new value. Fires the \"update\" change. */\n  update(relation, resource: Resource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => (oldValues[key] = resource[key]));\n    Object.assign(resource, this.clean(value, false, false)); // assign new form values\n    return resource\n      .save()\n      .then((_resource) => {\n        this.changes.next({ relation, resource: _resource, type: 'put' });\n        return _resource;\n      })\n      .catch((err) => {\n        Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' || ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (setEmptyStringsToNull && value[key] === '') {\n          // clear empty strings\n          value[key] = null;\n        }\n        if (deleteNullProperties && value[key] === null) {\n          delete value[key];\n        }\n        if (this.isImmutableProperty(key)) {\n          // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n  create(relation: string, value: Object, api: Core): Promise {\n    return api\n      .create(relation, this.clean(value))\n      .then((resource: Resource) => {\n        this.changes.next({ relation, resource, type: 'post' });\n        return resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given resource and emits the \"delete\" change. */\n  del(relation: string, resource: Resource) {\n    return resource.del().then((res) => {\n      this.changes.next({ relation, resource, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SdkField.html":{"url":"interfaces/SdkField.html","title":"interface - SdkField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SdkField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/sdk-field.ts\n        \n\n            \n                Description\n            \n            \n                Field Config as obtained by PublicAPI#getFieldConfig.\nSee https://doc.entrecode.de/data_manager/#field-data-types for more info\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        localizable\n                                \n                                \n                                        mutable\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                                \n                                        unique\n                                \n                                \n                                        validation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    further field config options (like columns etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Default value that is returned for a newly created required field on old entries \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Description. Used for placeholders \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizable\n                                    \n                                \n                                \n                                    \n                                        localizable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Not implemented yet. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutable\n                                    \n                                \n                                \n                                    \n                                        mutable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tells if the field value can be changed. If true, the field is a system field  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field can only be altered when creating. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field must have a value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    System Title \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Type \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique: each entry has a unique value for that field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Validation info, depends on field type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SdkField {\n  /** further field config options (like columns etc.) */\n  config: Object;\n  /** Field Type */\n  type: string;\n  /** System Title */\n  title: string;\n  /** Unique: each entry has a unique value for that field */\n  unique: boolean;\n  /** Default value that is returned for a newly created required field on old entries */\n  default: string;\n  /** Tells if the field value can be changed. If true, the field is a system field  */\n  mutable: boolean;\n  /** If true, the field can only be altered when creating. */\n  readOnly: boolean;\n  /** If true, the field must have a value */\n  required: boolean;\n  /** Validation info, depends on field type. */\n  validation: string;\n  /** Field Description. Used for placeholders */\n  description: string;\n  /** Not implemented yet. */\n  localizable: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SdkModule.html":{"url":"modules/SdkModule.html","title":"module - SdkModule","body":"\n                   \n\n\n\n\n    Modules\n    SdkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\n\nSdkService\n\nSdkService\n\n\n\nSdkModule\n\nSdkModule\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/sdk/sdk.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SdkService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SdkService } from './sdk.service';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [SdkService],\n})\nexport class SdkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SdkService.html":{"url":"injectables/SdkService.html","title":"injectable - SdkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SdkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/sdk/sdk.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\njson\n {\n   provide: 'environment',\n   useValue: {\n     datamanagerID: '83cc6374',\n     environment: 'stage',\n     clientID: 'rest',\n     // init: false\n     // the init option will prevent automatically initing the sdk.\n     // you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n   }\n }\nThe environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _api\n                            \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                apiResolved\n                            \n                            \n                                    Public\n                                changesEnvironment\n                            \n                            \n                                    Public\n                                datamanager\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                roots\n                            \n                            \n                                    Private\n                                schemaRequests\n                            \n                            \n                                    Public\n                                session\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                            \n                                getSchema\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                noApi\n                            \n                            \n                                useDatamanager\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    root\n                                \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/sdk/sdk.service.ts:80\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. Omits init if environment has set init: false \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAccount\n                        \n                        \n                    \n                \n            \n            \n                \ngetAccount(api)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/sdk/sdk.service.ts:136\n                \n            \n\n\n            \n                \n                    Returns the current account. Works for all apis \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    api\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.accounts\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSchema\n                        \n                        \n                    \n                \n            \n            \n                \ngetSchema(model, api)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/sdk/sdk.service.ts:125\n                \n            \n\n\n            \n                \n                    Returns a schema for the given model. Caches the promise. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    model\n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    api\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this._api\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(environment)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/sdk/sdk.service.ts:90\n                \n            \n\n\n            \n                \n                    Creates all the API instances and determines the current user. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    environment\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.environment\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            noApi\n                        \n                        \n                    \n                \n            \n            \n                \nnoApi(api: Core)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/sdk/sdk.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    api\n                                    \n                                            Core\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this._api\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            useDatamanager\n                        \n                        \n                    \n                \n            \n            \n                \nuseDatamanager(shortID: string, environment)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/sdk/sdk.service.ts:112\n                \n            \n\n\n            \n                \n                    Uses the given datamanager and optional short id to init api.\nIf you set \"datamanagerID\" in your environment, this method is called automatically. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    shortID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    environment\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.environment\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PublicAPI\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:53\n                            \n                        \n\n                \n                    \n                        Current Public API instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Accounts\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:51\n                            \n                        \n\n                \n                    \n                        Current Accounts instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiResolved\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:34\n                            \n                        \n\n                \n                    \n                        Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changesEnvironment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:55\n                            \n                        \n\n                \n                    \n                        Emits when the env changes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datamanager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:69\n                            \n                        \n\n                \n                    \n                        Current DataManager instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject('environment')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:80\n                            \n                        \n\n                \n                    \n                        Promise that should be used before using any auth related stuff:\nts\n   * this.sdk.ready.then(account => {});\n   *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roots\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:36\n                            \n                        \n\n                \n                    \n                        Collects different datamanager root instances \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            schemaRequests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:73\n                            \n                        \n\n                \n                    \n                        Pending schema requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:49\n                            \n                        \n\n                \n                    \n                        Current Session instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AccountResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:71\n                            \n                        \n\n                \n                    \n                        Current User \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n\n                \n                    \n                        getroot()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:57\n                                \n                            \n                    \n                        \n                                getter for api. Throws error if no api present. \n\n\n                                \n                                    Returns :     PublicAPI\n\n                                \n                        \n                    \n\n                \n                    \n                        setapi(api)\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:64\n                                \n                            \n                    \n                        \n                                Sets the public api \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            api\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport Accounts from 'ec.sdk/lib/Accounts';\nimport Core, { environment as env } from 'ec.sdk/lib/Core';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport Session from 'ec.sdk/lib/Session';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport { Subject } from 'rxjs';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: 'environment',\n   useValue: {\n     datamanagerID: '83cc6374',\n     environment: 'stage',\n     clientID: 'rest',\n     // init: false\n     // the init option will prevent automatically initing the sdk.\n     // you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class SdkService {\n  /** Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) */\n  apiResolved: boolean;\n  /** Collects different datamanager root instances */\n  roots: { [id: string]: Promise } = {};\n  get root(): Promise {\n    if (!this._api) {\n      throw new Error('no api');\n    }\n    if (!this.roots[this._api.dataManagerID]) {\n      this.roots[this._api.dataManagerID] = this.ready.then(() =>\n        this.datamanager.dataManager(this._api.dataManagerID),\n      );\n    }\n    return this.roots[this._api.dataManagerID];\n  }\n  /** Current Session instance */\n  public session: Session;\n  /** Current Accounts instance */\n  public accounts: Accounts;\n  /** Current Public API instance */\n  public _api: PublicAPI;\n  /** Emits when the env changes */\n  public changesEnvironment: Subject = new Subject();\n  /** getter for api. Throws error if no api present. */\n  get api(): PublicAPI {\n    if (this.noApi()) {\n      throw new Error('get api: ' + this.noApi());\n    }\n    return this._api;\n  }\n  /** Sets the public api */\n  set api(api: PublicAPI) {\n    this._api = api;\n    this._api.resolve().then(() => (this.apiResolved = true));\n  }\n  /** Current DataManager instance */\n  public datamanager: DataManager;\n  /** Current User */\n  public user: AccountResource;\n  /** Pending schema requests */\n  private schemaRequests = {};\n  /** Promise that should be used before using any auth related stuff:\n   *\n   * ```ts\n   * this.sdk.ready.then(account => {});\n   * ```\n   * */\n  public ready: Promise;\n\n  /** Calls init and sets ready to true when finished. Omits init if environment has set init: false */\n  constructor(@Inject('environment') public environment) {\n    if (!environment || environment.init !== false) {\n      this.init();\n    }\n  }\n\n  /** Creates all the API instances and determines the current user. */\n  public init(environment = this.environment): Promise {\n    if (environment !== this.environment) {\n      this.changesEnvironment.next(environment);\n    }\n    this.environment = environment;\n    this.session = new Session(environment.environment);\n    if (environment.clientID) {\n      this.session.setClientID(environment.clientID);\n    }\n    this.accounts = new Accounts(environment.environment);\n    if (environment.datamanagerID) {\n      this.useDatamanager(environment.datamanagerID, environment);\n    }\n    this.ready = this.getAccount().then((user) => {\n      this.user = user;\n      this.datamanager = new DataManager(environment.environment);\n      return this.user;\n    });\n    return this.ready;\n  }\n  /** Uses the given datamanager and optional short id to init api.\n   * If you set \"datamanagerID\" in your environment, this method is called automatically. */\n  useDatamanager(shortID: string, environment = this.environment) {\n    this.apiResolved = false;\n    this._api = new PublicAPI(shortID, environment.environment, true);\n    if (environment.clientID) {\n      this._api.setClientID(environment.clientID);\n    }\n    return this._api.resolve().then((api) => {\n      this.apiResolved = true;\n      return api;\n    });\n  }\n\n  /** Returns a schema for the given model. Caches the promise. */\n  getSchema(model, api = this._api) {\n    if (this.noApi(api)) {\n      return Promise.reject('getSchema: ' + this.noApi(api));\n    }\n    if (!this.schemaRequests[model] || this.schemaRequests[model].api !== api) {\n      this.schemaRequests[model] = { request: api.getSchema(model), api };\n    }\n    return this.schemaRequests[model].request;\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.accounts) {\n    if (this.noApi(api)) {\n      /* return Promise.reject('getAccount: ' + this.noApi(api)); */\n      return Promise.resolve();\n    }\n    return api\n      .me()\n      .then((account) => {\n        return account || this._api.me();\n      })\n      .catch((error) => {\n        return this._api && this._api.getToken() ? this._api.me() : null;\n      });\n  }\n\n  noApi(api: Core = this._api) {\n    if (!api) {\n      return `No API was initialized. Either set datamanagerID in your environment or call useDatamanager with your shortID`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectModule.html":{"url":"modules/SelectModule.html","title":"module - SelectModule","body":"\n                   \n\n\n\n\n    Modules\n    SelectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_imports\n\n\n\ncluster_SelectModule_exports\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n SelectComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n SelectComponent), multi: true,\n}->SelectComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}->SelectComponent\n\n\n\n\n\nListModule\n\nListModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/select/select.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionbarComponent\n                        \n                        \n                            SelectComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionbarComponent\n                        \n                        \n                            ListModule\n                        \n                        \n                            SelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DndModule } from 'ngx-drag-drop';\nimport { ListModule } from '../list/list.module';\nimport { SelectComponent } from './select.component';\nimport { ActionbarComponent } from '../actionbar/actionbar.component';\nimport { LoaderModule } from '../loader/loader.module';\n\nexport const selectModuleConfig = {\n  imports: [CommonModule, ListModule, DndModule, LoaderModule],\n  declarations: [SelectComponent, ActionbarComponent],\n  exports: [ListModule, SelectComponent, ActionbarComponent, DndModule],\n  providers: [],\n};\n\n@NgModule(selectModuleConfig)\nexport class SelectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/signup?e=1\n\n    \n\n    \n        Extends\n    \n    \n                LoginComponent\n    \n\n    \n        Implements\n    \n    \n                    WithLoader\n                    WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup\n            \n\n\n\n\n            \n                templateUrl\n                signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                invite\n                            \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:16\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:18\n                            \n                        \n                \n                    \n                        Invite code to use. If set, the invite form field will be hidden. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                            \n                                \n                                    Inherited from         LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginComponent:23\n\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:20\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginComponent:27\n\n                            \n                        \n                \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginComponent:25\n\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(undefined)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:27\n                \n            \n\n\n            \n                \n                    Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(undefined)\n                \n            \n\n\n            \n                \n                    Inherited from         LoginComponent\n\n                \n            \n            \n                \n                        Defined in         LoginComponent:39\n\n                \n            \n\n\n            \n                \n                    Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:22\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:24\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginComponent:29\n\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginComponent:31\n\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginComponent:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginComponent:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { LoginComponent } from '../login/login.component';\nimport { WithNotifications, LoaderComponent, WithLoader, Notification } from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/signup?e=1\n */\n@Component({\n  selector: 'ec-signup',\n  templateUrl: 'signup.component.html',\n})\nexport class SignupComponent extends LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Invite code to use. If set, the invite form field will be hidden. */\n  @Input() invite = '';\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  signup({ email, password, invite }) {\n    const registration = this.auth\n      .signup({ email, password, invite }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('signup.success'),\n          hide: this.notifications,\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('signup.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications,\n        });\n        this.error.next(error);\n        console.log('could not signup', error);\n      });\n    this.loader.wait(registration);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupFormComponent.html":{"url":"components/SignupFormComponent.html","title":"component - SignupFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/signup-form/signup-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n    \n        Extends\n    \n    \n                LoginFormComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup-form\n            \n\n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonLabel\n                            \n                            \n                                invite\n                            \n                            \n                                invitePlaceholder\n                            \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('signup.button.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:16\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:20\n                            \n                        \n                \n                    \n                        If set, the invite field will be hidden and the given code will be used for signup \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invitePlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('signup.invite.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:18\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:42\n\n                            \n                        \n                \n                    \n                        Additional Button classes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.button.label')\n                    \n                \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:40\n\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.label')\n                    \n                \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:32\n\n                            \n                        \n                \n                    \n                        The Label of the Mail field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.placeholder')\n                    \n                \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:34\n\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :         LoaderComponent\n\n                    \n                \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:28\n\n                            \n                        \n                \n                    \n                        The loader that should be shown during login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.label')\n                    \n                \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:36\n\n                            \n                        \n                \n                    \n                        The Label of the password field. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.placeholder')\n                    \n                \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:38\n\n                            \n                        \n                \n                    \n                        The Placeholder of the password field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:30\n\n                            \n                        \n                \n                    \n                        If true, email and password wont have labels \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:26\n\n                            \n                        \n                \n                    \n                        Event that emits when calling showError. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:24\n\n                            \n                        \n                \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:28\n                \n            \n\n\n            \n                \n                    Initializes the form \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:37\n                \n            \n\n\n            \n                \n                    Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(value)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:22\n                \n            \n\n\n            \n                \n                    Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(value)\n                \n            \n\n\n            \n                \n                    Inherited from         LoginFormComponent\n\n                \n            \n            \n                \n                        Defined in         LoginFormComponent:66\n\n                \n            \n\n\n            \n                \n                    Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         LoginFormComponent\n\n                \n            \n            \n                \n                        Defined in         LoginFormComponent:50\n\n                \n            \n\n\n            \n                \n                    Initializes the form \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Inherited from         LoginFormComponent\n\n                \n            \n            \n                \n                        Defined in         LoginFormComponent:72\n\n                \n            \n\n\n            \n                \n                    Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showError\n                        \n                        \n                    \n                \n            \n            \n                \nshowError(err)\n                \n            \n\n\n            \n                \n                    Inherited from         LoginFormComponent\n\n                \n            \n            \n                \n                        Defined in         LoginFormComponent:58\n\n                \n            \n\n\n            \n                \n                    Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:22\n\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:18\n\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:44\n\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:20\n\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginFormComponent:47\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FieldValidators } from '../../utility/validators/field-validators';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { LoginFormComponent } from '../login-form/login-form.component';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n */\n@Component({\n  selector: 'ec-signup-form',\n  templateUrl: './signup-form.component.html',\n})\nexport class SignupFormComponent extends LoginFormComponent implements OnInit, WithLoader {\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('signup.button.label');\n  /** The Placeholder of the mail Field */\n  @Input() invitePlaceholder = this.symbol.resolve('signup.invite.placeholder');\n  /** If set, the invite field will be hidden and the given code will be used for signup */\n  @Input() invite = '';\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  signup(value) {\n    // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n      invite: [this.invite, [Validators.required]], // FieldValidators.uuid\n    });\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.signup(this.form.value).then((res) => {\n      // this.form.reset();\n      this.success.emit(res);\n    });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    Invite\n    \n    \n  \n\n  \n    {{buttonLabel}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                Passwort                Invite                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SlotHostDirective.html":{"url":"directives/SlotHostDirective.html","title":"directive - SlotHostDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SlotHostDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/io/slot-host.directive.ts\n        \n\n            \n                Description\n            \n            \n                The field host is a helper to load components inside its view container.\nsee https://angular.io/guide/dynamic-component-loader\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecSlotHost]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/slot-host.directive.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor exposes the viewContainer that is used to load components into from outside.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/slot-host.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n/** The field host is a helper to load components inside its view container.\n * see https://angular.io/guide/dynamic-component-loader\n * */\n@Directive({\n  selector: '[ecSlotHost]',\n})\nexport class SlotHostDirective {\n  /** The constructor exposes the viewContainer that is used to load components into from outside.*/\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sorter.html":{"url":"classes/Sorter.html","title":"class - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sorter\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/sorter/sorter.ts\n        \n\n            \n                Description\n            \n            \n                The Sorter is a singleton that handles all kinds of sorting operations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sortType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getAlgorithm\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sortType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    string: sortString,\n    number: sortNumber,\n    boolean: sortBoolean,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:24\n                            \n                        \n\n                \n                    \n                        Contains sorting methods for different value types. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getAlgorithm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAlgorithm(items: Array>, property?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/sorter/sorter.ts:31\n                \n            \n\n\n            \n                \n                    Returns the sorting algorithm for the given item array. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                                Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sort(items: Array>, property?: string, desc?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/src/lib/sorter/sorter.ts:60\n                \n            \n\n\n            \n                \n                    Sorts a given Array of items after a given property.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                                Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array of arbitrary content.\n\n                                    \n                                \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional property to sort after (For Objects)\n\n                                    \n                                \n                                \n                                    desc\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional Flag that will reverse sort the result (descending).\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n    \n        Sorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n    \n\n    \n        import { Item } from '../item/item';\n\n/** Used for natural sorting of strings */\nconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\n/** Sorts strings (naturally) */\nexport function sortString(a, b) {\n  return collator.compare(a, b);\n}\n\n/** Sorts numbers */\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\n/** Sorts booleans */\nexport function sortBoolean(a, b) {\n  return a ? -1 : 1;\n}\n\n/** The Sorter is a singleton that handles all kinds of sorting operations. */\nexport abstract class Sorter {\n  /** Contains sorting methods for different value types. */\n  static sortType = {\n    string: sortString,\n    number: sortNumber,\n    boolean: sortBoolean,\n  };\n\n  /** Returns the sorting algorithm for the given item array. */\n  private static getAlgorithm(items: Array>, property?: string): (a, b) => number {\n    if (!items.length) {\n      return;\n    }\n    if (property && !items.reduce((has, item) => has && item.sort(property) !== undefined, true)) {\n      console.warn('cannot sort property \"' + property + '\" because not all items have that property', items);\n      return;\n    }\n    const types = items\n      .map((item) => typeof item.sort(property))\n      .filter((item, index, _items) => _items.indexOf(item) === index);\n    if (types.length > 1) {\n      console.warn('cannot sort items because they contain multiple types:', types);\n      return;\n    }\n    if (!this.sortType[types[0]]) {\n      console.warn('cannot sort items because no algorithm was found for type', types[0]);\n      return;\n    }\n    return this.sortType[types[0]];\n  }\n\n  /** Sorts a given Array of items after a given property.\n   * @param items Array of arbitrary content.\n   * @param property Optional property to sort after (For Objects)\n   * @param desc Optional Flag that will reverse sort the result (descending).\n   * @param resolve Optional resolve function to expose relevant the part of object that contains\n   *   the given property. */\n\n  static sort(items: Array>, property?: string, desc?: boolean): Array {\n    const algorithm = this.getAlgorithm(items, property);\n    if (!algorithm) {\n      return;\n    }\n    items.sort((a, b) => {\n      if (!property) {\n        return algorithm(a.resolve(), b.resolve());\n      }\n      return algorithm(a.sort(property), b.sort(property));\n    });\n    if (desc) {\n      items.reverse();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Symbol.html":{"url":"interfaces/Symbol.html","title":"interface - Symbol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Symbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.interface.ts\n        \n\n            \n                Description\n            \n            \n                A Symbol is specified with a unique name and an optional string content.  \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name under which the symbol is accessible. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path content \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Symbol {\n  /** The name under which the symbol is accessible. */\n  name: string;\n  /** Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. */\n  content?: string;\n  /** Path content */\n  path?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SymbolModule.html":{"url":"modules/SymbolModule.html","title":"module - SymbolModule","body":"\n                   \n\n\n\n\n    Modules\n    SymbolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_declarations\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\n\nSymbolPipe\n\nSymbolPipe\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nSymbolPipe->SymbolModule\n\n\n\n\n\nSymbolPipe \n\nSymbolPipe \n\nSymbolPipe  -->\n\nSymbolModule->SymbolPipe \n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        README\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Collects all localization related components and services.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SymbolPipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SymbolService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SymbolPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n    \n        Localization\nYou can setup localization via the SymbolService:\n```typescript\nimport en from './en';\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}\n```\nIt is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\ntypescript\nmoment.locale(this.symbols.resolve('moment.locale'));\nUsing symbols in templates\nTo translate symbols in a template, use the symbol pipe:\nhtml\n{{'symbol.language' | symbol}} \nOverwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n    \n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SymbolService } from './symbol.service';\nimport { SymbolPipe } from './symbol.pipe';\n\n/**\n * Collects all localization related components and services.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SymbolPipe],\n  exports: [SymbolPipe],\n  providers: [SymbolService],\n})\nexport class SymbolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolPipe.html":{"url":"injectables/SymbolPipe.html","title":"injectable - SymbolPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymbolPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The symbol pipe translates Symbol names to their content.\nhtml\n * {{ 'entry.saved' | symbol }}\n *\nSee SymbolService for more info about Symbols.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/symbol/symbol.pipe.ts:21\n                \n            \n\n\n            \n                \n                    Calls SymbolService.resolve with the given name \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, Injectable, PipeTransform } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { SymbolService } from './symbol.service';\n\n/** The symbol pipe translates Symbol names to their content.\n *\n * ```html\n * {{ 'entry.saved' | symbol }}\n * ```\n *\n * See SymbolService for more info about Symbols.\n */\n@Pipe({\n  name: 'symbol',\n})\n@Injectable()\nexport class SymbolPipe implements PipeTransform {\n  /** Depends on the SymbolService */\n  constructor(private symbol: SymbolService) {}\n  /** Calls SymbolService.resolve with the given name */\n  transform(name: string): string {\n    if (!name) {\n      return '';\n    }\n    return this.symbol.resolve(name) || '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolService.html":{"url":"injectables/SymbolService.html","title":"injectable - SymbolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register symbols for localization. The default set is de.\nhttps://components.entrecode.de/ui/symbols?e=1\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                registry\n                            \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Static\n                                sets\n                            \n                            \n                                    Public\n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                get\n                            \n                            \n                                    Static\n                                resolve\n                            \n                            \n                                resolve\n                            \n                            \n                                    Static\n                                set\n                            \n                            \n                                set\n                            \n                            \n                                use\n                            \n                            \n                                useSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/symbol/symbol.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(name: string, registry)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:27\n                \n            \n\n\n            \n                \n                    finds a symbol in the registry by name \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    registry\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        SymbolService.registry\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Symbol\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:70\n                \n            \n\n\n            \n                \n                    finds a symbol in the registry by name \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Symbol\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(name: string, registry)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    registry\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        SymbolService.registry\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:75\n                \n            \n\n\n            \n                \n                    resolves a symbols content by name \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(symbols: Symbol[], registry)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:41\n                \n            \n\n\n            \n                \n                    Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    symbols\n                                    \n                                                Symbol[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    registry\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        SymbolService.registry\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(symbols: Symbol[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:81\n                \n            \n\n\n            \n                \n                    Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    symbols\n                                    \n                                                Symbol[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(symbols: Symbol[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:57\n                \n            \n\n\n            \n                \n                    Uses the given symbol set. Replaces registry. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    symbols\n                                    \n                                                Symbol[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            useSet\n                        \n                        \n                    \n                \n            \n            \n                \nuseSet(key: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:62\n                \n            \n\n\n            \n                \n                    uses the set with the given key \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : Object.keys(SymbolService.sets).length\n    ? SymbolService.sets[Object.keys(SymbolService.sets)[0]]\n    : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Symbol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    en,\n    de,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:12\n                            \n                        \n\n                \n                    \n                        The current symbol set that is registered to the service. It will be used to resolve strings from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    en,\n    de,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { de } from './de';\nimport { en } from './en';\n/** Service to register symbols for localization. The default set is de.\n * https://components.entrecode.de/ui/symbols?e=1\n */\n// https://github.com/ng-packagr/ng-packagr/issues/696\n@Injectable()\nexport class SymbolService {\n  /** The current symbol set that is registered to the service. It will be used to resolve strings from. */\n  public static sets: { [key: string]: Symbol[] } = {\n    en,\n    de,\n  };\n  public static registry: Symbol[] = Object.keys(SymbolService.sets).length\n    ? SymbolService.sets[Object.keys(SymbolService.sets)[0]]\n    : [];\n\n  public registry: Symbol[];\n  public sets: { [key: string]: Symbol[] } = {\n    en,\n    de,\n  };\n\n  /** finds a symbol in the registry by name */\n  static get(name: string, registry = SymbolService.registry): Symbol {\n    const symbol = registry.find((s) => s.name === name);\n    return symbol;\n  }\n\n  static resolve(name: string, registry = SymbolService.registry): string {\n    const symbol = SymbolService.get(name, registry);\n    if (symbol) {\n      return symbol.content;\n    }\n    return null;\n  }\n  /** Uses the given symbol set to enhance the current registry.\n   * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n  static set(symbols: Symbol[] = [], registry = SymbolService.registry) {\n    symbols.map((symbol) => {\n      const index = registry.indexOf(this.get(symbol.name));\n      if (index === -1) {\n        registry.push(symbol);\n      } else {\n        registry[index] = symbol;\n      }\n    });\n  }\n\n  constructor() {\n    this.registry = Object.keys(this.sets).length ? this.sets[Object.keys(this.sets)[0]] : [];\n  }\n\n  /** Uses the given symbol set. Replaces registry. */\n  use(symbols: Symbol[]) {\n    this.registry = symbols;\n  }\n\n  /** uses the set with the given key */\n  useSet(key: string) {\n    if (!this.sets[key]) {\n      throw new Error('the symbol set with the key \"' + key + '\" does not exist');\n    }\n    this.use(this.sets[key]);\n  }\n\n  /** finds a symbol in the registry by name */\n  get(name: string): Symbol {\n    return SymbolService.get(name, this.registry);\n  }\n\n  /** resolves a symbols content by name */\n  resolve(name: string): string {\n    return SymbolService.resolve(name, this.registry);\n  }\n\n  /** Uses the given symbol set to enhance the current registry.\n   * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n  set(symbols: Symbol[] = []) {\n    SymbolService.set(symbols, this.registry);\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/tab/tab.component.ts\n\n\n    \n        Description\n    \n    \n        A Tab is meant to be placed inside TabsComponent \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tab\n            \n\n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                route\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                deactivated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor adds the tab itself to its TabsComponent parent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:11\n                            \n                        \n                \n                    \n                        The tab's label \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:15\n                            \n                        \n                \n                    \n                        If set, the tab will be selected when the given (relative) route is active. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:13\n                            \n                        \n                \n                    \n                        If set to true, the tab will be selected at start. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        activated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:17\n                            \n                        \n                \n                    \n                        Output that emits when the tab is activated \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        deactivated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:19\n                            \n                        \n                \n                    \n                        Output that emits when the tab is deactivated \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:26\n                \n            \n\n\n            \n                \n                    Selects the tab and nexts activated \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:31\n                \n            \n\n\n            \n                \n                    Deselects the tab and nexts activated \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TabsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                        The parent TabsComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { TabsComponent } from '../tabs/tabs.component';\n\n/** A Tab is meant to be placed inside TabsComponent */\n@Component({\n  selector: 'ec-tab',\n  templateUrl: './tab.component.html',\n})\nexport class TabComponent {\n  /** The tab's label */\n  @Input() label: string;\n  /** If set to true, the tab will be selected at start. */\n  @Input() selected: boolean;\n  /** If set, the tab will be selected when the given (relative) route is active. */\n  @Input() route: string;\n  /** Output that emits when the tab is activated */\n  @Output() activated: EventEmitter = new EventEmitter();\n  /** Output that emits when the tab is deactivated */\n  @Output() deactivated: EventEmitter = new EventEmitter();\n  /** The parent TabsComponent */\n  parent: TabsComponent;\n\n  /** The constructor adds the tab itself to its TabsComponent parent. */\n  constructor(public el: ElementRef) {}\n  /** Selects the tab and nexts activated */\n  activate() {\n    this.selected = true;\n    this.activated.next();\n  }\n  /** Deselects the tab and nexts activated */\n  deactivate() {\n    this.selected = false;\n    this.deactivated.next();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/tabs/tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The TabsComponent holds serveral instances of TabComponent.\nhttps://components.entrecode.de/ui/tabs?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tabs\n            \n\n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTabs\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                select\n                            \n                            \n                                selectByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         TabComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:16\n                            \n                        \n                \n                    \n                        You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initTabs\n                        \n                        \n                    \n                \n            \n            \n                \ninitTabs()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect(tab: TabComponent, skipRoute)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:53\n                \n            \n\n\n            \n                \n                    Selects the given tab (Component). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                TabComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    skipRoute\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectByUrl\n                        \n                        \n                    \n                \n            \n            \n                \nselectByUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:27\n                \n            \n\n\n            \n                \n                    Selects the tab associated with the route present in the given url \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(TabComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:14\n                            \n                        \n\n                \n                    \n                        The nested Tabs \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Tabs\nThis is how you use Tabs:\nhtml\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n    \n\n    \n        import { AfterContentInit, Component, ContentChildren, Input, QueryList } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { TabComponent } from '../tab/tab.component';\n\n/** The TabsComponent holds serveral instances of TabComponent.\n * https://components.entrecode.de/ui/tabs?e=1\n */\n@Component({\n  selector: 'ec-tabs',\n  templateUrl: './tabs.component.html',\n})\nexport class TabsComponent implements AfterContentInit {\n  /** The nested Tabs */\n  @ContentChildren(TabComponent) tabs: QueryList;\n  /** You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) */\n  @Input() selected: TabComponent;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.selectByUrl(event.url);\n      }\n    });\n  }\n\n  /** Selects the tab associated with the route present in the given url */\n  selectByUrl(url: string) {\n    if (!url || !this.tabs) {\n      return;\n    }\n    const paths = new URL(url, window.location.origin).pathname.split('/');\n    const match = this.tabs.find((tab) => paths[paths.length - 1].indexOf(tab.route) !== -1);\n    if (match) {\n      this.select(match, true);\n    }\n  }\n\n  initTabs() {\n    this.tabs.forEach((tab) => {\n      tab.parent = this;\n      if (tab.el.nativeElement.getAttribute('selected') !== null) {\n        this.select(tab);\n      }\n    });\n    this.selectByUrl(this.router.url);\n  }\n\n  ngAfterContentInit() {\n    this.initTabs();\n  }\n\n  /** Selects the given tab (Component). */\n  select(tab: TabComponent, skipRoute = false) {\n    if (this.selected) {\n      this.selected.deactivate();\n    }\n    this.selected = tab;\n    tab.activate();\n    if (tab.route && !skipRoute) {\n      this.router.navigate(['../' + tab.route], { relativeTo: this.route });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ tab.label }}\n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ tab.label }}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TinymceComponent.html":{"url":"components/TinymceComponent.html","title":"component - TinymceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TinymceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/tinymce/src/lib/tinymce/tinymce.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps tinymce as a control input.\nhttps://components.entrecode.de/misc/tinymce?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    ControlValueAccessor\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TinymceComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-tinymce\n            \n\n            \n                styleUrls\n                ./tinymce.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tinymce.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                update\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImageByUrl\n                            \n                            \n                                destroy\n                            \n                            \n                                init\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                            \n                                lazy\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:72\n                            \n                        \n\n                \n                    \n                            Subscribes for changes and propagates them + calling application tick manually :( \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:61\n                            \n                        \n                \n                    \n                        Debounce time for value change processing \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:65\n                            \n                        \n                \n                    \n                        If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:63\n                            \n                        \n                \n                    \n                        TinyMCE Settings. Get Object.assigned to the default settings \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:67\n                            \n                        \n                \n                    \n                        Output that emits when the value has been changed by the user \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        setup\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:70\n                            \n                        \n                \n                    \n                        Output that is emitted when the setup is being made.\nPasses the editor instance. Intended to be used for custom controls  \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addImageByUrl\n                        \n                        \n                    \n                \n            \n            \n                \naddImageByUrl(url: string, caption: string, size: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:134\n                \n            \n\n\n            \n                \n                    adds an image by url to the editor \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    caption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        200\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:96\n                \n            \n\n\n            \n                \n                    Destroys the editor. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:108\n                \n            \n\n\n            \n                \n                    Initializes the editor \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:90\n                \n            \n\n\n            \n                \n                    calls init \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:103\n                \n            \n\n\n            \n                \n                    calls destroy \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn)\n                \n            \n\n\n            \n                \n                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:138\n                \n            \n\n\n            \n                \n                    Writes value to editor on outside model change. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:57\n                            \n                        \n\n                \n                    \n                        The container where the editor is rendered \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:55\n                            \n                        \n\n                \n                    \n                        The current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:145\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:53\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:59\n                            \n                        \n\n                \n                    \n                        Subject that is nexted on editor change \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:72\n                            \n                        \n\n                \n                    \n                        Current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ApplicationRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport tinymce from 'tinymce/tinymce';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/autoresize';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/colorpicker';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/themes/modern';\n\nimport { editorSettings } from './tinymce-settings';\nimport { debounceTime } from 'rxjs/operators';\n\n/** Wraps tinymce as a control input.\n * https://components.entrecode.de/misc/tinymce?e=1\n */\n@Component({\n  selector: 'ec-tinymce',\n  templateUrl: './tinymce.component.html',\n  styleUrls: ['./tinymce.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TinymceComponent),\n      multi: true,\n    },\n  ],\n})\nexport class TinymceComponent implements AfterViewInit, OnDestroy, ControlValueAccessor, OnDestroy {\n  /** Promise that resolves when the editor has been initialized */\n  ready: Promise;\n  /** The current editor instance */\n  public editor: any;\n  /** The container where the editor is rendered */\n  @ViewChild('container') container: ElementRef;\n  /** Subject that is nexted on editor change */\n  update: Subject = new Subject();\n  /** Debounce time for value change processing */\n  @Input() debounce = 200;\n  /** TinyMCE Settings. Get Object.assigned to the default settings */\n  @Input() settings: any = {};\n  /** If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks */\n  @Input() lazy = false;\n  /** Output that emits when the value has been changed by the user */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** Output that is emitted when the setup is being made.\n   * Passes the editor instance. Intended to be used for custom controls  */\n  @Output() setup: EventEmitter = new EventEmitter();\n  /** Current value */\n  public value = '';\n\n  /** Subscribes for changes and propagates them + calling application tick manually :( */\n  constructor(private app: ApplicationRef) {\n    this.update\n      .asObservable()\n      .pipe(debounceTime(this.debounce))\n      .subscribe((editor) => {\n        if (!this.editor) {\n          return;\n        }\n        this.value = editor.getContent();\n        this.propagateChange(this.value);\n        this.changed.emit(this.value);\n        this.app.tick();\n      });\n  }\n  /** calls init */\n  ngAfterViewInit() {\n    if (!this.lazy) {\n      this.init();\n    }\n  }\n  /** Destroys the editor. */\n  destroy() {\n    if (this.editor) {\n      this.editor.remove();\n      delete this.editor;\n    }\n  }\n  /** calls destroy */\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  /** Initializes the editor */\n  init() {\n    const settings = Object.assign({}, editorSettings, this.settings, {\n      target: this.container.nativeElement,\n      setup: (editor) => {\n        editorSettings.setup(editor);\n        if (this.settings && this.settings.setup) {\n          this.settings.setup(editor);\n        }\n        this.setup.emit(editor);\n      },\n    });\n    this.ready = new Promise((resolve, reject) => setTimeout(() => resolve(tinymce.init(settings))));\n    this.ready.then((editor) => {\n      this.editor = editor[0];\n      this.editor.setContent(this.value || '');\n      this.editor.on('dblclick', (e) => {\n        if (e.target.localName === 'img') {\n          this.editor.buttons.image.onclick(true, e.toElement);\n        }\n      });\n      this.editor.on('change keyup', (res) => this.update.next(this.editor));\n      return this.editor;\n    });\n  }\n\n  /** adds an image by url to the editor */\n  addImageByUrl(url: string, caption = '', size = 200) {\n    this.editor.execCommand('mceInsertContent', false, ``);\n  }\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (this.editor) {\n      this.editor.setContent(this.value);\n    }\n  }\n\n  propagateChange = (_: any) => {};\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./tinymce.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TinymceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TinymceModule.html":{"url":"modules/TinymceModule.html","title":"module - TinymceModule","body":"\n                   \n\n\n\n\n    Modules\n    TinymceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/tinymce/src/lib/tinymce.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TinymceComponent } from './tinymce/tinymce.component';\n\nexport const tinymceModuleConfig = {\n  declarations: [TinymceComponent],\n  entryComponents: [TinymceComponent],\n  exports: [TinymceComponent],\n};\n\n@NgModule(tinymceModuleConfig)\nexport class TinymceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The toggle component is an alternative to the default boolean checkbox with fancier style.\nIt is used in the default input template for the view 'toggle'. \n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ToggleComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-toggle\n            \n\n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                toggle\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Default value : 'toggle' + Date.now()\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:21\n                            \n                        \n                \n                    \n                        The toggles placeholder (currently not in use) \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:36\n                \n            \n\n\n            \n                \n                    Registers change callback \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:40\n                \n            \n\n\n            \n                \n                    Register Touch \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:25\n                \n            \n\n\n            \n                \n                    Toggles the value \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:30\n                \n            \n\n\n            \n                \n                    writes incoming value \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/** The toggle component is an alternative to the default boolean checkbox with fancier style.\n * It is used in the default input template for the view 'toggle'. */\n@Component({\n  selector: 'ec-toggle',\n  templateUrl: './toggle.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ToggleComponent),\n      multi: true,\n    },\n  ],\n})\nexport class ToggleComponent implements ControlValueAccessor {\n  /** The current value */\n  value: boolean;\n  /** The toggles placeholder (currently not in use) */\n  @Input() placeholder: string;\n  @Input() id = 'toggle' + Date.now();\n\n  /** Toggles the value */\n  toggle() {\n    this.value = !this.value;\n    this.propagateChange(this.value);\n  }\n  /** writes incoming value */\n  writeValue(value: boolean) {\n    this.value = value;\n  }\n  /* Propagates change*/\n  propagateChange = (_: any) => { };\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /** Register Touch */\n  registerOnTouched() { }\n}\n\n    \n\n    \n        \n  \n  \n    \n    {{ placeholder }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ placeholder }}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeConfigService.html":{"url":"injectables/TypeConfigService.html","title":"injectable - TypeConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/type-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The TypeConfig holds each field type's specific behaviour in certain situations \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nestedCrudConfig\n                            \n                            \n                                    Private\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayAccount\n                            \n                            \n                                displayDate\n                            \n                            \n                                get\n                            \n                            \n                                groupDate\n                            \n                            \n                                isoDate\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/model-config/type-config.service.ts:203\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayAccount\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayAccount()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/type-config.service.ts:240\n                \n            \n\n\n            \n                \n                    Returns an account display function \n\n\n                    \n                        Returns :         (value: any, entry: any, property: any) => any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayDate\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayDate(time)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/type-config.service.ts:233\n                \n            \n\n\n            \n                \n                    Returns a date display function. If time is true, the time will be displayed too.\nUsese 'moment.format.date' and 'moment.format.time' symbols. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (value: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(type: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/type-config.service.ts:207\n                \n            \n\n\n            \n                \n                    Returns the base FieldConfig for the given type. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldConfigProperty\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            groupDate\n                        \n                        \n                    \n                \n            \n            \n                \ngroupDate()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/type-config.service.ts:245\n                \n            \n\n\n            \n                \n                    Returns a date group function. Uses 'moment.format.month' symbol \n\n\n                    \n                        Returns :     (value: any) => any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isoDate\n                        \n                        \n                    \n                \n            \n            \n                \nisoDate()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/type-config.service.ts:250\n                \n            \n\n\n            \n                \n                    Returns a date iso formatter \n\n\n                    \n                        Returns :     (value: any) => any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(type: string, config: FieldConfigProperty)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/model-config/type-config.service.ts:223\n                \n            \n\n\n            \n                \n                    Assigns the given config to the type, e.g. to change the default template of a type. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                FieldConfigProperty\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nestedCrudConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CrudConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /* size: 5, */\n    // methods: ['get']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:15\n                            \n                        \n\n                \n                    \n                        The default config for nested crud lists, as passed to entry-select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: {\n      view: 'label',\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n      inputView: 'string',\n      inputViews: [\n        {\n          name: 'string',\n        },\n        {\n          name: 'color',\n        },\n        {\n          name: 'copy',\n        },\n        {\n          name: 'textarea',\n        },\n      ],\n    },\n    boolean: {\n      hideFormLabel: true,\n      prefill: false,\n      filterable: true,\n      filterOperator: 'exact',\n      inputViews: [\n        {\n          name: 'boolean',\n        },\n        {\n          name: 'toggle',\n        },\n      ],\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true,\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    email: {},\n    phone: {\n      view: 'string',\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date')),\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-select',\n      inputViews: [\n        {\n          name: 'entries-select',\n        },\n        {\n          name: 'entries-actionbar',\n        },\n        {\n          name: 'entry-list-select',\n          levels: 2,\n        },\n      ],\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? JSON.stringify(value) : ''),\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog',\n    },\n    account: {\n      display: (value) => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    role: {\n      display: (value) => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n    },\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:23\n                            \n                        \n\n                \n                    \n                        Defines the base configuration of each type.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FieldConfig, FieldConfigProperty } from '@ec.components/core';\nimport { DefaultInputComponent, DefaultOutputComponent, SymbolService } from '@ec.components/ui';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport moment from 'moment-es6';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from '../entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The TypeConfig holds each field type's specific behaviour in certain situations */\n@Injectable()\nexport class TypeConfigService {\n  /** The default config for nested crud lists, as passed to entry-select */\n  private nestedCrudConfig: CrudConfig = {\n    /* size: 5, */\n    // methods: ['get']\n  };\n\n  // TODO check if filterPopClass: '' is still needed\n\n  /** Defines the base configuration of each type.*/\n  private types: FieldConfig = {\n    id: {\n      view: 'label',\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n      inputView: 'string',\n      inputViews: [\n        {\n          name: 'string',\n        },\n        {\n          name: 'color',\n        },\n        {\n          name: 'copy',\n        },\n        {\n          name: 'textarea',\n        },\n      ],\n    },\n    boolean: {\n      hideFormLabel: true,\n      prefill: false,\n      filterable: true,\n      filterOperator: 'exact',\n      inputViews: [\n        {\n          name: 'boolean',\n        },\n        {\n          name: 'toggle',\n        },\n      ],\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true,\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    email: {},\n    phone: {\n      view: 'string',\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date')),\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-select',\n      inputViews: [\n        {\n          name: 'entries-select',\n        },\n        {\n          name: 'entries-actionbar',\n        },\n        {\n          name: 'entry-list-select',\n          levels: 2,\n        },\n      ],\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? JSON.stringify(value) : ''),\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog',\n    },\n    account: {\n      display: (value) => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    role: {\n      display: (value) => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n    },\n  };\n  constructor(private symbol: SymbolService) { }\n\n  /** Returns the base FieldConfig for the given type. */\n  get(type: string): FieldConfigProperty {\n    const config = this.types[type];\n    if (!config) {\n      console.error('missing config for type', type);\n      return {};\n    }\n    Object.assign(config, {\n      type,\n      view: config.view || type,\n      input: config.input || DefaultInputComponent,\n      output: config.output || DefaultOutputComponent,\n    });\n    return config;\n  }\n\n  /** Assigns the given config to the type, e.g. to change the default template of a type. */\n  set(type: string, config: FieldConfigProperty) {\n    if (!this.types[type]) {\n      console.error('cannot configure non existing type', type);\n      return;\n    }\n    Object.assign(this.types[type], config);\n  }\n\n  /** Returns a date display function. If time is true, the time will be displayed too.\n   * Usese 'moment.format.date' and 'moment.format.time' symbols. */\n  displayDate(time = true) {\n    const format =\n      this.symbol.resolve('moment.format.date') + (time ? ' ' + this.symbol.resolve('moment.format.time') : '');\n    return (value) => (value ? moment(value).format(format) : '');\n  }\n\n  /** Returns an account display function */\n  displayAccount() {\n    return (value, entry, property) => entry.getTitle(property) || this.symbol.resolve('field.creator.ecuser');\n  }\n\n  /** Returns a date group function. Uses 'moment.format.month' symbol */\n  groupDate() {\n    return (value) => moment(value).format(this.symbol.resolve('moment.format.month'));\n  }\n\n  /** Returns a date iso formatter */\n  isoDate() {\n    return (value) => moment(value).toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n    Modules\n    UiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\n\n\nListModule\n\nListModule\n\nUiModule -->\n\nListModule->UiModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\n\n\nSelectModule\n\nSelectModule\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SelectModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SelectModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ListModule } from './list/list.module';\nimport { PopModule } from './pop/pop.module';\nimport { LoaderModule } from './loader/loader.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { UtilityModule } from './utility/utility.module';\nimport { SelectModule } from './select/select.module';\nimport { IconModule } from './icon/icon.module';\nimport { SymbolModule } from './symbol/symbol.module';\nimport { FormModule } from './form/form.module';\n\nexport const uiModuleConfig = {\n  imports: [\n    UtilityModule,\n    NotificationsModule,\n    PopModule,\n    LoaderModule,\n    FormModule,\n    ListModule,\n    SelectModule,\n    IconModule,\n    SymbolModule,\n  ],\n  exports: [\n    UtilityModule,\n    PopModule,\n    NotificationsModule,\n    LoaderModule,\n    ListModule,\n    FormModule,\n    SelectModule,\n    IconModule,\n    SymbolModule,\n  ],\n};\n\n@NgModule(uiModuleConfig)\nexport class UiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Update.html":{"url":"interfaces/Update.html","title":"interface - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the ResourceService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        broadcast\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        list\n                                \n                                \n                                        relation\n                                \n                                \n                                            Optional\n                                        resource\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        broadcast\n                                    \n                                \n                                \n                                    \n                                        broadcast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An identifier associated with the update e.g. an entryID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:         ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                    \n                                \n                                \n                                    \n                                        relation:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The relation that has been updated. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                    \n                                \n                                \n                                    \n                                        resource:     Resource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Resource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant resource. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of update. (create/read/update/delete) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Subject, Observable } from 'rxjs';\nimport { filter as rxFilter } from 'rxjs/operators';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the ResourceService. */\nexport interface Update {\n  /** The relation that has been updated. */\n  relation: string | string[];\n  /** The relevant resource. */\n  resource?: Resource;\n  /** The list where it happened. */\n  list?: ResourceList;\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete';\n  /** An identifier associated with the update e.g. an entryID */\n  identifier?: string;\n  /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n  broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n  /** The changes event is emitted everytime an resource is created or updated. */\n  public changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public config: ResourceConfig) {\n    /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return change.broadcast || Object.keys(filter).reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().pipe(rxFilter((change: Update) => this.matches(change, filter)));\n  }\n\n  /** Saves the given resource with the given value. If the resource is not yet existing,\n   * it will be created.Otherwise it will be updated. */\n  save(item: Item, value: Object, relation: string, api: Core): Promise {\n    const resource = item.getBody();\n    if (item.config.onSave) {\n      return Promise.resolve(item.config.onSave(item, value));\n    }\n    item.deleteImmutableProperties(value);\n    if (resource && resource.save) {\n      return this.update(relation, resource, value);\n    }\n    return this.create(relation, value, api)\n      .then((_resource) => {\n        return _resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given resource with the new value. Fires the \"update\" change. */\n  update(relation, resource: Resource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => (oldValues[key] = resource[key]));\n    Object.assign(resource, this.clean(value, false, false)); // assign new form values\n    return resource\n      .save()\n      .then((_resource) => {\n        this.changes.next({ relation, resource: _resource, type: 'put' });\n        return _resource;\n      })\n      .catch((err) => {\n        Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' || ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (setEmptyStringsToNull && value[key] === '') {\n          // clear empty strings\n          value[key] = null;\n        }\n        if (deleteNullProperties && value[key] === null) {\n          delete value[key];\n        }\n        if (this.isImmutableProperty(key)) {\n          // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n  create(relation: string, value: Object, api: Core): Promise {\n    return api\n      .create(relation, this.clean(value))\n      .then((resource: Resource) => {\n        this.changes.next({ relation, resource, type: 'post' });\n        return resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given resource and emits the \"delete\" change. */\n  del(relation: string, resource: Resource) {\n    return resource.del().then((res) => {\n      this.changes.next({ relation, resource, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the FileService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asset\n                                \n                                \n                                            Optional\n                                        assets\n                                \n                                \n                                            Optional\n                                        item\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset\n                                    \n                                \n                                \n                                    \n                                        asset:     PublicAssetResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant asset. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                    \n                                \n                                \n                                    \n                                        assets:     PublicAssetResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant assets (when uploading multiple). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:         Item\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Item\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:         Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:         ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the FileService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource;\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[];\n  /** The uploaded asset as item */\n  item?: Item;\n  /** The uploaded asset as item */\n  items?: Array>;\n  /** The list where it happened. */\n  list?: ResourceList;\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean;\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean;\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean;\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[];\n  /** Custom file form fieldName */\n  fieldName?: string;\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: [],\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig,\n  ) {}\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, config.filter || {}, {\n          type: assetGroupID,\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) => (only && (match && this.isNewAsset(a))) || (!only && (match || this.isNewAsset(a))),\n        only,\n      );\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id);\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n        if (key in options) {\n          formData.append(key, `${options[key]}`);\n        }\n      });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map((f) => f.url) : this.getFormData(files, options);\n    return api\n      .createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('dmAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve()\n      .then(\n        (): Promise Promise> => {\n          if (files.length === 1) {\n            return this.sdk.api.createAsset(data, {});\n          }\n          return this.sdk.api.createAssets(data, {});\n        },\n      )\n      .then((res) => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      })\n      .then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('legacyAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(\n    assets: Array,\n    assetGroupID?: string,\n  ): Promise> {\n    console.warn(\n      'FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.',\n    );\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) {\n      // new assets\n      return this.sdk.api\n        .dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then((dmAssetList) => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then(\n      (): any => {\n        if (unresolved.length === 1) {\n          return this.sdk.api.asset(unresolved[0]).then((asset) => {\n            return [asset];\n          });\n        }\n        return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 }).then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ? resolved.find((resource) => resource.assetID === asset) : asset,\n          );\n        });\n      },\n    );\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/upload/upload.component.ts\n\n\n    \n        Description\n    \n    \n        This component will render an input field to upload files to the datamanager. TODO: demo \n\n    \n\n\n    \n        Implements\n    \n    \n                    WithLoader\n                    WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload\n            \n\n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                fileInput\n                            \n                            \n                                    Public\n                                filesToUpload\n                            \n                            \n                                notifications\n                            \n                            \n                                pop\n                            \n                            \n                                uploadPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clear\n                            \n                            \n                                setGroup\n                            \n                            \n                                trigger\n                            \n                            \n                                upload\n                            \n                            \n                                uploadFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetGroupID\n                            \n                            \n                                custom\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, fileService: FileService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/upload/upload.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:36\n                            \n                        \n                \n                    \n                        The api to use for the upload. Defaults to sdk.api \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:30\n                            \n                        \n                \n                    \n                        The asset group to upload into. If not defined, old assets will be used! \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:32\n                            \n                        \n                \n                    \n                        If true, a pop to rename files + customize flags will appear before uploading. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :         LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:28\n                            \n                        \n                \n                    \n                        The loader that should be used while uploading\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         FileOptions\n\n                    \n                \n                \n                    \n                        Default value : Object.assign({}, this.fileService.defaultOptions)\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:34\n                            \n                        \n                \n                    \n                        Upload options \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:26\n                            \n                        \n                \n                    \n                        The input placeholder\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:40\n                            \n                        \n                \n                    \n                        emits when the group has been set from the upload pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:38\n                            \n                        \n                \n                    \n                        Emits when an upload is complete. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            change\n                        \n                        \n                    \n                \n            \n            \n                \nchange(e, api)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/upload/upload.component.ts:72\n                \n            \n\n\n            \n                \n                    Uploads the files from the input event. Handles loader and notifications. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    api\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.sdk.api\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/upload/upload.component.ts:80\n                \n            \n\n\n            \n                \n                    clears the file input \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGroup\n                        \n                        \n                    \n                \n            \n            \n                \nsetGroup(group)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/upload/upload.component.ts:66\n                \n            \n\n\n            \n                \n                    Sets the asset group to upload to \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger(e)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/upload/upload.component.ts:56\n                \n            \n\n\n            \n                \n                    opens the system upload window by triggering the input \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \nupload(files, api)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/upload/upload.component.ts:104\n                \n            \n\n\n            \n                \n                    Triggers upload of current selected files \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    api\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.sdk.api\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadFiles\n                        \n                        \n                    \n                \n            \n            \n                \nuploadFiles(files, e, api)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/upload/upload.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    api\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.sdk.api\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fileInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference to the input[type=file] element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filesToUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:46\n                            \n                        \n\n                \n                    \n                        Error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(PopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:44\n                            \n                        \n\n                \n                    \n                        Pop child for new asset options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport {\n  LoaderComponent,\n  LoaderService,\n  Notification,\n  NotificationsService,\n  PopComponent,\n  SymbolService,\n  WithLoader,\n  WithNotifications,\n} from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileOptions, FileService, Upload } from '../file.service';\n\n/** This component will render an input field to upload files to the datamanager. TODO: demo */\n@Component({\n  selector: 'ec-upload',\n  templateUrl: './upload.component.html',\n})\nexport class UploadComponent implements WithLoader, WithNotifications {\n  event: any;\n  uploadPromise: Promise;\n  public filesToUpload: any;\n  /** The input placeholder*/\n  @Input() placeholder: string;\n  /** The loader that should be used while uploading*/\n  @Input() loader: LoaderComponent;\n  /** The asset group to upload into. If not defined, old assets will be used! */\n  @Input() assetGroupID: string;\n  /** If true, a pop to rename files + customize flags will appear before uploading. */\n  @Input() custom: boolean;\n  /** Upload options */\n  @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n  /** The api to use for the upload. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Emits when an upload is complete. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** emits when the group has been set from the upload pop */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Reference to the input[type=file] element */\n  @ViewChild('fileInput') fileInput: ElementRef;\n  /** Pop child for new asset options. */\n  @ViewChild(PopComponent) pop: PopComponent;\n  /** Error Notifications */\n  notifications: Notification[] = [];\n\n  constructor(\n    private sdk: SdkService,\n    private fileService: FileService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n  ) {}\n  /** opens the system upload window by triggering the input */\n  trigger(e) {\n    if (!this.fileInput) {\n      console.error('cannot trigger upload: file input element not found!');\n      return;\n    }\n    /* this.clear(); */\n    this.fileInput.nativeElement.click();\n  }\n\n  /** Sets the asset group to upload to */\n  setGroup(group) {\n    this.assetGroupID = group;\n    this.groupChanged.emit(group);\n  }\n\n  /** Uploads the files from the input event. Handles loader and notifications. */\n  change(e, api = this.sdk.api) {\n    if (!e || !e.target || !e.target.files || !e.target.files.length) {\n      return;\n    }\n    return this.uploadFiles(e.target.files, e, api);\n  }\n\n  /** clears the file input */\n  clear() {\n    if (!this.fileInput) {\n      return;\n    }\n    this.fileInput.nativeElement.value = ''; // clear input to eventually trigger change on same file\n  }\n\n  uploadFiles(files, e, api = this.sdk.api) {\n    files = typeof files === 'string' ? files.split('\\n').map((url) => ({ name: url, url })) : files;\n    if (files[0].url && this.fileService.isOldAssetGroupID(this.assetGroupID)) {\n      delete this.assetGroupID;\n    }\n    this.filesToUpload = files;\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.custom || !this.assetGroupID) {\n      this.event = e;\n      this.pop.show();\n      return Promise.resolve();\n    }\n    return this.upload(files, api);\n  }\n\n  /** Triggers upload of current selected files */\n  upload(files, api = this.sdk.api) {\n    this.uploadPromise = (this.fileService.isNewAssetGroupID(this.assetGroupID)\n      ? this.fileService.uploadAssets(files, this.assetGroupID, this.options, api)\n      : this.fileService.uploadFiles(files)\n    )\n      .then((_upload) => {\n        this.success.emit(_upload);\n        this.notificationService.emit({\n          title: this.symbol.resolve('success.upload'),\n          type: 'success',\n          hide: this.notifications,\n        });\n        this.pop.hide();\n        return _upload;\n      })\n      .catch((err) => {\n        console.error(err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.upload'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          append: this.notifications,\n        });\n      });\n    this.loaderService.wait(this.uploadPromise, this.loader);\n    this.uploadPromise.then(() => {\n      delete this.uploadPromise;\n    });\n    return this.uploadPromise;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n        {{ 'upload.assetGroup' | symbol }}\n        \n      \n      \n        \n          Title\n          \n          {{ f.name }}\n        \n        \n          \n            \n            \n              {{ 'upload.preserveFilenames' | symbol }}\n            \n          \n        \n        \n          \n            \n            \n              {{ 'upload.includeAssetIDInPath' | symbol }}\n            \n          \n        \n        \n          \n            \n            \n              {{ 'upload.ignoreDuplicates' | symbol }}\n            \n          \n        \n        \n          \n            \n            \n              {{ 'upload.deduplicate' | symbol }}\n            \n          \n        \n      \n      Upload\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'upload.assetGroup\\' | symbol }}                                      Title                    {{ f.name }}                                                                {{ \\'upload.preserveFilenames\\' | symbol }}                                                                                      {{ \\'upload.includeAssetIDInPath\\' | symbol }}                                                                                      {{ \\'upload.ignoreDuplicates\\' | symbol }}                                                                                      {{ \\'upload.deduplicate\\' | symbol }}                                          Upload      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadSelectComponent.html":{"url":"components/UploadSelectComponent.html","title":"component - UploadSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/upload-select/upload-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload-select\n            \n\n\n\n\n            \n                templateUrl\n                ./upload-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                    Public\n                                focusEvent\n                            \n                            \n                                showUrlInput\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                uploader\n                            \n                            \n                                urlsToUpload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setGroup\n                            \n                            \n                                toggleUrlInput\n                            \n                            \n                                triggerUpload\n                            \n                            \n                                uploadFromUrls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                config\n                            \n                            \n                                custom\n                            \n                            \n                                disableDrop\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                browse\n                            \n                            \n                                groupChanged\n                            \n                            \n                                uploaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                        SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         CrudConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDrop\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :         LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         FileOptions\n\n                    \n                \n                \n                    \n                        Default value : Object.assign({}, this.fileService.defaultOptions)\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        browse\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:22\n                            \n                        \n                \n                    \n                        emits when the group has been set from the upload pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        uploaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:24\n                            \n                        \n                \n                    \n                        Emits when an upload is complete. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGroup\n                        \n                        \n                    \n                \n            \n            \n                \nsetGroup(group)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:41\n                \n            \n\n\n            \n                \n                    Sets the asset group to upload to \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleUrlInput\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleUrlInput()\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            triggerUpload\n                        \n                        \n                    \n                \n            \n            \n                \ntriggerUpload(e)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadFromUrls\n                        \n                        \n                    \n                \n            \n            \n                \nuploadFromUrls(urls, e)\n                \n            \n\n\n            \n                \n                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    urls\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:34\n                            \n                        \n\n                \n                    \n                        The event that focuses the url input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showUrlInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:32\n                            \n                        \n\n                \n                    \n                        Wether or not the url input should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UploadComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(UploadComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:28\n                            \n                        \n\n                \n                    \n                        The nested upload component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlsToUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:30\n                            \n                        \n\n                \n                    \n                        The Url to upload from \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { CrudConfig } from '../../crud/crud-config.interface';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SymbolService } from '@ec.components/ui';\nimport { UploadComponent } from '../upload/upload.component';\nimport { Upload, FileOptions, FileService } from '../file.service';\n\n@Component({\n  selector: 'ec-upload-select',\n  templateUrl: './upload-select.component.html',\n})\nexport class UploadSelectComponent implements OnInit {\n  @Input() readOnly: boolean;\n  @Input() custom: boolean;\n  @Input() disableDrop: boolean;\n  @Input() assetGroupID: string;\n  @Input() loader: LoaderComponent;\n  @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n  /** emits when the group has been set from the upload pop */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Emits when an upload is complete. */\n  @Output() uploaded: EventEmitter = new EventEmitter();\n  @Output() browse: EventEmitter = new EventEmitter();\n  @Input() config: CrudConfig;\n  /** The nested upload component */\n  @ViewChild(UploadComponent) uploader: UploadComponent;\n  /** The Url to upload from */\n  urlsToUpload = '';\n  /** Wether or not the url input should be visible */\n  showUrlInput = false;\n  /** The event that focuses the url input */\n  public focusEvent: EventEmitter = new EventEmitter();\n\n  constructor(public symbol: SymbolService, public fileService: FileService) {}\n\n  ngOnInit() {}\n\n  /** Sets the asset group to upload to */\n  setGroup(group) {\n    this.assetGroupID = group;\n    this.groupChanged.emit(group);\n  }\n\n  toggleUrlInput() {\n    this.showUrlInput = !this.showUrlInput;\n    setTimeout(() => {\n      this.focusEvent.emit(true);\n    });\n  }\n\n  uploadFromUrls(urls, e) {\n    this.uploader.uploadFiles(urls, e).then(() => {\n      this.urlsToUpload = '';\n      this.showUrlInput = false;\n    });\n  }\n  triggerUpload(e) {\n    this.uploader.trigger(e);\n  }\n}\n\n    \n\n    \n        \n  Drop to upload\n  \n  \n    \n      {{ 'upload.link' | symbol }}\n      \n        {{ 'upload.or' | symbol }}\n        {{ 'upload.url' | symbol }}\n      \n      \n        {{ 'upload.or' | symbol }}\n        {{ 'upload.browse' | symbol }}\n      \n    \n    \n      \n        \n        {{ 'upload.url.start' | symbol }}\n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Drop to upload              {{ \\'upload.link\\' | symbol }}              {{ \\'upload.or\\' | symbol }}        {{ \\'upload.url\\' | symbol }}                    {{ \\'upload.or\\' | symbol }}        {{ \\'upload.browse\\' | symbol }}                                    {{ \\'upload.url.start\\' | symbol }}                  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_imports\n\n\n\ncluster_UtilityModule_exports\n\n\n\ncluster_UtilityModule_providers\n\n\n\n\nFocusDirective\n\nFocusDirective\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nIoModule\n\nIoModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nKeycommandsService\n\nKeycommandsService\n\nUtilityModule -->\n\nKeycommandsService->UtilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/utility/utility.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FocusDirective\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            SignupFormComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            KeycommandsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FocusDirective\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            SignupFormComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IoModule } from '../io/io.module';\nimport { FocusDirective } from './focus/focus.directive';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { SignupFormComponent } from './signup-form/signup-form.component';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { KeycommandsService } from './keycommands/keycommands.service';\n\nexport const utilityModuleConfig = {\n  entryComponents: [],\n  declarations: [TabsComponent, TabComponent, LoginFormComponent, SignupFormComponent, FocusDirective],\n  imports: [FormsModule, ReactiveFormsModule, IoModule, CommonModule, RouterModule],\n  exports: [\n    /* FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    */\n    TabsComponent,\n    TabComponent,\n    LoginFormComponent,\n    SignupFormComponent,\n    FocusDirective,\n    RouterModule,\n  ],\n  providers: [KeycommandsService],\n};\n\n@NgModule(utilityModuleConfig)\nexport class UtilityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/VisibleFieldsPipe.html":{"url":"pipes/VisibleFieldsPipe.html","title":"pipe - VisibleFieldsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  VisibleFieldsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/visible-fields.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        visibleFields\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(fields: Array, form: Form)\n                \n            \n\n\n            \n                \n                    Defined in packages/ui/src/lib/form/visible-fields.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Filters out all fields that should not be displayed in a regular form \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                                Form\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/visible-fields.pipe.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Field, Form } from '@ec.components/core';\nimport { FormService } from './form.service';\n\n/** The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. */\n@Pipe({\n  name: 'visibleFields',\n})\nexport class VisibleFieldsPipe implements PipeTransform {\n  constructor(public formService: FormService) {}\n  /** Filters out all fields that should not be displayed in a regular form */\n  transform(fields: Array, form: Form): any {\n    return fields.filter((field) => this.formService.shouldBePartOfForm(field, form) && !field.hideInForm);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithLoader.html":{"url":"interfaces/WithLoader.html","title":"interface - WithLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/loader/with-loader.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses a loader. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:         LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoaderComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The loader that is contacted on any kind of loading operation. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoaderComponent } from './loader.component';\n/** This interface can be used on a component that uses a loader. */\nexport interface WithLoader {\n  /** The loader that is contacted on any kind of loading operation. */\n  loader: LoaderComponent;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithNotifications.html":{"url":"interfaces/WithNotifications.html","title":"interface - WithNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/with-notifications.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses notifications. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        silent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:         Notification[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Notification[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores notification history for later access. E.g. stores errors that should be hidden later. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silent\n                                    \n                                \n                                \n                                    \n                                        silent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no notifications will be emitted \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Notification } from './notification';\n\n/** This interface can be used on a component that uses notifications. */\nexport interface WithNotifications {\n  /** Stores notification history for later access. E.g. stores errors that should be hidden later. */\n  notifications?: Notification[];\n  /** If true, no notifications will be emitted */\n  silent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nEach package has its own changelog:\n\n@ec.components/data\n@ec.components/ui\n@ec.components/core\n@ec.components/calendar\n@ec.components/style\n@ec.components/ace\n@ec.components/location\n@ec.components/medium-editor\n@ec.components/tinymce\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                packages/ace/src/lib/ace.component.ts\n            \n            component\n            AceComponent\n            \n                76 %\n                (20/26)\n            \n        \n        \n            \n                \n                packages/ace/src/lib/ace.component.ts\n            \n            variable\n            ace\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ace/src/lib/ace.module.ts\n            \n            variable\n            aceModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ace/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ace/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar.module.ts\n            \n            variable\n            calendarModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                75 %\n                (44/58)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/month.component.ts\n            \n            component\n            MonthComponent\n            \n                69 %\n                (25/36)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/month.component.ts\n            \n            interface\n            Day\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/daterange/daterange.component.ts\n            \n            component\n            DaterangeComponent\n            \n                68 %\n                (26/38)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/datetime.pipe.ts\n            \n            pipe\n            DatetimePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/heatmap/heatmap.component.ts\n            \n            component\n            HeatmapComponent\n            \n                68 %\n                (30/44)\n            \n        \n        \n            \n                \n                packages/calendar/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/collection/collection.ts\n            \n            class\n            Collection\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/config.ts\n            \n            class\n            Config\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/field-config-property.interface.ts\n            \n            interface\n            FieldConfigProperty\n            \n                100 %\n                (43/43)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/field-config.interface.ts\n            \n            interface\n            FieldConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/field/field.ts\n            \n            class\n            Field\n            \n                96 %\n                (29/30)\n            \n        \n        \n            \n                \n                packages/core/src/lib/form/form-config.interface.ts\n            \n            interface\n            FormConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/core/src/lib/form/form.ts\n            \n            class\n            Form\n            \n                93 %\n                (29/31)\n            \n        \n        \n            \n                \n                packages/core/src/lib/item/item-config.interface.ts\n            \n            interface\n            ItemConfig\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/core/src/lib/item/item.ts\n            \n            class\n            Item\n            \n                91 %\n                (22/24)\n            \n        \n        \n            \n                \n                packages/core/src/lib/list/list-config.interface.ts\n            \n            interface\n            ListConfig\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                packages/core/src/lib/list/list.ts\n            \n            class\n            List\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                packages/core/src/lib/pagination/pagination.ts\n            \n            class\n            Pagination\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                packages/core/src/lib/selection/selection.ts\n            \n            class\n            Selection\n            \n                95 %\n                (61/64)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            class\n            Sorter\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortNumber\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            variable\n            collator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/core/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/asset-list/asset-list.component.ts\n            \n            component\n            AssetListComponent\n            \n                71 %\n                (32/45)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth-guard.service.ts\n            \n            guard\n            AuthGuard\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth.module.ts\n            \n            function\n            cookieFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/email-available.validator.ts\n            \n            variable\n            emailAvailable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/errors.ts\n            \n            variable\n            backendErrorCodes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/errors.ts\n            \n            variable\n            errors\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/password-reset/password-reset.component.ts\n            \n            component\n            PasswordResetComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                packages/data/src/lib/crud/crud-config.interface.ts\n            \n            interface\n            CrudConfig\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                packages/data/src/lib/crud/crud.component.ts\n            \n            component\n            CrudComponent\n            \n                77 %\n                (14/18)\n            \n        \n        \n            \n                \n                packages/data/src/lib/data.module.ts\n            \n            variable\n            dataModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entries/entries.directive.ts\n            \n            directive\n            EntriesDirective\n            \n                60 %\n                (12/20)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-actionbar/entry-actionbar.component.ts\n            \n            component\n            EntryActionbarComponent\n            \n                45 %\n                (39/86)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/admin-entry-input.component.ts\n            \n            component\n            AdminEntryInputComponent\n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/default-entry-input.component.ts\n            \n            component\n            DefaultEntryInputComponent\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/default-entry-output.component.ts\n            \n            component\n            DefaultEntryOutputComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/entry-form.component.ts\n            \n            component\n            EntryFormComponent\n            \n                91 %\n                (41/45)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts\n            \n            component\n            EntryListPopComponent\n            \n                44 %\n                (13/29)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list-select/entry-list-select.component.ts\n            \n            component\n            EntryListSelectComponent\n            \n                68 %\n                (34/50)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list/entry-list.component.ts\n            \n            component\n            EntryListComponent\n            \n                67 %\n                (36/53)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list/entry-list.ts\n            \n            class\n            EntryList\n            \n                93 %\n                (74/79)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-pop/entry-pop.component.ts\n            \n            component\n            EntryPopComponent\n            \n                71 %\n                (30/42)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-select/entry-select.component.ts\n            \n            component\n            EntrySelectComponent\n            \n                68 %\n                (65/95)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry/entry.directive.ts\n            \n            directive\n            EntryDirective\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry/entry.service.ts\n            \n            injectable\n            EntryService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset-list-pop/asset-list-pop.component.ts\n            \n            component\n            AssetListPopComponent\n            \n                59 %\n                (25/42)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset-select/asset-select.component.ts\n            \n            component\n            AssetSelectComponent\n            \n                64 %\n                (55/85)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset/asset.directive.ts\n            \n            directive\n            AssetDirective\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts\n            \n            component\n            AssetgroupSelectComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/dropzone/dropzone.directive.ts\n            \n            directive\n            DropzoneDirective\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            injectable\n            FileService\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            interface\n            FileOptions\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            interface\n            Upload\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts\n            \n            component\n            ImageSelectPopComponent\n            \n                64 %\n                (18/28)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/image/image.directive.ts\n            \n            directive\n            ImageDirective\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/mime-types.ts\n            \n            variable\n            mimeTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/tag-select/tag-select.component.ts\n            \n            component\n            TagSelectComponent\n            \n                63 %\n                (94/148)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/upload-select/upload-select.component.ts\n            \n            component\n            UploadSelectComponent\n            \n                30 %\n                (7/23)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/upload/upload.component.ts\n            \n            component\n            UploadComponent\n            \n                77 %\n                (17/22)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-config.interface.ts\n            \n            interface\n            ModelConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-config.service.ts\n            \n            injectable\n            ModelConfigService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-configuration.interface.ts\n            \n            interface\n            ModelConfiguration\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/sdk-field.ts\n            \n            interface\n            SdkField\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/type-config.service.ts\n            \n            injectable\n            TypeConfigService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/api-actionbar.component.ts\n            \n            component\n            ApiActionbarComponent\n            \n                39 %\n                (36/92)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n            \n            component\n            ResourceActionbarComponent\n            \n                43 %\n                (36/82)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n            \n            interface\n            ResourceActionbarState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource-config.service.ts\n            \n            injectable\n            ResourceConfig\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource.service.ts\n            \n            injectable\n            ResourceService\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource.service.ts\n            \n            interface\n            Update\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-crud/resource-crud.component.ts\n            \n            component\n            ResourceCrudComponent\n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-delete-pop/resource-delete-pop.component.ts\n            \n            component\n            ResourceDeletePopComponent\n            \n                61 %\n                (22/36)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-form/resource-form.component.ts\n            \n            component\n            ResourceFormComponent\n            \n                87 %\n                (41/47)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-form/resource-form.ts\n            \n            class\n            ResourceForm\n            \n                87 %\n                (50/57)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts\n            \n            component\n            ResourceListPopComponent\n            \n                40 %\n                (12/30)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list/resource-list.component.ts\n            \n            component\n            ResourceListComponent\n            \n                75 %\n                (34/45)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list/resource-list.ts\n            \n            class\n            ResourceList\n            \n                93 %\n                (70/75)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-pop/resource-pop.component.ts\n            \n            component\n            ResourcePopComponent\n            \n                72 %\n                (29/40)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-select/resource-select.component.ts\n            \n            component\n            ResourceSelectComponent\n            \n                67 %\n                (59/87)\n            \n        \n        \n            \n                \n                packages/data/src/lib/sdk/history.service.ts\n            \n            injectable\n            HistoryService\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/sdk/sdk.service.ts\n            \n            injectable\n            SdkService\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                packages/data/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/geocode.service.ts\n            \n            injectable\n            GeocodeService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                packages/location/src/lib/geocode.service.ts\n            \n            variable\n            google\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-map.component.ts\n            \n            component\n            LocationMapComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-picker.component.ts\n            \n            component\n            LocationPickerComponent\n            \n                57 %\n                (16/28)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-search.component.ts\n            \n            component\n            LocationSearchComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location.module.ts\n            \n            variable\n            LOCATION_COMPONENTS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location.module.ts\n            \n            variable\n            locationModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/lib/medium-editor.component.ts\n            \n            component\n            MediumEditorComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/lib/medium-editor.module.ts\n            \n            variable\n            mediumModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce.module.ts\n            \n            variable\n            tinymceModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce/tinymce-settings.ts\n            \n            variable\n            editorSettings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce/tinymce.component.ts\n            \n            component\n            TinymceComponent\n            \n                85 %\n                (18/21)\n            \n        \n        \n            \n                \n                packages/tinymce/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            component\n            ActionbarComponent\n            \n                53 %\n                (36/67)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            interface\n            ActionbarConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/datetime/datetime.component.ts\n            \n            component\n            DatetimeComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/default-input/default-input.component.ts\n            \n            component\n            DefaultInputComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/default-output/default-output.component.ts\n            \n            component\n            DefaultOutputComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.component.html.ts\n            \n            variable\n            formTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.component.ts\n            \n            component\n            FormComponent\n            \n                91 %\n                (33/36)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.module.ts\n            \n            variable\n            formModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/max-items.pipe.ts\n            \n            pipe\n            MaxItemsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/visible-fields.pipe.ts\n            \n            pipe\n            VisibleFieldsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/ec-icons.ts\n            \n            variable\n            ecIcons\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/emoji-icons.ts\n            \n            variable\n            emojiIcons\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/icon.service.ts\n            \n            injectable\n            IconService\n            \n                71 %\n                (10/14)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/ixo.ts\n            \n            variable\n            ixo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts\n            \n            component\n            DynamicRackComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts\n            \n            component\n            DynamicSlotComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/input-errors/input-errors.component.ts\n            \n            component\n            InputErrorsComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                71 %\n                (20/28)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/output/output.component.ts\n            \n            component\n            OutputComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/slot-host.directive.ts\n            \n            directive\n            SlotHostDirective\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/group.pipe.ts\n            \n            pipe\n            GroupPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-config.service.ts\n            \n            injectable\n            ListConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-header/list-header.component.ts\n            \n            component\n            ListHeaderComponent\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-items/list-items.component.ts\n            \n            component\n            ListItemsComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.component.html.ts\n            \n            variable\n            listTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.component.ts\n            \n            component\n            ListComponent\n            \n                78 %\n                (22/28)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.module.ts\n            \n            variable\n            listModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/pagination/pagination-config.interface.ts\n            \n            class\n            PaginationConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/searchbar/searchbar.component.ts\n            \n            component\n            SearchbarComponent\n            \n                78 %\n                (29/37)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/with-loader.interface.ts\n            \n            interface\n            WithLoader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                80 %\n                (24/30)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notification.ts\n            \n            class\n            Notification\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.component.ts\n            \n            component\n            NotificationsComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.service.ts\n            \n            injectable\n            NotificationsService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.service.ts\n            \n            variable\n            window\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/with-notifications.interface.ts\n            \n            interface\n            WithNotifications\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.component.ts\n            \n            component\n            PopComponent\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.module.ts\n            \n            variable\n            popModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.service.ts\n            \n            injectable\n            PopService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.component.html.ts\n            \n            variable\n            selectTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                68 %\n                (37/54)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.module.ts\n            \n            variable\n            selectModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/de.ts\n            \n            variable\n            de\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/en.ts\n            \n            variable\n            en\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.interface.ts\n            \n            interface\n            Symbol\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.pipe.ts\n            \n            injectable\n            SymbolPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.pipe.ts\n            \n            pipe\n            SymbolPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.service.ts\n            \n            injectable\n            SymbolService\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/ui.module.ts\n            \n            variable\n            uiModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/component-destroyed.ts\n            \n            function\n            componentDestroyed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/focus/focus.directive.ts\n            \n            directive\n            FocusDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/focus/focus.interface.ts\n            \n            interface\n            Focus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n            \n            injectable\n            KeycommandsService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n            \n            interface\n            KeyAction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/signup-form/signup-form.component.ts\n            \n            component\n            SignupFormComponent\n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/tab/tab.component.ts\n            \n            component\n            TabComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/utility.module.ts\n            \n            variable\n            utilityModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/validators/email.validator.ts\n            \n            variable\n            emailValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/validators/field-validators.ts\n            \n            variable\n            FieldValidators\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : 1.0.0-beta.5\n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ec.components/ace : *\n        \n            @ec.components/calendar : *\n        \n            @ec.components/core : *\n        \n            @ec.components/data : *\n        \n            @ec.components/location : *\n        \n            @ec.components/medium-editor : *\n        \n            @ec.components/style : *\n        \n            @ec.components/tinymce : *\n        \n            @ec.components/ui : *\n        \n            x.ui : 10.0.0-beta.5\n        \n            ace-builds : ^1.4.3\n        \n            core-js : ^2.6.5\n        \n            ec.sdk : ^0.21.9\n        \n            googlemaps : ^1.12.0\n        \n            lerna : ^3.13.1\n        \n            medium-editor : ^5.23.2\n        \n            moment-es6 : ^1.0.0\n        \n            ngx-cookie : ^2.0.1\n        \n            ngx-drag-drop : ^1.1.0\n        \n            rxjs : ~6.3.3\n        \n            tinymce : ^4.9.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            componentDestroyed   (packages/.../component-destroyed.ts)\n                        \n                        \n                            cookieFactory   (packages/.../auth.module.ts)\n                        \n                        \n                            sortBoolean   (packages/.../sorter.ts)\n                        \n                        \n                            sortNumber   (packages/.../sorter.ts)\n                        \n                        \n                            sortString   (packages/.../sorter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ui/src/lib/utility/component-destroyed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            componentDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentDestroyed(component: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    packages/data/src/lib/auth/auth.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            cookieFactory\n                        \n                        \n                    \n                \n            \n            \n                \ncookieFactory()\n                \n            \n\n\n\n\n            \n                \n                    loads CookieModule \n\n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n    packages/core/src/lib/sorter/sorter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            sortBoolean\n                        \n                        \n                    \n                \n            \n            \n                \nsortBoolean(a, b)\n                \n            \n\n\n\n\n            \n                \n                    Sorts booleans \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsortNumber(a, b)\n                \n            \n\n\n\n\n            \n                \n                    Sorts numbers \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortString\n                        \n                        \n                    \n                \n            \n            \n                \nsortString(a, b)\n                \n            \n\n\n\n\n            \n                \n                    Sorts strings (naturally) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nec.components\nThis project contains all sorts of angular components for creating data driven applications.\nIt is mainly used for entrecode admin applications in combination with the entrecode using ec.sdk.\nPackages\nMain Packages\n\n@ec.components/core: contains core typescript classes (no angular/datamanager)\n@ec.components/ui: contains core ui components (not datamanager specific)\n@ec.components/data: contains ui components for datamanager.\n@ec.components/style: contains styles for all components, built on x.ui.\n\nThe dependencies stack up from core to data (data > ui > core). You could also omit data, using just the ui components.\nOptional Packages\n\n@ec.components/calendar: contains calendar components, uses moment.\n@ec.components/location: wraps angular-google-maps.\n@ec.components/tinymce: wraps tinymce wysiwyg editor.\n@ec.components/medium-editor: wraps medium wysiwyg editor.\n@ec.components/ace: wraps ace code editor.\n\nDocumentation\nThe main documentation is located at entrecode.github.io/ec.components. You can find a getting started guide there.\nDemo\nA Demo is available at components.entrecode.de.\nDeveloping with Lerna + Yarn Workspaces\nThe repository is a monorepo, managed by lerna and yarn workspaces.\nAll folders inside dist + packages/style will be used as symlinks in node_modules/@ec.components/*.\nYou can update the symlinks by running yarn (e.g. after adding a new package).\nDev Setup\nAfter a fresh clone of the repo, run this:\nsh\nyarn install\nnpm run dev-setup\nnpm run start\nThe dev-setup script builds all packages and symlinks them to the node_modules.\nReleasing\nRun release task and select versions:\nsh\nnpm run release\nTo publish a new package for the first time, make sure you run npm publish --access=public before running lerna. See add-new-package for more info on creating a new package.\nAlso make sure to use Conventional Commits for proper changelogging.\nDefault README\nThis project was generated with Angular CLI version 7.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:1337/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CalendarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IconModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediumEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PopModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SdkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SymbolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TinymceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_imports\n\n\n\ncluster_AceModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_exports\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MediumEditorModule\n\n\n\ncluster_MediumEditorModule_declarations\n\n\n\ncluster_MediumEditorModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumEditorModule_exports\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_exports\n\n\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_declarations\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_exports\n\n\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_exports\n\n\n\ncluster_UtilityModule_providers\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n AceComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n AceComponent), multi: true,\n}->AceComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}->AceComponent\n\n\n\n\n\nUiModule\n\nUiModule\n\nAceModule -->\n\nUiModule->AceModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\ncookieFactory()\n\ncookieFactory()\n\nAuthModule -->\n\ncookieFactory()->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nCalendarModule -->\n\nDaterangeComponent->CalendarModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nCalendarModule -->\n\nDatetimePipe->CalendarModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nCalendarModule -->\n\nHeatmapComponent->CalendarModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nCalendarModule -->\n\nMonthComponent->CalendarModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nCalendarModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nCalendarModule->DaterangeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nCalendarModule->DatetimePipe \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nCalendarModule->HeatmapComponent \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nCalendarModule->MonthComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarModule->FormModule\n\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryActionbarComponent\n\nEntryActionbarComponent\n\nDataModule -->\n\nEntryActionbarComponent->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryActionbarComponent \n\nEntryActionbarComponent \n\nEntryActionbarComponent  -->\n\nDataModule->EntryActionbarComponent \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nTagSelectComponent \n\nTagSelectComponent \n\nTagSelectComponent  -->\n\nFilesModule->TagSelectComponent \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nApiActionbarComponent \n\nApiActionbarComponent \n\nApiActionbarComponent  -->\n\nResourceModule->ApiActionbarComponent \n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nEntryService\n\nEntryService\n\nDataModule -->\n\nEntryService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\nAssetDirective\n\nAssetDirective\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nTagSelectComponent\n\nTagSelectComponent\n\nFilesModule -->\n\nTagSelectComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\nUtilityModule  -->\n\nFormModule->UtilityModule \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nSymbolPipe \n\nSymbolPipe \n\nSymbolPipe  -->\n\nSymbolModule->SymbolPipe \n\n\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\nFormModule -->\n\nUtilityModule->FormModule\n\n\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nGroupPipe\n\nGroupPipe\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\nUiModule -->\n\nListModule->UiModule\n\n\n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumEditorModule\n\nMediumEditorModule\n\nMediumEditorModule -->\n\nMediumEditorComponent->MediumEditorModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumEditorModule->MediumEditorComponent \n\n\n\n MediumEditorComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n MediumEditorComponent), multi: true,\n}->MediumEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}->MediumEditorComponent\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\nApiActionbarComponent\n\nApiActionbarComponent\n\nResourceModule -->\n\nApiActionbarComponent->ResourceModule\n\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\nSdkService\n\nSdkService\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n SelectComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n SelectComponent), multi: true,\n}->SelectComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}->SelectComponent\n\n\n\n\n\nSymbolPipe\n\nSymbolPipe\n\nSymbolModule -->\n\nSymbolPipe->SymbolModule\n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nKeycommandsService\n\nKeycommandsService\n\nUtilityModule -->\n\nKeycommandsService->UtilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        21 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    68 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (packages/.../actionbar.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ui/src/lib/actionbar/actionbar.component.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/angular-7-upgrade-guide.html":{"url":"additional-documentation/angular-7-upgrade-guide.html","title":"additional-page - Angular 7 Upgrade Guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAngular7 update: BREAKING changes\nThe following breaking changes need to be considered when updating the components with angular 7. This update guide is just for @ec.components and angular 7. A whole angular 7 update guide can be found here.\nAngular 7 is used since the following versions:\n\n@ec.components/ace@0.6.0\n@ec.components/calendar@0.2.0\n@ec.components/core@0.19.0\n@ec.components/data@0.42.0\n@ec.components/location@0.18.0\n@ec.components/medium-editor@0.4.0\n@ec.components/style@0.21.0\n@ec.components/tinymce@0.5.0\n@ec.components/ui@0.36.0\n\nIt is recommended you use the most recent versions. Also add @ec.components/calendar to your package.json if you use datetime pipe or calendars / date pickers.\n1. All imports now go from the packages roots\nold:\nts\nimport { EntryForm } from '@ec.components/data/src/entry-form/entry-form.component'\nnew:\nts\nimport { EntryForm } from '@ec.components/data'\n=> make sure you never import anything from src, since this folder no longer exists in the package\nPRO TIP\nUse VSCode \"Search: Replace in Files\" with the following Regex:\n\nSearch: '@ec.components/(\\w+).*'\nReplace: '@ec.components/$1'\n\n2. SCSS import changes\nold:\nscss\n@import '~@ec.components/style/components';\nnew:\nscss\n@import '~@ec.components/style/scss/components';\n3. MediumModule has been renamed to MediumEditorModule\n4. Build Errors\nIf you are getting this:\nsh\nERROR in ./node_modules/eventsource/lib/eventsource.js\nModule not found: Error: Can't resolve 'http' in '/your-project/node_modules/eventsource/lib'\nERROR in ./node_modules/eventsource/lib/eventsource.js\nModule not found: Error: Can't resolve 'https' in 'your-project/node_modules/eventsource/lib'\nERROR in ./node_modules/jsonpath-plus/lib/jsonpath.js\nModule not found: Error: Can't resolve 'vm' in 'your-project/node_modules/jsonpath-plus/lib'\nTo fix it, you need a custom webpack config. Eject is not available any more so we need to use angular-builders:\nsh\nnpm i @angular-builders/custom-webpack @angular-builders/dev-server @angular-devkit/build-angular --save-dev\nThe following versions were used in this guide:\nsh\n\"@angular-builders/custom-webpack\": \"^7.2.0\",\n\"@angular-builders/dev-server\": \"^7.2.1\",\n\"@angular-devkit/build-angular\": \"^0.12.3\",\nIn angular.json make following changes -\njson\n\"architect\": {\n    \"build\": {\n        \"builder\": \"@angular-builders/custom-webpack:browser\",\n        \"options\": {\n        \"customWebpackConfig\": {\"path\": \"./custom-webpack.config.js\"},\nNotice change in builder and new option customWebpackConfig. Also change\njson\n\"serve\": {\n    \"builder\": \"@angular-builders/dev-server:generic\",\nNow create a custom-webpack.config.js file in the root directory, containing:\njs\nconst path = require(\"path\");\nmodule.exports = {\n    node: {\n        crypto: 'empty',\n        fs: 'empty',\n        http: 'empty',\n        https: 'empty',\n    }\n};\nCheck this for more info.\nOther Problems you might run into\n\nCan't bind to 'ngModel' since it isn't a known property of 'input'\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial.html":{"url":"additional-documentation/project-setup-tutorial.html","title":"additional-page - Project Setup Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a new project with ec.components\nThis tutorial will show you how to set up a new project with the ec.components.\n1. Prequisites\nInstall angular-cli globally:\nsh\nnpm install -g @angular/cli\nThe following versions have been used for this tutorial:\n\n@angular/cli: 1.3.2\n@angular/animations: 4.3.6\n@angular/common: 4.3.6\n@angular/compiler: 4.3.6\n@angular/core: 4.3.6\n@angular/forms: 4.3.6\n@angular/http: 4.3.6\n@angular/platform-browser: 4.3.6\n@angular/platform-browser-dynamic: 4.3.6\n@angular/router: 4.3.6\n@angular/cli: 1.3.2\n@angular/compiler-cli: 4.3.6\n@angular/language-service: 4.3.6\ntypescript: 2.4.2\n\nYou can lookup your versions with ng --version\n2. Generate new Project\nsh\nng new ec-project --prefix ec-admin --routing true --style scss\nMake sure you replace ec-project with your project name and the prefix ec-admin with a project related shorthand symbol.\nMore info on the options for new.\n3. Install @ec.components/data\nsh\ncd ec-project\nyarn add @ec.components/data --save\nyarn add @ec.components/style --save\nThis will install the data package which depends on ui and core packages.\nThe style package contains styles for ui and data.\n4. Import Styles\nInto your styles.scss, import the following styles:\n@import \"~xlcss/sass/xlcss.scss\";\n@import \"~x.ui/src/_config\";\n@import \"~x.ui/src/x.ui-sandbox.scss\";\n@import \"~@ec.components/style/components.scss\";\n5. Setup environment\nIn src/environments, you can find the different environment files.\nBy Default, there is a dev and a prod environment. For this tutorial, those two should be enough. We will use the dev environment for dev and staging and the prod environment for live. You could also add more environments, for more information, look here. \nsrc/environments/environment.ts:\njs\nexport const environment = {\n  production: false,\n  environment: 'stage', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-dev-client' // your clientID\n};\nsrc/environments/environment.prod.ts:\njs\nexport const environment = {\n  production: true,\n  environment: 'live', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-live-client' // your clientID\n};\nThe .prod environment will be used when running ng build for production.\nThe client should use token method body. The callback URL does not matter.\n6. Add DataModule\nGo to src/app/app.module and add DataModule to your imports:\n```js\nimport { DataModule } from '@ec.components/data';\nimport { environment } from '../environments/environment';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataModule.forEnvironment(environment),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\nHere we are importing the DataModule along with the environment to then import it into our AppModule with the forEnvironment method.\n7. Add --ssl flag\nin your package.json, edit your start script to look like this:\n\"start\": \"ng serve --ssl\",\nWithout the --ssl flag, the authorization won't work, because it enforces https.\n8. Add a component\ne.g. add to src/app/app.component.html:\nhtml\n\nThis assumes that the model muffin exists inside the datamanager provided through your environment.\n9. Run the fun\nThats it! Now you can run the app using:\nsh\nnpm run start\nnow navigate to https://localhost:4200\n10. Add Notifications\nTo your app.component, you can add a global notification component, outside of your routing:\nhtml\n\nThis will display all messages sent by the components or your own modules.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/routes.html":{"url":"additional-documentation/project-setup-tutorial/routes.html","title":"additional-page - Routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Routes\nThis short tutorial demonstrates how to quickly generate routes with components.\nIn the following tutorials, refer to this when you are called to create a new route.\n1. Create Component\nGenerate a new component\nsh\nng generate component muffins\nAdd template to src/app/muffins/muffins.component.html\nhtml\n\n2. Add a Route\nsrc/app/app-routing.module.ts:\n```js\nimport { MuffinsComponent } from './muffins/muffins.component';\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  },\n  {\n    path: 'muffins',\n    component: MuffinsComponent\n  }\n];\n```\n3. Run the Route\nNow you can access the muffin crud at https://localhost:4200/muffins\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/authorization.html":{"url":"additional-documentation/project-setup-tutorial/authorization.html","title":"additional-page - Authorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n```js\n  constructor(public router: Router) {\n  }\n  redirect() {\n    this.router.navigate(['profile'])\n  }\n```\n3. Add Login Component to template\nUse this in your login.component.html template:\nhtml\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/localization.html":{"url":"additional-documentation/project-setup-tutorial/localization.html","title":"additional-page - Localization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocalization\nYou can setup localization via the SymbolService:\n```typescript\nimport en from './en';\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}\n```\nIt is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\ntypescript\nmoment.locale(this.symbols.resolve('moment.locale'));\nUsing symbols in templates\nTo translate symbols in a template, use the symbol pipe:\nhtml\n{{'symbol.language' | symbol}} \nOverwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{"url":"additional-documentation/project-setup-tutorial/custom-fields-config.html","title":"additional-page - Custom Fields Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Field Configuration\nRelated Doc:\n- All Possible field config properties\n- Default Type Config\n- ListConfig (also see ItemConfig parent)\n- Item Doc\nExample\nYou can configure a models behaviour over the ModelConfigService.\nIt is recommended to configure a model in a parent component of all possible ec-crud lists or nested forms.\nSee the related doc links for default values / possible config values.\n```js\nexport class MuffinsComponent {\n  constructor(private modelConfig: ModelConfigService) {\n    moment.locale('de'); //set moment locale\nthis.modelConfig.set('muffin', {\n  fields: {\n    pictures: {\n      label: 'Bilder' //this label is shown above the form field and in the table header\n    },\n    name: {\n      label: 'Muffin Name',\n      group: (name) => {\n        return name[0].toUpperCase() //the return value is used to show group headers in a sorted list\n      },\n      required: true //when required, a new entry form cannot be saved without a value set for the field\n    },\n    _created: { //you can also access the system properties\n      label: 'Erstellt',\n      form: false, //this will hide the field inside the form\n      group: (value) => moment(value).format('YYYY')\n    },\n    amazement_factor: {\n      label: 'Amazement Faktor',\n      display: (value) => { //this will transform the value for output e.g. in a list cell\n        return (value * 10) + '%'\n      },\n      group: (value) => {\n        return value > 5 ? 'Größer als 50%' : 'Kleiner als 50%';\n      },\n      validate: (value) => { //this function will run when validating the value inside a form\n        if (typeof value !== 'number') {\n          return; //value is valid\n        }\n        if (value  10) {\n          return 'Darf maximal 10 sein';\n        }\n      }\n    },\n  }\n});}\n```\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-list.html","title":"additional-page - Custom Entry List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nec-entry-list\nRelated Doc:\n- All Possible field config properties\n- Default Type Config\n- ListConfig (also see ItemConfig parent)\n- Item Doc\nEntry Lists load multiple entries from a model and display them in a paginated list. It supports load error notifications, loader, filtering, sorting and automatic reloading + many customizations.\nDefault Usage\nhtml\n\nThe above snippet will either consume the config for muffin in ModelConfigService, or if no config is found, generate one from the model schema.\nPassing a Config\nThe following snippet will assign the given config to the model/schema config:\nhtml\n\ncolumnClicked output\nYou can react to column clicks via the columnClicked output:\nhtml\n\nts\nselect(item) {\n    console.log('entry',item.getBody(),item.id());\n}\nSeperated header/items/pagination markup\nIf you need a seperation of the list-header -items and -pagination, you can use the sub components of list.component:\n```html\n\n\n\n\n\n```\nCreate Custom Cells via transform methods\nIf you want to custom cell values that do not require a custom markup, you can use transforms\ndisplay\nThe display transform method is used to display the value (say what?).\nIt is called from inside ec-output, which is used in list-cells and form readOnly fields.\nYou can change the display behaviour like this:\nts\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            display: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});\ngroup\nYou can use grouping to get a clearer outline over sorted data:\nts\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            group: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});\nThe syntax is the same as for display but the result is used as a group label when the property is sorted.\nresolve\nThe value that is passed to the transform methods like display, group etc. can be changed beforehand with the resolve method. NOTE: the params are different than for the transform methods:\nts\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            resolve: (body, item) => {\n                if(body.amazement_factor === -1) {\n                    return 0;\n                }\n                return body.amazement_factor;\n            }\n        }\n    }\n});\nthis will also affect your forms!\npseudo properties via resolve\nYou can also define pseudo properties, meaning properties that do not exist on the original object:\nts\nthis.modelConfig.set('muffin', {\n    fields: {\n        ranking: {\n            resolve: (body, item) => body.amazement_factor*body.flavour/body.price\n        }\n    }\n});\nThis comes in handy when you want to display a often combined value out of multiple values.\nNOTE: pseudo properties should not be passed to the backend...\nCustom Cells via custom output component\nIf you want to custom cell values that do require a custom markup, you can use a custom output component:\nts\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            output: StrongComponent\n        }\n    }\n});\nIn your strong.component.ts, you can inherit OutputComponent, giving you access to the field and item of your cell:\nts\n@Component({\n  selector: 'app-strong',\n  template: `{{item.resolve(field.property)}}`\n})\nexport class StrongComponent extends OutputComponent {}\nNOTE: customizing the output component will also change the look of forms using that config, if the property is set readOnly.\nFiltering Lists\nBy default, each column that hosts a filterable property contains a search icon in its header. If the property is filterable is defined either by the field config (filterable) or falls back to the backend types that support filters. The search icon will open a pop with a field type specific filter input inside.\nCustom Filtering\nIf you do not want that (currently pretty clunky) pop filters, you can set filterable to false and manually call list.load with the desired filter:\nhtml\n\n    show amazing muffins\n\n\nClicking the link will now show all muffins with exactly amazement_factor 10.\nCustom filter operators\nBy default, the entry-list will filter the property by its default filterOperator (see type config). If you want to change the default operator you can set it in the config:\nts\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            filterOperator: 'from'\n        }\n    }\n});\nhtml\n\n    show amazing muffins\n\n\nIf you now click the link, all muffins with amazement_factor>=5 will be loaded.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-forms.html","title":"additional-page - Custom Entry Forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEntry Forms\nRelated Doc:\n- All Possible field config properties\n- Default Type Config\n- ListConfig (also see ItemConfig parent)\n- Item Doc\nEntry forms can edit and create entries. They support notifications, loader, validation error handling and dynamic config generation out of the box.\nNOTE: it is expected you have placed a ec-notifications tag somewhere in your root component.\nDefault Behaviour\nCreate\nhtml\n\nsubmitting the form will create a new entry and then switch to edit mode.\nEdit\nhtml\n\nDynamic Edit/Create from template\nYou can also access the form from the template and call edit or create:\n```html\n\n\n    \n      {{muffin.name}}\n    \n  \nCreate new Muffin\n```\n\nConfiguration\nIf nothing else is configured, the form will parse the schema of muffin and generate a generic field config.\nIf you configured the model via ModelConfigService (see Custom Fields), the form will use that config.\nAlternatively, you can also pass a config directly:\nhtml\n\nThe given config will be Object.assigned to the possible preexisting modelConfig.\nCustom Markup with ec-input/ec-output\nMost times, you'll want more freedom over your forms markup etc. This is where ec-input and ec-output come into play:\nhtml\n  \n    \n    Title\n        \n    \n    \n    Amazement Factor\n    \n    Submit\n  \nAs soon as the ec-entry-form contains elements (or you pass empty=true, as meantioned below), the contents will be rendered instead of the default form.\nFeatures you have to add manually (if needed)\n\nsubmit button\nfield.readOnly handling (show ec-output instead of ec-input)\nlocal ec-loader\n\nNOTE: dont wrap labels around complex input components, because they fire ghost clicks!\nCustom input/output markup\nOf course you can remove another layer of abstraction to further customize the form:\n```html\n  \n    \n    Title\n    \n    \n    \n    Amazement Factor\n    {{form.display('amazement_factor')}}\nSubmit  \n```\n\nFeatures you have to add manually:\n\nhandling of input errors (ec-input-errors)\nmaking sure your markup handles the field type correctly\nmaking sure your markup handles the field value correctly\n\nIt is generally recommended to use ec-input over hard coded forms.\nThe empty flag\nYou can also place the ec-input elements somewhere else and just tell the ec-entry-form that it shouldn't render the default form with the empty flag:\nhtml\n\n\nNOTE: Always make sure the property accessed by ec-input is also present in your config (or you dont use a config at all). Otherwise, the input wont know what to render.\nCreating custom inputs\n1. Create Custom Input Component\nsh\nng g c custom-input\nThis component will serve as a container for all possible custom input fields.\n2. Extend InputComponent (custom-input.component.ts)\nTo make the current field information available to the template, you need to extend InputComponent from @ec.components/ui:\n```js\nimport { Component } from '@angular/core';\nimport { InputComponent } from '@ec.components/ui';\n@Component({\n  selector: 'clubapp-custom-input',\n  templateUrl: './custom-input.component.html',\n  styleUrls: ['./custom-input.component.scss']\n})\nexport class CustomInputComponent extends InputComponent {\n}\n```\nCMD+Click on InputComponent to see which properties you can now use!\n3. Add Markup (custom-input.component.html)\nNow we can decide which custom input should be used, based on e.g. the fields view value:\n```html\n\n  \n  \n    \n  \n  \n     -->\n  \n\n```\n\nOf course you could also switch based on property name or type, depending on your application.\nThe id property of field is referenced in the label of the form. By adding it to the input makes sure your label click enters the input.\n4. Add CustomInputComponent to entryComponents:\nBecause the custom component will be loaded dynamically, your module needs to declare it as entryComponent:\njs\n@NgModule({\n  entryComponents: [\n    CustomInputComponent\n  ]\n  /** more stuff **/\n})\nexport class AppModule {\n}\n5. Add CustomInputComponent to field config:\nNow you can add the Component as input to your field config:\njs\nthis.modelConfig.set('muffin', {\n      fields: {\n        url: {\n          label: 'URL',\n          view: 'speakingurl',\n          input: CustomInputComponent\n        },\n        openingHours: {\n          label: 'Öffnungszeiten',\n          view: 'openingHours',\n          input: CustomInputComponent\n        }\n})\nBy changing the view option, we can now decide which case will be met!\nCustom Form Controls\nNow what if you want to use a custom form control that does not rely on primitve inputs like number or text?\nIn the above custom-input.component template, we use  with a formControl input.\nTo have access to the form control's value, you need to provide a ControlValueAccessor:\n```js\nimport { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputComponent } from '@ec.components/ui';\n@Component({\n  selector: 'ec-opening-hours',\n  templateUrl: './opening-hours.component.html',\n  styleUrls: ['./opening-hours.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpeningHoursComponent),\n      multi: true\n    }\n  ]\n})\n```\nNow you can implement your own logic and call propagateChange when you change the value from your component, and react to change via the writeValue method!\nYou now could also use your component with ngModel or formControl in another context!\nMore information on this pattern: https://blog.thoughtram.io/angular/2016/07/27/custom-form-controls-in-angular-2.html\nCustom Fields without wrapper\nYou can also use custom components as input directly without needing to wrap them in \"CustomFieldsComponent\".\nJust make sure you implement ControlValueAccessor like above. When changes occur from the template, call propagateChange. You can react to outside model changes in writeValue.\n```typescript\nimport { Component, OnInit, Input } from '@angular/core';\nimport { InputComponent } from '../../../packages/ui';\nimport { ControlValueAccessor } from '@angular/forms';\n@Component({\n    selector: 'ec-counter',\n    templateUrl: './counter.component.html'\n})\nexport class CounterComponent extends InputComponent implements ControlValueAccessor {\nvalue = 0;\n\nincrement() {\n    this.propagateChange(++this.value);\n}\n\ndecrement() {\n    this.propagateChange(--this.value);\n}\n\nwriteValue(value: any) {\n    this.value = value;\n    console.log('received value', value);\n}\n\npropagateChange = (_: any) => {\n};\n\nregisterOnChange(fn) {\n    this.propagateChange = fn;\n}\n\nregisterOnTouched() {\n}}\n```\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme.html":{"url":"additional-documentation/readme.html","title":"additional-page - README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nec.components\nThis project contains all sorts of angular components for creating data driven applications.\nIt is mainly used for entrecode admin applications in combination with the entrecode using ec.sdk.\nPackages\nMain Packages\n\n@ec.components/core: contains core typescript classes (no angular/datamanager)\n@ec.components/ui: contains core ui components (not datamanager specific)\n@ec.components/data: contains ui components for datamanager.\n@ec.components/style: contains styles for all components, built on x.ui.\n\nThe dependencies stack up from core to data (data > ui > core). You could also omit data, using just the ui components.\nOptional Packages\n\n@ec.components/calendar: contains calendar components, uses moment.\n@ec.components/location: wraps angular-google-maps.\n@ec.components/tinymce: wraps tinymce wysiwyg editor.\n@ec.components/medium-editor: wraps medium wysiwyg editor.\n@ec.components/ace: wraps ace code editor.\n\nDocumentation\nThe main documentation is located at entrecode.github.io/ec.components. You can find a getting started guide there.\nDemo\nA Demo is available at components.entrecode.de.\nDeveloping with Lerna + Yarn Workspaces\nThe repository is a monorepo, managed by lerna and yarn workspaces.\nAll folders inside dist + packages/style will be used as symlinks in node_modules/@ec.components/*.\nYou can update the symlinks by running yarn (e.g. after adding a new package).\nDev Setup\nAfter a fresh clone of the repo, run this:\nsh\nyarn install\nnpm run dev-setup\nnpm run start\nThe dev-setup script builds all packages and symlinks them to the node_modules.\nReleasing\nRun release task and select versions:\nsh\nnpm run release\nTo publish a new package for the first time, make sure you run npm publish --access=public before running lerna. See add-new-package for more info on creating a new package.\nAlso make sure to use Conventional Commits for proper changelogging.\nDefault README\nThis project was generated with Angular CLI version 7.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:1337/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/data-readme.html":{"url":"additional-documentation/readme/data-readme.html","title":"additional-page - data README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/data\nWARNING: This version is currently experimental as it's part of the x.ui 10 update.\nThis package contains all ec.datamanager related components.\nBeing wether framework agnostic nor backend agnostic, it is lowest fruit on the abstraction tree.\nIt extends the classes of the core module to create datamanager specific classes that are then used in the components.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nsh\nnpm install @ec.components/data --save\n2. Add Module\n```js\nimport { DataModule } from '@ec.components/data';\n@NgModule({\n  imports: [\n    DataModule\n  ]\n})\nexport class AppModule {\n}\n```\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/ui-readme.html":{"url":"additional-documentation/readme/ui-readme.html","title":"additional-page - ui README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ui\nWARNING: This version is currently experimental as it's part of the x.ui 10 update.\nThis package contains all angular components that have no ec.datamanager references.\nIt utilizes the classes of the @ec.components/core package.\nBeing the middle layer in the abstraction tree, it is still backend agnostic but not framework agnostic.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nsh\nnpm install @ec.components/ui --save\n2. Add Module\n```js\nimport { UiModule } from '@ec.components/ui';\n@NgModule({\n  imports: [\n    UiModule\n  ]\n})\nexport class AppModule {\n}\n```\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/core-readme.html":{"url":"additional-documentation/readme/core-readme.html","title":"additional-page - core README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/core\nWARNING: This version is currently experimental as it's part of the x.ui 10 update.\nThis package contains all the core typescript classes.\nIt is the highest abstraction layer and is therefor framework and backend agnostic.\nThis means it contains no angular or ec.datamanager references.\nOverview\n\nCHANGELOG\nAvailable Classes\n\nInstallation\nsh\nnpm i @ec.components/core\nts\nimport { Item } from '@ec.components/core';\nconst primitive = new Item('a');\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/style-readme.html":{"url":"additional-documentation/readme/style-readme.html","title":"additional-page - style README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/style\nWARNING: This version is currently experimental as it's part of the x.ui 10 update.\nThis package contains all scss styles for the ec.components packages.\nOverview\n\nCHANGELOG\nx.ui\n\nInstallation\nMethod A: With prebuilt CSS styles\nIf you are not using scss or you just want to add styles without hassle, just add this css to your index.html:\n```html\n\n```\n\nMethod B: Custom Styles with SCSS\nIf you want to use your own styles, you can use scss to import and build the styles with x.ui:\n1. Install package\nsh\nnpm install @ec.components/style --save\nThis will also install x.ui.\n3. Add styles\nDetails on how to setup your config can be found in the x.ui README.\nscss\n@import 'config';\n@import '~x.ui/src/x.ui.scss';\n@import '~@ec.components/style/scss/components';\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/calendar-readme.html":{"url":"additional-documentation/readme/calendar-readme.html","title":"additional-page - calendar README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/calendar\nThis package provides calendar and date components as part of ec.components.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nsh\nnpm install @ec.components/calendar --save\n2. Add Module\n```js\nimport { CalendarModule } from '@ec.components/calendar';\n@NgModule({\n  imports: [\n    CalendarModule\n  ]\n})\nexport class AppModule {\n}\n```\n3. Use it\nhtml\n \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/location-readme.html":{"url":"additional-documentation/readme/location-readme.html","title":"additional-page - location README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/location\nThis package wraps the angular-google-maps to be suitable for forms.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nsh\nnpm install @ec.components/location --save\n2. Add Module\n```js\nimport { LocationModule } from '@ec.components/location';\n@NgModule({\n  imports: [\n    LocationModule\n  ]\n})\nexport class AppModule {\n}\n```\n3. Use it as default input for location fields\nts\n  constructor(private typeConfig: TypeConfigService) {\n    this.typeConfig.set('location', {\n      input: LocationPickerComponent\n    });\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/ace-readme.html":{"url":"additional-documentation/readme/ace-readme.html","title":"additional-page - ace README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ace\nThis package wraps the ace editor as an Angular Component.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nsh\nnpm install @ec.components/ace --save\n2. Add Module\n```js\nimport { AceModule } from '@ec.components/ace';\n@NgModule({\n  imports: [\n    AceModule\n  ]\n})\nexport class AppModule {\n}\n```\n3. Add CDN\nEither add the cdn src to your index.html:\n```html\n  \n````\nOr import from ace-builds (in app.module):\njs\nimport 'ace-builds/src-noconflict/ace.js';\nWhen importing, you also need to import all extensions/modes/themes that you want to use manually.\n4. Use it\nhtml\n \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/medium-editor-readme.html":{"url":"additional-documentation/readme/medium-editor-readme.html","title":"additional-page - medium-editor README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/medium-editor\nThis package wraps the medium-editor as an Angular Directive.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nsh\nnpm install @ec.components/medium-editor --save\n2. Add Module\n```js\nimport { MediumModule } from '@ec.components/medium-editor';\n@NgModule({\n  imports: [\n    MediumModule\n  ]\n})\nexport class AppModule {\n}\n```\n3. Use it\nhtml\n \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/tinymce-readme.html":{"url":"additional-documentation/readme/tinymce-readme.html","title":"additional-page - tinymce README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/tinymce\nThis package wraps the tinymce editor as an Angular Component.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nsh\nnpm install @ec.components/tinymce --save\n2. Add Module\n```js\nimport { TinymceModule } from '@ec.components/tinymce';\n@NgModule({\n  imports: [\n    TinymceModule\n  ]\n})\nexport class AppModule {\n}\n```\n3. Add styles files to angular.json\njson\n\"styles\": [\n  \"node_modules/tinymce/skins/lightgray/skin.min.css\",\n  \"node_modules/tinymce/skins/lightgray/content.min.css\"\n],\n4. Use it\nhtml\n \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog.html":{"url":"additional-documentation/changelog.html","title":"additional-page - CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nEach package has its own changelog:\n\n@ec.components/data\n@ec.components/ui\n@ec.components/core\n@ec.components/calendar\n@ec.components/style\n@ec.components/ace\n@ec.components/location\n@ec.components/medium-editor\n@ec.components/tinymce\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/data-changelog.html":{"url":"additional-documentation/changelog/data-changelog.html","title":"additional-page - data CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.50.10 (2019-08-01)\nBug Fixes\n\nEDITOR-392 (9e2d531)\n\n0.50.9 (2019-08-01)\nBug Fixes\n\nEDITOR-392 (547bc03)\n\n0.50.8 (2019-07-26)\nBug Fixes\n\nadded additional inputViews to type config (fed2156)\nCOM-265 (107d1de)\nCOM-275 (df82333)\nCom-303 (219a51a)\nentry actionbar load more (19a5130)\nerror when using incompatible entry view (e40056b)\nremove log (fecb195)\n\n0.50.7 (2019-07-26)\nBug Fixes\n\nCOM-302 (5d1aae3)\n\n0.50.6 (2019-07-26)\nBug Fixes\n\nCOM-302 (f3fa9a0)\n\n0.50.5 (2019-07-22)\nBug Fixes\n\nhide bool label, fix inputView config (bdbe0d1)\n\n0.50.4 (2019-07-19)\nNote: Version bump only for package @ec.components/data\n0.50.3 (2019-07-05)\nBug Fixes\n\nadd selected count to entry-list-pop header (a52a655)\n\n0.50.2 (2019-07-05)\nNote: Version bump only for package @ec.components/data\n0.50.1 (2019-07-05)\nBug Fixes\n\nbuttons with only icons are square now (51bf664)\nentry-list-pop header now visible again (f9b12c3)\nudated to x.ui.10.0.0-beta.5 (341baba)\n\n0.50.0 (2019-06-28)\nBug Fixes\n\nasset list proportions (66d0b56)\n\nFeatures\n\nx.ui 10 update (1c8180f)\n\n0.49.3 (2019-06-21)\nBug Fixes\n\nEDITOR-370 (d28cbb7)\nEDITOR-371 (d05ebfe)\n\n0.49.2 (2019-06-17)\nBug Fixes\n\nEDITOR-371 always check permissions (a6a63b7)\n\n0.49.1 (2019-05-27)\nNote: Version bump only for package @ec.components/data\n0.49.0 (2019-05-24)\nFeatures\n\nentry-actionbar (786d09b)\n\n0.48.6 (2019-05-24)\nNote: Version bump only for package @ec.components/data\n0.48.5 (2019-05-24)\nNote: Version bump only for package @ec.components/data\n0.48.4 (2019-05-24)\nBug Fixes\n\ndisabled state for select inputs (ac83326)\nmissing readonly states (52dc850)\n\n0.48.3 (2019-05-24)\nBug Fixes\n\nEDITOR-364 (62162b7)\n\n0.48.2 (2019-05-03)\nBug Fixes\n\njson + location now really reverted (3fe4aaf)\n\n0.48.1 (2019-05-03)\nBug Fixes\n\njson + location (01d1130)\n\n0.48.0 (2019-05-03)\nBug Fixes\n\ncan now edit json + location (388924d)\n\nFeatures\n\nbeforeSave for entry fields (846039a)\ncan now set different purpose components (2d2e536)\n\n0.47.9 (2019-05-03)\nBug Fixes\n\nCOM-259 boolean readonly (cb43986)\nEDITOR-348 (336ba95)\ntag select EDITOR-343 (7dcaf42)\n\n0.47.8 (2019-04-26)\nBug Fixes\n\ncreator filter + resource-select focus (b461540)\n\n0.47.7 (2019-04-26)\nBug Fixes\n\nEDITOR-293 (b900b38)\n\n0.47.6 (2019-04-26)\nBug Fixes\n\ngetAccount would crash without _api (a2b4ace)\n\n0.47.5 (2019-04-26)\nNote: Version bump only for package @ec.components/data\n0.47.4 (2019-04-12)\nBug Fixes\n\nEDITOR-293 (bd766bf)\nEDITOR-330 => ids are now filterable (ee3518f)\npublic user auth flow after sdk update (efa26a0)\n\n0.47.3 (2019-04-08)\nNote: Version bump only for package @ec.components/data\n0.47.2 (2019-04-05)\nBug Fixes\n\nremove log (45b12e4)\n\n0.47.1 (2019-04-05)\nBug Fixes\n\nadd creator + fixed extending inputs (0dd22f6)\n\n0.47.0 (2019-04-05)\nFeatures\n\nnow showing copyable system fields (5af4631)\n\n0.46.8 (2019-04-05)\nNote: Version bump only for package @ec.components/data\n0.46.7 (2019-04-05)\nNote: Version bump only for package @ec.components/data\n0.46.6 (2019-04-01)\nNote: Version bump only for package @ec.components/data\n0.46.5 (2019-03-29)\nNote: Version bump only for package @ec.components/data\n0.46.4 (2019-03-29)\nNote: Version bump only for package @ec.components/data\n0.46.3 (2019-03-29)\nBug Fixes\n\nshowHeader back to list template (ea4ba17)\n\n0.46.2 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nrevert test task running (cbe9627)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.46.2 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.46.1 (2019-03-29)\nBug Fixes\n\ncircular dependency in resource-config (d8ad11d)\n\n0.46.0 (2019-03-29)\nBug Fixes\n\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\nno default filter for tag-select (dd83e20)\nremove model config cache after sdk fix (2e97a10)\nresource-pop hasMethod could throw error (7f99383)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\nadded dropdownFields option to CrudConfig (0256008)\n\n0.45.6 (2019-03-22)\nBug Fixes\n\nmodel config is now only requested once (a542c43)\nnow using sdk 0.18.7 (ac3bb86)\n\n0.45.5 (2019-03-22)\nBug Fixes\n\nentry-list-select undefined array (bc9bb53)\npass readOnly + config to asset-select (b7d33e2)\n\n0.45.4 (2019-03-14)\nBug Fixes\n\nEDITOR-277 + started COM-237 (b5a578d)\n\n0.45.3 (2019-03-08)\nNote: Version bump only for package @ec.components/data\n0.45.2 (2019-03-01)\nBug Fixes\n\nadd resource-list to data public_api (2b0b354)\n\n0.45.1 (2019-02-25)\nNote: Version bump only for package @ec.components/data\n0.45.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.44.2 (2019-02-15)\nBug Fixes\n\nresource-select focus searchbar + fire editItem if puttable (b2cf446)\n\n0.44.1 (2019-02-15)\nBug Fixes\n\ntypo in resource-select (4650da9)\n\n0.44.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.43.10 (2019-02-15)\nNote: Version bump only for package @ec.components/data\n0.43.9 (2019-02-15)\nBug Fixes\n\nresource-select config merging + ec-output-tags are now oneline (c483625)\n\n0.43.8 (2019-02-08)\nBug Fixes\n\nfixed asset-list-pop search + set inital size to 24 (651f1de)\n\n0.43.7 (2019-02-04)\nBug Fixes\n\nresource-select stop propagation on item click (68f12f5)\n\n0.43.6 (2019-02-04)\nBug Fixes\n\nresource-select click item (42301aa)\n\n0.43.5 (2019-02-04)\nBug Fixes\n\ncan now set itemClick in field config + fix resouce-select config (9e23457)\n\n0.43.4 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.43.3 (2019-02-01)\nBug Fixes\n\nresource-select#togglePop now really fixed (8abc48b)\n\n0.43.2 (2019-02-01)\nNote: Version bump only for package @ec.components/data\n0.43.1 (2019-02-01)\nBug Fixes\n\nresource-select#togglePop (79c1a6d)\n\n0.43.0 (2019-02-01)\nFeatures\n\nResourceConfig#set (ba52443)\n\n0.42.16 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.15 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.14 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.13 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.12 (2019-01-28)\nBug Fixes\n\nadd missing exports (d7fa72b)\n\n0.42.11 (2019-01-25)\nBug Fixes\n\nlanguage imports (6e961b8)\n\n0.42.10 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.9 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.8 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.7 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.6 (2019-01-21)\nNote: Version bump only for package @ec.components/data\n0.42.5 (2019-01-21)\nNote: Version bump only for package @ec.components/data\n0.42.4 (2019-01-21)\nBug Fixes\n\nauth.service clientID check + removed broadcast load on env switch (def9084)\ncalling entry-pop create twice would edit the first entry (d5dc292)\nclear searchbar when changing asset group (1cfc328)\nclientID if statement (43c7da5)\nconfig generation for empty forms was bugged since last commit (789e7ca)\ncould not define custom components for entry field types (0b433be)\ncould not pass config to entry-list seperately (4a14246)\ncould not set custom asset list config (06b615c)\ndndDraggable stringify error (a992381)\nEDITOR-187 (de51159)\nendless ecEntries could concat same page multiple times (fed2c52)\nentry-list.component (431e3fd)\nfiles index (bcbefd1)\nfilterOperators of entry and asset + default filterPopClass of nested types is now modal (9e671b9)\nfocus asset list pop searchbar when changing group (24868b9)\nform without config would bug (5892365)\ngroup resource-config (020e689)\nlinter bug (b4d03eb)\nModelConfigService now using CrudConfig instead of ItemConfig (eb506da)\nnew assets on entry create + removed hacks from input.component (04fffbd)\nparseType would not recognize relations with \"-\" (a08a9d6)\nquery could be overwritten while typing + fixed asset select (1c382d1)\nrelative path in data.module (fcfdf32)\nremoveItem still activated entry-select + entry-select demo (364482b)\nresource-list.component (2826ac4)\nselect assetGroup if legacyAsset and url upload (7580583)\nselection was broken for ec-entry-select list (121566c)\nstop select pop event bubbling + selectMode in select component (47a7930)\ntodos (9bf067d)\nwhen using objects as prefill, the next prefilled value would return the reference of the one before (c89591a)\nwrong method reference (f3590a7)\n\nFeatures\n\nsdk changesEnvironment + resource service env update broadcast (ad58c68)\nsearchbar, ecFocus + added searchbar to asset-list-pop (8236caf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/ui-changelog.html":{"url":"additional-documentation/changelog/ui-changelog.html","title":"additional-page - ui CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.45.6 (2019-07-26)\nBug Fixes\n\nadded componentDestroyed method (bd36bc0)\nCOM-280 move menu.component to graveyard (7966a71)\nentry actionbar load more (19a5130)\nuse comma seperator in rxjs pipe (86181ad)\n\n0.45.5 (2019-07-26)\nBug Fixes\n\nCOM-302 (5d1aae3)\n\n0.45.4 (2019-07-22)\nBug Fixes\n\nhide bool label, fix inputView config (bdbe0d1)\n\n0.45.3 (2019-07-19)\nBug Fixes\n\nec-toggle (e54f950)\nshow select value when readOnly (5bad1fb)\ntoggle (77b8aac)\n\n0.45.2 (2019-07-05)\nBug Fixes\n\nfocusSearchbar on select (c0632d2)\nimproved keycommands (0890cd3)\n\n0.45.1 (2019-07-05)\nBug Fixes\n\nbuttons with only icons are square now (51bf664)\nudated to x.ui.10.0.0-beta.5 (341baba)\n\n0.45.0 (2019-06-28)\nBug Fixes\n\nasset list proportions (66d0b56)\nform columns + x.ui version (c3513dc)\nform imports (20a3f6e)\nkill ec-icon old code (658398d)\n\nFeatures\n\nx.ui 10 update (1c8180f)\n\n0.44.1 (2019-05-27)\nBug Fixes\n\nCOM-276 (a581ce2)\n\n0.44.0 (2019-05-24)\nFeatures\n\nentry-actionbar (786d09b)\n\n0.43.4 (2019-05-24)\nBug Fixes\n\nCOM-259 (b6ec56b)\n\n0.43.3 (2019-05-24)\nBug Fixes\n\nconnect disabled state COM-259 (bbe7ba3)\n\n0.43.2 (2019-05-24)\nBug Fixes\n\ndisabled state for select inputs (ac83326)\nmissing readonly states (52dc850)\n\n0.43.1 (2019-05-24)\nBug Fixes\n\nEDITOR-363 (80eecab)\n\n0.43.0 (2019-05-03)\nFeatures\n\ncan now seperate inputView and outputView (2e0756e)\ncan now set different purpose components (2d2e536)\n\n0.42.5 (2019-05-03)\nBug Fixes\n\nCOM-259 boolean readonly (cb43986)\n\n0.42.4 (2019-04-26)\nBug Fixes\n\nCOM-261 (af10188)\ntab routing EDITOR-267 (b0c6065)\n\n0.42.3 (2019-04-12)\nBug Fixes\n\nEDITOR-330 => ids are now filterable (ee3518f)\n\n0.42.2 (2019-04-08)\nNote: Version bump only for package @ec.components/ui\n0.42.1 (2019-04-05)\nBug Fixes\n\nadd creator + fixed extending inputs (0dd22f6)\n\n0.42.0 (2019-04-05)\nFeatures\n\nadded keycommands service (80b8030)\nnow showing copyable system fields (5af4631)\n\n0.41.6 (2019-04-05)\nBug Fixes\n\nselect readonly input (77a8486)\n\n0.41.5 (2019-04-01)\nNote: Version bump only for package @ec.components/ui\n0.41.4 (2019-03-29)\nBug Fixes\n\nadd titles with original field names (0dbce91)\n\n0.41.3 (2019-03-29)\nBug Fixes\n\nset form true in list header (7664cb2)\nset immutable false for filtering (8ab4791)\n\n0.41.2 (2019-03-29)\nBug Fixes\n\nshowHeader back to list template (ea4ba17)\n\n0.41.1 (2019-03-29)\nBug Fixes\n\ndesc/asc icon reversed in field dropdown (add3ee6)\nrevert test task running (cbe9627)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.41.1 (2019-03-29)\nBug Fixes\n\ndesc/asc icon reversed in field dropdown (add3ee6)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.41.0 (2019-03-29)\nBug Fixes\n\nformControl Input for select (bcbbc51)\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\nlist-header: could not retoggle list-filter (041cd83)\nrxjs throwError import (c0c7f17)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\nhideOnEscape option for pop (7d50c5f)\nready emitter for input component (e2bbf1a)\nreworked list-header (ea24c06)\n\n0.40.0 (2019-03-22)\nBug Fixes\n\nEDITOR-289 list-header filter inputs autofocus (9915311)\n\nFeatures\n\nDefaultEntryInputComponent#autofocus (cea52fc)\nField#autofocus + InputComponent#focus (8f56fb2)\n\n0.39.3 (2019-03-14)\nBug Fixes\n\nEDITOR-277 + started COM-237 (b5a578d)\n\n0.39.2 (2019-03-08)\nBug Fixes\n\nCOM-232 datetime safari cursor jump issue of death (0777809)\n\n0.39.1 (2019-03-01)\nBug Fixes\n\nadded lazy option for new input/form behaviour (878e9df)\n\n0.39.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.38.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.37.4 (2019-02-15)\nNote: Version bump only for package @ec.components/ui\n0.37.3 (2019-02-15)\nNote: Version bump only for package @ec.components/ui\n0.37.2 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.37.1 (2019-02-01)\nBug Fixes\n\ndefault input config to empty object (46d4a1f)\n\n0.37.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\nnow passing field config to input component (25a36aa)\n\n0.36.15 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.14 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.13 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.12 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.11 (2019-01-28)\nBug Fixes\n\nadd missing exports (d7fa72b)\n\n0.36.10 (2019-01-25)\nBug Fixes\n\nlanguage imports (6e961b8)\n\n0.36.9 (2019-01-25)\nBug Fixes\n\nnow exporting languages by name (7733151)\n\n0.36.8 (2019-01-25)\nBug Fixes\n\nexport de + en from ui package barrel (c950461)\n\n0.36.7 (2019-01-25)\nNote: Version bump only for package @ec.components/ui\n0.36.6 (2019-01-21)\nNote: Version bump only for package @ec.components/ui\n0.36.5 (2019-01-21)\nNote: Version bump only for package @ec.components/ui\n0.36.4 (2019-01-21)\nBug Fixes\n\nclear searchbar when changing asset group (1cfc328)\ncontrol binding (fd41ccc)\ndndDraggable stringify error (a992381)\ndynamic-slot make inject public to be able to call super (b7460e6)\nec-input bug (1d9e231)\nfilterOperators of entry and asset + default filterPopClass of nested types is now modal (9e671b9)\nfirst tab selection was throwing an error (50e2d98)\nfocus asset list pop searchbar when changing group (24868b9)\nform.create would not reinstantiate with config being undefined (f7b65f4)\ninit control in input.component (3fb8f47)\nlint errors (1cb8b1c)\nlinter errors (70d5e24)\nnew assets on entry create + removed hacks from input.component (04fffbd)\nonly show size select if total>0 (7a88da8)\nquery could be overwritten while typing + fixed asset select (1c382d1)\nstop select pop event bubbling + selectMode in select component (47a7930)\ntodos (9bf067d)\nwrong import (b760780)\n\nFeatures\n\nsearchbar, ecFocus + added searchbar to asset-list-pop (8236caf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/core-changelog.html":{"url":"additional-documentation/changelog/core-changelog.html","title":"additional-page - core CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.27.0 (2019-06-28)\nBug Fixes\n\nform columns + x.ui version (c3513dc)\n\nFeatures\n\nx.ui 10 update (1c8180f)\n\n0.26.0 (2019-05-03)\nFeatures\n\nbeforeSave for entry fields (846039a)\ncan now set different purpose components (2d2e536)\n\n0.25.2 (2019-04-12)\nBug Fixes\n\nEDITOR-330 => ids are now filterable (ee3518f)\n\n0.25.1 (2019-04-05)\nBug Fixes\n\nadd creator + fixed extending inputs (0dd22f6)\n\n0.25.0 (2019-04-05)\nFeatures\n\nnow showing copyable system fields (5af4631)\n\n0.24.3 (2019-04-01)\nNote: Version bump only for package @ec.components/core\n0.24.2 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.24.1 (2019-03-29)\nNote: Version bump only for package @ec.components/core\n0.24.0 (2019-03-29)\nBug Fixes\n\nkeep list header filter form immutable (6f53065)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\ndefaultFilter setting for listConfig (efb984e)\n\n0.23.0 (2019-03-22)\nFeatures\n\nField#autofocus + InputComponent#focus (8f56fb2)\n\n0.22.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.21.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.20.2 (2019-02-15)\nNote: Version bump only for package @ec.components/core\n0.20.1 (2019-02-15)\nNote: Version bump only for package @ec.components/core\n0.20.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\n\n0.19.12 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.11 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.10 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.9 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.8 (2019-01-25)\nNote: Version bump only for package @ec.components/core\n0.19.7 (2019-01-21)\nNote: Version bump only for package @ec.components/core\n0.19.6 (2019-01-21)\nBug Fixes\n\nlinter errors (70d5e24)\nselection has + docs (e8b0e49)\nselection.toggle would emit change twice sometimes (b3e8115)\ntodos (9bf067d)\nwhen using objects as prefill, the next prefilled value would return the reference of the one before (c89591a)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/style-changelog.html":{"url":"additional-documentation/changelog/style-changelog.html","title":"additional-page - style CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.23.4 (2019-07-12)\nBug Fixes\n\nspacer for item before filter icon to avoid overlapping (c63e1d9)\n\n0.23.3 (2019-07-05)\nBug Fixes\n\nremoved wrap from ec-output-tags (17a2ba7)\n\n0.23.2 (2019-07-05)\nBug Fixes\n\nadded styles to file input (ab7721b)\ngrid layout in asset-list (1e315d0)\nupdate to x.ui.10.0.0-beta.6 (0634a5a)\nupdate to x.ui.10.0.0-beta.7 (b3507c4)\n\n0.23.1 (2019-07-05)\nBug Fixes\n\nminor code style fixes (62bb2b3)\nresponsive layout update for ec-asset-list (af45a9a)\ntry to fixed ec-list overflow problem for field with long (a2df038)\nudated to x.ui.10.0.0-beta.5 (341baba)\n\n0.23.0 (2019-06-28)\nBug Fixes\n\nasset list proportions (66d0b56)\nform columns + x.ui version (c3513dc)\n\nFeatures\n\nx.ui 10 update (bda5def)\nx.ui 10 update (1c8180f)\nx.ui 10 update (e801ecf)\n\n0.22.7 (2019-05-03)\nNote: Version bump only for package @ec.components/style\n0.22.6 (2019-04-01)\nNote: Version bump only for package @ec.components/style\n0.22.5 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.22.4 (2019-03-29)\nNote: Version bump only for package @ec.components/style\n0.22.3 (2019-03-29)\nBug Fixes\n\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\n\n0.22.2 (2019-02-15)\nBug Fixes\n\nresource-select config merging + ec-output-tags are now oneline (c483625)\n\n0.22.1 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.22.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\n\n0.21.6 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.5 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.4 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.3 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.2 (2019-01-25)\nNote: Version bump only for package @ec.components/style\n0.21.1 (2019-01-21)\nNote: Version bump only for package @ec.components/style\n0.21.0 (2019-01-21)\nBug Fixes\n\nadded optional to btn._clear extension (373bebf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/calendar-changelog.html":{"url":"additional-documentation/changelog/calendar-changelog.html","title":"additional-page - calendar CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.2.18 (2019-07-05)\nBug Fixes\n\nudated to x.ui.10.0.0-beta.5 (341baba)\n\n0.2.17 (2019-05-24)\nBug Fixes\n\nmissing readonly states (52dc850)\n\n0.2.16 (2019-05-03)\nNote: Version bump only for package @ec.components/calendar\n0.2.15 (2019-04-08)\nBug Fixes\n\nEDITOR-229 (b603867)\n\n0.2.14 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.2.14 (2019-03-29)\nNote: Version bump only for package @ec.components/calendar\n0.2.13 (2019-03-08)\nBug Fixes\n\nCOM-232 datetime safari cursor jump issue of death (0777809)\nCOM-255 (ac4aec3)\n\n0.2.12 (2019-02-15)\nNote: Version bump only for package @ec.components/calendar\n0.2.11 (2019-02-15)\nNote: Version bump only for package @ec.components/calendar\n0.2.10 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.9 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.8 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.7 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.6 (2019-01-25)\nNote: Version bump only for package @ec.components/calendar\n0.2.5 (2019-01-21)\nNote: Version bump only for package @ec.components/calendar\n0.2.4 (2019-01-21)\nNote: Version bump only for package @ec.components/calendar\n0.2.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/location-changelog.html":{"url":"additional-documentation/changelog/location-changelog.html","title":"additional-page - location CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.18.17 (2019-07-05)\nBug Fixes\n\nbuttons with only icons are square now (51bf664)\n\n0.18.16 (2019-05-24)\nBug Fixes\n\nCOM-259 (6603aea)\n\n0.18.15 (2019-05-03)\nNote: Version bump only for package @ec.components/location\n0.18.14 (2019-04-26)\nBug Fixes\n\nlocation picker spec (65fa558)\nlocation-picker keycommands injection (600d7ac)\n\n0.18.13 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nrevert test task running (cbe9627)\n\n0.18.13 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\n\n0.18.12 (2019-02-25)\nNote: Version bump only for package @ec.components/location\n0.18.11 (2019-02-15)\nNote: Version bump only for package @ec.components/location\n0.18.10 (2019-02-15)\nNote: Version bump only for package @ec.components/location\n0.18.9 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.8 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.7 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.6 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.5 (2019-01-25)\nNote: Version bump only for package @ec.components/location\n0.18.4 (2019-01-21)\nNote: Version bump only for package @ec.components/location\n0.18.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/ace-changelog.html":{"url":"additional-documentation/changelog/ace-changelog.html","title":"additional-page - ace CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.6.14 (2019-05-03)\nNote: Version bump only for package @ec.components/ace\n0.6.13 (2019-04-26)\nBug Fixes\n\nace test (95f8cc1)\n\n0.6.12 (2019-03-29)\nBug Fixes\n\nace ui dependency (cd90ef7)\nrevert test task running (cbe9627)\n\n0.6.12 (2019-03-29)\nNote: Version bump only for package @ec.components/ace\n0.6.11 (2019-02-15)\nNote: Version bump only for package @ec.components/ace\n0.6.10 (2019-02-15)\nNote: Version bump only for package @ec.components/ace\n0.6.9 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.8 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.7 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.6 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.5 (2019-01-25)\nNote: Version bump only for package @ec.components/ace\n0.6.4 (2019-01-21)\nNote: Version bump only for package @ec.components/ace\n0.6.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/medium-editor-changelog.html":{"url":"additional-documentation/changelog/medium-editor-changelog.html","title":"additional-page - medium-editor CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.4.13 (2019-05-03)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.12 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.4.12 (2019-03-29)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.11 (2019-02-15)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.10 (2019-02-15)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.9 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.8 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.7 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.6 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.5 (2019-01-25)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.4 (2019-01-21)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/tinymce-changelog.html":{"url":"additional-documentation/changelog/tinymce-changelog.html","title":"additional-page - tinymce CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.5.14 (2019-05-03)\nNote: Version bump only for package @ec.components/tinymce\n0.5.13 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.5.13 (2019-03-29)\nNote: Version bump only for package @ec.components/tinymce\n0.5.12 (2019-02-15)\nNote: Version bump only for package @ec.components/tinymce\n0.5.11 (2019-02-15)\nNote: Version bump only for package @ec.components/tinymce\n0.5.10 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.9 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.8 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.7 (2019-01-28)\nBug Fixes\n\ntinymce fix version 4.7.4 due to angular-cli/issues/11041 (b365847)\n\n0.5.6 (2019-01-25)\nNote: Version bump only for package @ec.components/tinymce\n0.5.5 (2019-01-25)\nNote: Version bump only for package @ec.components/tinymce\n0.5.4 (2019-01-21)\nNote: Version bump only for package @ec.components/tinymce\n0.5.3 (2019-01-21)\nBug Fixes\n\ncould not writeValue before init component (00a2e2e)\ntinyMCE promise error (8fab72f)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/adding-new-packages.html":{"url":"additional-documentation/adding-new-packages.html","title":"additional-page - Adding New Packages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a new Package in 10 easy steps\nThe following steps need to be done to generate a new library that is standards compliant.\nJust replace the example name \"data\" with the new package name.\n1. Run CLI command to generate a new library\nsh\nng generate library data -p ec\nThis will create a new folder under packages/ (see newProjectRoot in angular.json).\n2. Prefix packages/data/package.json#name with @ec.components\nalso make sure the version is correct\n3. Prefix root tsconfig.json paths \"data\" and \"data/*\" with @ec.components\nalso change value to \"packages/data/dist/*\"\n4. Move src files to packages/data/lib\n5. add dependencies (e.g. ec.sdk) to both root and lib package.json\n6. add whitelistedNonPeerDependencies and dest to ng-package.json\njson\n  \"dest\": \"./dist\",\n  \"whitelistedNonPeerDependencies\": [\n    \".\"\n  ]\n7. fix relative imports\nts\nimport { Notification } from '../../../../ui/src/notifications/notification';\nimport { WithNotifications } from '../../../../ui/src/notifications/with-notifications.interface';\n// replace with\nimport { WithNotifications, Notification } from '@ec.components/ui';\n8. fix rxjs imports\nts\nimport { Subject } from 'rxjs/Subject';\n// to\nimport { Subject } from 'rxjs';\n9. fix other lint errors like semicolon stuff\nbuild it\nsh\nng build data\nrun yarn to link dist/data to node_modules\n10. add dependency to root package.json\n11. add CHANGELOG.md of package to summary.json (like others)\n11. add link to package changelog page to CHANGELOG.md (like others)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/stackblitz.html":{"url":"additional-documentation/stackblitz.html","title":"additional-page - Stackblitz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStackblitz Demos\n\nCreate Angular Stackblitz\nimport styles to index.html:\n\n```html\n\n\n```\n\n\nAdd @ec.components package(s):\n\njson\n\"@ec.components/calendar\": \"^0.2.6\",\n/** any other components module */\n\nimport module(s):\n\nts\nimport { CalendarModule } from '@ec.components/calendar';\n@NgModule({\n  imports:      [ /* .. */ CalendarModule ],\n  /* ... */\n})\nexport class AppModule { }\n\nuse component(s) in app.component.html:\n\nhtml\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/publishing.html":{"url":"additional-documentation/publishing.html","title":"additional-page - Publishing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n```js\n  constructor(public router: Router) {\n  }\n  redirect() {\n    this.router.navigate(['profile'])\n  }\n```\n3. Add Login Component to template\nUse this in your login.component.html template:\nhtml\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
