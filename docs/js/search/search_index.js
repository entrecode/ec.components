var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AceComponent.html",[0,0.292,1,1.278]],["body/components/AceComponent.html",[0,0.443,1,1.856,2,0.854,3,0.158,4,0.164,5,0.631,6,1.642,7,0.814,8,0.786,9,1.265,10,0.124,11,2.673,12,0.345,13,2.716,14,5.531,15,4.018,16,2.209,17,1.568,18,4.362,19,4.647,20,1.835,21,2.124,22,2.511,23,2.572,24,0.675,25,1.535,26,0.007,27,2.052,28,3.112,29,2.543,30,3.112,31,2.543,32,0.896,33,2.172,34,1.859,35,3.05,36,5.687,37,1.137,38,4.647,39,0.319,40,0.567,41,3.914,42,1.601,43,3.58,44,3.58,45,1.415,46,1.629,47,2.851,48,1.946,49,2.925,50,3.018,51,2.511,52,1.767,53,3.05,54,0.732,55,3.399,56,2.968,57,2.896,58,3.05,59,4.032,60,4.647,61,4.647,62,2.815,63,3.21,64,3.445,65,1.157,66,6.641,67,8.863,68,0.807,69,1.687,70,1.19,71,3,72,1.394,73,2.641,74,6.405,75,4.902,76,5.246,77,5.246,78,3.301,79,3.301,80,6.405,81,3,82,3,83,3.357,84,0.977,85,2.7,86,3.192,87,2.894,88,1.1,89,1.237,90,1.833,91,3,92,4.647,93,5.246,94,3,95,2.925,96,3,97,3.557,98,1.863,99,3.357,100,1.017,101,1.025,102,0.721,103,2.925,104,3,105,4.647,106,3,107,4.399,108,3.806,109,4.647,110,4.647,111,3,112,4.647,113,2.925,114,3,115,3.192,116,2.395,117,1.797,118,2.061,119,4.303,120,2.296,121,0.964,122,2.296,123,2.572,124,1.185,125,3.557,126,3,127,1.622,128,3,129,1.594,130,3,131,2.002,132,3,133,2.584,134,3,135,3.05,136,3.806,137,3,138,1.625,139,1.695,140,2.296,141,2.296,142,1.237,143,1.401,144,2.296,145,1.695,146,3.557,147,1.817,148,2.296,149,2.296,150,2.061,151,1.695,152,0.264,153,1.357,154,0.263,155,1.21,156,0.938,157,2.673,158,3,159,3,160,3,161,2.673,162,2.457,163,2.673,164,2.457,165,2.296,166,0.58,167,0.11,168,0.129,169,4.647,170,4.647,171,3,172,3,173,5.246,174,3,175,3.557,176,2.673,177,5.067,178,3,179,5.687,180,3,181,3.05,182,3,183,1.376,184,3.806,185,3,186,1.504,187,3,188,1.011,189,3,190,3,191,3.557,192,3,193,1.695,194,1.889,195,3,196,2.296,197,3,198,0.561,199,1.239,200,0.621,201,1.265,202,1.707,203,0.814,204,0.814,205,0.734,206,1.543,207,0.734,208,0.773,209,0.698,210,0.76,211,0.773,212,2.073,213,0.76,214,1.301,215,1.737,216,0.773,217,1.258,218,2.142,219,0.773,220,0.773,221,0.814,222,0.76,223,1.26,224,0.773,225,0.814,226,0.76,227,0.814,228,0.747,229,0.734,230,1.529,231,1.543,232,0.747,233,0.76,234,0.76,235,0.747,236,0.814,237,0.773,238,1.879,239,0.773,240,0.76,241,0.773,242,0.773,243,0.773,244,0.76,245,0.814,246,0.747,247,0.773,248,0.814,249,0.76,250,0.814,251,0.76,252,0.76,253,0.93,254,0.814,255,0.76,256,0.814,257,0.747,258,0.76,259,0.814,260,0.76,261,0.814,262,0.698,263,0.814,264,0.76,265,1.346,266,0.814,267,0.747,268,0.814,269,0.76,270,0.814,271,0.734,272,0.814,273,0.76,274,0.747,275,0.76,276,0.722,277,0.814,278,0.76,279,0.814,280,0.814,281,0.76,282,0.814,283,0.76,284,0.814,285,0.734,286,0.814,287,0.747,288,0.76,289,0.814,290,0.76,291,0.786,292,0.814,293,0.747,294,0.76,295,1.747,296,0.76,297,0.773,298,0.675,299,0.773,300,0.773,301,0.76,302,0.773,303,0.773,304,0.773,305,0.814,306,0.747,307,0.76,308,0.814,309,0.76,310,0.786,311,0.76,312,0.814,313,0.76,314,0.814,315,0.773,316,0.76,317,0.76,318,0.814,319,0.76,320,0.814,321,0.76,322,0.814,323,0.76,324,0.722,325,0.71,326,0.734,327,0.814,328,0.747,329,0.814,330,0.747,331,0.814,332,0.747,333,0.814,334,0.747,335,0.814,336,0.747,337,0.8,338,0.814,339,0.747,340,0.8,341,0.814,342,0.002,343,0.003,344,0.002]],["title/modules/AceModule.html",[345,1.155,346,3.646]],["body/modules/AceModule.html",[1,2.541,3,0.349,4,0.36,10,0.273,25,2.659,26,0.007,27,3.833,28,4.75,29,4.75,30,4.75,31,5.069,32,1.459,152,0.331,154,0.579,156,2.064,166,1.278,167,0.294,168,0.284,198,1.235,342,0.004,343,0.005,344,0.004,345,1.511,346,7.007,347,2.608,348,2.502,349,3.58,350,2.724,351,3.503,352,5.885,353,5.885,354,5.885,355,5.885,356,5.885,357,5.323,358,3.394,359,2.554,360,2.223,361,5.885,362,4.548,363,2.709,364,2.31,365,6.605,366,5.885,367,6.605]],["title/interfaces/Action.html",[368,1.369,369,2.678]],["body/interfaces/Action.html",[0,0.417,3,0.292,4,0.301,10,0.228,17,1.353,20,2.841,22,3.177,26,0.007,32,0.871,33,1.203,34,1.034,37,1.353,39,0.587,40,0.878,42,1.584,46,1.051,52,2.338,57,2.5,68,0.821,69,1.897,84,0.949,102,0.968,123,3.617,152,0.305,154,0.484,166,1.069,167,0.31,168,0.237,188,1.505,205,1.761,217,0.949,253,1.695,306,1.791,342,0.004,343,0.005,344,0.004,359,2.138,368,1.951,369,4.934,370,2.384,371,4.231,372,3.654,373,4.474,374,4.786,375,3.633,376,6.484,377,1.655,378,3.818,379,4.925,380,3.42,381,1.58,382,5.893,383,5.507,384,4.925,385,4.845,386,3.48,387,1.58,388,2.331,389,3.123,390,2.138,391,6.551,392,4.925,393,2.183,394,3.818,395,4.528,396,4.925,397,4.925,398,1.449,399,4.925,400,4.925,401,4.925,402,4.925,403,4.925,404,4.528,405,4.925,406,4.925,407,4.925,408,4.925,409,6.41,410,7.126,411,4.925,412,4.925,413,4.925,414,4.942,415,4.925,416,4.925,417,4.925,418,4.925,419,4.925,420,4.925,421,4.925,422,4.231,423,4.925,424,6.41,425,4.845,426,3.231,427,2.697,428,4.528,429,4.925,430,4.925,431,3.994,432,4.925,433,3.349,434,4.925,435,3.349,436,4.925,437,4.925,438,4.528,439,4.925]],["title/interfaces/ActionbarConfig.html",[368,1.369,383,3.862]],["body/interfaces/ActionbarConfig.html",[0,0.431,3,0.308,4,0.318,10,0.241,17,1.426,20,3.238,22,3.285,26,0.007,32,0.917,33,1.267,34,1.089,37,1.426,42,1.616,46,1.108,52,2.385,57,2.634,68,0.522,69,1.728,84,1,123,3.708,152,0.313,154,0.51,166,1.126,167,0.316,168,0.25,188,1.535,205,1.821,217,1,253,1.165,306,1.853,342,0.004,343,0.005,344,0.004,359,2.252,368,2.018,369,4.586,370,2.512,371,4.458,372,2.512,373,4.215,374,3.291,375,3.308,376,5.695,377,1.205,378,3.949,379,5.189,380,3.897,381,1.665,382,6.095,383,6.276,384,5.189,385,4.967,386,3.667,387,1.665,388,2.456,389,3.291,390,2.252,391,6.716,392,5.189,393,2.3,394,3.949,395,4.771,396,5.189,397,5.189,398,1.526,399,5.189,400,5.189,401,5.189,402,5.189,403,5.189,404,4.771,405,5.189,406,5.189,407,5.189,408,5.189,409,6.63,410,7.305,411,5.189,412,5.189,413,5.189,414,5.111,415,5.189,416,5.189,417,5.189,418,5.189,419,5.189,420,5.189,421,5.189,422,4.458,423,5.189,424,6.63,425,4.967,426,3.404,427,2.842,428,4.771,429,5.189,430,5.189,431,4.208,432,5.189,433,3.528,434,5.189,435,3.528,436,5.189,437,5.189,438,4.771,439,5.189]],["title/components/AdminEntryInputComponent.html",[0,0.292,207,1.235]],["body/components/AdminEntryInputComponent.html",[0,0.452,1,0.999,2,1.049,3,0.208,4,0.215,5,0.83,7,1.07,8,1.034,10,0.163,12,0.454,20,2.253,21,2.243,24,0.888,26,0.007,32,0.621,33,2.194,34,1.879,37,1.397,39,0.419,40,0.696,42,1.603,45,0.93,46,1.813,47,3.359,48,2.352,49,3.592,50,4.864,51,2.959,52,2.027,53,5.627,54,0.899,63,3.681,64,4.06,68,0.814,70,1.171,72,1.085,84,0.678,89,0.852,90,1.262,100,0.837,101,1.046,102,0.594,118,2.71,119,4.637,120,3.02,121,0.966,122,3.02,127,1.445,129,0.982,131,1.783,139,2.229,140,3.02,141,3.02,142,1.627,143,1.72,144,3.02,145,2.229,146,4.367,147,2.39,148,3.02,149,3.02,150,2.71,151,4.588,152,0.28,154,0.346,156,1.233,167,0.144,168,0.169,198,0.738,199,1.521,200,0.816,202,1.958,203,1.07,204,1.07,205,0.966,206,1.818,207,1.797,208,1.016,209,1.889,210,0.999,211,1.016,212,2.271,213,0.999,214,1.533,215,1.992,216,1.016,217,1.394,218,2.326,219,1.016,220,1.016,221,1.07,222,0.999,223,1.548,224,1.016,225,1.07,226,0.999,227,1.07,228,0.982,229,0.966,230,1.861,231,1.818,232,0.982,233,0.999,234,0.999,235,0.982,236,1.07,237,1.016,238,2.113,239,1.016,240,0.999,241,1.016,242,1.016,243,1.016,244,0.999,245,1.07,246,0.982,247,1.016,248,1.07,249,0.999,250,1.07,251,0.999,252,0.999,253,1.141,254,1.07,255,0.999,256,1.07,257,0.982,258,0.999,259,1.07,260,0.999,261,1.07,262,0.918,263,1.07,264,0.999,265,1.586,266,1.07,267,0.982,268,1.07,269,0.999,270,1.07,271,0.966,272,1.07,273,0.999,274,0.982,275,0.999,276,0.95,277,1.07,278,0.999,279,1.07,280,1.07,281,0.999,282,1.07,283,0.999,284,1.07,285,0.966,286,1.07,287,0.982,288,0.999,289,1.07,290,0.999,291,1.034,292,1.07,293,0.982,294,0.999,295,1.897,296,0.999,297,1.016,298,0.888,299,1.016,300,1.016,301,0.999,302,1.016,303,1.016,304,1.016,305,1.07,306,0.982,307,0.999,308,1.07,309,0.999,310,1.034,311,0.999,312,1.07,313,0.999,314,1.07,315,1.016,316,0.999,317,0.999,318,1.07,319,0.999,320,1.07,321,0.999,322,1.07,323,0.999,324,0.95,325,0.934,326,0.966,327,1.07,328,0.982,329,1.07,330,0.982,331,1.07,332,0.982,333,1.07,334,0.982,335,1.07,336,0.982,337,1.052,338,1.07,339,0.982,340,1.052,341,1.07,342,0.003,343,0.004,344,0.003,390,2.206,393,1.558,440,5.867,441,5.867,442,2.851,443,3.122,444,3.592,445,2.941,446,4.367,447,5.083,448,6.381,449,3.744,450,3.592,451,4.122,452,5.083,453,5.083,454,5.706,455,4.122,456,4.367,457,3.096,458,0.789,459,2.159,460,3.143,461,5.706,462,5.971,463,1.784,464,3.232,465,3.232,466,3.232,467,4.673,468,4.673,469,3.456]],["title/directives/AssetDirective.html",[200,1.044,326,1.235]],["body/directives/AssetDirective.html",[3,0.264,4,0.272,5,1.787,9,2.105,10,0.206,12,0.575,17,1.646,23,3.439,24,1.123,26,0.007,32,1.059,33,1.463,39,0.531,40,0.821,42,1.636,46,1.701,54,1.059,56,3.772,65,1.675,68,0.848,69,1.789,70,1.199,72,0.95,84,1.155,89,1.005,90,1.105,100,0.987,101,0.805,102,0.7,117,2.601,133,3.427,138,2.353,143,2.453,152,0.31,154,0.437,166,0.966,167,0.183,168,0.214,188,1.446,200,1.573,201,2.105,209,2.116,214,2.257,325,1.182,326,1.646,342,0.003,343,0.004,344,0.003,373,4.583,375,2.015,377,1.391,393,1.972,398,1.308,457,3.689,458,0.999,459,2.732,460,3.427,463,2.258,469,4.93,470,1.747,471,4.449,472,4.598,473,6.726,474,6.726,475,8.943,476,4.648,477,6.229,478,5.495,479,6.138,480,2.548,481,5.621,482,6.726,483,3.371,484,4.992,485,4.994,486,2.367,487,4.319,488,5.509,489,4.994,490,4.994,491,4.86,492,4.994,493,2.656,494,4.994,495,4.994,496,3.931,497,5.993,498,4.994,499,3.197,500,3.042,501,5.993,502,1.972,503,4.994,504,4.414,505,4.994,506,3.57,507,4.994,508,4.449,509,3.277,510,4.994,511,4.994,512,3.43,513,4.994,514,3.144,515,4.994,516,4.994,517,2.918,518,4.994,519,2.027,520,3.608,521,3.608,522,3.277,523,3.822,524,6.726,525,7.25,526,3.822,527,3.608,528,4.994,529,1.763,530,3.822,531,2.918,532,3.43,533,4.449,534,5.509,535,4.994,536,4.994,537,4.994]],["title/components/AssetListComponent.html",[0,0.292,213,1.278]],["body/components/AssetListComponent.html",[0,0.385,1,0.983,2,1.037,3,0.205,4,0.212,5,0.817,7,1.053,8,1.017,10,0.16,17,1.38,20,2.227,21,0.95,22,2.932,24,0.873,26,0.007,32,0.888,33,2.194,34,1.879,37,1.38,39,0.413,40,0.688,42,1.054,45,1.083,46,1.536,52,1.071,54,0.888,56,2.613,57,3.296,65,1.404,68,0.819,69,1.328,70,1.19,72,1.072,85,1.637,88,1.571,89,1.206,90,1.713,100,0.974,101,1.072,102,0.806,117,1.501,119,4.955,121,0.742,124,1.533,127,1.428,129,0.967,133,2.275,152,0.215,154,0.34,167,0.142,168,0.167,198,0.726,199,1.503,200,0.803,202,1.943,203,1.053,204,1.053,205,0.95,206,1.801,207,0.95,208,1,209,1.696,210,0.983,211,1,212,2.26,213,1.846,214,1.906,215,1.977,216,1,217,1.612,218,2.315,219,1,220,1,221,1.053,222,0.983,223,1.529,224,1,225,1.053,226,0.983,227,1.053,228,0.967,229,0.95,230,1.667,231,1.801,232,0.967,233,0.983,234,0.983,235,0.967,236,1.053,237,1,238,2.1,239,1,240,0.983,241,1,242,1,243,1,244,0.983,245,1.053,246,0.967,247,1,248,1.053,249,0.983,250,1.053,251,0.983,252,0.983,253,1.128,254,1.053,255,0.983,256,1.053,257,0.967,258,0.983,259,1.053,260,0.983,261,1.053,262,1.312,263,1.053,264,0.983,265,1.571,266,1.053,267,0.967,268,1.053,269,0.983,270,1.053,271,0.95,272,1.053,273,0.983,274,0.967,275,0.983,276,0.934,277,1.053,278,0.983,279,1.053,280,1.053,281,0.983,282,1.053,283,0.983,284,1.053,285,0.95,286,1.053,287,0.967,288,0.983,289,1.053,290,0.983,291,1.017,292,1.053,293,0.967,294,0.983,295,1.981,296,0.983,297,1,298,0.873,299,1,300,2.451,301,0.983,302,1,303,1,304,1,305,1.053,306,0.967,307,0.983,308,1.053,309,0.983,310,1.017,311,0.983,312,1.053,313,0.983,314,1.053,315,1,316,0.983,317,0.983,318,1.053,319,0.983,320,1.053,321,0.983,322,1.053,323,0.983,324,0.934,325,0.919,326,0.95,327,1.053,328,0.967,329,1.053,330,0.967,331,1.053,332,0.967,333,1.053,334,0.967,335,1.053,336,0.967,337,1.035,338,1.053,339,0.967,340,1.035,341,1.053,342,0.003,343,0.004,344,0.003,377,1.167,378,2.06,380,2.68,387,1.11,394,2.993,398,1.017,427,1.894,481,2.269,502,1.533,506,3.525,509,2.548,529,1.478,538,5.024,539,4.619,540,3.459,541,5.024,542,3.752,543,3.416,544,3.701,545,6.641,546,3.423,547,5.639,548,3.378,549,6.614,550,2.932,551,5.639,552,2.993,553,4.316,554,1.845,555,3.882,556,3.459,557,3.459,558,1.412,559,3.459,560,3.459,561,3.882,562,3.882,563,3.882,564,2.001,565,3.882,566,3.18,567,2.06,568,3.882,569,1.894,570,3.882,571,2.971,572,3.459,573,3.882,574,1.845,575,3.18,576,2.269,577,3.882,578,3.882,579,2.378,580,1.441,581,3.873,582,3.459,583,3.882,584,2.568,585,3.18,586,3.882,587,3.882,588,3.882,589,3.882,590,2.971,591,3.882,592,2.666,593,1.412,594,3.882,595,3.882,596,3.18,597,3.882,598,3.882,599,3.882,600,2.805,601,2.444,602,3.882,603,3.882,604,2.971,605,3.882,606,2.444,607,2.269,608,5.639,609,4.316]],["title/components/AssetgroupSelectComponent.html",[0,0.292,210,1.278]],["body/components/AssetgroupSelectComponent.html",[0,0.408,1,1.09,2,1.116,3,0.227,4,0.235,5,0.905,7,1.167,8,1.128,10,0.178,17,1.486,21,1.053,22,3.105,24,0.968,26,0.007,33,2.201,34,1.886,37,1.486,39,0.457,40,0.741,42,1.606,45,0.702,46,1.154,54,0.956,57,3.454,65,1.511,68,0.77,69,1.528,70,1.13,84,0.739,89,0.643,90,0.952,100,0.631,101,1.05,102,0.448,121,0.925,127,1.537,129,1.071,143,2.303,152,0.232,154,0.377,167,0.157,168,0.185,198,0.805,199,1.618,200,0.89,202,2.036,203,1.167,204,1.167,205,1.053,206,1.908,207,1.053,208,1.108,209,1.001,210,1.934,211,2.297,212,2.33,213,1.09,214,1.609,215,2.072,216,1.108,217,1.435,218,2.379,219,1.108,220,1.108,221,1.167,222,1.09,223,1.646,224,1.108,225,1.167,226,1.09,227,1.167,228,1.071,229,1.053,230,1.718,231,1.908,232,1.071,233,1.09,234,1.09,235,1.071,236,1.167,237,1.108,238,2.185,239,1.108,240,1.09,241,1.108,242,1.108,243,1.108,244,1.09,245,1.167,246,1.071,247,1.108,248,1.167,249,1.09,250,1.167,251,1.09,252,1.09,253,1.672,254,1.167,255,1.09,256,1.167,257,1.071,258,1.09,259,1.167,260,1.09,261,1.167,262,1.001,263,1.167,264,1.09,265,1.664,266,1.167,267,1.071,268,1.167,269,1.09,270,1.167,271,1.053,272,1.167,273,1.09,274,1.071,275,1.09,276,1.036,277,1.167,278,1.09,279,1.167,280,1.167,281,1.09,282,1.167,283,1.09,284,1.167,285,1.053,286,1.167,287,1.071,288,1.09,289,1.167,290,1.09,291,1.128,292,1.167,293,1.071,294,1.09,295,1.941,296,1.09,297,1.108,298,0.968,299,1.108,300,1.108,301,1.09,302,1.108,303,1.108,304,1.108,305,1.167,306,1.071,307,1.09,308,1.167,309,1.09,310,1.128,311,1.09,312,1.167,313,1.09,314,1.167,315,1.108,316,1.09,317,1.09,318,1.167,319,1.09,320,1.167,321,1.09,322,1.167,323,1.09,324,1.036,325,1.018,326,1.053,327,1.167,328,1.071,329,1.167,330,1.071,331,1.167,332,1.071,333,1.167,334,1.071,335,1.167,336,1.071,337,1.147,338,1.167,339,1.071,340,1.147,341,1.167,342,0.003,343,0.004,344,0.003,377,1.58,393,1.699,458,0.861,480,2.299,519,1.83,610,8.054,611,7.405,612,3.524,613,5.408,614,5.403,615,4.831,616,7.639,617,7.033,618,4.152,619,3.625,620,5.76,621,4.303,622,5.408,623,4.303,624,4.303,625,4.303,626,4.303,627,3.834,628,3.834,629,3.834,630,3.109,631,2.218,632,1.597,633,2.709,634,3.109,635,4.303,636,4.303,637,4.972,638,3.677]],["title/guards/AuthGuard.html",[639,3.862,640,3.862]],["body/guards/AuthGuard.html",[3,0.329,4,0.339,10,0.257,12,0.716,17,1.522,26,0.007,32,0.979,39,0.661,40,0.759,54,1.221,68,0.695,70,0.983,72,1.607,73,2.564,84,1.068,86,5.327,89,0.929,100,0.913,101,0.744,102,0.647,142,2.564,152,0.347,154,0.545,156,1.944,167,0.228,168,0.267,188,1.378,274,1.548,342,0.004,343,0.005,344,0.004,375,2.509,457,3.731,458,1.244,459,3.403,460,3.746,463,2.812,519,2.338,564,4.561,639,5.936,640,5.936,641,6.219,642,7.53,643,5.541,644,5.327,645,4.698,646,5.993,647,4.382,648,3.521,649,5.516,650,4.883,651,3.686,652,7.248,653,7.605,654,4.123,655,4.001,656,6.219,657,6.219,658,5.327,659,3.507,660,2.296,661,3.403,662,4.842,663,3.117,664,3.915,665,4.082,666,6.219,667,5.094,668,4.082,669,1.472,670,2.564,671,2.456,672,5.541,673,5.094,674,6.219,675,6.219,676,6.219,677,7.756,678,6.219,679,6.219,680,5.541,681,6.219,682,6.219,683,6.219]],["title/modules/AuthModule.html",[345,1.155,684,3.646]],["body/modules/AuthModule.html",[2,1.404,3,0.321,4,0.331,10,0.251,12,0.699,25,2.761,26,0.007,152,0.367,154,0.532,155,2.449,156,1.897,167,0.279,168,0.261,188,1.079,198,1.135,271,2.383,290,2.465,291,1.591,307,2.465,342,0.004,343,0.005,344,0.004,345,1.912,347,2.397,348,2.299,349,3.447,350,2.503,351,3.372,357,5.214,358,3.221,359,2.347,360,2.043,363,2.571,364,2.672,427,2.962,472,3.43,640,5.847,684,7.179,685,5.408,686,5.408,687,5.408,688,5.408,689,5.408,690,7.063,691,5.393,692,4.972,693,5.064,694,4.316,695,5.847,696,3.631,697,2.745,698,5.519,699,6.039,700,5.247,701,6.806,702,4.646,703,5.408,704,6.07,705,4.646,706,5.408,707,4.972,708,6.07,709,6.07,710,6.07,711,6.07,712,6.07]],["title/injectables/AuthService.html",[660,1.494,691,2.949]],["body/injectables/AuthService.html",[3,0.324,4,0.185,10,0.14,12,0.391,25,2.028,26,0.007,27,3.397,32,0.967,34,0.955,39,0.361,44,3.216,45,0.833,46,1.562,54,1.429,55,2.711,68,0.689,69,1.921,70,1.129,87,2.017,88,1.944,89,1.374,100,1.276,101,1.041,102,0.944,117,1.313,121,0.672,133,2.755,138,1.787,152,0.261,154,0.298,166,1.188,167,0.124,168,0.146,188,1.733,209,2.258,274,1.823,291,2.152,295,1.358,298,1.149,310,1.919,342,0.002,343,0.003,344,0.005,359,1.975,387,1.952,398,0.89,451,4.436,455,5.559,457,2.589,458,0.679,460,3.104,463,1.536,484,3.353,486,1.987,487,2.711,502,3.244,529,0.89,531,4.911,542,4.347,552,4.237,554,3.246,558,2.485,571,6.286,580,1.261,646,3.865,658,3.509,660,1.513,670,1.401,671,1.341,672,3.026,691,2.985,693,2.058,694,1.919,713,1.574,714,3.026,715,4.184,716,2.985,717,3.353,718,6.085,719,5.971,720,4.184,721,3.865,722,4.7,723,5.029,724,4.184,725,5.889,726,4.184,727,5.47,728,3.691,729,5.594,730,2.985,731,4.551,732,4.551,733,4.551,734,5.109,735,4.184,736,5.109,737,6.14,738,4.551,739,7.323,740,6.83,741,5.109,742,5.109,743,3.026,744,3.397,745,3.216,746,4.551,747,5.109,748,3.397,749,5.47,750,6.742,751,4.551,752,3.397,753,5.109,754,3.397,755,1.935,756,6.83,757,3.397,758,8.403,759,3.319,760,3.397,761,2.795,762,6.085,763,3.095,764,5.109,765,3.397,766,4.482,767,2.782,768,3.397,769,6.855,770,5.109,771,3.397,772,3.397,773,5.109,774,3.397,775,5.109,776,3.397,777,4.184,778,2.711,779,3.026,780,3.397,781,4.551,782,2.229,783,2.229,784,1.702,785,2.138,786,6.83,787,6.83,788,5.109,789,3.397,790,3.397,791,5.594,792,5.109,793,5.109,794,5.109,795,3.397,796,6.14,797,5.594,798,3.397,799,3.397,800,6.14,801,3.397,802,4.184,803,3.026,804,3.397,805,3.353,806,3.397,807,3.397,808,3.397,809,3.397,810,3.397,811,5.109,812,3.026,813,5.109,814,3.397,815,3.095,816,3.397,817,3.216,818,3.509,819,3.397,820,5.109,821,5.109,822,3.397,823,3.397,824,3.397,825,3.353,826,5.109,827,5.109,828,3.691,829,5.109,830,5.109,831,3.216,832,5.109,833,5.109,834,5.109,835,5.109,836,3.397,837,3.397,838,3.397,839,5.109,840,3.397,841,3.397,842,3.397,843,3.397,844,3.397,845,3.397,846,3.397,847,3.397,848,3.397,849,3.397,850,3.026,851,2.138,852,3.026,853,3.397]],["title/modules/CalendarModule.html",[345,1.155,854,3.312]],["body/modules/CalendarModule.html",[2,1.359,3,0.304,4,0.314,10,0.238,12,0.663,25,2.695,26,0.007,27,4.02,54,0.907,68,0.731,70,0.73,89,0.861,100,0.845,101,0.69,102,0.6,152,0.353,154,0.505,166,1.114,167,0.27,168,0.247,188,1.024,198,1.077,220,2.49,224,2.49,247,2.49,283,2.448,342,0.004,343,0.005,344,0.004,345,1.866,347,2.275,348,2.182,349,3.364,350,2.376,351,3.291,358,3.116,359,2.228,360,1.939,363,1.939,364,2.585,659,3.341,694,4.175,696,3.512,697,2.605,698,5.894,721,5.732,854,6.504,855,5.133,856,5.133,857,5.133,858,6.984,859,5.133,860,4.652,861,5.339,862,5.133,863,7.39,864,4.319,865,5.761,866,5.761,867,5.761,868,5.761,869,5.761,870,5.761,871,5.761,872,5.133,873,6.052,874,5.761,875,6.052,876,5.761,877,6.052,878,5.133,879,5.133,880,5.761,881,3.49,882,3.255,883,5.133,884,5.761,885,5.761,886,5.761]],["title/classes/Collection.html",[168,0.217,887,3.312]],["body/classes/Collection.html",[3,0.181,4,0.187,10,0.142,12,0.395,26,0.007,32,1.492,39,0.926,40,0.628,45,1.399,46,1.468,52,2.605,54,0.81,68,0.82,70,1.151,84,1.262,88,2.205,89,1.357,90,1.626,98,1.496,100,1.278,101,1.043,102,0.929,121,1.129,138,1.199,152,0.131,166,1.422,167,0.125,168,0.221,183,1.523,188,1.497,217,1.06,342,0.002,343,0.003,344,0.002,360,1.154,377,2.009,398,2.283,458,0.686,470,1.199,493,2.903,502,2.031,529,1.798,544,4.051,548,3.817,567,3.641,632,1.909,658,4.712,659,3.102,662,4.609,663,1.718,664,4.319,730,3.608,755,3.589,777,2.807,887,6.239,888,2.491,889,3.053,890,6.174,891,5.143,892,4.942,893,5.143,894,5.143,895,6.861,896,4.582,897,4.212,898,5.143,899,5.143,900,3.116,901,5.143,902,5.143,903,4.582,904,5.672,905,4.212,906,6.174,907,3.608,908,3.094,909,3.427,910,3.375,911,8.301,912,3.427,913,4.051,914,5.143,915,5.143,916,6.062,917,3.687,918,3.427,919,4.156,920,4.502,921,6.861,922,5.143,923,5.143,924,3.427,925,5.143,926,3.936,927,3.238,928,5.143,929,3.427,930,5.143,931,5.143,932,3.427,933,5.143,934,5.143,935,3.427,936,3.427,937,2.651,938,5.143,939,3.427,940,5.143,941,5.143,942,3.427,943,4.009,944,5.143,945,5.143,946,3.427,947,5.143,948,3.427,949,3.427,950,3.427,951,3.427,952,2.354,953,3.427,954,3.427,955,3.427,956,3.427,957,3.427,958,3.347,959,3.427,960,3.427,961,3.427,962,2.158,963,1.588,964,5.254,965,3.936,966,6.174,967,5.143,968,5.143,969,3.427,970,1.875,971,3.427,972,3.427,973,3.053,974,6.861,975,7.352,976,6.174,977,8.007,978,3.427,979,3.427,980,3.427,981,3.427,982,3.053,983,3.427,984,3.427,985,3.427,986,3.427]],["title/classes/Config.html",[168,0.217,387,1.442]],["body/classes/Config.html",[3,0.327,4,0.338,10,0.256,12,0.713,26,0.007,39,0.659,40,0.944,45,1.011,46,1.605,54,1.219,68,0.756,69,1.882,70,0.981,73,3.644,88,2.195,89,1.26,100,0.909,101,0.742,102,0.879,117,2.992,121,0.815,167,0.227,168,0.332,188,1.375,342,0.004,343,0.005,344,0.004,385,3.754,387,2.858,390,2.992,486,1.803,502,2.447,579,3.726,584,3.757,631,3.195,651,3.678,671,3.332,759,4.001,864,3.622,888,2.5,987,5.522,988,7.518,989,6.339,990,6.198,991,6.198,992,6.198,993,6.895,994,7.739,995,4.312,996,7.739,997,6.895,998,7.739,999,4.872,1000,6.895,1001,4.523,1002,5.076,1003,4.743,1004,6.198,1005,6.198,1006,6.198,1007,7.739,1008,8.439,1009,6.198]],["title/components/CrudComponent.html",[0,0.292,222,1.278]],["body/components/CrudComponent.html",[0,0.33,1,0.76,2,0.854,3,0.158,4,0.164,5,1.458,7,0.814,8,0.786,9,1.265,10,0.124,12,0.345,17,1.137,21,0.734,22,2.511,24,0.675,26,0.007,32,1.154,33,2.172,34,1.858,37,1.137,39,0.319,40,0.567,42,1.296,45,0.758,46,1.685,52,2.18,54,1.204,57,2.896,65,1.157,68,0.777,69,1.386,70,1.142,72,0.884,75,3.557,84,0.798,88,1.1,89,1.211,90,1.028,100,1.017,101,1.05,102,0.862,117,3.261,121,0.843,124,2.736,127,1.622,129,0.747,131,2.002,143,2.304,152,0.331,153,1.357,154,0.263,156,2.002,166,0.58,167,0.11,168,0.129,183,1.684,188,1.403,198,0.561,199,1.516,200,0.621,201,1.265,202,1.707,203,0.814,204,0.814,205,0.734,206,1.543,207,0.734,208,0.773,209,0.698,210,0.76,211,0.773,212,2.073,213,0.76,214,1.301,215,1.737,216,0.773,217,1.568,218,2.142,219,0.773,220,0.773,221,0.814,222,1.856,223,1.26,224,0.773,225,0.814,226,0.76,227,0.814,228,0.747,229,0.734,230,1.788,231,1.543,232,0.747,233,0.76,234,0.76,235,0.747,236,0.814,237,0.773,238,1.879,239,1.65,240,0.76,241,0.773,242,1.65,243,0.773,244,0.76,245,0.814,246,0.747,247,0.773,248,0.814,249,0.76,250,0.814,251,0.76,252,0.76,253,0.93,254,0.814,255,0.76,256,0.814,257,0.747,258,0.76,259,0.814,260,0.76,261,0.814,262,1.49,263,0.814,264,0.76,265,1.346,266,0.814,267,0.747,268,0.814,269,0.76,270,0.814,271,0.734,272,0.814,273,0.76,274,0.747,275,0.76,276,0.722,277,0.814,278,0.76,279,0.814,280,0.814,281,0.76,282,0.814,283,0.76,284,0.814,285,0.734,286,0.814,287,0.747,288,0.76,289,0.814,290,0.76,291,0.786,292,0.814,293,0.747,294,0.76,295,1.747,296,0.76,297,0.773,298,0.675,299,0.773,300,0.773,301,0.76,302,0.773,303,0.773,304,0.773,305,0.814,306,0.747,307,0.76,308,0.814,309,0.76,310,0.786,311,0.76,312,0.814,313,0.76,314,0.814,315,0.773,316,0.76,317,0.76,318,0.814,319,0.76,320,0.814,321,0.76,322,0.814,323,0.76,324,0.722,325,0.71,326,0.734,327,0.814,328,0.747,329,0.814,330,0.747,331,0.814,332,0.747,333,0.814,334,0.747,335,0.814,336,0.747,337,0.8,338,0.814,339,0.747,340,0.8,341,0.814,342,0.002,343,0.003,344,0.002,360,1.564,375,1.21,377,0.961,378,3.399,381,0.857,387,1.625,390,2.834,394,3.018,398,1.218,457,1.959,458,0.93,459,1.642,460,2.584,463,1.357,472,2.625,479,5.006,480,1.76,499,2.209,506,1.592,519,1.714,543,4.439,550,3.059,579,2.398,584,1.16,600,3.357,604,5.303,607,1.753,609,2.296,648,1.16,654,3.38,655,2.896,661,1.642,671,3.272,691,3.743,693,3.445,755,2.426,784,1.504,805,1.969,963,3.839,1010,2.673,1011,3.806,1012,3.192,1013,3.806,1014,3.806,1015,3.557,1016,4.647,1017,3.018,1018,3.445,1019,3.213,1020,4.14,1021,5.687,1022,5.019,1023,3.806,1024,4.647,1025,4.647,1026,4.647,1027,3.58,1028,3.445,1029,4.467,1030,3.58,1031,3.618,1032,3.213,1033,2.069,1034,2.476,1035,4.647,1036,4.049,1037,3,1038,3.806,1039,4.14,1040,2.625,1041,3,1042,4.647,1043,3,1044,3,1045,2.7,1046,5.609,1047,3,1048,2.395,1049,4.14,1050,3,1051,2.716,1052,4.647,1053,3,1054,3.357,1055,3.806,1056,4.647,1057,3,1058,3.21,1059,4.647,1060,3,1061,4.647,1062,3,1063,4.647,1064,3,1065,2.209,1066,3.044,1067,4.647,1068,3,1069,3.357,1070,3,1071,3.192,1072,2.932,1073,3.05,1074,3,1075,3,1076,1.642,1077,2.457,1078,2.673,1079,2.296,1080,1.969,1081,1.969,1082,3,1083,3,1084,3,1085,3,1086,2.168,1087,3,1088,2.673,1089,4.14,1090,2.296,1091,2.673,1092,3,1093,3,1094,3,1095,3,1096,3,1097,3,1098,3,1099,3,1100,3,1101,3,1102,3,1103,3,1104,3,1105,2.673,1106,3,1107,3,1108,2.815,1109,2.395,1110,4.109,1111,3,1112,2.061,1113,3.357,1114,3,1115,1.889,1116,1.889,1117,2.061,1118,2.061,1119,3,1120,1.969,1121,4.14]],["title/interfaces/CrudConfig.html",[368,1.369,1036,2.949]],["body/interfaces/CrudConfig.html",[0,0.465,3,0.201,4,0.207,10,0.271,12,0.438,20,2.193,26,0.007,32,1.522,34,1.038,39,0.404,40,0.678,48,1.56,54,1.337,66,4.251,68,0.87,69,1.862,72,1.673,73,2.29,87,2.193,102,1.038,121,0.731,152,0.25,156,1.188,167,0.139,183,1.644,211,1.431,214,1.271,217,1.457,230,1.836,253,1.76,262,1.679,285,1.766,298,1.947,324,1.737,342,0.003,343,0.004,344,0.003,368,1.031,370,1.64,377,2.054,380,3.119,381,1.087,388,3.578,390,2.148,479,5.792,481,4.217,487,4.255,491,4.013,493,3.166,506,2.948,509,3.645,529,1.455,548,2.574,550,3.539,564,3.72,569,2.71,574,2.64,580,3.15,618,4.132,638,3.364,651,2.64,654,3.911,755,2.908,762,7.142,778,2.948,815,4.372,817,4.131,818,4.507,864,3.246,892,2.863,937,2.863,963,2.574,1019,3.138,1036,4.217,1038,4.549,1065,4.285,1122,3.387,1123,2.393,1124,5.554,1125,5.554,1126,7.217,1127,7.217,1128,7.217,1129,7.217,1130,8.017,1131,7.217,1132,7.217,1133,5.214,1134,6.429,1135,7.217,1136,7.217,1137,6.429,1138,5.57,1139,7.217,1140,7.217,1141,7.217,1142,7.217,1143,6.429,1144,7.217,1145,7.217,1146,4.013,1147,4.948,1148,4.013,1149,5.554,1150,4.957,1151,5.523,1152,2.64,1153,1.981,1154,3.72,1155,5.261,1156,2.948,1157,4.251,1158,5.554,1159,4.948,1160,3.645,1161,4.077,1162,4.013,1163,4.948,1164,4.251,1165,3.039,1166,4.372,1167,4.948,1168,4.251,1169,3.496,1170,5.554,1171,4.251,1172,4.251,1173,4.549,1174,5.554,1175,2.863,1176,6.429,1177,6.429,1178,4.372,1179,7.217,1180,4.948,1181,5.554,1182,3.364,1183,2.71,1184,3.645,1185,3.364,1186,5.554,1187,4.549,1188,3.645,1189,4.549,1190,4.251,1191,5.554,1192,4.549,1193,3.645,1194,5.554,1195,4.948,1196,3.802]],["title/modules/DataModule.html",[345,1.155,1197,3.466]],["body/modules/DataModule.html",[3,0.226,4,0.234,10,0.177,25,2.519,26,0.007,27,2.672,54,0.675,70,0.543,89,0.64,100,0.629,101,0.513,102,0.446,117,2.341,152,0.373,154,0.375,155,1.729,156,1.339,166,0.829,167,0.221,168,0.184,188,0.762,198,0.801,207,2.145,217,1.309,222,2.335,228,2.182,229,2.145,230,1.845,237,2.375,239,2.375,240,2.371,241,2.412,242,2.375,243,2.412,330,2.296,332,2.296,342,0.003,343,0.004,344,0.003,345,0.981,347,1.692,348,1.623,349,2.894,350,1.767,351,2.831,357,5.21,358,2.552,359,1.657,360,1.443,362,3.42,363,2.038,364,2.117,441,3.096,458,0.857,607,2.505,661,2.345,684,6.663,696,2.877,697,1.938,698,5.07,700,4.157,702,3.28,719,5.734,721,3.811,722,3.28,723,3.51,728,4.373,784,3.034,861,4.373,1001,2.505,1031,4.716,1077,3.51,1079,4.633,1080,3.972,1081,2.813,1197,6.916,1198,3.818,1199,3.818,1200,3.818,1201,3.818,1202,3.818,1203,6.663,1204,6.334,1205,6.052,1206,5.734,1207,6.031,1208,5.057,1209,3.818,1210,3.818,1211,6.053,1212,4.286,1213,5.393,1214,5.393,1215,3.28,1216,3.096,1217,4.286,1218,4.286,1219,3.818,1220,4.286,1221,3.667,1222,3.667,1223,3.096,1224,3.51,1225,3.096,1226,5.393,1227,4.633,1228,4.286,1229,4.286,1230,3.096,1231,3.818,1232,4.286,1233,3.51,1234,3.818,1235,4.286]],["title/components/DatetimeComponent.html",[0,0.292,226,1.278]],["body/components/DatetimeComponent.html",[0,0.445,1,0.964,2,1.022,3,0.201,4,0.208,5,0.801,7,1.033,8,0.998,9,1.605,10,0.157,12,0.438,17,1.361,18,5.452,21,0.932,24,0.857,25,1.837,26,0.007,27,2.455,28,3.593,29,3.042,30,3.593,31,3.042,32,1.263,33,2.192,34,1.878,37,1.361,39,0.405,40,0.678,42,1.588,43,4.134,45,1.178,46,1.249,47,2.787,54,0.876,58,4.739,59,5.049,62,3.368,65,1.384,68,0.742,69,1.112,70,1.143,72,1.057,84,0.955,88,1.316,89,1.079,90,1.598,95,3.5,98,1.617,100,0.964,101,1.053,102,0.684,103,3.5,113,3.5,117,2.15,121,1.01,124,1.503,127,1.408,129,0.948,131,1.738,139,4.797,152,0.276,153,1.722,154,0.333,155,1.536,167,0.139,168,0.163,193,2.151,194,2.397,198,0.712,199,1.482,200,0.788,201,1.605,202,1.925,203,1.033,204,1.033,205,0.932,206,1.781,207,0.932,208,0.981,209,0.886,210,0.964,211,0.981,212,2.246,213,0.964,214,1.503,215,1.959,216,0.981,217,1.377,218,2.303,219,0.981,220,1.86,221,1.033,222,0.964,223,1.508,224,0.981,225,1.033,226,2.031,227,1.033,228,0.948,229,0.932,230,1.657,231,1.781,232,0.948,233,0.964,234,0.964,235,0.948,236,1.033,237,0.981,238,2.083,239,0.981,240,0.964,241,0.981,242,0.981,243,0.981,244,0.964,245,1.033,246,0.948,247,0.981,248,1.033,249,0.964,250,1.033,251,0.964,252,0.964,253,1.112,254,1.033,255,0.964,256,1.033,257,0.948,258,0.964,259,1.033,260,0.964,261,1.033,262,0.886,263,1.033,264,0.964,265,1.554,266,1.033,267,0.948,268,1.033,269,0.964,270,1.033,271,0.932,272,1.033,273,0.964,274,0.948,275,0.964,276,0.916,277,1.033,278,0.964,279,1.033,280,1.033,281,0.964,282,1.033,283,0.964,284,1.033,285,0.932,286,1.033,287,0.948,288,0.964,289,1.033,290,0.964,291,0.998,292,1.033,293,0.948,294,0.964,295,1.878,296,0.964,297,0.981,298,0.857,299,0.981,300,0.981,301,0.964,302,0.981,303,0.981,304,0.981,305,1.033,306,0.948,307,0.964,308,1.033,309,0.964,310,0.998,311,0.964,312,1.033,313,0.964,314,1.033,315,0.981,316,0.964,317,0.964,318,1.033,319,0.964,320,1.033,321,0.964,322,1.033,323,0.964,324,0.916,325,0.901,326,0.932,327,1.033,328,0.948,329,1.033,330,0.948,331,1.033,332,0.948,333,1.033,334,0.948,335,1.033,336,0.948,337,1.015,338,1.033,339,0.948,340,1.015,341,1.033,342,0.003,343,0.004,344,0.003,377,1.494,443,3.042,593,2.022,618,3.959,755,2.106,860,4.835,881,5.463,882,4.08,1048,2.866,1155,3.649,1236,3.392,1237,4.739,1238,4.953,1239,5.56,1240,4.31,1241,6.567,1242,4.953,1243,6.567,1244,4.953,1245,3.807,1246,4.22,1247,4.017,1248,3.807,1249,5.56,1250,3.807,1251,3.807,1252,5.56,1253,3.807,1254,6.434,1255,3.807,1256,4.953,1257,3.807,1258,4.953,1259,3.807,1260,5.56,1261,3.807,1262,3.807,1263,3.807,1264,4.953,1265,3.807,1266,4.953,1267,5.56,1268,3.5,1269,2.751,1270,2.151,1271,3.807,1272,2.914]],["title/pipes/DatetimePipe.html",[858,3.646,1273,2.678]],["body/pipes/DatetimePipe.html",[3,0.334,4,0.345,10,0.261,12,0.728,17,1.548,24,1.422,26,0.007,32,0.996,45,1.557,52,2.162,54,0.996,68,0.566,69,1.972,70,0.801,72,1.49,88,1.854,89,0.944,100,0.928,101,1.019,102,0.658,121,0.832,142,3.231,152,0.325,154,0.554,166,1.223,167,0.231,168,0.271,188,1.513,342,0.004,343,0.005,344,0.004,502,2.497,584,3.03,671,3.094,716,4.579,755,2.968,858,5.661,881,5.158,892,4.039,910,5.142,1033,2.3,1034,3.03,1237,5.142,1268,4.933,1269,4.568,1273,4.159,1274,4.568,1275,5.633,1276,5.382,1277,4.427,1278,5.382,1279,5.142,1280,6.323,1281,7.003,1282,8.151,1283,6.323,1284,7.836,1285,5.661,1286,4.568,1287,3.98,1288,6.323,1289,6.323,1290,5.633,1291,6.323,1292,6.323,1293,6.323,1294,6.323,1295,6.323,1296,6.323,1297,6.323]],["title/interfaces/Day.html",[368,1.369,1298,4.133]],["body/interfaces/Day.html",[0,0.298,3,0.181,4,0.187,10,0.141,12,0.394,17,0.838,22,2.269,23,2.323,26,0.007,32,1.296,33,0.745,34,0.64,37,0.838,39,0.911,40,0.627,42,1.629,46,1.304,57,1.548,68,0.825,69,1.802,73,2.119,84,1.262,87,2.436,88,1.826,89,0.767,90,1.626,98,1.794,102,0.714,138,3,143,2.215,152,0.28,154,0.3,166,1.421,167,0.188,168,0.331,183,1.521,186,3.092,188,1.626,283,0.867,298,1.156,342,0.002,343,0.003,344,0.002,368,1.673,370,1.476,377,1.846,398,1.346,449,2.246,493,2.902,519,1.859,529,1.346,544,4.048,548,1.586,567,2.727,592,2.351,593,1.869,662,4.02,663,1.716,755,1.946,759,2.216,860,3.235,878,3.049,879,5.496,881,5.544,883,7.861,888,1.381,927,2.155,958,3.01,963,1.586,1028,4.848,1033,1.245,1034,1.987,1045,1.443,1048,2.649,1066,3.259,1146,2.473,1153,1.833,1155,2.246,1183,1.67,1215,2.62,1238,4.578,1240,2.246,1244,7.759,1247,2.473,1266,7.759,1268,5.301,1269,2.473,1272,3.933,1286,2.473,1287,2.155,1298,7.852,1299,3.049,1300,7.348,1301,3.904,1302,6.875,1303,7.348,1304,5.497,1305,8.577,1306,4.208,1307,3.712,1308,6.546,1309,8.823,1310,6.169,1311,3.712,1312,2.803,1313,2.351,1314,2.246,1315,3.423,1316,2.803,1317,3.423,1318,5.496,1319,5.138,1320,6.018,1321,2.903,1322,5.138,1323,3.049,1324,2.62,1325,1.873,1326,3.423,1327,3.423,1328,3.423,1329,7.716,1330,2.62,1331,3.423,1332,3.423,1333,3.423,1334,2.803,1335,3.423,1336,2.62,1337,4.208,1338,1.764,1339,3.423,1340,3.423,1341,3.423,1342,3.423,1343,3.423,1344,3.423,1345,6.856,1346,3.423,1347,3.423,1348,3.423,1349,4.578,1350,3.423,1351,3.423,1352,3.423,1353,3.423,1354,3.423,1355,3.423,1356,3.423,1357,3.423,1358,7.716,1359,5.138,1360,6.169,1361,5.138,1362,6.169,1363,5.138,1364,3.423,1365,3.423,1366,3.423,1367,3.423,1368,3.423,1369,7.348,1370,3.423,1371,3.423,1372,3.423,1373,3.423,1374,3.423,1375,3.423,1376,6.856,1377,3.423,1378,5.138,1379,5.138,1380,5.052,1381,3.423,1382,3.423,1383,3.423,1384,3.423,1385,3.423,1386,5.138,1387,3.423,1388,3.423,1389,5.138,1390,2.473,1391,1.67,1392,3.423,1393,3.423,1394,3.423,1395,3.423,1396,3.423,1397,3.423,1398,3.423,1399,3.423,1400,5.138,1401,3.423,1402,3.423,1403,3.423,1404,5.052,1405,3.423,1406,3.423,1407,3.423,1408,3.423,1409,3.423,1410,3.423,1411,3.423,1412,3.423,1413,6.169,1414,6.169,1415,3.423,1416,6.169,1417,3.423,1418,3.423,1419,3.423,1420,3.423,1421,5.138,1422,3.423,1423,3.423,1424,3.423,1425,3.423,1426,3.049,1427,6.169,1428,3.423,1429,2.62,1430,3.049,1431,2.073,1432,3.423,1433,3.423,1434,3.423,1435,5.616,1436,5.138,1437,3.423,1438,3.423,1439,3.423,1440,3.423,1441,3.423,1442,3.712,1443,3.423,1444,3.423,1445,3.423,1446,2.473,1447,3.423,1448,3.423,1449,3.423,1450,3.423,1451,3.423,1452,3.423,1453,3.423,1454,3.423,1455,3.423,1456,2.073,1457,3.423,1458,2.62,1459,3.423,1460,3.423,1461,3.423,1462,3.423,1463,3.423,1464,3.423]],["title/components/DefaultEntryInputComponent.html",[0,0.292,228,1.256]],["body/components/DefaultEntryInputComponent.html",[0,0.456,1,1.022,2,1.066,3,0.213,4,0.22,5,1.428,7,1.094,8,1.057,10,0.167,12,0.465,20,2.29,21,2.252,24,0.908,26,0.007,32,0.635,33,2.195,34,1.88,37,1.419,39,0.429,40,0.708,42,1.667,45,0.946,46,1.818,47,3.402,48,2.368,49,3.651,50,4.884,51,2.997,52,2.048,53,5.661,54,0.913,63,3.719,64,4.112,68,0.809,70,1.166,72,1.103,84,0.693,89,0.866,90,1.283,100,0.851,101,1.051,102,0.604,118,2.772,119,4.662,120,3.089,121,1.135,122,3.089,127,1.468,129,1.005,131,1.812,139,2.28,140,3.089,141,3.089,142,1.664,143,1.748,144,3.089,145,2.28,146,4.438,147,2.445,148,3.089,149,3.089,150,2.772,151,4.623,152,0.259,154,0.353,156,1.261,167,0.148,168,0.173,198,0.755,199,1.546,200,0.835,202,1.978,203,1.094,204,1.094,205,0.988,206,1.841,207,0.988,208,1.039,209,0.939,210,1.022,211,1.039,212,2.287,213,1.022,214,1.553,215,2.013,216,1.039,217,1.405,218,2.34,219,1.039,220,1.039,221,1.094,222,1.022,223,1.573,224,1.039,225,1.094,226,1.022,227,1.094,228,1.847,229,0.988,230,1.855,231,1.841,232,1.005,233,1.022,234,1.022,235,1.005,236,1.094,237,1.039,238,2.132,239,1.039,240,1.022,241,1.039,242,1.039,243,1.039,244,1.022,245,1.094,246,1.005,247,1.039,248,1.094,249,1.022,250,1.094,251,1.022,252,1.022,253,1.16,254,1.094,255,1.022,256,1.094,257,1.005,258,1.022,259,1.094,260,1.022,261,1.094,262,0.939,263,1.094,264,1.022,265,1.606,266,1.094,267,1.005,268,1.094,269,1.022,270,1.094,271,0.988,272,1.094,273,1.022,274,1.005,275,1.022,276,0.971,277,1.094,278,1.022,279,1.094,280,1.094,281,1.022,282,1.094,283,1.022,284,1.094,285,0.988,286,1.094,287,1.005,288,1.022,289,1.094,290,1.022,291,1.057,292,1.094,293,1.005,294,1.022,295,1.908,296,1.022,297,1.039,298,0.908,299,1.039,300,1.039,301,1.022,302,1.039,303,1.039,304,1.039,305,1.094,306,1.005,307,1.022,308,1.094,309,1.022,310,1.057,311,1.022,312,1.094,313,1.022,314,1.094,315,1.039,316,1.022,317,1.022,318,1.094,319,1.022,320,1.094,321,1.022,322,1.094,323,1.022,324,0.971,325,0.955,326,0.988,327,1.094,328,1.005,329,1.094,330,1.005,331,1.094,332,1.005,333,1.094,334,1.005,335,1.094,336,1.005,337,1.076,338,1.094,339,1.005,340,1.076,341,1.094,342,0.003,343,0.004,344,0.003,393,1.594,440,5.679,442,2.916,443,3.173,444,3.651,445,2.989,456,4.438,457,3.129,458,0.807,459,2.208,460,3.171,463,1.825,465,3.305,466,3.305,467,4.75,468,4.75,469,3.513,1222,4.761,1306,4.75,1465,4.035,1466,6.788]],["title/components/DefaultEntryOutputComponent.html",[0,0.292,229,1.235]],["body/components/DefaultEntryOutputComponent.html",[0,0.507,1,1.161,2,1.167,3,0.242,4,0.25,5,0.964,7,1.244,8,1.201,10,0.189,12,0.528,21,1.122,24,1.031,26,0.006,33,2.205,34,1.89,37,1.553,39,0.487,40,0.774,42,0.857,48,2.503,52,2.459,68,0.568,70,0.804,101,1.046,121,1.172,127,1.607,129,1.141,152,0.242,154,0.402,167,0.168,168,0.197,198,0.857,199,1.692,200,0.948,202,2.093,203,1.244,204,1.244,205,1.122,206,1.974,207,1.122,208,1.181,209,1.067,210,1.161,211,1.181,212,2.371,213,1.161,214,1.665,215,2.13,216,1.181,217,1.465,218,2.417,219,1.181,220,1.181,221,1.244,222,1.161,223,1.721,224,1.181,225,1.244,226,1.161,227,1.244,228,1.141,229,1.922,230,1.892,231,1.974,232,1.141,233,1.161,234,1.161,235,1.141,236,1.244,237,1.181,238,2.236,239,1.181,240,1.161,241,1.181,242,1.181,243,1.181,244,1.161,245,1.244,246,1.141,247,1.181,248,1.244,249,1.161,250,1.244,251,1.161,252,1.161,253,1.269,254,1.244,255,1.161,256,1.244,257,1.141,258,1.161,259,1.244,260,1.161,261,1.244,262,1.067,263,1.244,264,1.161,265,1.722,266,1.244,267,1.141,268,1.244,269,1.161,270,1.244,271,1.122,272,1.244,273,1.161,274,1.141,275,1.161,276,1.103,277,1.244,278,1.161,279,1.244,280,1.244,281,1.161,282,1.244,283,1.161,284,1.244,285,1.122,286,1.244,287,1.141,288,1.161,289,1.244,290,1.161,291,1.201,292,1.244,293,1.141,294,1.161,295,1.972,296,1.161,297,1.181,298,1.031,299,1.181,300,1.181,301,1.161,302,1.181,303,1.181,304,1.181,305,1.244,306,1.141,307,1.161,308,1.244,309,1.161,310,1.201,311,1.161,312,1.244,313,1.161,314,1.244,315,1.181,316,1.161,317,1.161,318,1.244,319,1.161,320,1.244,321,1.161,322,1.244,323,1.161,324,1.103,325,1.085,326,1.122,327,1.244,328,1.141,329,1.244,330,1.141,331,1.244,332,1.141,333,1.244,334,1.141,335,1.244,336,1.141,337,1.222,338,1.244,339,1.141,340,1.222,341,1.244,342,0.003,343,0.004,344,0.003,381,1.31,440,5.257,443,3.472,444,3.995,445,3.271,466,3.755,467,5.197,468,5.197,469,3.844,519,2.761,785,3.995,1222,4.408,1306,5.197,1391,3.096,1467,3.755,1468,5.653,1469,4.085,1470,4.085,1471,5.197]],["title/components/DefaultInputComponent.html",[0,0.292,21,1.235]],["body/components/DefaultInputComponent.html",[0,0.449,1,0.982,2,1.036,3,0.205,4,0.212,5,0.816,7,1.052,8,1.017,10,0.16,12,0.447,17,1.38,21,1.783,23,1.754,24,0.873,26,0.007,32,0.888,33,2.192,34,1.877,37,1.38,39,0.412,40,0.688,42,1.558,45,0.919,46,1.785,47,3.879,48,2.542,49,4.179,50,4.618,51,3.417,52,2.355,53,5.079,54,0.888,63,4.278,64,4.414,68,0.765,70,1.12,72,1.386,84,0.968,89,0.842,90,1.247,100,0.827,101,1.041,102,0.587,118,3.871,121,1.062,127,1.427,129,0.966,131,2.277,139,3.75,142,2.324,143,2.333,145,3.184,147,4.021,150,3.871,151,4.372,152,0.308,154,0.34,155,1.565,167,0.142,168,0.167,198,0.725,199,1.502,200,0.803,202,1.942,203,1.052,204,1.052,205,0.95,206,1.8,207,0.95,208,0.999,209,0.903,210,0.982,211,0.999,212,2.259,213,0.982,214,1.519,215,1.976,216,0.999,217,1.386,218,2.315,219,0.999,220,0.999,221,1.052,222,0.982,223,1.529,224,0.999,225,1.052,226,0.982,227,1.052,228,0.966,229,0.95,230,1.666,231,1.8,232,0.966,233,0.982,234,0.982,235,0.966,236,1.052,237,0.999,238,2.099,239,0.999,240,0.982,241,0.999,242,0.999,243,0.999,244,0.982,245,1.052,246,0.966,247,0.999,248,1.052,249,0.982,250,1.052,251,0.982,252,0.982,253,1.127,254,1.052,255,0.982,256,1.052,257,0.966,258,0.982,259,1.052,260,0.982,261,1.052,262,0.903,263,1.052,264,0.982,265,1.571,266,1.052,267,0.966,268,1.052,269,0.982,270,1.052,271,0.95,272,1.052,273,0.982,274,0.966,275,0.982,276,0.934,277,1.052,278,0.982,279,1.052,280,1.052,281,0.982,282,1.052,283,0.982,284,1.052,285,0.95,286,1.052,287,0.966,288,0.982,289,1.052,290,0.982,291,1.017,292,1.052,293,0.966,294,0.982,295,1.888,296,0.982,297,0.999,298,0.873,299,0.999,300,0.999,301,0.982,302,0.999,303,0.999,304,0.999,305,1.052,306,0.966,307,0.982,308,1.052,309,0.982,310,1.017,311,0.982,312,1.052,313,0.982,314,1.052,315,0.999,316,0.982,317,0.982,318,1.052,319,0.982,320,1.052,321,0.982,322,1.052,323,0.982,324,0.934,325,0.918,326,0.95,327,1.052,328,0.966,329,1.052,330,0.966,331,1.052,332,0.966,333,1.052,334,0.966,335,1.052,336,0.966,337,1.034,338,1.052,339,0.966,340,1.034,341,1.052,342,0.003,343,0.004,344,0.003,381,1.109,393,1.532,435,2.35,442,2.803,443,3.084,444,3.548,445,2.905,456,4.314,458,0.776,462,3.456,483,2.825,695,4.314,763,3.414,1471,4.616,1472,7.333,1473,6.853,1474,5.021,1475,5.081,1476,3.88,1477,5.636,1478,3.88,1479,3.88,1480,3.88,1481,5.636,1482,3.88,1483,3.88,1484,3.88,1485,3.177,1486,3.88,1487,3.177,1488,3.88,1489,3.88,1490,3.88,1491,2.665,1492,5.636,1493,5.636,1494,7.286]],["title/components/DefaultOutputComponent.html",[0,0.292,232,1.256]],["body/components/DefaultOutputComponent.html",[0,0.42,1,1.152,2,1.16,3,0.24,4,0.248,5,0.957,7,1.234,8,1.192,10,0.188,12,0.524,21,1.114,24,1.024,26,0.006,33,2.205,34,1.89,37,1.545,39,0.483,40,0.77,42,1.355,48,2.568,52,2.524,68,0.565,70,0.8,101,1.044,121,1.119,127,1.598,129,1.133,150,4.335,152,0.241,154,0.398,167,0.166,168,0.195,198,0.851,199,1.683,200,0.941,202,2.087,203,1.234,204,1.234,205,1.114,206,1.966,207,1.114,208,1.172,209,1.059,210,1.152,211,1.172,212,2.366,213,1.152,214,1.658,215,2.123,216,1.172,217,1.461,218,2.413,219,1.172,220,1.172,221,1.234,222,1.152,223,1.712,224,1.172,225,1.234,226,1.152,227,1.234,228,1.133,229,1.114,230,1.745,231,1.966,232,1.949,233,1.152,234,1.152,235,1.133,236,1.234,237,1.172,238,2.23,239,1.172,240,1.152,241,1.172,242,1.172,243,1.172,244,1.152,245,1.234,246,1.133,247,1.172,248,1.234,249,1.152,250,1.234,251,1.152,252,1.152,253,1.262,254,1.234,255,1.152,256,1.234,257,1.133,258,1.152,259,1.234,260,1.152,261,1.234,262,1.059,263,1.234,264,1.152,265,1.715,266,1.234,267,1.133,268,1.234,269,1.152,270,1.234,271,1.114,272,1.234,273,1.152,274,1.133,275,1.152,276,1.095,277,1.234,278,1.152,279,1.234,280,1.234,281,1.152,282,1.234,283,1.152,284,1.234,285,1.114,286,1.234,287,1.133,288,1.152,289,1.234,290,1.152,291,1.192,292,1.234,293,1.133,294,1.152,295,1.968,296,1.152,297,1.172,298,1.024,299,1.172,300,1.172,301,1.152,302,1.172,303,1.172,304,1.172,305,1.234,306,1.133,307,1.152,308,1.234,309,1.152,310,1.192,311,1.152,312,1.234,313,1.152,314,1.234,315,1.172,316,1.152,317,1.152,318,1.234,319,1.152,320,1.234,321,1.152,322,1.234,323,1.152,324,1.095,325,1.077,326,1.114,327,1.234,328,1.133,329,1.234,330,1.133,331,1.234,332,1.133,333,1.234,334,1.133,335,1.234,336,1.133,337,1.213,338,1.234,339,1.133,340,1.213,341,1.234,342,0.003,343,0.004,344,0.003,381,1.3,388,2.661,443,3.453,444,3.973,519,2.359,778,3.35,785,3.973,1246,3.688,1467,3.726,1468,5.623,1469,4.053,1470,4.053,1471,7.883,1472,5.936,1495,5.547,1496,6.312,1497,4.55,1498,4.55,1499,7.827,1500,4.335]],["title/directives/DropzoneDirective.html",[200,1.044,328,1.256]],["body/directives/DropzoneDirective.html",[3,0.3,4,0.31,10,0.235,12,0.654,24,1.278,26,0.007,32,1.395,33,1.593,39,0.604,42,1.369,45,0.926,46,1.08,65,1.823,68,0.726,70,1.17,84,0.976,100,0.834,101,0.68,102,0.591,121,0.747,123,3.871,127,2.168,143,2.58,152,0.217,154,0.498,167,0.208,168,0.348,188,1.521,200,1.771,325,1.344,328,1.823,342,0.004,343,0.005,344,0.004,377,1.515,398,2.45,458,1.136,480,2.774,517,5.301,519,2.207,631,3.775,633,4.61,670,2.343,917,3.508,1045,3.609,1183,4.75,1216,6.554,1240,5.319,1272,6.203,1380,6.638,1501,5.062,1502,6.525,1503,7.324,1504,8.86,1505,5.605,1506,7.324,1507,5.03,1508,8.561,1509,9.071,1510,5.062,1511,5.682,1512,5.291,1513,5.682,1514,6.525,1515,7.324,1516,5.682,1517,8.561,1518,5.682,1519,7.324,1520,3.887,1521,5.566,1522,5.682,1523,5.682,1524,6.554,1525,5.682,1526,5.682,1527,5.682,1528,5.682,1529,4.105,1530,5.062,1531,5.062,1532,5.682,1533,5.682,1534,6.638,1535,7.893,1536,5.682,1537,5.682,1538,5.682,1539,5.682,1540,5.682,1541,5.682,1542,5.682]],["title/components/DynamicRackComponent.html",[0,0.292,233,1.278]],["body/components/DynamicRackComponent.html",[0,0.425,1,1.177,2,1.178,3,0.246,4,0.253,5,0.978,7,1.261,8,1.218,10,0.192,12,0.535,21,1.138,24,1.046,26,0.006,33,2.206,34,1.893,37,1.568,42,0.869,48,1.799,68,0.416,70,0.589,72,1.629,85,2.701,100,0.682,101,1.07,102,0.484,121,0.843,127,1.622,129,1.157,131,2.002,152,0.244,154,0.407,167,0.17,168,0.2,198,0.869,199,1.708,200,1.516,202,2.106,203,1.261,204,1.261,205,1.138,206,1.988,207,1.138,208,1.197,209,1.082,210,1.177,211,1.197,212,2.38,213,1.177,214,1.677,215,2.143,216,1.197,217,1.535,218,2.425,219,1.197,220,1.197,221,1.261,222,1.177,223,1.738,224,1.197,225,1.261,226,1.177,227,1.261,228,1.157,229,1.138,230,1.756,231,1.988,232,1.157,233,2,234,1.177,235,1.967,236,1.261,237,1.197,238,2.247,239,1.197,240,1.177,241,1.197,242,1.197,243,1.197,244,1.177,245,1.261,246,1.157,247,1.197,248,1.261,249,1.177,250,1.261,251,1.177,252,1.177,253,1.281,254,1.261,255,1.177,256,1.261,257,1.157,258,1.177,259,1.261,260,1.177,261,1.261,262,1.082,263,1.261,264,1.177,265,1.735,266,1.261,267,1.157,268,1.261,269,1.177,270,1.261,271,1.138,272,1.261,273,1.177,274,1.157,275,1.177,276,1.119,277,1.261,278,1.177,279,1.261,280,1.261,281,1.177,282,1.261,283,1.177,284,1.261,285,1.138,286,1.261,287,1.157,288,1.177,289,1.261,290,1.177,291,1.218,292,1.261,293,1.157,294,1.177,295,1.978,296,1.177,297,1.197,298,1.046,299,1.197,300,1.197,301,1.177,302,1.197,303,1.197,304,1.197,305,1.261,306,1.157,307,1.177,308,1.261,309,1.177,310,1.218,311,1.177,312,1.261,313,1.177,314,1.261,315,1.197,316,1.177,317,1.177,318,1.261,319,1.177,320,1.261,321,1.177,322,1.261,323,1.177,324,1.119,325,1.1,326,1.138,327,1.261,328,1.157,329,1.261,330,1.157,331,1.261,332,1.157,333,1.261,334,1.157,335,1.261,336,1.157,337,1.239,338,1.261,339,1.157,340,1.239,341,1.261,342,0.003,343,0.004,344,0.003,458,1.466,580,2.378,670,1.917,1066,3.045,1153,1.658,1391,3.125,1543,5.247,1544,5.247,1545,4.142,1546,5.247,1547,6.407,1548,4.142,1549,6.555,1550,4.649,1551,5.247,1552,5.247,1553,5.247,1554,5.708,1555,5.247,1556,4.649,1557,4.649,1558,4.649]],["title/components/DynamicSlotComponent.html",[0,0.292,234,1.278]],["body/components/DynamicSlotComponent.html",[0,0.481,1,1.067,2,1.391,3,0.223,4,0.23,5,0.887,7,1.143,8,1.104,10,0.174,12,0.485,21,1.032,24,0.948,26,0.007,33,2.2,34,1.887,37,1.464,39,0.448,40,0.73,42,0.788,45,0.687,46,1.138,48,2.331,52,1.651,54,0.942,68,0.782,70,0.959,72,1.659,85,2.522,87,2.362,88,1.415,89,0.629,100,0.878,101,1.062,102,0.623,121,1.051,124,1.664,127,1.515,129,1.049,131,1.869,138,2.092,152,0.228,153,1.906,154,0.369,166,1.345,167,0.154,168,0.181,188,0.749,198,0.788,199,1.595,200,1.438,202,2.018,203,1.143,204,1.143,205,1.032,206,1.886,207,1.032,208,1.086,209,0.981,210,1.067,211,1.086,212,2.316,213,1.067,214,1.591,215,2.053,216,1.086,217,1.498,218,2.367,219,1.086,220,1.086,221,1.143,222,1.067,223,1.622,224,1.086,225,1.143,226,1.067,227,1.143,228,1.049,229,1.032,230,1.708,231,1.886,232,1.049,233,1.067,234,1.916,235,1.99,236,1.143,237,1.086,238,2.168,239,1.086,240,1.067,241,1.086,242,1.086,243,1.086,244,1.067,245,1.143,246,1.049,247,1.086,248,1.143,249,1.067,250,1.143,251,1.067,252,1.067,253,1.196,254,1.143,255,1.067,256,1.143,257,1.049,258,1.067,259,1.143,260,1.067,261,1.143,262,0.981,263,1.143,264,1.067,265,1.645,266,1.143,267,1.049,268,1.143,269,1.067,270,1.143,271,1.032,272,1.143,273,1.067,274,1.049,275,1.067,276,1.014,277,1.143,278,1.067,279,1.143,280,1.143,281,1.067,282,1.143,283,1.067,284,1.143,285,1.032,286,1.143,287,1.049,288,1.067,289,1.143,290,1.067,291,1.104,292,1.143,293,1.049,294,1.067,295,1.93,296,1.067,297,1.086,298,0.948,299,1.086,300,1.086,301,1.067,302,1.086,303,1.086,304,1.086,305,1.143,306,1.049,307,1.067,308,1.143,309,1.067,310,1.104,311,1.067,312,1.143,313,1.067,314,1.143,315,1.086,316,1.067,317,1.067,318,1.143,319,1.067,320,1.143,321,1.067,322,1.143,323,1.067,324,1.014,325,0.997,326,1.032,327,1.143,328,1.049,329,1.143,330,1.049,331,1.143,332,1.049,333,1.143,334,1.049,335,1.143,336,1.049,337,1.123,338,1.143,339,1.884,340,1.123,341,1.143,342,0.003,343,0.004,344,0.003,393,1.664,458,1.391,472,3.379,580,2.22,759,2.999,1066,3.597,1153,2.133,1391,2.918,1543,6.546,1546,4.899,1548,3.755,1549,6.794,1551,4.899,1552,5.695,1553,4.899,1554,5.329,1555,4.899,1559,5.774,1560,3.755,1561,5.322,1562,4.899,1563,6.546,1564,4.899,1565,5.982,1566,4.899,1567,6.199,1568,4.214,1569,6.546,1570,4.214,1571,4.899,1572,4.899,1573,4.899,1574,3.755,1575,4.214,1576,4.214,1577,4.214,1578,4.214,1579,4.214,1580,4.214]],["title/directives/EntriesDirective.html",[200,1.044,330,1.256]],["body/directives/EntriesDirective.html",[0,0.25,3,0.228,4,0.236,5,0.909,9,1.822,10,0.179,12,0.497,17,1.49,23,3.187,24,0.972,26,0.007,32,1.27,33,1.324,34,0.808,39,0.459,40,0.743,42,1.565,45,1.149,46,1.698,54,0.959,55,2.293,56,3.546,65,1.516,68,0.811,69,1.218,70,1.217,72,1.34,88,1.811,89,1.351,90,1.693,100,0.893,101,0.729,102,0.634,117,3.452,121,0.927,133,3.255,138,2.677,152,0.335,154,0.378,156,1.903,166,0.836,167,0.158,168,0.185,183,1.279,188,1.528,200,1.259,201,1.822,217,1.21,262,1.64,325,1.022,330,1.516,342,0.003,343,0.004,344,0.003,375,1.743,377,1.583,387,1.74,398,1.847,457,3.227,458,1.218,459,2.364,460,3.087,463,1.954,470,1.511,472,4.323,476,4.706,478,5.093,481,4.891,483,3.051,487,3.231,491,4.398,504,3.995,506,3.231,523,3.307,526,3.307,527,3.122,531,2.525,534,6.268,550,3.562,576,5.132,600,6.911,631,2.227,648,1.671,655,3.648,669,1.441,671,3.396,892,4.526,965,5.395,1017,3.741,1032,4.558,1033,2.935,1034,3.119,1086,3.122,1105,3.849,1108,2.617,1120,4.626,1154,3.633,1156,4.802,1581,3.849,1582,5.423,1583,6.818,1584,6.818,1585,6.818,1586,6.818,1587,6.088,1588,6.28,1589,6.088,1590,4.321,1591,4.321,1592,4.398,1593,4.181,1594,5.423,1595,6.088,1596,4.321,1597,4.321,1598,4.321,1599,7.653,1600,4.321,1601,4.986,1602,4.321,1603,4.321,1604,4.321,1605,4.321,1606,4.321,1607,4.321,1608,6.088,1609,4.321,1610,4.321,1611,4.626,1612,4.321,1613,4.321,1614,4.181,1615,4.321,1616,3.849,1617,4.321,1618,2.835,1619,3.849,1620,4.321,1621,7.049,1622,6.088,1623,3.539,1624,4.321,1625,4.321,1626,4.321,1627,3.539,1628,3.849,1629,7.049,1630,2.72,1631,4.321,1632,6.28,1633,7.653,1634,7.049,1635,4.321,1636,4.321,1637,4.321,1638,4.321,1639,4.321,1640,4.321,1641,4.321,1642,4.321]],["title/directives/EntryDirective.html",[200,1.044,332,1.256]],["body/directives/EntryDirective.html",[3,0.266,4,0.275,5,1.793,9,2.125,10,0.208,12,0.58,17,1.657,23,3.456,24,1.134,26,0.007,32,1.066,33,1.473,34,0.943,39,0.536,40,0.826,42,1.641,46,1.669,54,1.066,56,3.786,65,1.685,68,0.843,69,1.634,70,1.208,72,1.453,84,0.866,89,1.011,90,1.115,100,0.74,101,0.603,102,0.525,117,3.466,133,3.438,138,2.368,143,2.463,152,0.325,154,0.442,156,2.116,167,0.184,168,0.216,188,1.452,200,1.581,201,2.125,230,1.963,262,1.778,325,1.193,332,1.685,342,0.003,343,0.004,344,0.003,373,4.281,375,2.034,377,1.4,398,1.321,457,3.444,458,1.354,459,2.758,460,3.296,463,2.279,469,4.949,470,1.763,472,4.616,476,4.905,478,5.522,479,6.157,480,2.564,481,5.572,483,3.393,486,1.969,487,3.593,491,4.891,493,2.673,496,3.956,499,3.217,500,3.061,501,6.031,504,4.442,506,3.593,508,4.491,509,3.308,519,2.04,523,3.858,526,3.858,527,3.642,531,2.946,534,5.544,550,3.763,648,1.949,655,3.854,671,1.991,1017,4.056,1032,4.815,1033,3.1,1034,3.295,1086,3.642,1108,3.054,1120,3.308,1582,6.031,1611,3.308,1618,3.308,1630,3.173,1632,4.491,1643,4.491,1644,7.643,1645,6.26,1646,6.769,1647,5.041,1648,5.041,1649,5.041,1650,5.041,1651,5.041,1652,5.041,1653,5.041,1654,5.041,1655,5.041,1656,5.041,1657,5.041,1658,5.041,1659,6.769,1660,5.041,1661,5.041,1662,4.491,1663,5.041,1664,5.041,1665,5.041]],["title/components/EntryListPopComponent.html",[0,0.292,240,1.278]],["body/components/EntryListPopComponent.html",[0,0.338,1,0.792,2,0.882,3,0.165,4,0.171,5,0.658,7,1.302,8,0.82,10,0.129,12,0.36,17,1.175,20,1.895,21,0.766,23,2.64,24,0.704,26,0.007,32,1.261,33,2.176,34,1.863,37,1.175,39,0.332,40,0.586,41,1.768,42,1.321,45,1.068,46,1.757,52,1.325,54,0.756,56,3.035,65,1.195,68,0.828,69,1.31,70,1.207,72,1.11,78,2.474,79,2.474,84,0.537,87,1.895,88,0.74,89,1.159,90,1.563,100,1.094,101,1.048,102,0.776,116,2.474,117,2.731,119,4.647,121,0.981,123,4.003,124,1.236,127,1.887,129,0.779,143,2.129,152,0.284,153,1.415,154,0.274,156,0.978,166,0.605,167,0.114,168,0.32,186,2.406,188,0.556,198,0.585,199,1.28,200,0.647,202,1.746,203,0.849,204,0.849,205,0.766,206,1.584,207,0.766,208,0.806,209,0.728,210,0.792,211,0.806,212,2.105,213,0.792,214,1.336,215,1.776,216,0.806,217,1.681,218,2.172,219,0.806,220,0.806,221,0.849,222,0.792,223,1.302,224,0.806,225,0.849,226,0.792,227,0.849,228,0.779,229,0.766,230,1.752,231,1.584,232,0.779,233,0.792,234,0.792,235,0.779,236,0.849,237,0.806,238,1.916,239,0.806,240,1.658,241,0.806,242,0.806,243,0.806,244,0.792,245,0.849,246,0.779,247,0.806,248,0.849,249,0.792,250,0.849,251,0.792,252,0.792,253,1.31,254,0.849,255,0.792,256,0.849,257,0.779,258,0.792,259,0.849,260,0.792,261,0.849,262,0.728,263,0.849,264,0.792,265,1.382,266,0.849,267,0.779,268,0.849,269,0.792,270,0.849,271,0.766,272,0.849,273,0.792,274,0.779,275,0.792,276,0.753,277,0.849,278,0.792,279,0.849,280,0.849,281,0.792,282,0.849,283,0.792,284,0.849,285,0.766,286,0.849,287,0.779,288,0.792,289,0.849,290,0.792,291,0.82,292,0.849,293,2.26,294,0.792,295,1.771,296,0.792,297,0.806,298,0.704,299,0.806,300,0.806,301,0.792,302,0.806,303,0.806,304,1.687,305,0.849,306,0.779,307,0.792,308,0.849,309,0.792,310,0.82,311,0.792,312,0.849,313,0.792,314,0.849,315,0.806,316,0.792,317,0.792,318,0.849,319,0.792,320,0.849,321,0.792,322,0.849,323,0.792,324,0.753,325,0.74,326,0.766,327,0.849,328,0.779,329,0.849,330,0.779,331,0.849,332,0.779,333,0.849,334,0.779,335,0.849,336,0.779,337,0.834,338,0.849,339,0.779,340,0.834,341,0.849,342,0.002,343,0.003,344,0.002,377,0.993,378,3.748,381,0.894,387,1.669,388,2.024,394,3.956,398,1.716,414,2.149,433,2.908,440,6.51,458,0.96,480,1.818,502,1.895,519,1.447,529,1.851,600,2.261,631,2.474,632,1.781,633,3.022,645,2.908,659,2.17,784,1.568,900,3.967,917,2.258,919,1.895,943,1.829,952,3.297,963,3.711,1001,1.829,1027,4.446,1030,4.122,1031,3.99,1036,3.412,1045,2.024,1051,1.829,1065,4.207,1076,1.712,1079,6.896,1081,2.053,1086,2.261,1109,3.375,1117,2.149,1118,2.149,1169,3.676,1183,3.786,1301,1.526,1505,3.674,1507,3.297,1520,3.099,1521,2.149,1529,2.261,1611,2.053,1618,2.053,1666,2.395,1667,3.674,1668,4.783,1669,4.897,1670,3.832,1671,3.468,1672,4.8,1673,3.468,1674,2.775,1675,3.468,1676,3.297,1677,4.219,1678,3.129,1679,4.276,1680,2.788,1681,2.788,1682,2.563,1683,2.395,1684,2.149,1685,2.395,1686,1.829,1687,2.261,1688,2.395,1689,2.261,1690,2.149,1691,2.395,1692,2.788,1693,2.395,1694,3.931,1695,4.011,1696,2.788,1697,2.261,1698,2.395,1699,2.053,1700,6.548,1701,3.129,1702,2.788,1703,3.674,1704,3.129,1705,4.276,1706,2.395,1707,3.468,1708,2.261,1709,2.395,1710,1.712,1711,1.97,1712,2.261,1713,2.261,1714,2.395,1715,2.547,1716,2.261,1717,2.395,1718,2.788,1719,2.563,1720,2.788,1721,2.788,1722,4.276,1723,2.563,1724,2.395,1725,2.261,1726,2.261,1727,2.395,1728,2.395,1729,2.261,1730,2.563,1731,2.395,1732,3.129,1733,3.129,1734,2.563,1735,2.261,1736,2.395,1737,2.788,1738,3.129,1739,3.129]],["title/injectables/EntryService.html",[660,1.494,1206,3.466]],["body/injectables/EntryService.html",[0,0.324,3,0.202,4,0.209,10,0.158,12,0.441,15,1.652,26,0.007,32,1.212,39,0.407,40,0.804,45,1.565,46,1.253,48,1.568,52,2.29,54,0.879,68,0.809,69,1.806,70,1.099,72,1.377,78,2.878,79,2.878,83,4.034,84,1.38,88,2.228,89,1.295,98,2.626,100,1.248,101,1.018,102,0.885,117,3.353,121,0.734,131,1.197,133,2.921,142,2.302,152,0.307,154,0.335,166,1.4,167,0.14,168,0.164,183,1.134,188,1.645,193,2.163,230,1.9,295,1.602,298,1.913,342,0.003,343,0.004,344,0.003,369,2.963,373,1.868,377,0.792,381,1.094,387,2.2,390,1.481,398,1.463,422,5.043,450,3.515,457,3.053,458,0.766,459,2.095,460,2.921,463,1.732,483,2.798,486,1.114,496,4.697,502,2.205,514,4.148,531,2.238,546,3.968,548,3.725,552,3.843,579,2.354,580,2.983,584,2.548,593,2.031,619,1.974,631,2.878,632,1.421,650,3.515,660,1.653,663,1.919,670,1.579,713,1.775,759,4.019,778,4.086,805,4.324,817,2.411,818,2.63,825,2.513,913,5.052,937,1.974,943,3.263,970,3.605,995,3.533,1019,3.154,1045,3.053,1152,2.654,1153,1.366,1156,4.086,1157,2.931,1178,2.32,1206,3.835,1456,4.387,1611,5.052,1618,2.513,1662,3.411,1710,3.055,1740,3.411,1741,2.724,1742,4.034,1743,4.034,1744,3.263,1745,2.724,1746,3.835,1747,3.835,1748,5.149,1749,5.931,1750,4.974,1751,4.974,1752,4.324,1753,3.829,1754,4.573,1755,3.829,1756,3.382,1757,4.573,1758,4.232,1759,7.241,1760,3.829,1761,3.382,1762,5.583,1763,3.829,1764,5.583,1765,3.829,1766,4.573,1767,4.573,1768,3.829,1769,3.382,1770,3.851,1771,5.583,1772,8.297,1773,3.829,1774,4.573,1775,4.034,1776,4.974,1777,4.034,1778,5.583,1779,6.589,1780,3.829,1781,3.829,1782,2.767,1783,5.583,1784,3.829,1785,3.829,1786,3.829,1787,3.136,1788,3.829,1789,2.767,1790,3.136,1791,3.829,1792,3.991,1793,3.829,1794,3.829,1795,3.829,1796,3.136,1797,3.829,1798,5.583,1799,3.829,1800,3.829,1801,3.829,1802,5.583,1803,6.589,1804,5.397,1805,3.136,1806,3.136,1807,3.136,1808,3.829,1809,3.829,1810,3.411,1811,5.583,1812,4.573,1813,3.829,1814,2.767,1815,3.829,1816,5.043,1817,6.589,1818,3.136,1819,3.136,1820,3.136,1821,3.136,1822,3.136,1823,6.305,1824,2.513,1825,2.63,1826,3.136,1827,3.829,1828,5.583,1829,3.829,1830,3.829,1831,3.829,1832,3.829,1833,3.829,1834,4.974,1835,3.411,1836,3.829]],["title/components/ErrorComponent.html",[0,0.292,244,1.278]],["body/components/ErrorComponent.html",[0,0.41,1,1.1,2,1.124,3,0.23,4,0.237,5,0.914,7,1.179,8,1.139,10,0.18,12,0.5,17,1.496,21,1.064,22,3.122,23,3.197,24,0.978,26,0.007,33,2.202,34,1.887,37,1.496,39,0.462,42,1.322,54,0.963,56,3.555,57,3.469,65,1.522,68,0.548,70,1.025,89,1.056,90,1.564,98,1.778,100,0.638,101,1.084,102,0.452,117,2.363,121,0.804,127,1.548,129,1.082,152,0.233,154,0.381,166,0.84,167,0.159,168,0.187,188,0.772,198,0.812,199,1.629,200,0.899,202,2.045,203,1.179,204,1.179,205,1.064,206,1.918,207,1.064,208,1.119,209,1.011,210,1.1,211,1.119,212,2.336,213,1.1,214,1.618,215,2.081,216,1.119,217,1.51,218,2.385,219,1.119,220,1.119,221,1.179,222,1.79,223,1.658,224,1.119,225,1.179,226,1.1,227,1.179,228,1.082,229,1.064,230,1.788,231,1.918,232,1.082,233,1.1,234,1.1,235,1.082,236,1.179,237,1.119,238,2.193,239,1.119,240,1.1,241,1.119,242,1.119,243,1.119,244,1.943,245,1.179,246,1.082,247,1.119,248,1.179,249,1.1,250,1.179,251,1.1,252,1.1,253,1.223,254,1.179,255,1.1,256,1.179,257,1.082,258,1.1,259,1.179,260,1.1,261,1.179,262,1.011,263,1.179,264,1.1,265,1.673,266,1.179,267,1.082,268,1.179,269,1.1,270,1.179,271,1.064,272,1.179,273,1.1,274,1.082,275,1.1,276,1.046,277,1.179,278,1.1,279,1.179,280,1.179,281,1.1,282,1.179,283,1.1,284,1.179,285,1.064,286,1.179,287,1.082,288,1.1,289,1.179,290,1.1,291,1.139,292,1.179,293,1.082,294,1.1,295,1.945,296,1.1,297,1.119,298,0.978,299,1.119,300,1.119,301,1.1,302,1.119,303,1.119,304,1.119,305,1.179,306,1.082,307,1.1,308,1.179,309,1.1,310,1.139,311,1.1,312,1.179,313,1.1,314,1.179,315,1.119,316,1.1,317,1.1,318,1.179,319,1.1,320,1.179,321,1.1,322,1.179,323,1.1,324,1.046,325,1.028,326,1.064,327,1.179,328,1.082,329,1.179,330,1.082,331,1.179,332,1.082,333,1.179,334,1.082,335,1.179,336,1.082,337,1.158,338,1.179,339,1.082,340,1.158,341,1.179,342,0.003,343,0.004,344,0.003,360,2.057,457,1.832,458,0.869,548,4.075,648,3.503,649,4.897,670,1.792,1011,5.006,1012,4.198,1013,5.006,1014,5.006,1015,4.678,1033,2.223,1034,2.967,1246,3.572,1287,2.735,1314,2.852,1456,3.703,1837,3.871,1838,6.112,1839,3.139,1840,6.112,1841,4.345,1842,4.345,1843,5.445,1844,4.345,1845,4.345,1846,5.445,1847,4.345,1848,4.345,1849,4.345,1850,4.345,1851,4.345,1852,4.345,1853,4.345,1854,4.345,1855,6.112,1856,4.345]],["title/classes/Field.html",[48,1.417,168,0.217]],["body/classes/Field.html",[0,0.46,2,0.614,3,0.176,4,0.182,10,0.138,17,1.234,26,0.007,32,1.342,39,0.355,40,0.615,42,1.564,45,1.475,48,2.678,51,2.227,52,1.677,54,1.145,55,2.677,65,1.686,68,0.863,69,1.922,70,1.223,72,1.156,73,2.997,84,0.573,88,1.809,89,1.351,100,0.892,101,1.02,102,1.025,121,0.891,131,2.743,152,0.127,166,0.975,167,0.122,168,0.366,188,1.41,217,1.436,253,1.009,342,0.002,343,0.003,344,0.002,372,2.175,373,3.546,377,1.91,387,2.475,388,3.743,390,1.95,398,2.08,425,2.023,427,3.729,458,0.668,470,1.168,486,1.467,487,3.594,493,1.992,499,1.587,500,1.51,502,1.992,512,3.464,519,2.041,529,1.321,546,2.6,558,2.211,569,1.629,574,1.587,579,1.408,584,3.432,585,4.131,618,4.091,634,3.644,717,3.31,759,2.175,778,4.337,888,1.347,904,3.175,937,2.6,995,2.46,1054,3.644,1058,3.394,1065,2.397,1146,3.644,1153,3.04,1161,2.849,1175,1.721,1185,3.055,1187,5.546,1188,3.988,1278,3.464,1320,2.735,1321,4.958,1325,2.759,1338,2.6,1391,3.729,1674,1.587,1711,3.175,1749,4.131,1752,3.31,1857,2.975,1858,5.209,1859,5.564,1860,4.977,1861,4.576,1862,4.651,1863,4.391,1864,4.808,1865,6.077,1866,6.077,1867,4.993,1868,5.414,1869,4.576,1870,5.564,1871,4.977,1872,6.771,1873,5.043,1874,6.771,1875,6.771,1876,5.043,1877,5.043,1878,3.339,1879,5.043,1880,5.043,1881,3.339,1882,3.339,1883,5.043,1884,3.339,1885,3.339,1886,3.339,1887,3.86,1888,3.31,1889,3.644,1890,3.339,1891,3.339,1892,4.131,1893,4.131,1894,4.263,1895,3.339,1896,4.493,1897,3.339,1898,3.339,1899,5.043,1900,3.86,1901,3.339,1902,3.644,1903,3.339,1904,3.339,1905,3.339,1906,5.043,1907,3.86,1908,3.31,1909,3.339,1910,3.339,1911,3.339,1912,6.81,1913,3.339,1914,3.464,1915,3.339,1916,3.339,1917,3.339,1918,2.947,1919,3.339,1920,3.339,1921,3.339,1922,4.493,1923,3.86,1924,3.175,1925,5.043,1926,3.339,1927,7.644,1928,3.339,1929,3.339,1930,5.043,1931,3.339,1932,2.975,1933,5.043,1934,3.339,1935,2.102,1936,3.339,1937,3.339,1938,2.975,1939,2.102,1940,2.556,1941,5.043,1942,3.339,1943,3.551,1944,3.988,1945,3.339,1946,2.735,1947,3.339,1948,3.339,1949,2.975,1950,2.975,1951,3.339,1952,2.191,1953,3.339,1954,3.339,1955,3.339,1956,5.043,1957,5.043,1958,2.735,1959,3.339,1960,5.043,1961,3.339,1962,3.339,1963,2.293,1964,3.339,1965,3.339,1966,2.412,1967,2.975,1968,3.339,1969,3.339,1970,2.735,1971,2.975,1972,2.293,1973,2.975,1974,2.975,1975,4.131,1976,3.339,1977,3.339,1978,2.975,1979,6.077,1980,4.493,1981,3.339,1982,2.293,1983,3.339,1984,5.043,1985,3.339]],["title/interfaces/FieldConfig.html",[368,1.369,1166,3.057]],["body/interfaces/FieldConfig.html",[3,0.386,4,0.398,10,0.302,12,0.841,26,0.007,48,2.545,69,1.71,70,0.926,131,2.671,152,0.279,167,0.267,217,1.468,342,0.005,343,0.006,344,0.005,368,1.981,370,3.15,387,2.087,390,3.305,995,4.17,999,5.381,1054,6.175,1123,4.598,1166,5.178,1745,4.17,1858,6.247,1932,6.507,1974,6.507,1986,7.615,1987,7.304]],["title/interfaces/FileOptions.html",[368,1.369,1138,3.312]],["body/interfaces/FileOptions.html",[0,0.194,3,0.177,4,0.183,10,0.329,12,0.386,26,0.007,32,1.252,39,0.357,40,0.618,46,1.707,48,0.942,52,2.194,68,0.777,69,1.734,70,0.425,72,1.385,84,1.541,88,1.442,89,0.756,98,0.976,102,0.934,117,1.298,121,0.441,131,1.905,133,3.207,135,3.322,142,1.384,143,2.046,152,0.331,154,0.294,166,1.583,167,0.223,168,0.144,183,1.805,188,1.712,209,1.178,214,2.114,217,1.166,230,0.671,252,0.85,253,0.671,295,1.349,298,0.755,324,2.114,342,0.002,343,0.003,344,0.002,368,1.841,369,1.781,370,1.447,372,2.928,373,1.637,374,2.86,377,1.817,381,0.959,387,1.94,398,1.909,425,2.033,426,3.562,445,1.73,450,3.837,457,2.57,458,0.671,460,2.042,463,1.517,477,5.196,483,1.682,496,1.961,499,1.595,514,2.113,520,4.905,521,2.425,531,2.958,542,3.444,548,2.346,552,3.235,558,1.221,574,2.897,579,1.415,580,1.245,581,3.477,593,2.217,606,2.113,614,3.067,615,5.862,637,2.749,638,5.596,650,2.113,658,2.305,660,1.499,669,0.794,671,2.681,716,1.961,755,2.309,783,2.202,784,2.537,802,2.749,817,3.837,825,2.202,831,3.187,892,3.142,917,1.298,937,1.73,958,2.47,963,2.825,995,1.637,1001,4.258,1019,1.896,1073,3.322,1138,4.781,1148,2.425,1152,1.595,1153,2.421,1154,4.317,1156,2.687,1161,1.896,1168,2.568,1175,1.73,1185,2.033,1208,3.067,1230,2.425,1491,2.305,1593,2.305,1710,2.77,1741,1.637,1742,2.425,1743,2.425,1744,1.961,1745,1.637,1746,2.305,1747,2.305,1748,3.562,1756,3.693,1777,2.425,1782,2.425,1787,2.749,1792,4.64,1816,4.665,1918,2.958,1943,1.961,1988,2.749,1989,7.083,1990,6.823,1991,6.491,1992,6.491,1993,6.491,1994,6.491,1995,3.322,1996,4.51,1997,4.51,1998,4.51,1999,4.146,2000,4.146,2001,4.51,2002,4.51,2003,4.51,2004,2.99,2005,4.665,2006,2.568,2007,2.99,2008,2.99,2009,2.749,2010,4.993,2011,2.568,2012,2.99,2013,2.99,2014,2.568,2015,2.99,2016,2.99,2017,5.431,2018,2.99,2019,5.431,2020,2.99,2021,2.99,2022,2.99,2023,2.568,2024,2.99,2025,2.99,2026,2.99,2027,2.99,2028,2.749,2029,2.99,2030,5.196,2031,2.425,2032,2.99,2033,4.51,2034,2.99,2035,4.51,2036,4.51,2037,2.99,2038,2.99,2039,2.99,2040,2.99,2041,4.51,2042,2.99,2043,2.749,2044,2.99,2045,2.568,2046,2.99,2047,6.823,2048,2.99,2049,2.99,2050,2.99,2051,2.99,2052,2.99,2053,5.431,2054,2.749,2055,2.99,2056,2.99,2057,4.51,2058,2.99,2059,4.51,2060,4.51,2061,4.51,2062,4.51,2063,5.431,2064,4.51,2065,4.51,2066,4.51,2067,2.568,2068,2.749,2069,2.99,2070,2.99,2071,2.99,2072,4.51,2073,2.99,2074,2.99,2075,2.99,2076,2.99,2077,2.99,2078,2.99,2079,2.99,2080,2.99,2081,2.99,2082,2.425,2083,2.99,2084,5.431,2085,2.99,2086,2.99,2087,2.425,2088,4.51,2089,2.99,2090,2.99,2091,2.99,2092,2.749,2093,2.99,2094,1.896,2095,2.99,2096,2.99,2097,2.99,2098,2.99,2099,2.99,2100,2.99,2101,2.99,2102,2.99,2103,2.99,2104,2.99,2105,2.99,2106,2.99,2107,2.425,2108,2.99,2109,2.99,2110,2.99,2111,2.568,2112,2.99,2113,2.99,2114,2.99]],["title/modules/FilesModule.html",[345,1.155,1203,3.646]],["body/modules/FilesModule.html",[3,0.265,4,0.273,10,0.207,25,2.516,26,0.007,152,0.372,154,0.439,155,2.02,156,1.565,167,0.183,168,0.215,198,0.936,210,2.425,211,1.29,213,2.397,214,1.743,216,2.438,217,1.157,219,2.467,251,2.397,252,1.268,253,1.348,315,2.467,316,1.268,321,2.425,323,2.397,324,1.205,326,2.317,328,2.357,336,2.357,342,0.003,343,0.004,344,0.003,345,1.146,347,1.978,348,1.897,349,3.141,350,2.065,351,3.073,357,4.948,358,2.841,359,1.936,360,1.686,362,3.807,363,2.268,364,2.357,539,4.102,607,2.927,611,4.102,614,5.305,630,3.618,696,3.203,697,2.264,700,4.629,1080,4.423,1203,7.275,1204,6.015,1205,6.213,1227,6.236,1231,4.461,1233,4.102,2115,4.461,2116,4.461,2117,5.008,2118,4.461,2119,4.461,2120,5.008,2121,3.833,2122,3.618,2123,3.286,2124,4.461,2125,4.461,2126,4.461,2127,5.008,2128,5.008,2129,4.461,2130,4.102,2131,4.102,2132,4.461]],["title/interfaces/Focus.html",[63,2.529,368,1.369]],["body/interfaces/Focus.html",[3,0.393,4,0.405,10,0.307,26,0.006,39,0.79,40,1.054,49,5.915,54,1.36,63,4.329,64,5.692,68,0.666,70,0.942,89,1.111,143,2.832,152,0.284,154,0.651,167,0.272,342,0.005,343,0.006,344,0.005,368,2.017,370,3.208,2133,6.625,2134,7.436]],["title/directives/FocusDirective.html",[200,1.044,334,1.256]],["body/directives/FocusDirective.html",[3,0.353,4,0.365,10,0.276,17,1.985,22,3.854,24,1.505,26,0.007,33,1.899,39,0.711,42,1.632,54,1.277,57,4.104,64,5.498,65,2.019,68,0.782,70,1.178,89,1.211,90,1.794,100,0.981,101,0.801,102,0.696,123,4.104,127,2.054,143,2.631,152,0.255,154,0.586,167,0.245,168,0.287,200,1.678,325,1.583,334,2.019,342,0.004,343,0.005,344,0.004,377,1.806,458,1.338,576,3.909,670,2.758,917,2.586,1475,6.681,1859,6.681,2135,5.959,2136,7.614,2137,6.689,2138,8.111,2139,6.689,2140,6.689,2141,6.689,2142,5.478,2143,6.689,2144,6.689,2145,6.689,2146,6.689,2147,6.689,2148,6.689]],["title/interfaces/FormConfig.html",[368,1.369,2149,3.862]],["body/interfaces/FormConfig.html",[3,0.363,4,0.375,10,0.284,12,0.791,20,3.255,26,0.007,32,1.442,39,0.73,40,1.006,68,0.791,69,1.766,102,0.99,152,0.262,167,0.251,342,0.005,343,0.005,344,0.005,368,1.863,370,2.963,377,1.967,388,3.475,546,4.249,1058,4.131,1076,3.759,1123,4.325,1150,6.29,1188,5.409,1758,5.473,2149,7.009,2150,6.12,2151,6.751,2152,8.158,2153,9.157,2154,8.158,2155,6.309,2156,7.009,2157,6.309,2158,5.627]],["title/modules/FormModule.html",[345,1.155,2159,3.466]],["body/modules/FormModule.html",[3,0.271,4,0.28,10,0.212,21,2.239,25,2.547,26,0.007,27,3.404,50,4.68,121,0.901,152,0.372,154,0.449,155,2.069,166,0.992,167,0.25,168,0.22,198,0.959,226,2.406,232,2.277,246,2.366,319,2.406,342,0.003,343,0.005,344,0.003,345,1.173,347,2.025,348,1.942,349,3.179,350,2.115,351,3.11,358,2.887,359,1.983,360,1.726,362,3.869,363,2.305,364,1.794,696,3.255,697,2.319,699,5.57,721,4.853,854,5.787,873,4.2,875,4.2,877,4.2,1058,2.57,1221,3.107,1223,3.705,1225,3.705,1270,2.897,1473,3.925,1485,4.2,1495,3.925,2159,6.909,2160,4.569,2161,4.569,2162,4.569,2163,4.569,2164,4.569,2165,6.865,2166,6.865,2167,6.526,2168,6.236,2169,6.236,2170,5.342,2171,5.787,2172,5.787,2173,4.569,2174,4.2,2175,5.128,2176,4.569,2177,5.128,2178,5.128,2179,4.2,2180,3.705,2181,5.128,2182,5.128,2183,4.2,2184,4.2,2185,4.569,2186,5.128,2187,5.128,2188,5.128,2189,5.128]],["title/injectables/FormService.html",[50,2.678,660,1.494]],["body/injectables/FormService.html",[3,0.232,4,0.239,10,0.181,12,0.506,16,3.38,26,0.007,32,1.214,39,0.467,40,0.751,45,1.16,46,1.745,47,4.068,48,2.76,50,3.268,51,3.815,54,0.97,68,0.774,69,0.878,70,1.136,73,2.539,75,4.713,84,1.394,85,2.596,88,1.991,89,1.412,90,0.972,100,1.294,101,1.055,102,0.918,121,0.578,131,3.109,139,4.018,147,4.669,152,0.31,154,0.385,155,1.772,166,1.627,167,0.161,168,0.189,188,1.631,246,1.919,342,0.003,343,0.004,344,0.003,368,1.67,377,0.909,381,1.255,387,2.203,388,3.718,390,2.381,393,1.734,398,2.127,427,3.004,458,0.878,486,1.277,500,2.785,554,2.927,558,1.598,580,2.639,619,3.174,631,2.264,648,2.75,660,1.823,713,2.035,778,3.268,888,2.484,919,3.73,970,3.369,1033,2.804,1034,3.138,1112,5.575,1153,1.566,1240,2.882,1287,2.765,1390,4.449,1741,3.004,1744,3.599,1839,3.173,1894,3.877,1918,3.599,1923,4.713,2190,3.913,2191,6.158,2192,3.268,2193,6.158,2194,6.158,2195,6.158,2196,6.158,2197,6.158,2198,6.158,2199,6.158,2200,4.392,2201,6.158,2202,4.392,2203,4.041,2204,6.158,2205,4.392,2206,6.158,2207,6.158,2208,4.392,2209,6.158,2210,4.392,2211,6.158,2212,7.339,2213,7.111,2214,6.158,2215,4.392,2216,6.158,2217,4.392,2218,5.044,2219,5.486,2220,6.158,2221,4.392,2222,7.708,2223,7.111,2224,4.392,2225,5.486,2226,3.913,2227,4.392,2228,7.111,2229,4.392,2230,4.392,2231,3.361,2232,4.392,2233,3.913,2234,4.392,2235,4.392,2236,6.158,2237,4.392,2238,6.158,2239,4.392,2240,4.392,2241,3.597,2242,3.913,2243,4.392,2244,4.392,2245,4.392,2246,4.392,2247,3.913,2248,4.392,2249,4.392,2250,4.392,2251,4.392,2252,4.392,2253,4.392,2254,3.913,2255,4.392,2256,4.392,2257,4.392,2258,6.158]],["title/injectables/GeocodeService.html",[660,1.494,2259,3.312]],["body/injectables/GeocodeService.html",[3,0.28,4,0.289,10,0.219,12,0.609,13,4.086,26,0.007,39,0.562,42,1.557,46,1.772,54,1.101,68,0.746,70,1.098,84,1.345,88,2.105,89,1.329,100,1.271,101,1.037,102,0.902,127,2.109,133,3.36,152,0.33,154,0.463,165,4.05,166,1.514,167,0.194,168,0.227,188,1.581,202,1.411,209,1.627,265,2.205,342,0.005,343,0.005,344,0.005,445,2.728,458,1.058,493,2.761,660,2.07,663,3.504,670,2.182,671,2.09,713,2.452,864,4.086,913,5.139,970,2.895,1184,5.466,1192,5.726,1313,3.634,1502,6.229,1512,5.051,1670,4.588,1761,3.206,2259,4.588,2260,4.714,2261,5.466,2262,6.992,2263,6.992,2264,6.992,2265,6.992,2266,6.992,2267,6.992,2268,5.292,2269,8.33,2270,8.084,2271,5.292,2272,6.992,2273,6.992,2274,5.292,2275,7.094,2276,6.992,2277,5.292,2278,5.726,2279,7.716,2280,5.726,2281,5.292,2282,6.992,2283,5.292,2284,6.992,2285,6.992,2286,5.292,2287,6.992,2288,6.992,2289,4.334,2290,5.292,2291,5.292,2292,5.292,2293,5.292,2294,5.292,2295,5.292,2296,5.292,2297,5.351,2298,5.292,2299,5.292,2300,6.992,2301,4.334,2302,6.229,2303,5.292,2304,6.229,2305,5.292,2306,5.292,2307,5.292,2308,5.292,2309,5.292,2310,4.334,2311,4.714,2312,5.292,2313,6.229,2314,5.292,2315,5.292,2316,5.292,2317,5.292,2318,5.292,2319,5.292,2320,5.292,2321,5.292,2322,5.292,2323,5.292]],["title/pipes/GroupPipe.html",[1273,2.678,1276,3.466]],["body/pipes/GroupPipe.html",[3,0.359,4,0.371,10,0.281,12,0.783,17,1.664,24,1.53,26,0.007,45,1.578,51,3.617,52,2.426,54,1.071,68,0.609,69,1.759,70,0.862,72,1.558,88,1.938,89,1.016,100,0.998,101,1.052,102,0.708,142,3.378,152,0.313,154,0.596,167,0.249,168,0.292,188,1.562,342,0.004,343,0.005,344,0.004,381,1.943,584,3.668,716,4.787,755,3.537,892,4.704,910,5.376,1273,4.348,1274,4.913,1276,6.268,1277,4.628,1278,5.626,1279,4.462,1285,5.919,2324,6.058,2325,8.192,2326,6.8,2327,6.8,2328,6.8]],["title/injectables/HistoryService.html",[660,1.494,1207,3.646]],["body/injectables/HistoryService.html",[3,0.237,4,0.392,10,0.185,12,0.515,26,0.007,39,0.476,40,0.761,45,1.333,46,1.767,54,0.983,68,0.839,69,1.772,70,1.155,84,0.769,88,2.055,89,1.073,90,0.99,98,2.261,100,1.14,101,0.93,102,0.809,121,1.075,133,1.806,138,2.183,152,0.343,154,0.392,156,1.399,166,1.39,167,0.164,168,0.192,186,3.128,188,1.452,295,2.056,298,1.616,342,0.003,343,0.004,344,0.003,372,3.353,375,1.806,389,3.526,398,1.635,448,7.114,458,1.248,464,3.667,481,3.647,506,3.312,532,3.075,533,3.988,548,3.602,552,5.031,579,1.888,647,2.529,648,2.413,655,3.696,660,1.848,661,2.45,713,2.075,716,4.542,728,5.616,817,2.818,818,3.075,851,2.818,864,3.647,900,4.353,917,2.413,952,4.287,995,4.534,1022,5.522,1029,5.327,1032,4.391,1108,2.712,1156,3.312,1183,3.045,1207,5.616,1456,5.128,1611,5.701,1618,2.938,1630,3.929,1748,5.327,1782,3.235,1816,4.777,2329,3.988,2330,5.56,2331,5.112,2332,5.56,2333,6.241,2334,8.174,2335,5.885,2336,6.241,2337,7.185,2338,3.988,2339,6.241,2340,6.241,2341,4.477,2342,5.56,2343,6.241,2344,8.465,2345,4.477,2346,8.686,2347,4.477,2348,5.112,2349,5.949,2350,6.366,2351,4.477,2352,4.477,2353,5.56,2354,5.112,2355,4.477,2356,4.477,2357,4.477,2358,6.241,2359,4.477,2360,4.477,2361,4.477,2362,3.988,2363,6.241,2364,4.477,2365,4.477,2366,8.686,2367,4.477,2368,4.477,2369,4.477,2370,6.241,2371,7.185,2372,4.477,2373,4.477,2374,4.477,2375,5.56,2376,6.241,2377,4.477,2378,6.241,2379,4.477,2380,6.241,2381,6.241,2382,4.477,2383,4.477]],["title/components/IconComponent.html",[0,0.292,249,1.278]],["body/components/IconComponent.html",[0,0.454,1,1.01,2,1.057,3,0.211,4,0.218,5,0.839,7,1.082,8,1.046,9,1.682,10,0.165,12,0.459,17,1.408,21,0.977,22,2.978,23,3.05,24,0.898,26,0.007,33,2.196,34,1.883,37,1.408,39,0.424,40,0.702,42,1.261,54,0.906,56,3.421,57,3.338,65,1.432,68,0.604,69,1.151,70,1.033,86,3.951,88,0.944,89,1.007,90,1.492,100,0.585,101,1.138,102,0.415,121,0.887,127,1.457,129,0.993,138,2.737,152,0.299,154,0.349,167,0.247,168,0.29,198,0.746,199,1.533,200,0.825,201,1.682,202,1.968,203,1.082,204,1.082,205,0.977,206,1.829,207,0.977,208,1.028,209,0.928,210,1.01,211,1.028,212,2.279,213,1.01,214,1.543,215,2.002,216,1.028,217,1.4,218,2.333,219,1.028,220,1.028,221,1.082,222,1.01,223,1.56,224,1.028,225,1.082,226,1.01,227,1.082,228,0.993,229,0.977,230,1.681,231,1.829,232,0.993,233,1.01,234,1.01,235,0.993,236,1.082,237,1.028,238,2.122,239,1.028,240,1.01,241,1.028,242,1.028,243,1.028,244,1.01,245,1.082,246,0.993,247,1.028,248,1.082,249,1.869,250,1.082,251,1.01,252,1.01,253,1.151,254,1.082,255,1.01,256,1.082,257,0.993,258,1.01,259,1.082,260,1.01,261,1.082,262,0.928,263,1.082,264,1.01,265,1.596,266,1.082,267,0.993,268,1.082,269,1.01,270,1.082,271,0.977,272,1.082,273,1.01,274,0.993,275,1.01,276,0.96,277,1.082,278,1.01,279,1.082,280,1.082,281,1.01,282,1.082,283,1.01,284,1.082,285,0.977,286,1.082,287,0.993,288,1.01,289,1.082,290,1.01,291,1.046,292,1.082,293,0.993,294,1.01,295,1.903,296,1.01,297,1.028,298,0.898,299,1.028,300,1.028,301,1.01,302,1.028,303,1.028,304,1.028,305,1.082,306,0.993,307,1.01,308,1.082,309,1.01,310,1.046,311,1.01,312,1.082,313,1.01,314,1.082,315,1.028,316,1.01,317,1.01,318,1.082,319,1.01,320,1.082,321,1.01,322,1.082,323,1.01,324,0.96,325,0.944,326,0.977,327,1.082,328,0.993,329,1.082,330,0.993,331,1.082,332,0.993,333,1.082,334,0.993,335,1.082,336,0.993,337,1.064,338,1.082,339,0.993,340,1.064,341,1.082,342,0.003,343,0.005,344,0.003,393,2.271,425,3.484,458,0.798,470,1.396,486,1.161,500,2.601,529,1.507,564,2.965,633,2.512,647,3.811,659,2.601,668,2.619,670,1.645,726,3.268,761,2.183,1033,2.454,1151,3.054,1314,4.426,1431,2.417,1867,6.669,1907,3.054,1943,4.764,2384,3.555,2385,7.044,2386,7.176,2387,4.844,2388,5.333,2389,5.124,2390,3.621,2391,3.621,2392,5.752,2393,3.99,2394,6.357,2395,5.752,2396,3.99,2397,3.99,2398,3.99,2399,3.99,2400,5.124,2401,5.752,2402,3.99,2403,3.054,2404,5.124,2405,5.752,2406,5.752,2407,3.99,2408,3.99,2409,5.752,2410,3.99,2411,2.512,2412,3.555,2413,3.555,2414,5.752,2415,3.99,2416,3.99,2417,3.99,2418,2.512,2419,3.99,2420,5.752,2421,5.752]],["title/modules/IconModule.html",[345,1.155,2170,3.057]],["body/modules/IconModule.html",[3,0.371,4,0.382,10,0.29,25,2.943,26,0.007,152,0.352,154,0.614,167,0.257,168,0.301,198,1.312,249,2.51,342,0.005,343,0.006,344,0.005,345,1.605,347,2.77,348,2.657,349,3.674,350,2.892,351,3.594,358,3.519,359,2.712,360,2.361,363,2.361,364,2.919,696,3.967,697,3.172,2170,5.931,2394,6.562,2412,6.249,2422,6.249,2423,6.249,2424,6.249,2425,6.249,2426,7.015,2427,7.015]],["title/injectables/IconService.html",[660,1.494,2394,3.466]],["body/injectables/IconService.html",[3,0.358,4,0.369,9,2.856,10,0.28,12,0.78,20,2.675,26,0.007,34,1.744,39,0.72,40,0.997,45,1.105,46,1.669,68,0.607,70,0.858,72,1.554,87,3.227,121,1.155,138,2.859,152,0.348,154,0.593,167,0.248,168,0.291,201,2.856,342,0.004,343,0.005,344,0.004,529,2.388,660,2.42,713,3.139,1033,3.193,1034,3.16,1287,4.264,1741,4.447,1867,6.26,1943,4.776,2385,7.975,2386,7.189,2389,7.281,2394,5.613,2413,6.035,2428,6.035,2429,6.255,2430,8.173,2431,8.173,2432,7.82,2433,6.774,2434,7.281]],["title/directives/ImageDirective.html",[200,1.044,336,1.256]],["body/directives/ImageDirective.html",[3,0.261,4,0.269,5,1.404,10,0.204,12,0.568,17,1.634,20,1.95,23,3.42,24,1.111,26,0.007,32,1.051,33,1.452,39,0.525,40,0.814,42,1.631,45,0.805,46,1.541,54,1.051,56,3.754,65,1.662,68,0.832,69,1.875,70,1.178,72,1.438,84,0.848,89,1.21,90,1.477,100,1.189,101,0.97,102,0.843,121,0.65,123,4.032,127,1.69,135,4.381,152,0.323,154,0.433,167,0.181,168,0.212,188,1.55,200,1.564,214,2.103,252,2.328,325,1.168,326,1.634,336,1.662,337,2.16,342,0.003,343,0.004,344,0.003,373,4.129,377,1.381,393,1.95,398,1.982,425,4.044,426,2.886,457,3.416,458,0.988,459,2.702,460,3.414,463,2.233,470,1.727,472,4.577,476,4.63,477,6.2,478,4.823,481,4.42,486,1.942,497,5.947,502,1.95,520,6.114,521,3.568,523,3.779,525,5.947,526,3.779,527,3.568,638,2.991,671,1.95,745,4.203,750,3.779,831,3.109,1165,5.13,1792,2.991,2005,6.825,2006,3.779,2094,4.781,2126,4.399,2435,4.399,2436,6.676,2437,5.947,2438,6.2,2439,9.192,2440,6.676,2441,8.463,2442,6.676,2443,4.938,2444,5.947,2445,4.938,2446,7.217,2447,4.938,2448,6.676,2449,4.938,2450,6.676,2451,5.468,2452,6.676,2453,4.938,2454,6.676,2455,6.676,2456,4.938,2457,6.676,2458,4.938,2459,4.938,2460,4.938,2461,4.938,2462,7.563,2463,4.938,2464,4.938,2465,4.938,2466,6.676,2467,4.938,2468,4.938,2469,5.468,2470,4.938,2471,6.676,2472,4.938,2473,4.938,2474,4.938,2475,6.676,2476,4.938]],["title/components/ImageSelectPopComponent.html",[0,0.292,251,1.278]],["body/components/ImageSelectPopComponent.html",[0,0.381,1,0.681,2,0.784,3,0.142,4,0.147,5,0.565,7,1.156,8,0.704,10,0.111,12,0.309,17,1.044,20,1.684,21,0.658,22,2.339,24,0.605,26,0.007,32,1.264,33,2.161,34,1.849,37,1.044,39,0.286,40,0.52,41,1.519,42,1.23,45,1.336,46,1.766,54,0.671,57,2.727,65,1.501,68,0.803,69,0.853,70,1.181,72,1.251,78,2.198,79,2.198,84,0.462,85,1.798,87,1.684,88,0.636,89,0.982,90,1.334,93,3.492,100,0.885,101,0.98,102,0.628,116,2.198,119,4.489,121,1.078,123,3.874,124,1.061,127,1.772,129,0.669,131,2.377,143,1.982,152,0.267,153,1.215,154,0.235,156,0.84,166,1.584,167,0.098,168,0.3,186,2.137,188,1.072,196,3.263,198,0.503,199,1.137,200,0.556,202,1.608,203,0.729,204,0.729,205,0.658,206,1.437,207,0.658,208,0.692,209,0.625,210,0.681,211,0.692,212,1.989,213,0.681,214,1.38,215,1.636,216,0.692,217,1.202,218,2.063,219,0.692,220,0.692,221,0.729,222,0.681,223,1.156,224,0.692,225,0.729,226,0.681,227,0.729,228,1.319,229,0.658,230,1.567,231,1.437,232,0.669,233,0.681,234,0.681,235,0.669,236,0.729,237,0.692,238,1.784,239,0.692,240,0.681,241,0.692,242,0.692,243,0.692,244,0.681,245,0.729,246,1.319,247,0.692,248,0.729,249,0.681,250,0.729,251,1.527,252,2.142,253,1.938,254,0.729,255,0.681,256,0.729,257,0.669,258,0.681,259,0.729,260,0.681,261,0.729,262,1.403,263,0.729,264,0.681,265,1.254,266,0.729,267,0.669,268,0.729,269,0.681,270,0.729,271,0.658,272,0.729,273,0.681,274,0.669,275,0.681,276,0.647,277,0.729,278,0.681,279,0.729,280,0.729,281,0.681,282,0.729,283,0.681,284,0.729,285,0.658,286,0.729,287,0.669,288,0.681,289,0.729,290,0.681,291,0.704,292,0.729,293,2.198,294,0.681,295,1.683,296,0.681,297,0.692,298,0.605,299,0.692,300,0.692,301,0.681,302,0.692,303,0.692,304,0.692,305,0.729,306,0.669,307,0.681,308,0.729,309,0.681,310,0.704,311,0.681,312,0.729,313,0.681,314,0.729,315,0.692,316,0.681,317,0.681,318,0.729,319,0.681,320,0.729,321,0.681,322,0.729,323,0.681,324,0.647,325,0.636,326,0.658,327,0.729,328,0.669,329,0.729,330,0.669,331,0.729,332,0.669,333,0.729,334,0.669,335,0.729,336,0.669,337,1.412,338,0.729,339,0.669,340,0.717,341,0.729,342,0.002,343,0.003,344,0.002,375,2.138,377,1.096,378,3.49,381,0.768,388,2.773,390,1.039,394,3.714,398,1.58,457,2.773,458,0.853,460,2.653,463,1.215,480,1.615,493,2.092,502,1.684,519,1.285,529,1.922,531,2.491,550,1.882,552,1.427,564,2.198,593,1.551,614,4.863,615,4.516,630,1.942,632,1.582,645,2.583,831,1.692,900,3.653,917,1.039,919,1.628,926,3.263,943,1.571,1028,2.583,1033,2.668,1034,2.543,1045,1.798,1048,3.78,1051,1.571,1065,4.072,1109,3.109,1165,2.333,1169,3.336,1183,3.578,1189,4.34,1221,1.628,1222,1.628,1301,1.311,1321,3.715,1431,2.583,1500,2.928,1505,3.263,1507,2.928,1520,2.812,1521,1.846,1529,1.942,1666,2.057,1667,3.263,1669,4.579,1671,3.08,1673,3.08,1674,2.518,1675,3.08,1676,2.928,1677,3.828,1682,2.202,1683,2.057,1684,1.846,1685,2.057,1686,1.571,1687,1.942,1688,2.057,1689,1.942,1690,1.846,1691,2.057,1693,2.057,1695,3.639,1696,2.395,1697,1.942,1698,2.057,1699,1.764,1702,2.395,1706,2.057,1707,3.08,1708,1.942,1709,2.057,1710,1.471,1711,1.692,1712,1.942,1713,1.942,1714,2.057,1715,2.263,1716,1.942,1717,2.057,1719,3.492,1720,2.395,1723,2.202,1724,2.057,1725,1.942,1726,1.942,1727,2.057,1728,2.057,1730,2.202,1731,2.057,1869,1.692,1924,2.684,2030,2.057,2067,2.057,2094,4.427,2131,7.097,2149,4.055,2154,2.395,2477,7.719,2478,4.263,2479,3.492,2480,8.192,2481,6.576,2482,5.299,2483,5.299,2484,2.202,2485,3.798,2486,4.263,2487,3.798,2488,3.492,2489,2.688,2490,2.688,2491,2.395,2492,2.395,2493,4.263,2494,2.688,2495,2.688,2496,2.688,2497,6.576,2498,2.395,2499,2.688,2500,6.576,2501,2.688,2502,2.202,2503,6.031,2504,2.688,2505,2.688,2506,2.688,2507,4.263,2508,4.263,2509,4.263,2510,3.492,2511,4.263,2512,4.263,2513,2.688,2514,2.688,2515,2.688,2516,2.688,2517,2.057,2518,2.202,2519,2.688,2520,2.688,2521,2.202,2522,2.688,2523,6.576,2524,2.688,2525,4.263,2526,2.688,2527,2.688,2528,2.688,2529,4.263,2530,2.688,2531,2.688,2532,2.688,2533,2.688,2534,2.688,2535,2.688,2536,2.688,2537,2.395,2538,2.688,2539,2.688,2540,2.057,2541,2.688,2542,1.942,2543,1.519,2544,2.688,2545,4.263,2546,4.263,2547,2.688,2548,2.688,2549,2.688,2550,4.263]],["title/components/InputComponent.html",[0,0.292,129,1.256]],["body/components/InputComponent.html",[0,0.521,1,0.689,2,0.982,3,0.144,4,0.148,5,1.124,7,0.738,8,0.713,10,0.113,12,0.313,15,1.858,17,1.054,18,3.363,20,1.701,21,1.308,23,2.416,24,0.612,25,1.423,26,0.007,27,1.901,28,2.923,29,2.356,30,2.923,31,2.356,32,1.203,33,2.163,34,1.852,37,1.054,39,0.289,40,0.525,42,1.762,43,3.363,44,3.363,45,1.401,46,0.819,47,3.943,48,2.523,49,3.824,51,3.374,52,2.307,54,0.678,55,3.223,56,1.996,58,2.826,59,3.824,62,2.609,63,3.527,65,1.072,68,0.823,69,0.861,70,1.183,72,1.496,84,1.266,85,2.79,87,1.075,88,0.644,89,1.175,90,1.691,95,2.711,97,3.296,98,1.767,99,3.111,100,1.032,101,1.059,102,0.733,103,2.711,113,2.711,115,2.958,116,2.22,117,1.665,118,2.958,119,2.836,121,1.06,124,1.075,127,1.091,129,1.902,131,2.685,138,1.869,139,2.433,143,2.371,145,2.433,147,4.262,152,0.268,154,0.238,155,1.098,162,3.527,166,0.833,167,0.1,168,0.117,181,2.826,188,0.765,191,2.084,193,1.538,194,2.711,198,0.509,199,1.148,200,1.105,202,1.619,203,0.738,204,0.738,205,0.666,206,1.449,207,0.666,208,0.701,209,0.633,210,0.689,211,0.701,212,1.999,213,0.689,214,1.222,215,1.647,216,0.701,217,1.312,218,2.073,219,0.701,220,0.701,221,0.738,222,0.689,223,1.168,224,0.701,225,0.738,226,0.689,227,0.738,228,0.678,229,0.666,230,1.474,231,1.449,232,0.678,233,0.689,234,1.866,235,1.512,236,0.738,237,0.701,238,1.795,239,0.701,240,0.689,241,0.701,242,0.701,243,0.701,244,0.689,245,0.738,246,0.678,247,0.701,248,0.738,249,0.689,250,0.738,251,0.689,252,0.689,253,0.861,254,0.738,255,0.689,256,0.738,257,0.678,258,0.689,259,0.738,260,0.689,261,0.738,262,0.633,263,0.738,264,0.689,265,1.264,266,0.738,267,0.678,268,0.738,269,0.689,270,0.738,271,0.666,272,0.738,273,0.689,274,0.678,275,0.689,276,0.655,277,0.738,278,0.689,279,0.738,280,0.738,281,0.689,282,0.738,283,0.689,284,0.738,285,0.666,286,0.738,287,0.678,288,0.689,289,0.738,290,0.689,291,0.713,292,0.738,293,0.678,294,0.689,295,1.691,296,0.689,297,0.701,298,0.612,299,0.701,300,0.701,301,0.689,302,0.701,303,0.701,304,0.701,305,0.738,306,0.678,307,0.689,308,0.738,309,0.689,310,0.713,311,0.689,312,0.738,313,0.689,314,0.738,315,0.701,316,0.689,317,0.689,318,0.738,319,0.689,320,0.738,321,0.689,322,0.738,323,0.689,324,0.655,325,0.644,326,0.666,327,0.738,328,0.678,329,0.738,330,0.678,331,0.738,332,0.678,333,0.738,334,0.678,335,0.738,336,0.678,337,0.726,338,0.738,339,1.072,340,0.726,341,0.738,342,0.002,343,0.003,344,0.002,372,1.858,377,0.891,381,0.778,387,2.011,426,1.591,427,1.328,433,3.237,443,2.356,472,1.538,480,1.631,481,3.867,500,1.947,502,1.075,519,1.61,529,1.128,569,2.101,584,2.85,590,3.296,593,1.944,619,2.22,651,2.047,759,1.858,882,2.433,917,1.665,958,2.101,970,1.49,1045,2.967,1048,3.799,1066,2.539,1153,0.971,1172,3.296,1221,1.649,1222,1.649,1240,3.506,1242,3.837,1256,3.837,1258,4.76,1272,3.296,1312,2.23,1313,1.87,1391,2.101,1473,2.084,1487,5.763,1546,3.527,1549,4.089,1559,3.86,1562,3.527,1563,4.376,1564,3.527,1566,2.23,1567,3.527,1569,3.527,1571,2.23,1572,2.23,1573,2.23,1761,1.649,1858,3.506,1869,2.711,1980,3.837,2225,4.76,2390,2.711,2391,2.711,2411,1.714,2469,2.23,2487,3.837,2551,2.425,2552,5.343,2553,6.074,2554,5.419,2555,4.376,2556,2.722,2557,3.837,2558,2.722,2559,3.296,2560,2.722,2561,6.269,2562,2.826,2563,2.722,2564,3.837,2565,2.722,2566,2.722,2567,2.722,2568,2.722,2569,3.837,2570,4.306,2571,2.722,2572,3.837,2573,2.722,2574,4.306,2575,2.722,2576,2.722,2577,2.722,2578,2.722,2579,2.722,2580,2.722,2581,2.722,2582,2.722,2583,2.722,2584,2.425,2585,2.722,2586,3.111,2587,4.306,2588,3.111,2589,4.306,2590,4.306,2591,2.826,2592,4.306,2593,4.306,2594,4.306,2595,2.722,2596,4.306,2597,2.722,2598,2.722,2599,2.722,2600,3.837,2601,3.527,2602,2.425,2603,2.425,2604,2.23,2605,2.425,2606,7.37,2607,2.722,2608,2.722,2609,2.722,2610,4.306,2611,3.837,2612,2.722,2613,2.722,2614,6.074,2615,6.617,2616,4.306,2617,2.722,2618,2.722,2619,2.722,2620,2.722,2621,2.722,2622,2.722,2623,4.306,2624,2.722,2625,2.722,2626,2.722,2627,2.722,2628,2.722,2629,2.722,2630,2.722,2631,2.425,2632,4.306,2633,2.722,2634,2.722,2635,2.722,2636,2.722,2637,2.722,2638,2.722,2639,2.722]],["title/components/InputErrorsComponent.html",[0,0.292,255,1.278]],["body/components/InputErrorsComponent.html",[0,0.466,1,1.084,2,1.112,3,0.226,4,0.233,5,1.475,7,1.161,8,1.121,10,0.177,12,0.493,21,1.047,24,0.963,26,0.007,33,2.201,34,1.886,37,1.48,39,0.455,40,0.738,42,1.604,46,1.529,47,4.465,54,0.952,65,1.505,68,0.628,70,0.966,72,1.15,89,0.639,100,0.628,101,1.048,102,0.445,121,0.795,127,1.531,129,1.065,131,2.608,139,3.961,142,2.493,152,0.267,154,0.375,155,1.726,163,5.387,167,0.157,168,0.184,188,1.074,198,0.8,199,1.612,200,0.885,202,2.031,203,1.161,204,1.161,205,1.047,206,1.902,207,1.047,208,1.102,209,0.996,210,1.084,211,1.102,212,2.326,213,1.084,214,1.604,215,2.067,216,1.102,217,1.433,218,2.376,219,1.102,220,1.102,221,1.161,222,1.084,223,1.64,224,1.102,225,1.161,226,1.084,227,1.161,228,1.065,229,1.047,230,1.716,231,1.902,232,1.065,233,1.084,234,1.084,235,1.065,236,1.161,237,1.102,238,2.18,239,1.102,240,1.084,241,1.102,242,1.102,243,1.102,244,1.084,245,1.161,246,1.065,247,1.102,248,1.161,249,1.084,250,1.161,251,1.084,252,1.084,253,1.209,254,1.161,255,1.93,256,1.161,257,1.065,258,1.084,259,1.161,260,1.084,261,1.161,262,0.996,263,1.161,264,1.084,265,1.659,266,1.161,267,1.065,268,1.161,269,1.084,270,1.161,271,1.047,272,1.161,273,1.084,274,1.065,275,1.084,276,1.03,277,1.161,278,1.084,279,1.161,280,1.161,281,1.084,282,1.161,283,1.084,284,1.161,285,1.047,286,1.161,287,1.065,288,1.084,289,1.161,290,1.084,291,1.121,292,1.161,293,1.065,294,1.084,295,1.938,296,1.084,297,1.102,298,0.963,299,1.102,300,1.102,301,1.084,302,1.102,303,1.102,304,1.102,305,1.161,306,1.065,307,1.084,308,1.161,309,1.084,310,1.121,311,1.084,312,1.161,313,1.084,314,1.161,315,1.102,316,1.084,317,1.084,318,1.161,319,1.084,320,1.161,321,1.084,322,1.161,323,1.084,324,1.03,325,1.012,326,1.047,327,1.161,328,1.065,329,1.161,330,1.065,331,1.161,332,1.065,333,1.161,334,1.065,335,1.161,336,1.065,337,1.141,338,1.161,339,1.065,340,1.141,341,1.161,342,0.003,343,0.004,344,0.003,393,1.69,458,0.856,579,2.549,648,2.711,649,4.616,995,3.922,1033,2.772,1034,3.108,1153,1.526,1287,2.694,1314,3.968,1839,3.091,1939,3.806,2330,5.387,2331,4.952,2640,7.161,2641,6.584,2642,3.812,2643,5.387,2644,4.876,2645,6.046,2646,6.046,2647,7.62,2648,6.046,2649,4.368,2650,6.046,2651,4.279,2652,5.387,2653,4.368,2654,3.806,2655,4.279,2656,4.279,2657,6.046,2658,4.279,2659,4.279,2660,4.279,2661,4.279,2662,6.046]],["title/modules/IoModule.html",[345,1.155,2167,3.466]],["body/modules/IoModule.html",[3,0.321,4,0.331,10,0.251,25,2.525,26,0.007,42,1.136,129,2.443,152,0.365,154,0.532,155,2.452,167,0.222,168,0.261,198,1.136,233,2.466,234,2.466,235,1.903,255,2.485,287,2.443,339,2.424,342,0.004,343,0.005,344,0.004,345,1.39,347,2.4,348,2.302,349,3.448,350,2.506,351,3.374,358,3.223,359,2.35,360,2.046,362,4.319,363,2.046,364,2.674,696,3.633,697,2.748,699,6.043,1544,4.978,1559,4.391,1561,4.651,1574,5.414,2167,6.858,2604,4.978,2641,4.978,2663,5.414,2664,5.414,2665,5.414,2666,6.077,2667,6.077,2668,6.077,2669,6.077,2670,6.077]],["title/interfaces/ItemConfig.html",[368,1.369,1758,2.949]],["body/interfaces/ItemConfig.html",[3,0.273,4,0.282,10,0.214,12,0.595,26,0.007,39,0.549,40,1.007,45,1.122,48,2.317,52,2.708,68,0.872,69,1.914,72,1.809,73,3.778,85,2.902,99,5.962,102,1.026,133,2.777,142,2.838,152,0.263,167,0.189,168,0.296,217,1.182,342,0.003,343,0.005,344,0.003,368,1.402,370,2.229,374,3.889,375,3.566,387,1.967,388,3.479,389,4.993,390,3.191,427,4.571,529,2.162,569,3.358,579,2.902,584,3.417,619,3.548,631,3.548,659,3.112,668,4.517,759,3.338,778,3.653,888,3.566,892,4.556,911,7.352,962,5.564,963,3.19,1002,5.637,1076,2.828,1123,3.254,1153,2.943,1166,4.999,1172,5.268,1195,6.132,1246,4.022,1281,5.268,1307,4.973,1325,3.766,1391,3.358,1670,4.517,1752,4.517,1758,4.822,1923,5.268,1943,5.165,1944,3.392,1973,4.604,2502,6.759,2572,6.132,2591,4.517,2671,4.604,2672,6.883,2673,6.132,2674,7.352,2675,8.252,2676,6.132,2677,6.883,2678,6.883,2679,7.739,2680,6.883,2681,7.352,2682,6.883,2683,6.883,2684,6.883,2685,6.883,2686,5.268,2687,6.883,2688,5.268]],["title/interfaces/KeyAction.html",[368,1.369,2689,3.862]],["body/interfaces/KeyAction.html",[3,0.394,4,0.318,10,0.241,12,0.995,26,0.007,32,1.293,39,0.62,40,0.909,45,1.215,46,1.11,52,1.611,63,2.926,65,1.453,68,0.8,69,1.881,90,1.291,102,0.776,151,3.298,152,0.313,154,0.511,166,1.129,167,0.273,168,0.251,186,4.712,188,1.459,342,0.004,343,0.005,344,0.004,368,1.583,369,4.589,370,2.518,375,2.355,377,1.208,388,3.461,393,2.305,398,2.151,427,4.219,584,2.257,649,3.536,653,7.083,655,3.712,660,2.206,661,3.194,995,4.359,1022,4.973,1154,4.231,1311,4.217,1512,4.217,2241,4.781,2689,6.838,2690,4.781,2691,5.2,2692,4.781,2693,5.2,2694,5.2,2695,5.2,2696,7.313,2697,5.2,2698,5.2,2699,5.2,2700,6.639,2701,5.2,2702,5.2,2703,5.2,2704,5.2,2705,4.468,2706,6.639,2707,5.2,2708,5.2,2709,5.2,2710,5.2,2711,5.2,2712,5.2,2713,5.2,2714,5.2,2715,5.2,2716,5.2,2717,5.2,2718,5.2,2719,5.2,2720,5.2,2721,5.2,2722,5.2,2723,5.2,2724,5.2,2725,5.2,2726,5.2,2727,5.2,2728,5.2,2729,5.2,2730,5.2,2731,5.2,2732,5.2,2733,5.2,2734,5.2]],["title/injectables/KeycommandsService.html",[151,2.851,660,1.494]],["body/injectables/KeycommandsService.html",[3,0.355,4,0.272,10,0.206,12,0.573,26,0.007,32,1.196,39,0.529,40,0.819,45,1.482,46,1.614,52,1.853,54,1.057,63,2.496,65,1.24,68,0.834,69,1.818,70,1.213,89,1.357,90,2.01,100,1.311,101,1.07,102,0.93,121,1.116,151,3.793,152,0.29,154,0.436,166,0.963,167,0.246,168,0.214,186,4.664,188,1.35,342,0.003,343,0.004,344,0.003,368,1.351,369,2.643,374,2.813,375,2.009,377,1.03,388,3.686,393,1.966,398,2.224,458,0.996,502,1.966,584,2.596,649,3.017,653,4.079,655,4.208,660,1.988,661,2.725,713,2.308,759,2.896,864,2.91,995,3.275,1022,5.578,1154,4.375,1165,2.725,1311,4.851,1512,3.598,2241,4.079,2429,5.138,2689,6.955,2690,4.079,2691,4.436,2692,6.221,2693,6.767,2694,6.767,2695,4.436,2696,6.767,2697,4.436,2698,4.436,2699,4.436,2700,5.981,2701,4.436,2702,4.436,2703,4.436,2704,4.436,2705,3.811,2706,5.981,2707,4.436,2708,4.436,2709,7.242,2710,7.242,2711,5.981,2712,4.436,2713,6.767,2714,5.981,2715,4.436,2716,4.436,2717,5.981,2718,4.436,2719,4.436,2720,4.436,2721,4.436,2722,4.436,2723,4.436,2724,4.436,2725,4.436,2726,4.436,2727,5.981,2728,4.436,2729,5.981,2730,4.436,2731,4.436,2732,5.981,2733,4.436,2734,4.436,2735,5.981,2736,6.714,2737,6.714,2738,5.138,2739,6.714,2740,4.079,2741,6.714,2742,4.98,2743,4.98,2744,4.98,2745,4.98,2746,4.98,2747,4.98,2748,4.98,2749,4.98,2750,4.98,2751,4.98,2752,6.714]],["title/components/ListComponent.html",[0,0.292,257,1.256]],["body/components/ListComponent.html",[0,0.309,1,0.688,2,0.981,3,0.144,4,0.148,5,1.122,7,0.737,8,0.712,9,1.145,10,0.112,12,0.313,17,1.052,21,0.665,23,2.413,24,0.611,26,0.007,32,1.16,33,2.162,34,1.848,37,0.665,39,0.811,40,0.525,42,1.586,45,1.282,46,1.257,51,1.199,52,2.42,54,0.677,55,2.832,56,1.993,63,2.155,65,1.07,68,0.799,70,1.183,72,1.337,76,2.225,84,1.311,85,2.25,88,1.436,89,1.174,90,1.629,98,1.251,100,1.031,101,1.067,102,0.767,121,0.87,127,1.089,129,0.676,138,2.122,143,2.427,145,3.428,152,0.268,154,0.238,167,0.099,168,0.117,183,1.58,188,1.249,196,5.059,198,0.508,199,1.146,200,0.562,201,1.813,202,1.617,203,0.737,204,0.737,205,0.665,206,1.447,207,0.665,208,0.7,209,0.632,210,0.688,211,0.7,212,1.997,213,0.688,214,1.221,215,1.645,216,0.7,217,1.661,218,2.071,219,0.7,220,0.7,221,0.737,222,0.688,223,1.166,224,0.7,225,0.737,226,0.688,227,0.737,228,0.676,229,0.665,230,1.473,231,1.447,232,0.676,233,0.688,234,0.688,235,0.676,236,0.737,237,0.7,238,1.793,239,0.7,240,0.688,241,0.7,242,0.7,243,0.7,244,0.688,245,0.737,246,0.676,247,0.7,248,0.737,249,0.688,250,0.737,251,0.688,252,0.688,253,0.86,254,0.737,255,0.688,256,0.737,257,1.75,258,0.688,259,0.737,260,0.688,261,0.737,262,0.632,263,0.737,264,0.688,265,1.263,266,0.737,267,0.676,268,0.737,269,0.688,270,0.737,271,0.665,272,0.737,273,0.688,274,0.676,275,0.688,276,0.654,277,0.737,278,0.688,279,0.737,280,0.737,281,0.688,282,0.737,283,0.688,284,0.737,285,0.665,286,0.737,287,0.676,288,0.688,289,0.737,290,0.688,291,0.712,292,0.737,293,0.676,294,0.688,295,1.689,296,0.688,297,0.7,298,1.2,299,0.7,300,0.7,301,0.688,302,0.7,303,0.7,304,0.7,305,0.737,306,0.676,307,0.688,308,0.737,309,0.688,310,0.712,311,0.688,312,0.737,313,0.688,314,0.737,315,0.7,316,0.688,317,0.688,318,0.737,319,0.688,320,0.737,321,0.688,322,0.737,323,0.688,324,0.654,325,0.643,326,0.665,327,0.737,328,0.676,329,0.737,330,0.676,331,0.737,332,0.676,333,0.737,334,0.676,335,0.737,336,0.676,337,0.724,338,0.737,339,0.676,340,0.724,341,0.737,342,0.002,343,0.003,344,0.002,372,1.172,377,0.889,378,3.508,380,3.827,381,1.229,387,2.247,388,2.25,390,1.05,393,1.073,394,3.508,398,1.732,414,4.54,431,4.383,433,3.232,458,0.543,470,0.95,480,1.628,493,2.107,502,1.698,506,1.442,519,1.829,541,3.83,546,2.216,553,4.084,567,1.442,574,2.536,575,3.521,576,3.863,580,1.008,582,3.83,584,1.05,590,3.291,592,4.167,593,0.988,601,4.161,607,1.588,755,2.021,784,1.362,887,5.484,892,4.235,917,2.346,958,1.325,963,4.133,965,2.079,1012,2.953,1027,3.359,1028,3.232,1045,1.813,1048,3.796,1058,3.041,1076,1.486,1090,4.084,1117,1.866,1118,1.866,1146,3.106,1153,1.533,1155,4.613,1188,2.822,1277,2.429,1301,2.603,1337,3.521,1338,2.216,1391,2.603,1474,2.42,1524,1.963,1686,2.513,1736,2.079,1761,1.646,1810,3.83,1908,2.822,1938,2.42,1939,1.71,2142,2.225,2219,3.83,2390,2.707,2391,2.707,2411,1.71,2688,2.079,2705,3.291,2753,2.42,2754,4.3,2755,4.3,2756,3.521,2757,3.521,2758,5.405,2759,4.754,2760,5.336,2761,3.83,2762,6.067,2763,6.067,2764,6.067,2765,4.3,2766,4.969,2767,5.336,2768,4.626,2769,5.517,2770,2.42,2771,4.3,2772,2.717,2773,2.717,2774,2.717,2775,2.717,2776,2.717,2777,2.717,2778,2.717,2779,2.717,2780,2.717,2781,2.717,2782,2.717,2783,3.83,2784,2.717,2785,4.3,2786,3.83,2787,4.3,2788,3.83,2789,3.83,2790,2.717,2791,2.717,2792,2.717,2793,2.717,2794,3.291,2795,4.3,2796,2.717,2797,2.717,2798,3.291,2799,4.3,2800,4.3,2801,4.3,2802,2.717,2803,2.717,2804,4.3,2805,2.717,2806,2.717,2807,2.717,2808,1.963,2809,2.42,2810,2.42,2811,2.717,2812,2.717,2813,2.717,2814,2.717,2815,6.61,2816,2.717,2817,2.225,2818,2.717,2819,2.717,2820,2.717,2821,4.3,2822,2.717,2823,4.3,2824,2.717,2825,2.225,2826,2.717,2827,2.42,2828,2.717,2829,2.717,2830,2.42,2831,2.717,2832,4.3,2833,2.717,2834,3.83,2835,2.717,2836,2.717,2837,2.42,2838,2.717,2839,2.42,2840,2.717,2841,2.717,2842,2.717,2843,6.263,2844,2.717,2845,3.83,2846,2.717,2847,2.717,2848,2.42,2849,2.42,2850,2.717,2851,2.717,2852,2.717,2853,2.717,2854,4.3,2855,2.717,2856,2.717,2857,2.717,2858,4.3,2859,4.3,2860,6.067,2861,2.717]],["title/interfaces/ListConfig.html",[368,1.369,380,2.399]],["body/interfaces/ListConfig.html",[3,0.209,4,0.216,10,0.164,12,0.456,20,2.259,26,0.007,32,1.512,34,1.07,39,0.421,40,0.898,42,1.07,48,1.607,52,1.854,68,0.875,69,1.892,73,2.359,88,1.354,98,1.664,101,0.685,102,1.039,121,0.968,138,2.001,152,0.256,167,0.145,217,1.631,253,1.818,342,0.003,343,0.004,344,0.003,368,1.074,370,1.708,375,3.28,377,2.047,380,2.719,387,2.102,398,1.499,427,2.791,476,3.13,478,5.315,487,3.904,493,3.718,519,1.724,529,2.249,546,4.765,553,6.223,564,4.577,569,2.791,584,2.845,593,2.081,669,2.031,755,2.167,778,3.036,815,3.466,864,4.299,888,2.308,892,4.635,937,2.949,963,2.651,995,3.967,999,3.602,1027,3.602,1048,2.949,1058,3.687,1065,2.719,1071,5.053,1076,2.167,1123,2.493,1133,5.315,1134,6.554,1143,6.554,1159,5.097,1160,3.755,1161,3.232,1162,5.315,1173,4.686,1183,3.589,1188,4.828,1246,3.343,1308,5.097,1321,3.232,1324,4.379,1338,4.424,1391,3.589,1674,3.496,1686,3.343,1734,6.025,1735,5.315,1756,3.466,1758,3.925,1914,3.929,1924,4.631,1946,4.686,1958,6.025,1972,3.929,2094,4.594,2152,6.554,2158,4.686,2247,5.097,2686,4.379,2768,3.466,2817,4.686,2862,3.528,2863,7.356,2864,6.554,2865,5.315,2866,6.554,2867,7.356,2868,5.63,2869,7.356,2870,6.223,2871,6.66,2872,7.356,2873,7.356,2874,5.721,2875,4.686,2876,5.097,2877,5.097,2878,5.721,2879,5.721,2880,4.686,2881,5.097,2882,5.721,2883,6.025,2884,5.097,2885,4.686,2886,5.097,2887,5.721,2888,3.528]],["title/injectables/ListConfigService.html",[601,3.177,660,1.494]],["body/injectables/ListConfigService.html",[3,0.292,4,0.302,10,0.229,26,0.007,32,0.871,39,0.588,40,0.878,45,1.305,46,1.522,48,2.022,54,1.134,68,0.759,69,1.107,70,1.162,89,1.345,90,1.875,100,1.322,101,1.078,102,0.938,152,0.275,154,0.485,166,1.799,167,0.202,168,0.238,188,1.63,217,1.684,342,0.004,343,0.005,344,0.004,381,1.581,387,2.687,398,1.45,426,3.234,427,3.512,529,2.097,584,2.784,601,4.532,647,3.126,660,2.132,713,2.565,970,3.028,995,4.537,1109,2.852,1324,4.235,1775,5.782,2884,6.414,2886,4.93,2889,7.117,2890,4.235,2891,8.003,2892,7.2,2893,7.2,2894,7.2,2895,7.2,2896,7.2,2897,5.534,2898,7.2,2899,5.534,2900,7.2,2901,5.534,2902,7.2,2903,5.534,2904,7.2,2905,5.534,2906,7.2,2907,5.534,2908,5.534,2909,5.534,2910,5.534,2911,7.2,2912,4.93,2913,7.2,2914,5.534,2915,5.534,2916,5.534,2917,8.003,2918,5.534,2919,7.2,2920,5.534,2921,5.534,2922,7.2,2923,5.534,2924,5.534,2925,7.2,2926,5.534,2927,5.534,2928,5.534,2929,7.2,2930,5.534,2931,5.534,2932,5.534]],["title/components/ListHeaderComponent.html",[0,0.292,258,1.278]],["body/components/ListHeaderComponent.html",[0,0.398,1,0.745,2,0.841,3,0.155,4,0.16,5,0.619,7,0.798,8,0.77,10,0.122,12,0.338,17,1.12,21,0.72,23,2.539,24,0.662,26,0.007,32,1.145,33,2.17,34,1.857,37,1.12,39,0.312,40,0.558,42,1.54,44,1.851,45,1.185,46,1.596,47,3.176,48,2.539,54,0.884,56,2.12,65,1.139,68,0.764,70,1.16,72,0.559,85,2.671,88,1.499,89,1.231,90,1.783,100,1.183,101,1.082,102,0.874,121,0.602,124,1.161,127,1.158,129,1.577,131,1.98,138,1.964,152,0.277,153,1.33,154,0.258,166,0.885,167,0.108,168,0.126,188,1.432,198,0.55,199,1.22,200,0.608,202,1.689,203,0.798,204,0.798,205,0.72,206,1.523,207,0.72,208,0.757,209,0.684,210,0.745,211,0.757,212,2.058,213,0.745,214,1.285,215,1.718,216,0.757,217,1.637,218,2.128,219,0.757,220,0.757,221,0.798,222,0.745,223,1.241,224,0.757,225,0.798,226,0.745,227,0.798,228,0.732,229,0.72,230,1.518,231,1.523,232,0.732,233,0.745,234,0.745,235,0.732,236,0.798,237,0.757,238,1.862,239,0.757,240,0.745,241,0.757,242,0.757,243,0.757,244,0.745,245,0.798,246,1.577,247,0.757,248,0.798,249,0.745,250,0.798,251,0.745,252,0.745,253,0.915,254,0.798,255,0.745,256,0.798,257,0.732,258,1.604,259,0.798,260,0.745,261,0.798,262,0.684,263,0.798,264,0.745,265,1.329,266,0.798,267,0.732,268,0.798,269,0.745,270,0.798,271,0.72,272,0.798,273,0.745,274,0.732,275,0.745,276,0.708,277,0.798,278,0.745,279,0.798,280,0.798,281,0.745,282,0.798,283,0.745,284,0.798,285,0.72,286,0.798,287,0.732,288,0.745,289,0.798,290,0.745,291,0.77,292,0.798,293,1.577,294,0.745,295,1.736,296,0.745,297,0.757,298,1.263,299,0.757,300,0.757,301,0.745,302,0.757,303,0.757,304,0.757,305,0.798,306,0.732,307,0.745,308,0.798,309,0.745,310,0.77,311,0.745,312,0.798,313,0.745,314,0.798,315,0.757,316,0.745,317,0.745,318,0.798,319,0.745,320,0.798,321,0.745,322,0.798,323,0.745,324,0.708,325,0.696,326,0.72,327,0.798,328,0.732,329,0.798,330,0.732,331,0.798,332,0.732,333,0.798,334,0.732,335,0.798,336,0.732,337,0.784,338,0.798,339,0.732,340,0.784,341,0.798,342,0.002,343,0.003,344,0.002,377,0.608,378,3.643,380,3.606,381,0.84,387,1.307,390,2.654,393,1.161,394,3.643,398,1.471,431,4.057,435,1.781,458,0.588,470,1.028,476,1.609,499,1.398,502,1.161,529,0.77,546,3.911,564,2.895,580,1.091,584,2.45,590,3.501,593,1.664,601,4.321,619,1.516,647,1.661,668,1.93,763,1.781,784,1.474,952,3.142,963,3.636,1046,2.251,1058,2.293,1065,3.011,1167,4.076,1183,2.232,1188,3.002,1277,1.661,1304,3.142,1314,1.93,1321,1.661,1338,4.247,1429,3.501,1710,2.503,1769,1.781,1859,2.251,1861,3.535,1867,3.857,1869,1.851,1870,2.251,1887,4.298,1888,3.002,1893,2.408,1902,2.124,1912,2.62,1918,1.718,1924,1.851,1940,3.501,1966,2.124,2028,2.408,2111,2.251,2155,3.501,2226,2.62,2342,4.076,2385,2.408,2390,2.88,2391,2.88,2411,1.851,2554,2.408,2644,1.718,2770,2.62,2794,2.251,2810,2.62,2839,2.62,2845,5.003,2889,7.044,2933,7.538,2934,2.62,2935,3.501,2936,4.575,2937,5.615,2938,6.864,2939,5.615,2940,5.615,2941,5.615,2942,6.336,2943,4.575,2944,4.575,2945,4.575,2946,4.575,2947,6.336,2948,4.575,2949,4.575,2950,4.575,2951,4.575,2952,2.94,2953,2.94,2954,3.501,2955,3.747,2956,2.94,2957,4.575,2958,2.94,2959,3.747,2960,3.747,2961,4.575,2962,2.94,2963,4.575,2964,2.94,2965,4.575,2966,2.94,2967,2.94,2968,2.94,2969,4.575,2970,2.94,2971,4.575,2972,2.94,2973,4.575,2974,2.94,2975,4.575,2976,2.94,2977,2.94,2978,2.94,2979,4.575,2980,2.94,2981,2.94,2982,2.94,2983,2.408,2984,2.94,2985,2.408,2986,2.94,2987,4.575,2988,2.62,2989,2.94,2990,2.94,2991,5.615,2992,6.336,2993,2.94,2994,2.94,2995,2.94,2996,2.94,2997,2.94,2998,2.94,2999,5.615,3000,2.94,3001,2.94,3002,2.94,3003,2.94,3004,2.62,3005,2.94,3006,7.268,3007,2.94,3008,2.94,3009,4.575,3010,2.94,3011,2.94,3012,2.94,3013,2.94,3014,2.94,3015,2.94,3016,4.575,3017,2.94,3018,2.94,3019,2.94,3020,2.94,3021,2.94,3022,2.94,3023,2.94,3024,2.94,3025,2.94,3026,2.94,3027,2.94,3028,6.336,3029,7.268,3030,2.94]],["title/components/ListItemsComponent.html",[0,0.292,260,1.278]],["body/components/ListItemsComponent.html",[0,0.369,1,0.914,2,0.983,3,0.191,4,0.197,5,0.76,7,0.979,8,0.946,10,0.149,12,0.416,17,1.309,21,0.884,23,2.88,24,0.812,26,0.007,32,1.109,33,2.188,34,1.873,37,1.309,39,0.384,40,0.652,42,1.523,46,1.017,47,2.68,52,2.612,54,0.842,56,3.263,65,1.331,68,0.765,70,1.131,72,1.017,84,0.62,85,2.968,88,1.265,89,1.052,90,1.183,100,0.934,101,1.04,102,0.848,121,0.703,127,1.354,129,0.899,138,1.87,143,2.122,145,3.021,152,0.243,154,0.316,167,0.132,168,0.155,186,3.192,188,0.95,198,0.675,199,1.425,200,0.747,202,1.877,203,0.979,204,0.979,205,0.884,206,1.727,207,0.884,208,0.93,209,0.84,210,0.914,211,0.93,212,2.209,213,0.914,214,1.457,215,1.909,216,0.93,217,1.651,218,2.268,219,0.93,220,0.93,221,0.979,222,0.914,223,1.45,224,0.93,225,0.979,226,0.914,227,0.979,228,0.899,229,0.884,230,1.629,231,1.727,232,0.899,233,0.914,234,0.914,235,0.899,236,0.979,237,0.93,238,2.038,239,0.93,240,0.914,241,0.93,242,0.93,243,0.93,244,0.914,245,0.979,246,0.899,247,0.93,248,0.979,249,0.914,250,0.979,251,0.914,252,0.914,253,1.07,254,0.979,255,0.914,256,0.979,257,0.899,258,0.914,259,0.979,260,1.993,261,0.979,262,0.84,263,0.979,264,0.914,265,1.507,266,0.979,267,0.899,268,0.979,269,0.914,270,0.979,271,0.884,272,0.979,273,0.914,274,0.899,275,0.914,276,0.869,277,0.979,278,0.914,279,0.979,280,0.979,281,0.914,282,0.979,283,0.914,284,0.979,285,0.884,286,0.979,287,0.899,288,0.914,289,0.979,290,0.914,291,0.946,292,0.979,293,0.899,294,0.914,295,1.85,296,0.914,297,0.93,298,0.812,299,0.93,300,0.93,301,0.914,302,0.93,303,0.93,304,0.93,305,0.979,306,0.899,307,0.914,308,0.979,309,0.914,310,0.946,311,0.914,312,0.979,313,0.914,314,0.979,315,0.93,316,0.914,317,0.914,318,0.979,319,0.914,320,0.979,321,0.914,322,0.979,323,0.914,324,0.869,325,0.854,326,0.884,327,0.979,328,0.899,329,0.979,330,0.899,331,0.979,332,0.899,333,0.979,334,0.899,335,0.979,336,0.899,337,0.963,338,0.979,339,0.899,340,0.963,341,0.979,342,0.002,343,0.004,344,0.002,377,1.317,378,3.989,381,1.032,393,1.426,394,3.736,414,4.374,431,5.086,458,0.722,480,2.025,519,1.612,553,4.874,564,2.756,574,2.542,575,4.38,576,3.125,658,3.673,755,2.667,761,2.926,892,4.544,900,3.239,917,2.906,962,3.366,963,4.027,965,4.093,1027,4.009,1046,5.388,1058,2.68,1090,4.093,1117,3.673,1118,2.48,1175,2.756,1246,3.125,1314,3.509,1338,2.756,1520,3.736,1534,2.958,1710,2.926,1736,2.764,1889,3.863,2390,3.366,2391,3.366,2411,2.273,2705,4.093,2759,5.673,2761,4.764,2768,3.239,2783,4.764,2843,3.217,2848,4.764,2849,3.217,2889,6.9,2954,4.093,2955,4.38,3031,7.384,3032,3.217,3033,5.347,3034,5.347,3035,5.347,3036,5.347,3037,7.04,3038,3.611,3039,5.347,3040,3.611,3041,3.611,3042,5.347,3043,4.764,3044,5.347,3045,3.611,3046,3.611,3047,3.611,3048,3.611,3049,5.347,3050,5.347,3051,3.611,3052,5.347,3053,3.611,3054,3.611,3055,3.611,3056,3.217,3057,3.611,3058,3.611,3059,3.611,3060,3.611]],["title/modules/ListModule.html",[345,1.155,3061,3.466]],["body/modules/ListModule.html",[3,0.297,4,0.307,10,0.233,25,2.665,26,0.007,152,0.371,154,0.493,155,2.27,166,1.088,167,0.266,168,0.242,198,1.052,217,1.385,257,2.398,258,2.44,260,2.44,288,2.44,304,2.482,342,0.004,343,0.005,344,0.004,345,1.287,347,2.222,348,2.131,349,3.326,350,2.32,351,3.255,358,3.069,359,2.176,360,1.894,363,2.45,364,1.968,601,5.696,607,3.289,696,3.459,697,2.545,700,4.999,784,2.821,1276,6.617,2159,6.617,2169,5.938,2170,5.481,2172,5.938,2180,4.066,2183,4.609,2184,4.609,2933,4.609,3031,4.609,3061,6.901,3062,5.013,3063,5.013,3064,5.627,3065,5.013,3066,5.013,3067,5.013,3068,5.013,3069,5.627,3070,5.627,3071,5.627,3072,5.627,3073,5.627,3074,5.013,3075,5.627]],["title/components/LoaderComponent.html",[0,0.292,262,1.174]],["body/components/LoaderComponent.html",[0,0.363,1,0.89,2,1.277,3,0.186,4,0.192,5,1.318,7,0.953,8,0.921,9,1.481,10,0.145,12,0.404,21,0.86,24,0.79,26,0.007,32,0.553,33,2.186,34,1.873,37,1.282,39,0.373,40,0.639,42,0.657,45,0.854,54,0.825,68,0.561,70,1.023,72,1.482,76,4.291,78,2.701,79,2.701,84,0.9,88,1.758,89,0.936,90,1.159,100,0.769,101,1.015,102,0.545,116,3.58,121,0.977,123,3.141,127,1.759,129,0.875,133,3.618,135,3.438,138,1.833,142,2.864,152,0.239,154,0.308,156,1.098,166,0.679,167,0.192,168,0.225,188,0.624,198,0.657,199,1.397,200,0.727,201,1.481,202,1.852,203,0.953,204,0.953,205,0.86,206,1.699,207,0.86,208,0.905,209,0.817,210,0.89,211,0.905,212,2.189,213,0.89,214,1.434,215,1.884,216,0.905,217,1.338,218,2.25,219,0.905,220,0.905,221,0.953,222,0.89,223,1.421,224,0.905,225,0.953,226,0.89,227,0.953,228,0.875,229,0.86,230,1.615,231,1.699,232,0.875,233,0.89,234,0.89,235,0.875,236,0.953,237,0.905,238,2.015,239,0.905,240,0.89,241,0.905,242,0.905,243,0.905,244,0.89,245,0.953,246,0.875,247,0.905,248,0.953,249,0.89,250,0.953,251,0.89,252,0.89,253,1.048,254,0.953,255,0.89,256,0.953,257,0.875,258,0.89,259,0.953,260,0.89,261,0.953,262,1.878,263,0.953,264,0.89,265,1.483,266,0.953,267,0.875,268,0.953,269,0.89,270,0.953,271,0.86,272,0.953,273,0.89,274,0.875,275,0.89,276,0.845,277,0.953,278,0.89,279,0.953,280,0.953,281,0.89,282,0.953,283,0.89,284,0.953,285,0.86,286,0.953,287,0.875,288,0.89,289,0.953,290,0.89,291,0.921,292,0.953,293,0.875,294,0.89,295,1.836,296,0.89,297,0.905,298,0.79,299,0.905,300,0.905,301,0.89,302,0.905,303,0.905,304,0.905,305,0.953,306,0.875,307,0.89,308,0.953,309,0.89,310,0.921,311,0.89,312,0.953,313,0.89,314,0.953,315,0.905,316,0.89,317,0.89,318,0.953,319,0.89,320,0.953,321,0.89,322,0.953,323,0.89,324,0.845,325,0.831,326,0.86,327,0.953,328,0.875,329,0.953,330,0.875,331,0.953,332,0.875,333,0.953,334,0.875,335,0.953,336,0.875,337,0.937,338,0.953,339,0.875,340,0.937,341,0.953,342,0.002,343,0.003,344,0.002,360,1.183,369,1.865,377,0.727,381,1.004,386,5.435,398,1.642,425,2.128,458,0.703,470,1.229,476,2.867,483,2.626,486,1.823,499,1.67,506,4.284,529,1.373,550,4.209,558,1.278,566,5.689,579,2.929,632,1.304,647,1.985,648,2.026,669,0.831,670,2.16,671,3.603,750,2.689,882,3.54,887,4.876,888,1.417,920,3.438,1029,4.059,1051,2.053,1058,4.046,1109,4.016,1164,2.689,1175,1.811,1183,2.556,1185,3.174,1304,3.599,1520,4.403,1674,3.944,1715,2.781,1741,1.714,1745,2.556,1747,3.599,1864,2.128,1914,3.599,1935,2.212,1952,2.306,1970,2.877,2000,4.291,2082,3.786,2155,4.01,2203,2.306,2297,2.689,2310,5.132,2313,4.668,2335,6.085,2390,3.298,2391,3.298,2411,2.212,2479,2.877,2510,2.877,2798,2.689,2885,5.132,3076,3.13,3077,5.239,3078,5.239,3079,4.668,3080,4.01,3081,5.239,3082,5.239,3083,8.48,3084,3.513,3085,5.239,3086,3.513,3087,5.239,3088,3.513,3089,3.786,3090,4.668,3091,3.513,3092,5.239,3093,5.239,3094,5.239,3095,3.513,3096,3.513,3097,5.239,3098,3.513,3099,2.877,3100,3.513,3101,5.316,3102,3.513,3103,2.212,3104,5.239,3105,3.513,3106,3.513,3107,5.239,3108,3.513,3109,6.266,3110,3.513,3111,2.306,3112,5.239,3113,6.266,3114,6.266,3115,3.513,3116,3.513,3117,3.513,3118,2.877,3119,3.513,3120,3.513,3121,3.513,3122,2.877,3123,3.513,3124,2.877,3125,2.689,3126,3.513,3127,3.513,3128,3.513,3129,5.239,3130,3.513,3131,3.513,3132,3.513,3133,3.513,3134,3.13,3135,5.239,3136,3.513,3137,3.513]],["title/modules/LoaderModule.html",[345,1.155,2171,3.312]],["body/modules/LoaderModule.html",[3,0.371,4,0.382,10,0.29,25,2.943,26,0.007,152,0.352,154,0.614,167,0.257,168,0.301,198,1.312,262,2.307,342,0.005,343,0.006,344,0.005,345,1.605,347,2.77,348,2.657,349,3.674,350,2.892,351,3.594,358,3.519,359,2.712,360,2.361,363,2.361,364,2.919,696,3.967,697,3.172,1029,5.584,2171,6.425,3138,6.249,3139,6.249,3140,6.249,3141,6.249,3142,7.015,3143,5.745,3144,7.015]],["title/injectables/LoaderService.html",[660,1.494,1029,2.949]],["body/injectables/LoaderService.html",[3,0.332,4,0.343,10,0.26,12,0.724,26,0.007,39,0.668,40,0.953,45,1.025,54,1.229,68,0.761,70,1.076,72,1.689,87,3.083,88,2.234,89,1.166,90,1.391,97,5.975,100,1.146,101,0.934,102,0.813,121,0.827,133,3.848,152,0.298,154,0.551,167,0.23,168,0.27,188,1.387,262,2.238,342,0.004,343,0.005,344,0.004,447,6.955,486,2.271,529,2.046,550,4.434,566,7.625,660,2.312,713,2.913,1029,4.562,1120,5.573,1175,4.024,1623,5.148,1741,3.809,1914,5.362,2335,6.394,2349,5.975,2586,5.641,2798,4.811,3079,6.955,3090,6.955,3101,7.125,3143,5.148,3145,5.6,3146,7.807,3147,6.286,3148,6.286,3149,6.286,3150,6.286]],["title/components/LocationMapComponent.html",[0,0.292,264,1.278]],["body/components/LocationMapComponent.html",[0,0.458,1,1.034,2,1.075,3,0.216,4,0.223,5,0.859,6,2.235,7,1.108,8,1.07,10,0.169,12,0.47,21,1,24,0.919,26,0.007,32,0.921,33,2.197,34,1.883,35,3.839,37,1.432,39,0.434,42,1.582,45,1.491,54,0.921,65,1.456,68,0.736,70,1.041,84,0.701,87,2.31,89,0.874,90,1.294,100,0.858,101,1.055,102,0.609,121,0.899,127,1.481,129,1.017,131,1.828,143,2.249,152,0.156,154,0.358,166,0.79,167,0.149,168,0.175,181,2.681,188,0.726,196,4.477,198,0.764,199,1.559,200,0.845,202,1.989,203,1.108,204,1.108,205,1,206,1.854,207,1,208,1.052,209,0.95,210,1.034,211,1.052,212,2.295,213,1.034,214,1.564,215,2.024,216,1.052,217,1.411,218,2.347,219,1.052,220,1.052,221,1.108,222,1.034,223,1.587,224,1.052,225,1.108,226,1.034,227,1.108,228,1.017,229,1,230,1.693,231,1.854,232,1.017,233,1.034,234,1.034,235,1.017,236,1.108,237,1.052,238,2.142,239,1.052,240,1.034,241,1.052,242,1.052,243,1.052,244,1.034,245,1.108,246,1.017,247,1.052,248,1.108,249,1.034,250,1.108,251,1.034,252,1.034,253,1.17,254,1.108,255,1.034,256,1.108,257,1.017,258,1.034,259,1.108,260,1.034,261,1.108,262,0.95,263,1.108,264,1.89,265,2.116,266,1.108,267,1.017,268,1.108,269,1.034,270,1.108,271,1,272,1.108,273,1.034,274,1.017,275,1.034,276,0.983,277,1.108,278,1.034,279,1.108,280,1.108,281,1.034,282,1.108,283,1.034,284,1.108,285,1,286,1.108,287,1.017,288,1.034,289,1.108,290,1.034,291,1.07,292,1.108,293,1.017,294,1.034,295,1.915,296,1.034,297,1.052,298,0.919,299,1.052,300,1.052,301,1.034,302,1.052,303,1.052,304,1.052,305,1.108,306,1.017,307,1.034,308,1.108,309,1.034,310,1.07,311,1.034,312,1.108,313,1.034,314,1.108,315,1.052,316,1.034,317,1.034,318,1.108,319,1.034,320,1.108,321,1.034,322,1.108,323,1.034,324,0.983,325,0.967,326,1,327,1.108,328,1.017,329,1.108,330,1.017,331,1.108,332,1.017,333,1.108,334,1.017,335,1.108,336,1.017,337,1.089,338,1.108,339,1.017,340,1.089,341,1.108,342,0.003,343,0.004,344,0.003,377,1.21,480,2.216,493,2.31,519,1.763,529,1.533,593,2.714,619,3.523,864,3.419,1003,6.476,1045,2.467,1048,4.362,1184,3.839,1520,2.168,1715,3.105,2111,3.127,2261,3.839,2301,5.598,2302,7.036,2304,7.036,3151,6.476,3152,3.639,3153,6.834,3154,5.85,3155,5.85,3156,5.212,3157,8.461,3158,5.85,3159,5.85,3160,4.085,3161,5.212,3162,4.085,3163,5.85,3164,4.085,3165,4.085,3166,7.462,3167,5.85,3168,4.085,3169,5.85,3170,5.212,3171,4.085,3172,5.85,3173,4.085,3174,4.085,3175,4.085,3176,4.085,3177,4.085,3178,4.085,3179,5.85,3180,4.085]],["title/modules/LocationModule.html",[345,1.155,3181,3.646]],["body/modules/LocationModule.html",[2,1.515,3,0.311,4,0.321,10,0.243,12,0.677,25,2.865,26,0.007,27,2.597,54,0.926,70,0.745,89,0.879,100,0.863,101,0.704,102,0.612,152,0.363,154,0.515,155,2.373,156,1.838,166,1.448,167,0.274,168,0.253,188,1.045,198,1.1,264,2.442,265,1.949,267,2.4,269,2.442,342,0.004,343,0.005,344,0.004,345,1.984,347,2.323,348,2.228,349,3.397,350,2.426,351,3.324,357,5.172,358,3.157,359,2.275,360,1.98,362,4.231,363,2.521,364,2.619,443,4.097,694,4.231,695,5.731,696,3.559,697,2.66,698,5.952,699,5.41,721,3.703,861,5.41,862,6.671,2259,6.008,2289,4.818,3118,4.818,3181,7.144,3182,5.241,3183,5.241,3184,5.883,3185,5.241,3186,5.241,3187,5.241,3188,7.488,3189,7.978,3190,5.883,3191,5.883,3192,5.883,3193,4.818,3194,5.241,3195,5.883,3196,5.241,3197,5.241,3198,5.883,3199,8.238,3200,5.883,3201,5.883,3202,5.883,3203,5.883,3204,5.883]],["title/components/LocationPickerComponent.html",[0,0.292,267,1.256]],["body/components/LocationPickerComponent.html",[0,0.453,1,0.808,2,0.896,3,0.169,4,0.174,5,0.671,6,1.746,7,0.865,8,0.836,10,0.132,12,0.367,15,2.102,17,1.619,18,4.486,20,1.924,21,2.152,24,0.718,25,1.609,26,0.007,27,2.151,28,3.234,29,2.666,30,3.234,31,2.666,32,1.23,33,2.178,34,1.863,35,3.198,37,1.193,39,0.339,40,0.594,42,1.703,43,3.721,45,1.462,46,1.771,47,3.571,48,2.001,49,3.067,50,4.667,51,2.61,52,1.826,53,5.287,54,0.767,58,3.198,59,4.165,62,2.952,63,3.316,64,3.581,65,1.213,68,0.816,69,0.975,70,1.199,72,0.927,84,0.548,87,1.924,89,1.167,90,1.729,95,3.067,98,1.924,100,1.045,101,1.04,102,0.742,103,3.067,113,3.067,115,3.346,116,2.512,117,1.884,118,2.192,119,4.382,120,2.442,121,0.988,122,2.442,124,1.924,127,1.234,129,1.647,131,2.347,139,4.414,140,2.442,141,2.442,142,1.316,143,1.469,144,2.442,145,1.803,146,3.729,147,1.933,148,2.442,149,2.442,150,2.192,151,4.244,152,0.287,153,1.443,154,0.279,155,1.287,156,0.997,166,0.617,167,0.117,168,0.137,188,0.567,193,1.803,194,2.009,198,0.597,199,1.299,200,0.66,202,1.764,203,0.865,204,0.865,205,0.781,206,1.603,207,0.781,208,0.822,209,0.742,210,0.808,211,0.822,212,2.119,213,0.808,214,1.352,215,1.794,216,0.822,217,1.29,218,2.185,219,0.822,220,0.822,221,0.865,222,0.808,223,1.321,224,0.822,225,0.865,226,0.808,227,0.865,228,0.794,229,0.781,230,1.563,231,1.603,232,0.794,233,0.808,234,0.808,235,0.794,236,0.865,237,0.822,238,1.933,239,0.822,240,0.808,241,0.822,242,0.822,243,0.822,244,0.808,245,0.865,246,0.794,247,0.822,248,0.865,249,0.808,250,0.865,251,0.808,252,0.808,253,0.975,254,0.865,255,0.808,256,0.865,257,0.794,258,0.808,259,0.865,260,0.808,261,0.865,262,0.742,263,0.865,264,1.902,265,2.169,266,0.865,267,1.87,268,0.865,269,1.902,270,0.865,271,0.781,272,0.865,273,0.808,274,0.794,275,0.808,276,0.768,277,0.865,278,0.808,279,0.865,280,0.865,281,0.808,282,0.865,283,0.808,284,0.865,285,0.781,286,0.865,287,0.794,288,0.808,289,0.865,290,0.808,291,0.836,292,0.865,293,0.794,294,0.808,295,1.782,296,0.808,297,0.822,298,0.718,299,0.822,300,0.822,301,0.808,302,0.822,303,0.822,304,0.822,305,0.865,306,0.794,307,0.808,308,0.865,309,0.808,310,0.836,311,0.808,312,0.865,313,0.808,314,0.865,315,0.822,316,0.808,317,0.808,318,0.865,319,0.808,320,0.865,321,0.808,322,0.865,323,0.808,324,0.768,325,0.755,326,0.781,327,0.865,328,0.794,329,0.865,330,0.794,331,0.865,332,0.794,333,0.865,334,0.794,335,0.865,336,0.794,337,0.851,338,0.865,339,0.794,340,0.851,341,0.865,342,0.002,343,0.003,344,0.002,377,1.223,443,2.666,458,0.975,465,2.613,502,1.26,618,3.673,785,3.067,1003,5.98,1058,2.442,1182,4.008,1282,4.341,1456,2.952,1888,4.676,2259,5.418,2275,3.991,2278,3.991,2279,4.341,2280,3.991,2485,4.341,3151,6.97,3156,4.341,3170,4.341,3193,2.613,3194,2.843,3196,2.843,3205,2.843,3206,4.341,3207,5.911,3208,4.872,3209,6.616,3210,5.911,3211,2.843,3212,4.872,3213,3.191,3214,3.191,3215,3.191,3216,3.191,3217,3.191,3218,6.616,3219,3.191,3220,3.991,3221,3.191,3222,4.872,3223,3.191,3224,3.191,3225,3.191,3226,3.191,3227,4.872,3228,3.191,3229,3.191,3230,4.872,3231,3.191,3232,3.191,3233,4.872,3234,4.872,3235,3.191,3236,3.191,3237,5.911,3238,3.191,3239,3.191,3240,3.191,3241,4.872]],["title/components/LocationSearchComponent.html",[0,0.292,269,1.278]],["body/components/LocationSearchComponent.html",[0,0.403,1,1.067,2,1.1,3,0.223,4,0.23,5,0.887,7,1.143,8,1.104,10,0.174,12,0.485,17,1.464,21,1.032,24,0.948,26,0.007,33,2.2,34,1.885,37,1.464,39,0.448,40,0.73,42,1.66,45,1.134,54,0.942,64,4.585,65,1.884,68,0.623,70,1.052,84,0.724,89,0.893,90,1.323,100,0.618,101,1.044,102,0.439,121,0.915,123,3.144,124,1.664,127,1.916,129,1.049,143,2.281,152,0.265,153,1.906,154,0.369,167,0.154,168,0.181,198,0.788,199,1.595,200,0.872,202,2.018,203,1.143,204,1.143,205,1.032,206,1.886,207,1.032,208,1.086,209,0.981,210,1.067,211,1.086,212,2.316,213,1.067,214,1.591,215,2.053,216,1.086,217,1.426,218,2.367,219,1.086,220,1.086,221,1.143,222,1.067,223,1.622,224,1.086,225,1.143,226,1.067,227,1.143,228,1.049,229,1.032,230,1.708,231,1.886,232,1.049,233,1.067,234,1.067,235,1.049,236,1.143,237,1.086,238,2.168,239,1.086,240,1.067,241,1.086,242,1.086,243,1.086,244,1.067,245,1.143,246,1.049,247,1.086,248,1.143,249,1.067,250,1.143,251,1.067,252,1.067,253,1.196,254,1.143,255,1.067,256,1.143,257,1.049,258,1.067,259,1.143,260,1.067,261,1.143,262,0.981,263,1.143,264,1.067,265,2.155,266,1.143,267,1.049,268,1.143,269,1.916,270,1.143,271,1.032,272,1.143,273,1.067,274,1.049,275,1.067,276,1.014,277,1.143,278,1.067,279,1.143,280,1.143,281,1.067,282,1.143,283,1.067,284,1.143,285,1.032,286,1.143,287,1.049,288,1.067,289,1.143,290,1.067,291,1.104,292,1.143,293,1.049,294,1.067,295,1.93,296,1.067,297,1.086,298,0.948,299,1.086,300,1.086,301,1.067,302,1.086,303,1.086,304,1.086,305,1.143,306,1.049,307,1.067,308,1.143,309,1.067,310,1.104,311,1.067,312,1.143,313,1.067,314,1.143,315,1.086,316,1.067,317,1.067,318,1.143,319,1.067,320,1.143,321,1.067,322,1.143,323,1.067,324,1.014,325,0.997,326,1.032,327,1.143,328,1.049,329,1.143,330,1.049,331,1.143,332,1.049,333,1.143,334,1.049,335,1.143,336,1.049,337,1.123,338,1.143,339,1.049,340,1.123,341,1.143,342,0.003,343,0.004,344,0.003,458,0.843,480,2.266,500,2.705,519,1.803,593,2.176,596,4.899,618,4.12,670,1.738,671,1.664,1045,2.522,1048,4.12,1184,3.925,1446,4.322,1475,5.322,1670,4.967,1756,3.623,1824,4.967,1888,5.449,2259,5.726,2261,3.925,2270,7.607,2275,4.899,2301,4.899,3151,6.535,3193,3.452,3211,3.755,3242,3.755,3243,5.982,3244,6.953,3245,5.982,3246,4.214,3247,5.982,3248,4.214,3249,4.214,3250,5.982,3251,4.214,3252,3.755,3253,4.214,3254,4.214,3255,4.214,3256,4.214]],["title/components/LoginComponent.html",[0,0.292,271,1.235]],["body/components/LoginComponent.html",[0,0.38,1,0.963,2,1.021,3,0.201,4,0.207,5,0.8,7,1.031,8,0.996,9,1.603,10,0.157,12,0.438,17,1.359,21,0.931,24,0.855,26,0.007,32,0.599,33,2.192,34,1.877,37,1.359,39,0.404,40,0.678,42,1.227,45,0.62,46,1.646,54,0.875,65,1.383,68,0.776,70,1.115,72,1.056,84,0.954,85,2.342,89,0.568,90,0.841,100,0.815,101,1.036,102,0.578,121,0.863,124,1.501,127,1.406,129,0.946,142,2.29,143,2.495,152,0.293,153,1.719,154,0.333,156,1.188,166,0.735,167,0.139,168,0.163,198,0.711,199,1.481,200,0.786,201,1.603,202,1.924,203,1.031,204,1.031,205,0.931,206,1.78,207,0.931,208,0.979,209,1.679,210,0.963,211,0.979,212,2.245,213,0.963,214,1.501,215,1.957,216,0.979,217,1.377,218,2.302,219,0.979,220,0.979,221,1.031,222,0.963,223,1.506,224,0.979,225,1.031,226,0.963,227,1.031,228,0.946,229,0.931,230,1.656,231,1.78,232,0.946,233,0.963,234,0.963,235,0.946,236,1.031,237,0.979,238,2.082,239,0.979,240,0.963,241,0.979,242,0.979,243,0.979,244,0.963,245,1.031,246,0.946,247,0.979,248,1.031,249,0.963,250,1.031,251,0.963,252,0.963,253,1.111,254,1.031,255,0.963,256,1.031,257,0.946,258,0.963,259,1.031,260,0.963,261,1.031,262,1.292,263,1.031,264,0.963,265,1.553,266,1.031,267,0.946,268,1.031,269,0.963,270,1.031,271,1.766,272,1.031,273,1.662,274,2.302,275,0.963,276,0.915,277,1.031,278,0.963,279,1.031,280,1.031,281,0.963,282,1.031,283,0.963,284,1.031,285,0.931,286,1.031,287,0.946,288,0.963,289,1.031,290,0.963,291,1.719,292,1.031,293,0.946,294,0.963,295,1.878,296,0.963,297,0.979,298,0.855,299,0.979,300,0.979,301,0.963,302,0.979,303,0.979,304,0.979,305,1.031,306,0.946,307,0.963,308,1.031,309,0.963,310,0.996,311,0.963,312,1.031,313,0.963,314,1.031,315,0.979,316,0.963,317,0.963,318,1.031,319,0.963,320,1.031,321,0.963,322,1.031,323,0.963,324,0.915,325,0.9,326,0.931,327,1.031,328,0.946,329,1.031,330,0.946,331,1.031,332,0.946,333,1.031,334,0.946,335,1.031,336,0.946,337,1.013,338,1.031,339,0.946,340,1.013,341,1.031,342,0.003,343,0.004,344,0.003,375,2.241,458,1.111,480,2.104,484,5.038,487,2.948,519,1.978,522,2.495,530,2.91,550,3.655,648,3.447,651,2.64,654,4.223,655,3.471,662,4.644,664,4.543,667,4.549,668,3.645,669,1.314,691,5.059,693,4.372,705,2.91,761,3.039,766,3.645,767,3.114,1017,3.483,1018,3.975,1032,4.337,1033,2.792,1034,2.968,1069,4.013,1072,3.382,1108,3.364,1109,2.863,1110,4.741,1115,2.393,1116,2.393,1153,1.981,1630,2.393,1715,2.948,1907,4.251,2203,3.645,2218,4.549,3257,3.387,3258,4.948,3259,4.549,3260,5.343,3261,5.911,3262,5.554,3263,4.549,3264,3.387,3265,5.554,3266,3.802,3267,4.948,3268,4.948,3269,4.948,3270,3.802,3271,4.948,3272,4.948,3273,3.802,3274,3.802,3275,4.549,3276,3.802,3277,3.802,3278,3.802,3279,3.802,3280,3.114,3281,3.114,3282,3.114,3283,3.387,3284,3.802,3285,3.387,3286,3.802,3287,3.387,3288,3.114,3289,3.114]],["title/components/LoginFormComponent.html",[0,0.292,273,1.278]],["body/components/LoginFormComponent.html",[0,0.449,1,0.789,2,0.88,3,0.165,4,0.17,5,0.656,7,0.845,8,0.817,9,1.314,10,0.129,12,0.359,17,1.171,21,0.763,22,2.571,24,0.701,26,0.007,32,1.22,33,2.176,34,1.861,37,1.171,39,0.331,40,0.584,42,1.565,45,1.304,46,1.559,48,2.351,51,2.112,54,0.753,57,2.955,65,1.191,68,0.735,69,0.957,70,1.17,84,0.822,88,1.132,89,0.976,90,1.059,100,0.855,101,1.002,102,0.606,121,1.079,127,1.212,129,0.776,131,2.901,142,2.694,143,2.336,147,3.528,152,0.296,154,0.273,155,1.257,166,0.603,167,0.114,168,0.134,188,0.85,198,0.583,199,1.276,200,0.645,201,1.314,202,1.742,203,0.845,204,0.845,205,0.763,206,1.58,207,0.763,208,0.803,209,1.52,210,0.789,211,0.803,212,2.102,213,0.789,214,1.333,215,1.772,216,0.803,217,1.278,218,2.169,219,0.803,220,0.803,221,0.845,222,0.789,223,1.298,224,0.803,225,0.845,226,0.789,227,0.845,228,0.776,229,0.763,230,1.55,231,1.58,232,0.776,233,0.789,234,0.789,235,0.776,236,0.845,237,0.803,238,1.912,239,0.803,240,0.789,241,0.803,242,0.803,243,0.803,244,0.789,245,0.845,246,0.776,247,0.803,248,0.845,249,0.789,250,0.845,251,0.789,252,0.789,253,0.957,254,0.845,255,0.789,256,0.845,257,0.776,258,0.789,259,0.845,260,0.789,261,0.845,262,1.52,263,0.845,264,0.789,265,1.378,266,0.845,267,0.776,268,0.845,269,0.789,270,0.845,271,0.763,272,0.845,273,1.655,274,2.299,275,0.789,276,0.75,277,0.845,278,0.789,279,0.845,280,0.845,281,0.789,282,0.845,283,0.789,284,0.845,285,0.763,286,0.845,287,0.776,288,0.789,289,0.845,290,0.789,291,2.193,292,0.845,293,0.776,294,0.789,295,1.769,296,0.789,297,0.803,298,1.076,299,0.803,300,0.803,301,0.789,302,0.803,303,0.803,304,0.803,305,0.845,306,0.776,307,0.789,308,0.845,309,0.789,310,0.817,311,0.789,312,0.845,313,0.789,314,0.845,315,0.803,316,0.789,317,0.789,318,0.845,319,0.789,320,0.845,321,0.789,322,0.845,323,0.789,324,0.75,325,0.737,326,0.763,327,0.845,328,0.776,329,0.845,330,0.776,331,0.845,332,0.776,333,0.845,334,0.776,335,0.845,336,0.776,337,0.831,338,0.845,339,0.776,340,0.831,341,0.845,342,0.002,343,0.003,344,0.002,377,0.99,388,3.137,458,0.623,470,1.09,480,1.812,483,2.398,487,2.539,496,2.796,499,2.274,519,1.756,544,3.822,550,3.113,564,2.466,579,2.017,618,3.368,648,3.293,654,3.439,659,2.164,663,1.562,745,3.012,766,3.822,888,1.93,917,3.092,1017,3.091,1033,2.565,1034,2.726,1040,1.761,1045,3.137,1072,2.466,1113,2.251,1120,2.045,1150,4.488,1160,3.14,1161,2.703,1171,3.662,1287,1.962,1390,3.457,1446,3.457,1524,3.457,1592,3.457,1715,2.539,1902,3.457,1918,2.796,2156,5.695,2212,3.919,2649,3.457,3111,3.14,3260,4.438,3275,2.552,3289,2.552,3290,8.269,3291,7.104,3292,2.552,3293,5.821,3294,4.263,3295,4.263,3296,6.281,3297,6.903,3298,5.821,3299,5.821,3300,5.189,3301,6.281,3302,6.281,3303,5.189,3304,5.189,3305,5.189,3306,5.189,3307,3.116,3308,7.441,3309,4.785,3310,4.785,3311,3.116,3312,1.581,3313,4.263,3314,3.116,3315,4.263,3316,3.116,3317,5.352,3318,4.263,3319,3.116,3320,2.776,3321,4.263,3322,4.263,3323,3.116,3324,4.263,3325,3.116,3326,3.116,3327,3.116,3328,3.116,3329,4.263,3330,4.263,3331,3.116,3332,3.662,3333,4.263,3334,4.263,3335,3.116,3336,3.116,3337,4.263,3338,4.263,3339,3.116,3340,2.776,3341,2.776,3342,4.263,3343,3.662,3344,2.776,3345,3.116,3346,3.116,3347,2.776,3348,3.116,3349,2.776,3350,2.776,3351,2.552,3352,3.116,3353,2.776,3354,2.776,3355,2.776,3356,4.263,3357,2.776,3358,2.552,3359,4.263,3360,3.116,3361,3.116,3362,3.116,3363,3.116,3364,2.776,3365,2.776,3366,2.776,3367,2.776,3368,3.116,3369,2.776,3370,2.776,3371,3.919]],["title/pipes/MaxItemsPipe.html",[1273,2.678,2165,3.646]],["body/pipes/MaxItemsPipe.html",[3,0.37,4,0.381,10,0.289,12,0.805,17,1.712,24,1.574,26,0.007,45,1.141,52,2.3,54,1.102,68,0.627,70,0.887,89,1.045,100,1.027,101,1.065,102,0.728,121,0.92,152,0.267,154,0.613,167,0.256,168,0.3,188,1.243,342,0.005,343,0.006,344,0.005,493,3.771,755,3.617,958,4.065,1247,6.43,1273,4.889,1274,5.055,1279,4.591,1285,6.021,1868,8.507,2165,6.021,3372,7.424,3373,6.233,3374,7.424,3375,8.333,3376,8.333,3377,6.996,3378,6.996]],["title/components/MediumEditorComponent.html",[0,0.292,275,1.278]],["body/components/MediumEditorComponent.html",[0,0.434,1,0.906,2,0.977,3,0.189,4,0.195,5,0.753,6,1.958,7,0.971,8,0.938,9,1.509,10,0.148,12,0.412,13,3.105,15,3.976,17,1.3,18,3.988,21,0.876,22,2.797,24,0.805,25,1.755,26,0.007,27,2.346,28,3.466,29,2.907,30,3.466,31,2.907,32,0.837,33,2.188,34,1.873,35,3.486,37,1.3,39,0.38,40,0.648,41,4.231,42,1.4,43,3.988,44,4.714,45,1.435,46,1.205,54,0.837,57,3.17,58,3.486,59,4.413,62,3.218,65,1.323,68,0.763,69,1.063,70,1.151,84,0.912,85,2.24,89,1.118,90,1.736,93,4.351,95,3.344,98,2.039,100,0.78,101,1.02,102,0.553,103,3.344,113,3.344,115,3.649,116,2.738,117,3.141,121,0.922,123,2.865,124,1.413,125,4.066,127,1.775,129,0.891,131,1.66,133,2.828,138,1.858,143,2.113,145,3.001,152,0.267,153,1.619,154,0.314,155,1.444,167,0.131,168,0.154,173,2.932,175,2.74,176,3.189,181,3.486,184,2.932,193,2.022,194,2.253,198,0.669,199,1.416,200,0.74,201,1.509,202,1.869,203,0.971,204,0.971,205,0.876,206,1.718,207,0.876,208,0.922,209,0.833,210,0.906,211,0.922,212,2.203,213,0.906,214,1.449,215,1.901,216,0.922,217,1.347,218,2.263,219,0.922,220,0.922,221,0.971,222,0.906,223,1.441,224,0.922,225,0.971,226,0.906,227,0.971,228,0.891,229,0.876,230,1.625,231,1.718,232,0.891,233,0.906,234,0.906,235,0.891,236,0.971,237,0.922,238,2.031,239,0.922,240,0.906,241,0.922,242,0.922,243,0.922,244,0.906,245,0.971,246,0.891,247,0.922,248,0.971,249,0.906,250,0.971,251,0.906,252,0.906,253,1.063,254,0.971,255,0.906,256,0.971,257,0.891,258,0.906,259,0.971,260,0.906,261,0.971,262,0.833,263,0.971,264,0.906,265,1.499,266,0.971,267,0.891,268,0.971,269,0.906,270,0.971,271,0.876,272,0.971,273,0.906,274,0.891,275,1.987,276,2.144,277,0.971,278,0.906,279,0.971,280,0.971,281,0.906,282,0.971,283,0.906,284,0.971,285,0.876,286,0.971,287,0.891,288,0.906,289,0.971,290,0.906,291,0.938,292,0.971,293,0.891,294,0.906,295,1.846,296,0.906,297,0.922,298,0.805,299,0.922,300,0.922,301,0.906,302,0.922,303,0.922,304,0.922,305,0.971,306,0.891,307,0.906,308,0.971,309,0.906,310,0.938,311,0.906,312,0.971,313,0.906,314,0.971,315,0.922,316,0.906,317,0.906,318,0.971,319,0.906,320,0.971,321,0.906,322,0.971,323,0.906,324,0.861,325,0.847,326,0.876,327,0.971,328,0.891,329,0.971,330,0.891,331,0.971,332,0.891,333,0.971,334,0.891,335,0.971,336,0.891,337,0.954,338,0.971,339,0.891,340,0.954,341,0.971,342,0.002,343,0.004,344,0.002,372,2.292,480,2.012,519,1.601,618,3.86,671,2.502,937,2.738,1086,2.586,1154,3.86,1627,2.932,1978,3.189,2756,4.351,2757,4.351,2825,2.932,3379,7.498,3380,7.498,3381,3.189,3382,5.313,3383,5.313,3384,5.313,3385,5.644,3386,6.335,3387,5.313,3388,6.245,3389,6.335,3390,3.579,3391,3.579,3392,7.488,3393,3.579,3394,3.579,3395,3.579,3396,4.733,3397,3.579,3398,3.579,3399,3.579,3400,3.579,3401,3.579,3402,3.579,3403,3.579,3404,3.579,3405,3.579,3406,3.579,3407,3.579,3408,3.579,3409,3.579,3410,3.579,3411,3.579,3412,3.579,3413,3.579,3414,2.932,3415,3.579,3416,3.579,3417,3.579,3418,3.579]],["title/modules/MediumEditorModule.html",[345,1.155,3419,3.646]],["body/modules/MediumEditorModule.html",[3,0.353,4,0.365,10,0.276,25,2.679,26,0.007,27,3.854,28,4.776,29,4.776,30,4.776,31,5.087,32,1.464,152,0.333,154,0.586,166,1.294,167,0.297,168,0.287,198,1.251,275,2.536,276,1.61,342,0.004,343,0.005,344,0.004,345,1.53,347,2.641,348,2.533,349,3.599,350,2.758,351,3.522,358,3.42,359,2.586,360,2.251,363,2.251,364,2.339,696,3.855,697,3.024,3379,5.478,3380,5.478,3419,6.909,3420,5.959,3421,5.959,3422,5.959,3423,5.959,3424,5.959,3425,6.689,3426,5.959,3427,6.689]],["title/components/MenuComponent.html",[0,0.292,278,1.278]],["body/components/MenuComponent.html",[0,0.331,1,0.766,2,0.86,3,0.16,4,0.165,5,0.636,6,1.655,7,0.82,8,0.792,10,0.125,12,0.348,16,3.057,17,1.144,21,0.74,23,2.585,24,0.68,26,0.007,32,1.013,33,2.173,34,1.858,35,3.068,37,1.144,39,0.321,40,0.57,42,1.52,45,1.25,46,1.087,52,2.49,54,0.736,56,2.981,65,1.164,68,0.687,69,1.533,70,1.171,72,0.889,88,1.522,89,1.393,90,1.423,98,1.36,100,1.193,101,1.072,102,0.846,121,1.069,127,1.184,129,0.753,138,2.25,152,0.218,154,0.265,166,0.585,167,0.111,168,0.13,183,0.895,188,1.407,198,0.565,199,1.246,200,0.626,202,1.715,203,0.82,204,0.82,205,0.74,206,1.55,207,0.74,208,0.779,209,0.704,210,0.766,211,0.779,212,2.079,213,0.766,214,1.308,215,1.744,216,0.779,217,1.262,218,2.148,219,0.779,220,0.779,221,0.82,222,0.766,223,1.268,224,0.779,225,0.82,226,0.766,227,0.82,228,0.753,229,0.74,230,1.533,231,1.55,232,0.753,233,0.766,234,0.766,235,0.753,236,0.82,237,0.779,238,1.886,239,0.779,240,0.766,241,0.779,242,0.779,243,0.779,244,0.766,245,0.82,246,0.753,247,0.779,248,0.82,249,0.766,250,0.82,251,0.766,252,0.766,253,0.935,254,0.82,255,0.766,256,0.82,257,0.753,258,0.766,259,0.82,260,0.766,261,0.82,262,0.704,263,0.82,264,0.766,265,1.353,266,0.82,267,0.753,268,0.82,269,0.766,270,0.82,271,0.74,272,0.82,273,0.766,274,0.753,275,0.766,276,0.728,277,0.82,278,1.862,279,1.55,280,0.82,281,0.766,282,0.82,283,0.766,284,0.82,285,0.74,286,0.82,287,0.753,288,0.766,289,0.82,290,0.766,291,0.792,292,0.82,293,0.753,294,0.766,295,1.752,296,0.766,297,0.779,298,1.052,299,0.779,300,0.779,301,0.766,302,0.779,303,0.779,304,0.779,305,0.82,306,0.753,307,0.766,308,0.82,309,0.766,310,0.792,311,0.766,312,0.82,313,0.766,314,0.82,315,0.779,316,0.766,317,0.766,318,0.82,319,0.766,320,0.82,321,0.766,322,0.82,323,0.766,324,0.728,325,0.716,326,0.74,327,0.82,328,0.753,329,0.82,330,0.753,331,0.82,332,0.753,333,0.82,334,0.753,335,0.82,336,0.753,337,0.806,338,0.82,339,0.753,340,0.806,341,0.82,342,0.002,343,0.003,344,0.002,360,1.574,374,5.015,375,2.805,377,1.182,435,2.832,438,3.829,449,4.221,458,0.605,483,2.343,486,1.871,493,2.54,543,5.325,564,2.41,569,3.138,631,1.559,644,5.805,661,1.655,670,1.247,671,2.257,755,1.771,910,3.068,958,3.587,962,4.985,1003,3.578,1022,5.03,1028,2.832,1182,3.896,1183,3.138,1318,6.55,1323,5.092,1429,3.578,1456,2.832,1500,2.077,1843,2.694,1864,2.832,2740,2.477,3103,2.943,3428,2.694,3429,8.79,3430,3.829,3431,5.716,3432,4.675,3433,5.716,3434,8.128,3435,6.432,3436,4.675,3437,4.675,3438,4.675,3439,4.675,3440,4.675,3441,6.432,3442,4.165,3443,4.675,3444,6.954,3445,6.954,3446,4.675,3447,6.432,3448,4.675,3449,4.675,3450,4.675,3451,3.024,3452,4.675,3453,3.829,3454,3.024,3455,7.352,3456,4.675,3457,3.024,3458,3.024,3459,3.024,3460,3.024,3461,4.675,3462,3.024,3463,4.675,3464,3.024,3465,4.675,3466,4.675,3467,3.024,3468,7.666,3469,4.675,3470,3.024,3471,4.675,3472,3.024,3473,4.675,3474,4.675,3475,4.675,3476,3.024,3477,4.675,3478,4.675,3479,3.024,3480,4.165,3481,4.675,3482,3.024,3483,6.432,3484,3.024,3485,4.675,3486,3.024,3487,4.675,3488,3.024,3489,3.024,3490,3.024,3491,4.675,3492,3.829,3493,2.694,3494,4.675,3495,3.024,3496,4.675,3497,3.024,3498,3.024,3499,3.024,3500,3.024,3501,3.024,3502,5.716,3503,3.024,3504,5.716,3505,3.024,3506,4.675,3507,3.024,3508,3.024,3509,3.024,3510,3.024,3511,3.024,3512,6.432,3513,5.716,3514,3.024,3515,3.024,3516,3.024,3517,5.716,3518,3.024,3519,4.675,3520,4.675,3521,4.675,3522,3.024,3523,3.024,3524,3.024,3525,3.024]],["title/components/ModalComponent.html",[0,0.292,281,1.278]],["body/components/ModalComponent.html",[0,0.326,1,0.745,2,0.841,3,0.155,4,0.16,5,1.596,7,1.241,8,0.771,9,1.24,10,0.122,12,0.339,17,1.12,20,1.807,21,0.72,22,2.48,23,2.54,24,0.662,26,0.007,32,1.236,33,2.17,34,1.858,37,1.12,39,0.313,40,0.558,41,1.662,42,1.569,45,1.28,46,1.731,54,0.721,55,2.429,56,2.937,57,2.866,65,1.139,66,6.306,68,0.839,69,1.518,70,1.205,72,0.559,87,3.099,88,1.329,89,1.134,90,1.608,98,1.331,100,0.93,101,1.004,102,0.66,107,3.144,116,3.267,119,4.585,121,1.032,123,3.952,124,1.162,127,1.841,129,0.732,143,0.887,152,0.214,154,0.258,162,3.749,166,0.569,167,0.108,168,0.126,177,5.005,183,1.355,186,2.294,198,0.55,199,1.22,200,0.609,201,1.24,202,1.689,203,0.798,204,0.798,205,0.72,206,1.524,207,0.72,208,0.758,209,0.685,210,0.745,211,0.758,212,2.058,213,0.745,214,1.285,215,1.719,216,0.758,217,1.248,218,2.128,219,0.758,220,0.758,221,0.798,222,0.745,223,1.241,224,0.758,225,0.798,226,0.745,227,0.798,228,0.732,229,0.72,230,1.518,231,1.524,232,0.732,233,0.745,234,0.745,235,0.732,236,0.798,237,0.758,238,1.862,239,0.758,240,0.745,241,0.758,242,0.758,243,0.758,244,0.745,245,0.798,246,0.732,247,0.758,248,0.798,249,0.745,250,0.798,251,0.745,252,0.745,253,0.916,254,0.798,255,0.745,256,0.798,257,0.732,258,0.745,259,0.798,260,0.745,261,0.798,262,0.685,263,0.798,264,0.745,265,1.329,266,0.798,267,0.732,268,0.798,269,0.745,270,0.798,271,0.72,272,0.798,273,0.745,274,0.732,275,0.745,276,0.708,277,0.798,278,0.745,279,0.798,280,0.798,281,1.605,282,0.798,283,0.745,284,0.798,285,0.72,286,0.798,287,0.732,288,0.745,289,0.798,290,0.745,291,0.771,292,0.798,293,2.235,294,0.745,295,1.736,296,0.745,297,0.758,298,0.662,299,0.758,300,0.758,301,0.745,302,0.758,303,0.758,304,0.758,305,0.798,306,0.732,307,0.745,308,0.798,309,0.745,310,0.771,311,0.745,312,0.798,313,0.745,314,0.798,315,0.758,316,0.745,317,0.745,318,0.798,319,0.745,320,0.798,321,0.745,322,0.798,323,0.745,324,0.708,325,0.696,326,0.72,327,0.798,328,0.732,329,0.798,330,0.732,331,0.798,332,0.732,333,0.798,334,0.732,335,0.798,336,0.732,337,0.784,338,0.798,339,0.732,340,0.784,341,0.798,342,0.002,343,0.003,344,0.002,372,2.734,377,0.947,378,3.644,393,1.162,394,3.858,398,1.905,444,4.322,445,2.896,458,0.589,480,1.734,483,2.294,486,0.856,493,1.807,499,2.175,502,1.807,529,1.799,574,1.398,584,1.77,645,2.773,745,3.99,888,2.77,900,3.839,903,4.078,917,1.138,919,3.403,943,1.719,958,1.435,1051,1.719,1065,4.154,1109,3.267,1154,3.747,1161,2.586,1169,3.536,1178,1.782,1180,4.078,1183,3.702,1189,3.749,1301,2.741,1324,3.503,1325,2.504,1338,3.912,1507,3.144,1520,1.561,1521,2.021,1669,4.711,1671,3.307,1673,3.307,1674,2.67,1675,3.307,1676,3.144,1677,4.059,1683,2.252,1684,2.021,1685,2.252,1686,1.719,1687,2.126,1688,2.252,1689,2.126,1690,2.021,1691,2.252,1693,2.252,1694,3.749,1695,3.858,1697,2.126,1698,2.252,1699,1.931,1706,2.252,1707,3.307,1708,2.126,1709,2.252,1710,1.61,1711,1.852,1712,5.253,1713,2.126,1714,2.252,1715,2.429,1716,2.126,1717,2.252,1724,2.252,1725,2.126,1726,2.126,1727,2.252,1728,2.252,1731,2.252,1741,2.233,1864,2.773,1922,4.078,1924,3.536,1940,3.503,1944,4.98,1982,3.144,2151,3.749,2387,3.004,2400,4.078,2484,2.41,2488,5.191,2788,5.005,2959,3.749,2983,3.749,2988,2.621,3125,3.503,3312,1.512,3526,2.621,3527,6.423,3528,3.144,3529,3.307,3530,3.503,3531,4.577,3532,4.577,3533,4.078,3534,4.577,3535,4.577,3536,7.847,3537,5.617,3538,6.761,3539,4.577,3540,4.577,3541,3.004,3542,2.942,3543,4.577,3544,2.942,3545,4.577,3546,4.577,3547,8.061,3548,2.942,3549,2.942,3550,3.503,3551,2.942,3552,2.942,3553,2.942,3554,3.749,3555,4.577,3556,4.577,3557,4.577,3558,2.942,3559,4.078,3560,2.942,3561,2.942,3562,5.617,3563,4.577,3564,2.942,3565,4.577,3566,4.577,3567,4.577,3568,2.942,3569,4.577,3570,2.621,3571,2.942,3572,5.005,3573,2.942,3574,2.942,3575,2.942,3576,2.942,3577,2.126,3578,2.942,3579,2.942,3580,2.942,3581,2.942,3582,2.942,3583,2.942,3584,2.942,3585,2.942,3586,2.942,3587,2.942,3588,4.577]],["title/interfaces/ModelConfig.html",[368,1.369,1030,3.177]],["body/interfaces/ModelConfig.html",[3,0.382,4,0.394,10,0.299,12,0.833,26,0.007,39,0.769,40,1.037,48,2.387,68,0.648,87,3.356,102,0.885,152,0.276,167,0.265,342,0.005,343,0.006,344,0.005,368,2.448,370,3.12,381,2.067,390,3.601,755,3.219,999,5.351,1030,5.351,1081,4.747,1123,4.554,1152,4.04,1166,5.642,1745,4.146,1858,5.578,1939,5.351,3589,4.969,3590,6.961,3591,4.65]],["title/injectables/ModelConfigService.html",[660,1.494,1031,2.851]],["body/injectables/ModelConfigService.html",[2,0.87,3,0.162,4,0.168,10,0.127,12,0.665,20,1.213,21,1.159,26,0.007,32,1.435,34,0.575,39,0.327,40,0.578,45,1.257,48,2.293,51,2.09,52,1.79,54,0.745,68,0.798,69,1.833,70,1.035,87,1.869,88,1.932,89,1.33,100,1.131,101,0.923,102,0.803,117,3.544,121,1.147,131,2.027,133,2.617,142,1.952,152,0.324,154,0.269,156,0.96,166,1.666,167,0.112,168,0.248,183,1.921,188,1.53,207,1.159,229,1.159,230,1.401,246,0.765,342,0.002,343,0.003,344,0.002,373,3.418,375,2.826,377,0.979,381,0.878,387,2.748,388,3.578,389,1.736,390,3.078,398,1.836,422,4.419,428,2.517,441,2.22,446,3.623,451,2.22,457,2.434,458,0.947,460,2.985,463,1.39,483,2.373,502,1.869,514,2.98,519,0.926,522,2.017,529,1.939,552,1.631,574,2.25,579,1.996,580,2.746,584,2.981,618,3.344,619,2.976,651,3.083,660,1.402,671,2.922,713,1.424,755,2.457,778,1.631,784,1.54,888,1.91,904,4.083,908,3.251,916,3.251,958,1.499,964,3.107,988,4.217,995,1.499,1000,5.779,1001,2.766,1030,2.98,1031,2.674,1033,2.1,1034,2.508,1036,4.873,1054,4.687,1076,1.681,1081,5.473,1112,2.111,1153,1.688,1156,2.512,1166,5.052,1206,5.467,1208,3.929,1219,2.738,1221,1.861,1222,1.861,1223,2.22,1237,2.017,1278,3.251,1281,2.352,1301,1.499,1321,3.958,1336,3.623,1391,3.165,1555,3.877,1611,2.017,1618,2.017,1668,2.517,1729,2.22,1756,2.868,1769,4.244,1770,2.766,1814,2.22,1834,4.217,1861,3.635,1862,3.623,1863,2.22,1869,2.98,1870,3.623,1918,3.374,1924,4.658,1935,2.98,1982,2.111,1995,3.107,2031,5.061,2043,2.517,2233,2.738,2348,3.877,2437,4.217,2502,2.517,2517,5.664,2537,4.217,2674,2.738,2808,3.42,2865,2.22,2890,2.352,3101,5.362,3124,3.877,3559,4.217,3589,5.728,3590,3.877,3591,3.549,3592,4.734,3593,3.877,3594,3.877,3595,3.623,3596,4.217,3597,5.774,3598,4.734,3599,6.486,3600,4.734,3601,4.734,3602,6.486,3603,3.073,3604,4.734,3605,4.734,3606,8.339,3607,3.073,3608,4.734,3609,4.217,3610,4.734,3611,4.217,3612,4.734,3613,4.217,3614,4.217,3615,3.877,3616,4.734,3617,4.734,3618,4.734,3619,3.073,3620,4.217,3621,3.073,3622,3.789,3623,4.734,3624,3.073,3625,4.217,3626,4.217,3627,4.734,3628,4.734,3629,4.734,3630,3.073,3631,4.734,3632,3.623,3633,4.734,3634,3.073,3635,3.073,3636,4.734,3637,3.073,3638,4.734,3639,3.073,3640,3.073,3641,3.073,3642,3.073,3643,3.623,3644,4.734,3645,4.734,3646,2.738,3647,3.073,3648,4.734,3649,3.073,3650,2.738,3651,3.073,3652,7.71,3653,7.4,3654,2.738,3655,3.073,3656,4.734,3657,4.734,3658,4.734,3659,4.734,3660,3.073,3661,3.073,3662,3.073,3663,3.073,3664,3.073,3665,3.073,3666,2.738,3667,3.073,3668,3.073,3669,6.486,3670,4.734,3671,3.073,3672,3.073,3673,3.073,3674,3.073,3675,3.073,3676,3.073,3677,3.073,3678,3.073,3679,4.734,3680,3.073,3681,3.073,3682,3.073,3683,3.073,3684,3.073,3685,3.073,3686,3.073,3687,4.217,3688,4.217,3689,3.073,3690,3.073,3691,3.073,3692,2.738,3693,4.734,3694,4.734,3695,3.073,3696,4.734,3697,3.073,3698,3.073,3699,3.073,3700,3.073,3701,3.073,3702,3.073,3703,3.073,3704,3.073,3705,3.073,3706,3.073,3707,2.517,3708,3.073,3709,3.073,3710,3.073,3711,3.073,3712,4.734,3713,3.073,3714,3.073,3715,4.734,3716,3.073,3717,3.073,3718,3.073,3719,3.073,3720,3.073,3721,2.738,3722,3.073,3723,3.073]],["title/interfaces/ModelConfiguration.html",[368,1.369,3724,4.133]],["body/interfaces/ModelConfiguration.html",[3,0.382,4,0.394,10,0.299,12,0.833,26,0.007,39,0.769,40,1.037,48,2.387,68,0.648,87,3.356,102,0.885,152,0.276,167,0.265,342,0.005,343,0.006,344,0.005,368,2.448,370,3.12,381,2.067,390,3.601,755,3.219,999,5.351,1081,4.747,1152,4.04,1166,5.642,1745,4.146,1858,5.578,1939,5.351,3589,4.969,3590,6.961,3591,4.65,3724,6.961,3725,6.445]],["title/classes/Notification.html",[168,0.217,1072,2.601]],["body/classes/Notification.html",[3,0.413,4,0.288,10,0.218,12,0.901,26,0.007,32,1.1,34,1.306,39,0.562,40,0.852,45,1.139,68,0.877,69,1.779,70,1.217,72,1.329,87,2.759,88,2.105,100,0.776,101,0.633,102,1.026,142,2.881,152,0.202,167,0.193,168,0.227,285,2.119,342,0.003,343,0.005,344,0.003,375,3.66,377,1.445,449,4.585,458,1.565,493,2.759,502,2.759,529,2.413,564,3.602,574,3.321,645,5.044,646,4.399,648,3.784,649,5.245,651,3.321,654,4.339,755,3.154,882,4.422,888,2.133,1032,3.947,1058,3.502,1066,3.957,1072,5.08,1109,4.034,1115,4.927,1116,5.451,1183,3.409,1246,4.083,1307,5.048,1391,4.062,1520,4.595,1593,5.375,1864,4.233,1869,4.399,1972,4.799,1975,4.33,2564,6.225,2960,5.723,3260,4.399,3572,4.71,3632,5.348,3726,4.71,3727,6.987,3728,6.987,3729,6.987,3730,8.326,3731,5.286,3732,6.987,3733,5.286,3734,5.286,3735,6.987,3736,5.286,3737,5.286,3738,6.225,3739,4.799,3740,5.286,3741,6.225,3742,6.987,3743,5.286,3744,6.987,3745,5.286,3746,6.987,3747,5.286,3748,4.71,3749,4.71]],["title/components/NotificationsComponent.html",[0,0.292,285,1.235]],["body/components/NotificationsComponent.html",[0,0.47,1,0.9,2,0.971,3,0.188,4,0.194,5,1.111,7,1.711,8,0.931,9,1.498,10,0.147,12,0.409,17,0.87,21,0.87,24,0.799,26,0.007,32,0.56,33,2.187,34,1.873,37,1.293,39,0.378,40,0.645,42,1.179,45,0.579,46,1.005,65,1.315,68,0.701,70,0.799,73,1.465,84,1.083,85,1.498,88,1.25,100,0.521,101,0.996,102,0.37,121,1.029,127,1.338,129,0.885,138,1.848,152,0.266,154,0.311,164,2.91,167,0.255,168,0.32,188,1.121,198,0.664,199,1.408,200,0.735,201,1.498,202,1.862,203,0.964,204,0.964,205,0.87,206,1.711,207,0.87,208,0.915,209,0.827,210,0.9,211,0.915,212,2.198,213,0.9,214,1.443,215,1.894,216,0.915,217,1.344,218,2.258,219,0.915,220,0.915,221,0.964,222,0.9,223,1.433,224,0.915,225,0.964,226,0.9,227,0.964,228,0.885,229,0.87,230,1.621,231,1.711,232,0.885,233,0.9,234,0.9,235,0.885,236,0.964,237,0.915,238,2.025,239,0.915,240,0.9,241,0.915,242,0.915,243,0.915,244,0.9,245,0.964,246,0.885,247,0.915,248,0.964,249,0.9,250,0.964,251,0.9,252,0.9,253,1.057,254,0.964,255,0.9,256,0.964,257,0.885,258,0.9,259,0.964,260,0.9,261,0.964,262,0.827,263,0.964,264,0.9,265,1.493,266,0.964,267,0.885,268,0.964,269,0.9,270,0.964,271,0.87,272,0.964,273,0.9,274,0.885,275,0.9,276,0.855,277,0.964,278,0.9,279,0.964,280,0.964,281,0.9,282,0.964,283,0.9,284,0.964,285,1.827,286,0.964,287,0.885,288,0.9,289,0.964,290,0.9,291,0.931,292,0.964,293,0.885,294,0.9,295,1.842,296,0.9,297,0.915,298,0.799,299,0.915,300,0.915,301,0.9,302,0.915,303,0.915,304,0.915,305,0.964,306,0.885,307,0.9,308,0.964,309,0.9,310,0.931,311,0.9,312,0.964,313,0.9,314,0.964,315,0.915,316,0.9,317,0.9,318,0.964,319,0.9,320,0.964,321,0.9,322,0.964,323,0.9,324,0.855,325,0.841,326,0.87,327,0.964,328,0.885,329,0.964,330,0.885,331,0.964,332,0.885,333,0.964,334,0.885,335,0.964,336,0.885,337,0.947,338,0.964,339,0.885,340,0.947,341,0.964,342,0.002,343,0.003,344,0.002,345,0.813,368,0.964,375,3.157,381,1.015,386,3.326,435,2.152,458,1.057,470,1.243,486,1.835,493,2.086,529,1.956,558,1.293,574,1.689,584,1.374,648,2.887,649,3.201,651,2.511,654,4.569,655,3.764,670,2.601,673,5.166,755,1.346,759,1.533,763,2.152,805,2.332,815,2.152,882,4.578,887,4.899,888,1.433,904,2.237,920,2.332,958,1.733,1018,3.201,1032,4.218,1058,3.501,1066,2.511,1072,4.849,1108,3.201,1109,4.033,1110,4.557,1113,2.567,1115,3.971,1116,3.971,1152,1.689,1171,2.719,1175,1.831,1185,2.152,1254,3.165,1301,1.733,1314,3.467,1325,1.944,1391,1.733,1431,2.152,1442,3.817,1520,3.962,1593,2.44,1699,4.584,1711,3.326,1715,2.804,1741,1.733,1745,2.578,1789,2.567,1864,2.152,1952,4.14,2297,2.719,2338,3.165,2348,2.91,2559,2.719,2562,2.332,2601,2.91,2644,3.686,2649,2.567,2794,4.044,2837,3.165,2880,5.166,2881,3.165,3043,4.707,3099,4.328,3103,3.326,3111,2.332,3118,2.91,3260,3.326,3343,2.719,3492,2.91,3622,2.332,3650,4.707,3750,3.165,3751,5.284,3752,5.284,3753,5.284,3754,5.284,3755,3.553,3756,2.91,3757,3.553,3758,2.44,3759,5.284,3760,3.553,3761,6.308,3762,6.308,3763,5.284,3764,3.553,3765,3.553,3766,3.553,3767,3.553,3768,3.165,3769,2.719,3770,3.553,3771,3.553,3772,3.553,3773,5.284,3774,3.553,3775,3.553,3776,2.44,3777,2.719,3778,3.553,3779,3.553,3780,3.553,3781,3.553,3782,3.553,3783,5.284,3784,3.553,3785,3.553,3786,2.91,3787,3.553,3788,1.944,3789,3.553,3790,3.553,3791,3.553,3792,3.165,3793,6.308,3794,3.553,3795,3.553,3796,3.553,3797,3.553,3798,6.308,3799,5.62,3800,3.553,3801,3.553,3802,3.553,3803,3.553,3804,3.553,3805,5.284,3806,3.553,3807,3.165,3808,4.707,3809,3.165,3810,3.553]],["title/modules/NotificationsModule.html",[345,1.155,3811,3.646]],["body/modules/NotificationsModule.html",[3,0.345,4,0.356,10,0.27,25,2.852,26,0.007,27,2.881,152,0.363,154,0.571,167,0.239,168,0.28,198,1.22,244,2.488,285,2.405,342,0.004,343,0.005,344,0.004,345,1.493,347,2.576,348,2.471,349,3.56,350,2.69,351,3.484,358,3.368,359,2.523,360,2.196,363,2.689,364,2.794,398,1.71,655,4.248,696,3.797,697,2.95,721,4.107,2168,6.165,2170,5.691,2174,5.344,2180,4.714,3748,5.813,3792,5.813,3811,7.182,3812,5.813,3813,5.813,3814,6.524,3815,5.813,3816,5.813,3817,6.524,3818,6.524,3819,5.813]],["title/injectables/NotificationsService.html",[655,2.282,660,1.494]],["body/injectables/NotificationsService.html",[2,1.211,3,0.256,4,0.264,10,0.2,12,0.558,25,2.177,26,0.007,27,2.909,32,1.266,34,1.232,39,0.515,40,0.804,45,1.221,46,1.649,54,1.038,68,0.753,70,1.124,84,1.489,85,2.778,89,1.118,90,1.072,100,1.099,101,0.896,102,0.78,107,4.525,121,1.167,133,2.658,145,5.101,152,0.307,154,0.424,161,4.315,165,3.707,166,1.448,167,0.177,168,0.208,188,1.494,342,0.003,343,0.004,344,0.003,345,1.507,377,1.549,435,2.934,458,0.969,483,3.303,486,1.917,493,1.913,502,1.913,529,1.962,564,3.396,567,3.497,580,1.798,646,3.049,649,2.934,654,4.594,655,2.979,660,1.951,662,4.855,663,3.303,664,4.148,671,3.174,713,2.245,720,5.397,721,4.148,749,7.726,785,3.049,831,3.049,882,3.723,913,5.517,964,3.179,1045,3.389,1072,5.081,1115,3.049,1175,2.497,1286,3.5,1321,3.723,1442,4.761,1520,4.265,1674,3.82,1741,3.215,1789,4.761,1944,3.179,2023,5.043,2123,3.179,2808,4.761,2880,3.967,3577,3.5,3614,5.87,3749,4.315,3799,4.315,3807,4.315,3808,5.87,3809,4.315,3819,7.726,3820,4.315,3821,6.589,3822,5.043,3823,9.479,3824,6.589,3825,7.488,3826,6.589,3827,8.037,3828,4.844,3829,6.589,3830,6.589,3831,6.589,3832,4.844,3833,6.589,3834,7.16,3835,8.672,3836,6.589,3837,4.844,3838,6.589,3839,4.844,3840,6.589,3841,6.589,3842,4.844,3843,5.397,3844,6.589,3845,4.844,3846,6.133,3847,4.844,3848,4.844,3849,4.844,3850,4.844,3851,4.844,3852,4.844,3853,4.844,3854,4.844,3855,4.844,3856,4.844,3857,4.844,3858,4.844,3859,4.844,3860,4.844,3861,4.844,3862,4.844,3863,4.844,3864,4.844]],["title/components/OutputComponent.html",[0,0.292,287,1.256]],["body/components/OutputComponent.html",[0,0.538,1,1.031,2,1.254,3,0.215,4,0.222,5,1.435,7,1.105,8,1.067,10,0.168,12,0.469,17,1.429,20,2.305,21,0.997,23,3.085,24,0.916,26,0.007,33,2.197,34,1.882,37,1.429,39,0.433,40,0.712,42,1.475,45,0.664,46,1.11,48,2.654,52,2.563,54,0.919,56,3.453,65,1.453,68,0.81,70,1.071,72,1.297,85,2.461,87,1.608,88,1.867,89,0.872,90,0.901,100,0.598,101,1.035,102,0.424,119,3.621,121,1.08,124,1.608,127,1.478,129,1.014,138,1.424,152,0.284,154,0.357,167,0.149,168,0.175,198,0.761,199,1.556,200,0.842,202,1.986,203,1.105,204,1.105,205,0.997,206,1.85,207,0.997,208,1.049,209,0.948,210,1.031,211,1.049,212,2.293,213,1.031,214,1.561,215,2.021,216,1.049,217,1.41,218,2.345,219,1.049,220,1.049,221,1.105,222,1.031,223,1.583,224,1.049,225,1.105,226,1.031,227,1.105,228,1.014,229,0.997,230,1.691,231,1.85,232,1.964,233,1.031,234,2.141,235,1.855,236,1.105,237,1.049,238,2.139,239,1.049,240,1.031,241,1.049,242,1.049,243,1.049,244,1.031,245,1.105,246,1.014,247,1.049,248,1.105,249,1.031,250,1.105,251,1.031,252,1.031,253,1.168,254,1.105,255,1.031,256,1.105,257,1.014,258,1.031,259,1.105,260,1.031,261,1.105,262,0.948,263,1.105,264,1.031,265,1.614,266,1.105,267,1.014,268,1.105,269,1.031,270,1.105,271,0.997,272,1.105,273,1.031,274,1.014,275,1.031,276,0.98,277,1.105,278,1.031,279,1.105,280,1.105,281,1.031,282,1.105,283,1.031,284,1.105,285,0.997,286,1.105,287,1.855,288,1.031,289,1.105,290,1.031,291,1.067,292,1.105,293,1.014,294,1.031,295,1.913,296,1.031,297,1.049,298,0.916,299,1.049,300,1.049,301,1.031,302,1.049,303,1.049,304,1.049,305,1.105,306,1.014,307,1.031,308,1.105,309,1.031,310,1.067,311,1.031,312,1.105,313,1.031,314,1.105,315,1.049,316,1.031,317,1.031,318,1.105,319,1.031,320,1.105,321,1.031,322,1.105,323,1.031,324,0.98,325,0.964,326,0.997,327,1.105,328,1.014,329,1.105,330,1.014,331,1.105,332,1.014,333,1.105,334,1.014,335,1.105,336,1.014,337,1.086,338,1.105,339,1.453,340,1.086,341,1.105,342,0.003,343,0.004,344,0.003,381,1.164,469,3.536,472,2.301,480,2.211,504,3.831,519,2.246,529,1.53,584,2.257,759,2.518,1066,1.936,1153,1.452,1222,2.467,1223,2.942,1487,4.781,1495,3.117,1549,5.222,1559,4.929,1562,4.781,1563,5.588,1564,4.781,1566,3.336,1567,4.781,1569,3.336,1571,3.336,1572,3.336,1573,3.336,2157,4.468,2390,3.675,2391,3.675,2411,2.564,2557,5.2,2561,5.2,2584,3.628,2602,3.628,2603,3.628,2604,3.336,2611,5.2,3865,3.628,3866,5.837,3867,5.2,3868,4.073,3869,4.073,3870,4.073,3871,4.073,3872,5.837,3873,4.073,3874,4.073,3875,4.073]],["title/classes/Pagination.html",[168,0.217,2768,3.057]],["body/classes/Pagination.html",[3,0.179,4,0.184,10,0.14,12,0.39,26,0.007,32,1.255,39,0.36,40,0.622,45,0.999,46,1.461,47,2.553,52,0.934,54,0.802,55,2.703,68,0.778,70,1.19,72,1.165,84,1.319,85,2.148,87,2.012,88,1.818,89,1.413,90,1.969,98,2.386,100,1.17,101,0.954,102,0.874,121,0.962,138,2.991,152,0.194,166,0.654,167,0.124,168,0.263,183,2.635,188,1.564,253,1.019,342,0.002,343,0.003,344,0.002,372,2.197,377,1.589,380,3.99,387,2.61,398,1.335,433,2.05,449,3.343,450,3.207,458,0.677,470,1.183,472,4.635,476,3.352,493,3.855,496,2.977,502,2.419,506,3.251,527,5.76,529,0.887,532,2.324,544,5.509,569,1.651,574,3.24,576,4.795,593,1.853,648,2.636,651,2.421,662,4,663,1.696,664,3.207,669,2.324,671,2.419,755,3.29,759,2.197,828,3.68,888,1.365,892,4.109,904,2.13,913,4.798,958,1.651,1048,3.514,1076,1.851,1155,3.343,1175,1.744,1176,4.538,1183,2.485,1301,4.238,1304,6.045,1431,2.05,1456,3.086,1491,2.324,1584,6.073,1585,6.073,1586,6.073,1614,2.324,1744,3.984,1745,2.485,1908,3.343,1914,2.324,1952,2.221,2092,2.771,2094,4.908,2331,2.771,2652,4.538,2653,4.426,2768,5.57,2794,3.899,2830,5.458,2864,5.458,2888,3.014,2954,3.899,3125,5.217,3374,4.538,3442,4.538,3453,4.172,3591,2.787,3609,4.538,3620,6.073,3834,6.845,3876,3.014,3877,7.209,3878,9.134,3879,6.817,3880,6.817,3881,6.073,3882,6.817,3883,5.094,3884,4.538,3885,4.538,3886,5.094,3887,3.984,3888,3.384,3889,5.094,3890,5.094,3891,3.384,3892,3.384,3893,3.384,3894,3.68,3895,4.538,3896,3.384,3897,3.384,3898,3.384,3899,5.094,3900,3.384,3901,3.384,3902,3.384,3903,3.384,3904,5.094,3905,3.384,3906,3.384,3907,3.384,3908,5.094,3909,3.384,3910,5.094,3911,6.073,3912,3.384,3913,5.094,3914,3.384,3915,5.094,3916,6.126,3917,5.094,3918,3.384,3919,5.094,3920,5.094,3921,3.384,3922,3.014,3923,3.384,3924,3.384,3925,3.384,3926,3.384,3927,3.384,3928,3.384,3929,8.204,3930,3.384,3931,3.384,3932,3.384,3933,8.801,3934,6.817,3935,7.311,3936,3.384,3937,3.384,3938,6.817,3939,5.094,3940,3.384,3941,3.384,3942,3.384,3943,3.384,3944,5.094,3945,3.384,3946,3.384,3947,3.384]],["title/components/PaginationComponent.html",[0,0.292,288,1.278]],["body/components/PaginationComponent.html",[0,0.444,1,0.96,2,1.019,3,0.2,4,0.207,5,0.798,7,1.028,8,0.993,10,0.157,12,0.436,17,1.357,21,0.928,22,2.892,23,2.962,24,0.853,26,0.007,33,2.192,34,1.877,37,1.357,39,0.403,40,0.676,41,4.887,42,1.348,45,0.618,54,0.873,55,2.941,56,3.34,57,3.259,65,1.38,68,0.717,69,1.109,70,1.096,72,1.371,84,0.952,85,3.039,88,1.311,89,1.076,90,1.449,98,2.096,100,0.813,101,1.035,102,0.577,121,0.729,123,3.467,124,2.587,125,4.242,127,1.403,129,0.944,138,1.326,152,0.275,153,1.714,154,0.332,166,0.733,167,0.139,168,0.281,183,2.134,188,0.985,198,0.709,199,1.477,200,0.784,202,1.921,203,1.028,204,1.028,205,0.928,206,1.777,207,0.928,208,0.977,209,0.882,210,0.96,211,0.977,212,2.243,213,0.96,214,1.499,215,1.955,216,0.977,217,1.375,218,2.3,219,0.977,220,0.977,221,1.028,222,0.96,223,1.503,224,0.977,225,1.028,226,0.96,227,1.028,228,0.944,229,0.928,230,1.655,231,1.777,232,0.944,233,0.96,234,0.96,235,0.944,236,1.028,237,0.977,238,2.08,239,0.977,240,0.96,241,0.977,242,0.977,243,0.977,244,0.96,245,1.028,246,0.944,247,0.977,248,1.028,249,0.96,250,1.028,251,0.96,252,0.96,253,1.109,254,1.028,255,0.96,256,1.028,257,0.944,258,0.96,259,1.028,260,0.96,261,1.028,262,0.882,263,1.028,264,0.96,265,1.55,266,1.028,267,0.944,268,1.028,269,0.96,270,1.028,271,0.928,272,1.028,273,0.96,274,0.944,275,0.96,276,0.912,277,1.028,278,0.96,279,1.028,280,1.028,281,0.96,282,1.028,283,0.96,284,1.028,285,0.928,286,1.028,287,0.944,288,1.825,289,1.028,290,0.96,291,0.993,292,1.028,293,0.944,294,0.96,295,1.876,296,0.96,297,0.977,298,0.853,299,0.977,300,0.977,301,0.96,302,0.977,303,0.977,304,0.977,305,1.028,306,0.944,307,0.96,308,1.028,309,0.96,310,0.993,311,0.96,312,1.028,313,0.96,314,1.028,315,0.977,316,0.96,317,0.96,318,1.028,319,0.96,320,1.028,321,0.96,322,1.028,323,0.96,324,0.912,325,0.897,326,0.928,327,1.028,328,0.944,329,1.028,330,0.944,331,1.028,332,0.944,333,1.028,334,0.944,335,1.028,336,0.944,337,1.011,338,1.028,339,0.944,340,1.011,341,1.028,342,0.003,343,0.004,344,0.003,377,0.784,381,1.083,387,2.364,433,3.357,469,3.357,470,1.326,504,3.637,574,2.634,631,1.954,669,1.957,671,3.416,917,2.143,1033,3.278,1058,2.778,1076,2.074,1301,2.704,1307,4.004,1429,4.242,1746,3.807,2094,3.131,2768,5.696,2769,4.733,2834,3.377,3056,3.377,3877,6.559,3884,4.938,3948,3.377,3949,5.542,3950,6.551,3951,5.542,3952,3.791,3953,3.791,3954,5.542,3955,3.791,3956,3.791,3957,4.539,3958,3.791,3959,3.791,3960,3.791,3961,3.791,3962,5.542,3963,5.836,3964,5.542,3965,3.791,3966,5.542,3967,4.938,3968,5.542,3969,5.542,3970,5.542,3971,3.791,3972,5.542,3973,4.938,3974,3.791,3975,5.542,3976,3.791,3977,3.791,3978,5.542,3979,5.542,3980,5.542,3981,5.542,3982,5.542,3983,5.542,3984,5.542,3985,5.542,3986,5.542,3987,5.542,3988,5.542,3989,5.542,3990,5.542,3991,5.542]],["title/classes/PaginationConfig.html",[168,0.217,2769,3.646]],["body/classes/PaginationConfig.html",[0,0.457,3,0.338,4,0.348,10,0.264,12,0.736,26,0.007,39,0.679,40,0.962,45,1.042,68,0.8,70,1.132,100,0.938,101,0.765,102,0.665,121,0.841,138,2.759,152,0.244,167,0.234,168,0.274,183,2.336,342,0.004,343,0.005,344,0.004,377,1.848,387,2.553,458,1.711,487,4.186,493,3.379,569,3.848,669,1.867,888,2.578,907,5.221,908,3.954,999,4.966,1034,2.471,1040,4.457,1058,3.954,1123,4.023,1169,5.624,1246,4.61,1287,4.023,1301,3.848,1304,5.418,1975,5.235,2231,6.037,2451,6.461,2768,4.778,2769,6.631,3877,7.837,3885,7.028,3992,8.177,3993,8.556,3994,8.556,3995,9.473,3996,7.888,3997,6.391,3998,6.461,3999,6.391,4000,4.316,4001,7.888,4002,7.888,4003,7.888]],["title/components/PasswordResetComponent.html",[0,0.292,290,1.278]],["body/components/PasswordResetComponent.html",[0,0.38,1,0.961,2,1.02,3,0.201,4,0.207,5,0.799,7,1.03,8,0.995,9,1.601,10,0.157,12,0.437,17,1.358,21,0.929,24,0.854,26,0.007,32,1.032,33,2.192,34,1.877,37,1.358,39,0.403,40,0.677,42,1.348,45,0.619,46,1.459,48,1.558,54,0.874,65,1.381,68,0.76,69,1.11,70,1.114,72,1.055,84,0.652,85,2.339,89,0.567,90,0.84,100,0.557,101,1.015,102,0.683,121,0.863,124,1.499,127,1.405,129,0.945,131,2.254,143,2.174,152,0.275,153,1.717,154,0.333,156,1.186,166,0.734,167,0.139,168,0.163,186,2.781,198,0.71,199,1.479,200,0.785,201,1.601,202,1.922,203,1.03,204,1.03,205,0.929,206,1.778,207,0.929,208,0.978,209,1.864,210,0.961,211,0.978,212,2.244,213,0.961,214,1.5,215,1.956,216,0.978,217,1.376,218,2.301,219,0.978,220,0.978,221,1.03,222,0.961,223,1.505,224,0.978,225,1.03,226,0.961,227,1.03,228,0.945,229,0.929,230,1.655,231,1.778,232,0.945,233,0.961,234,0.961,235,0.945,236,1.03,237,0.978,238,2.081,239,0.978,240,0.961,241,0.978,242,0.978,243,0.978,244,0.961,245,1.03,246,0.945,247,0.978,248,1.03,249,0.961,250,1.03,251,0.961,252,0.961,253,1.11,254,1.03,255,0.961,256,1.03,257,0.945,258,0.961,259,1.03,260,0.961,261,1.03,262,1.291,263,1.03,264,0.961,265,1.551,266,1.03,267,0.945,268,1.03,269,0.961,270,1.03,271,0.929,272,1.03,273,0.961,274,0.945,275,0.961,276,0.914,277,1.03,278,0.961,279,1.03,280,1.03,281,0.961,282,1.03,283,0.961,284,1.03,285,0.929,286,1.03,287,0.945,288,0.961,289,1.03,290,1.826,291,2.223,292,1.03,293,0.945,294,0.961,295,1.877,296,0.961,297,0.978,298,0.854,299,0.978,300,0.978,301,0.961,302,0.978,303,0.978,304,0.978,305,1.03,306,0.945,307,0.961,308,1.03,309,0.961,310,0.995,311,0.961,312,1.03,313,0.961,314,1.03,315,0.978,316,0.961,317,0.961,318,1.03,319,0.961,320,1.03,321,0.961,322,1.03,323,0.961,324,0.914,325,0.898,326,0.929,327,1.03,328,0.945,329,1.03,330,0.945,331,1.03,332,0.945,333,1.03,334,0.945,335,1.03,336,0.945,337,1.012,338,1.03,339,0.945,340,1.012,341,1.03,342,0.003,343,0.004,344,0.003,359,3.4,375,2.238,377,1.148,393,1.499,458,0.759,480,2.101,484,4.303,488,4.544,500,2.509,519,1.672,522,2.491,530,2.906,550,3.654,574,2.637,618,3.955,646,4.54,648,2.145,649,2.3,654,4.037,655,3.469,673,4.544,680,3.382,691,4.836,693,4.369,705,2.906,707,7.3,766,5.431,917,2.145,1017,3.48,1033,2.018,1069,4.009,1115,3.493,1153,1.979,1630,2.39,1715,2.945,2350,4.544,3260,4.54,3261,4.544,3264,3.382,3282,3.109,3288,3.109,3317,5.907,3371,3.109,3768,3.382,4004,7.94,4005,3.382,4006,5.548,4007,7.835,4008,5.548,4009,5.548,4010,5.548,4011,6.556,4012,5.548,4013,3.796,4014,5.548,4015,3.796,4016,3.796,4017,3.796,4018,7.212,4019,5.548,4020,3.796,4021,3.796,4022,4.943,4023,5.548,4024,4.943,4025,3.796,4026,3.796,4027,3.796,4028,3.796,4029,3.796,4030,3.796,4031,3.796,4032,3.796,4033,3.796,4034,3.796,4035,3.796,4036,3.796,4037,3.796,4038,3.796,4039,5.548]],["title/components/PopComponent.html",[0,0.292,293,1.256]],["body/components/PopComponent.html",[0,0.351,1,0.842,2,0.924,3,0.176,4,0.181,5,0.699,7,1.644,8,0.871,9,1.402,10,0.137,12,0.383,21,0.814,24,0.748,26,0.007,32,1.411,33,2.181,34,1.871,37,1.23,39,0.353,40,0.613,41,2.84,42,1.427,45,0.988,46,1.667,54,0.792,65,1.251,68,0.763,69,1.005,70,1.135,72,1.285,73,2.073,84,0.571,87,2.668,88,1.189,89,1.009,90,1.341,100,0.991,101,1.035,102,0.703,116,3.483,121,1.004,123,3.85,127,2.156,129,0.828,143,2.036,152,0.192,154,0.291,167,0.122,168,0.143,186,3.386,188,0.591,198,0.622,199,1.34,200,0.688,201,1.402,202,1.801,203,0.902,204,0.902,205,0.814,206,1.644,207,0.814,208,0.856,209,0.774,210,0.842,211,0.856,212,2.149,213,0.842,214,1.387,215,1.832,216,0.856,217,1.31,218,2.213,219,0.856,220,0.856,221,0.902,222,0.842,223,1.363,224,0.856,225,0.902,226,0.842,227,0.902,228,0.828,229,0.814,230,1.585,231,1.644,232,0.828,233,0.842,234,0.842,235,0.828,236,0.902,237,0.856,238,1.968,239,0.856,240,0.842,241,0.856,242,0.856,243,0.856,244,0.842,245,0.902,246,0.828,247,0.856,248,0.902,249,0.842,250,0.902,251,0.842,252,0.842,253,1.005,254,0.902,255,0.842,256,0.902,257,0.828,258,0.842,259,0.902,260,0.842,261,0.902,262,0.774,263,0.902,264,0.842,265,1.434,266,0.902,267,0.828,268,0.902,269,0.842,270,0.902,271,0.814,272,0.902,273,0.842,274,0.828,275,0.842,276,0.8,277,0.902,278,0.842,279,0.902,280,0.902,281,0.842,282,0.902,283,0.842,284,0.902,285,0.814,286,0.902,287,0.828,288,0.842,289,0.902,290,0.842,291,0.871,292,0.902,293,1.682,294,0.842,295,1.805,296,0.842,297,0.856,298,0.748,299,0.856,300,0.856,301,0.842,302,0.856,303,0.856,304,0.856,305,0.902,306,0.828,307,0.842,308,0.902,309,0.842,310,0.871,311,0.842,312,0.902,313,0.842,314,0.902,315,0.856,316,0.842,317,0.842,318,0.902,319,0.842,320,0.902,321,0.842,322,0.902,323,0.842,324,0.8,325,0.787,326,0.814,327,0.902,328,0.828,329,0.902,330,0.828,331,0.902,332,0.828,333,0.902,334,0.828,335,0.902,336,0.828,337,0.886,338,0.902,339,0.828,340,0.886,341,0.902,342,0.002,343,0.003,344,0.002,377,1.501,378,3.586,394,3.217,398,2.231,458,0.665,470,1.163,480,1.904,486,0.967,491,2.402,502,1.985,519,1.515,529,2,544,2.182,576,1.943,579,1.402,645,3.672,669,0.787,888,1.341,900,4.093,917,2.806,919,3.045,943,2.938,1051,2.938,1065,4.555,1090,3.847,1109,4.085,1152,1.58,1160,2.182,1169,4.804,1183,4.409,1190,2.544,1193,2.182,1301,2.452,1442,2.402,1507,3.452,1520,2.668,1521,2.283,1529,2.402,1530,2.962,1531,2.962,1535,6.464,1667,3.847,1669,4.46,1671,4.379,1673,3.632,1674,3.767,1675,4.881,1676,4.163,1677,4.881,1684,3.452,1686,3.542,1687,3.632,1689,3.632,1690,4.163,1695,3.452,1697,2.402,1699,3.299,1707,4.881,1708,3.632,1710,2.75,1711,3.164,1712,3.632,1713,3.632,1715,3.586,1716,3.632,1725,3.632,1726,3.632,1896,2.962,1944,2.182,1952,2.182,2142,2.723,2155,3.847,2387,3.978,2390,3.164,2391,3.164,2411,2.093,2484,2.723,2488,5.534,2510,4.117,2562,2.182,2688,2.544,2827,2.962,3103,2.093,3353,2.962,3527,2.544,3528,2.283,3530,2.544,3538,2.962,3769,2.544,4022,2.962,4040,2.962,4041,5.027,4042,5.027,4043,5.027,4044,5.027,4045,5.027,4046,3.324,4047,3.324,4048,3.324,4049,3.324,4050,3.324,4051,3.324,4052,3.324,4053,3.324,4054,3.324,4055,3.324,4056,3.324,4057,3.324,4058,3.324,4059,3.324,4060,3.324,4061,3.324,4062,3.324,4063,2.962,4064,3.324,4065,3.324,4066,3.324,4067,3.324,4068,5.027,4069,6.061,4070,3.324,4071,3.324,4072,3.324,4073,3.324,4074,3.324,4075,3.324,4076,5.027,4077,3.324,4078,3.324,4079,5.027,4080,3.324]],["title/modules/PopModule.html",[345,1.155,2168,3.312]],["body/modules/PopModule.html",[3,0.352,4,0.363,10,0.275,25,2.877,26,0.007,152,0.36,154,0.583,166,1.287,167,0.296,168,0.286,198,1.244,281,2.494,293,2.452,342,0.004,343,0.005,344,0.004,345,1.523,347,2.628,348,2.521,349,3.592,350,2.744,351,3.514,358,3.409,359,2.573,360,2.24,363,2.722,364,2.328,696,3.843,697,3.009,1080,4.367,1669,5.516,2168,6.505,2170,5.718,2180,4.808,4063,5.929,4081,5.929,4082,5.929,4083,6.655,4084,5.929,4085,5.929,4086,5.929,4087,6.655,4088,5.929,4089,6.655]],["title/injectables/PopService.html",[660,1.494,1669,2.949]],["body/injectables/PopService.html",[3,0.336,4,0.346,10,0.263,12,0.731,26,0.007,39,0.675,40,0.959,45,1.454,68,0.704,70,1.081,84,1.35,121,1.173,138,2.749,152,0.326,154,0.556,166,1.229,167,0.232,168,0.273,183,1.881,293,1.582,342,0.004,343,0.005,344,0.004,381,1.816,386,6.066,443,4.3,458,1.707,493,2.509,660,2.327,713,2.944,887,6.013,917,2.457,943,4.593,1065,4.543,1080,4.169,1147,7.943,1151,6.015,1169,4.947,1190,6.824,1669,4.593,1690,5.398,1699,5.851,1924,4.947,2045,6.015,2692,6.437,4090,5.66,4091,9.162,4092,7.859,4093,7.859,4094,8.916,4095,8.533,4096,7.859,4097,6.353,4098,6.353,4099,6.353,4100,6.353,4101,6.353,4102,6.353,4103,6.353,4104,6.353,4105,6.353,4106,6.353]],["title/interfaces/ResourceActionbarState.html",[368,1.369,4107,4.133]],["body/interfaces/ResourceActionbarState.html",[0,0.359,3,0.234,4,0.241,5,0.931,10,0.183,17,1.083,20,1.747,22,2.733,26,0.007,32,0.697,33,0.963,34,0.827,39,0.759,40,0.755,42,1.157,46,1.548,52,2.134,57,2.001,68,0.729,69,1.732,84,1.226,102,0.805,107,3.039,123,3.229,133,1.785,143,2.453,152,0.337,154,0.388,156,1.935,166,1.759,167,0.226,168,0.19,188,1.538,205,2.064,209,2.158,253,1.428,257,1.541,294,1.12,295,1.58,342,0.003,343,0.004,344,0.003,368,1.2,369,5.142,370,1.909,372,2.67,373,3.971,374,4.598,375,3.668,376,6.455,377,0.915,378,3.285,381,1.265,382,7.448,386,3.897,388,3.01,389,3.497,391,6.908,394,3.285,395,3.624,398,2.026,404,3.624,433,2.68,457,1.866,458,0.885,460,2.497,463,2.001,476,2.421,506,3.789,512,3.039,519,2.152,531,2.586,542,4.034,549,5.07,552,5.048,554,3.868,576,3.618,580,1.642,632,2.65,648,2.394,655,2.799,669,1.69,759,3.08,782,2.904,783,2.904,784,2.218,812,3.942,958,2.159,970,2.421,1032,2.5,1108,2.68,1154,4.554,1278,3.039,1619,3.942,1628,3.942,1630,2.785,1744,4.756,2870,6.229,3134,3.942,3721,3.942,4107,6.334,4108,3.039,4109,3.624,4110,3.942,4111,5.515,4112,7.733,4113,4.425,4114,4.425,4115,4.425,4116,4.425,4117,6.19,4118,4.425,4119,4.425,4120,4.425,4121,4.425,4122,4.425,4123,4.425,4124,4.425,4125,4.425,4126,4.425,4127,4.425,4128,4.425,4129,4.425,4130,4.425,4131,3.624,4132,8.139,4133,4.425,4134,4.425,4135,4.425,4136,7.14,4137,4.425,4138,4.425,4139,4.425,4140,4.425,4141,4.425,4142,4.425,4143,3.624,4144,4.425,4145,4.425,4146,4.425,4147,4.425,4148,4.425,4149,4.425,4150,4.425,4151,4.425,4152,4.425,4153,4.425,4154,4.425,4155,4.425,4156,4.425,4157,4.425,4158,4.425,4159,4.425,4160,4.425,4161,4.425,4162,4.425]],["title/components/ResourceCrudComponent.html",[0,0.292,296,1.278]],["body/components/ResourceCrudComponent.html",[0,0.338,1,0.789,2,0.88,3,0.165,4,0.17,5,1.483,7,0.845,8,0.817,10,0.129,12,0.359,17,1.171,21,0.763,22,2.571,24,0.701,26,0.007,32,0.753,33,2.176,34,1.861,37,1.171,39,0.331,40,0.584,42,1.391,45,0.508,46,1.559,52,1.32,54,1.22,57,2.955,65,1.191,68,0.792,69,1.41,70,1.157,72,1.243,84,1,88,1.546,89,1.157,90,1.446,100,0.855,101,1.059,102,0.832,121,0.927,124,2.784,127,1.655,129,0.776,143,2.523,152,0.334,153,1.409,154,0.273,156,2.042,167,0.114,168,0.134,183,0.923,188,1.161,198,0.583,199,1.553,200,0.645,202,1.742,203,0.845,204,0.845,205,0.763,206,1.58,207,0.763,208,0.803,209,1.908,210,0.789,211,0.803,212,2.102,213,0.789,214,1.333,215,1.772,216,0.803,217,1.558,218,2.169,219,0.803,220,0.803,221,0.845,222,0.789,223,1.298,224,0.803,225,0.845,226,0.789,227,0.845,228,0.776,229,0.763,230,1.55,231,1.58,232,0.776,233,0.789,234,0.789,235,0.776,236,0.845,237,0.803,238,1.912,239,0.803,240,0.789,241,0.803,242,0.803,243,0.803,244,0.789,245,0.845,246,0.776,247,0.803,248,0.845,249,0.789,250,0.845,251,0.789,252,0.789,253,1.307,254,0.845,255,0.789,256,0.845,257,0.776,258,0.789,259,0.845,260,0.789,261,0.845,262,1.52,263,0.845,264,0.789,265,1.378,266,0.845,267,0.776,268,0.845,269,0.789,270,0.845,271,0.763,272,0.845,273,0.789,274,0.776,275,0.789,276,0.75,277,0.845,278,0.789,279,0.845,280,0.845,281,0.789,282,0.845,283,0.789,284,0.845,285,0.763,286,0.845,287,0.776,288,0.789,289,0.845,290,0.789,291,0.817,292,0.845,293,0.776,294,0.789,295,2.063,296,1.884,297,0.803,298,0.701,299,0.803,300,1.917,301,0.789,302,1.683,303,0.803,304,0.803,305,0.845,306,0.776,307,0.789,308,0.845,309,0.789,310,0.817,311,0.789,312,0.845,313,0.789,314,0.845,315,0.803,316,0.789,317,0.789,318,0.845,319,0.789,320,0.845,321,0.789,322,0.845,323,0.789,324,0.75,325,0.737,326,0.763,327,0.845,328,0.776,329,0.845,330,0.776,331,0.845,332,0.776,333,0.845,334,0.776,335,0.845,336,0.776,337,0.831,338,0.845,339,0.776,340,0.831,341,0.845,342,0.002,343,0.003,344,0.002,360,1.611,377,0.645,381,0.891,387,1.665,457,2.456,458,0.957,459,1.705,460,2.636,463,1.409,480,1.812,499,2.274,506,2.539,519,2.243,543,4.271,549,3.919,550,3.113,552,3.742,554,2.768,556,5.189,557,4.263,558,1.741,559,4.263,560,4.263,571,3.662,572,4.263,579,2.972,580,2.968,604,5.396,606,1.962,607,1.821,631,1.606,655,2.955,661,1.705,664,3.012,665,2.045,671,2.58,691,3.819,693,3.528,755,2.475,782,2.045,963,3.879,1011,3.919,1012,3.286,1013,3.919,1014,3.919,1015,3.662,1017,3.091,1019,2.703,1020,4.263,1022,5.071,1023,3.919,1027,4.438,1028,3.528,1029,4.528,1032,3.291,1036,4.12,1038,3.919,1039,4.263,1040,2.703,1045,2.755,1046,3.662,1048,2.466,1049,4.263,1051,2.796,1065,3.683,1066,3.106,1069,3.457,1071,3.286,1076,1.705,1078,2.776,1080,2.045,1088,2.776,1089,4.263,1091,2.776,1117,2.14,1118,2.14,1121,4.263,1150,4.488,1703,3.662,1729,2.251,2681,4.263,3591,2.618,3739,2.14,4108,6.309,4163,7.524,4164,2.776,4165,6.534,4166,5.824,4167,4.785,4168,3.116,4169,3.116,4170,3.116,4171,3.116,4172,3.116,4173,6.534,4174,3.116,4175,3.116,4176,4.263,4177,3.116,4178,3.116,4179,3.116,4180,3.116,4181,4.785,4182,3.116,4183,3.116,4184,4.785,4185,3.116,4186,3.116,4187,3.116,4188,2.385,4189,3.116,4190,2.776,4191,3.116,4192,3.116,4193,3.116,4194,3.116,4195,3.116,4196,3.116,4197,3.116,4198,3.116]],["title/components/ResourceListPopComponent.html",[0,0.292,301,1.278]],["body/components/ResourceListPopComponent.html",[0,0.34,1,0.8,2,0.889,3,0.167,4,0.172,5,0.664,7,1.311,8,0.828,10,0.131,17,1.183,20,1.909,21,0.773,23,2.656,24,0.711,26,0.007,32,1.265,33,2.177,34,1.864,37,1.183,39,0.336,40,0.59,41,1.785,42,1.399,45,1.073,46,1.76,52,1.334,54,0.761,56,3.05,65,1.204,68,0.837,69,1.175,70,1.211,72,1.117,78,2.492,79,2.492,84,0.83,87,1.909,88,0.747,89,1.117,90,1.569,100,1.041,101,1.037,102,0.738,116,2.492,119,4.657,121,0.984,123,4.01,124,1.247,127,1.894,129,0.786,143,2.421,152,0.285,153,1.428,154,0.277,156,0.987,167,0.116,168,0.321,186,2.423,198,0.591,199,1.289,200,0.653,202,1.754,203,0.857,204,0.857,205,0.773,206,1.593,207,0.773,208,0.814,209,1.531,210,0.8,211,0.814,212,2.112,213,0.8,214,1.344,215,1.785,216,0.814,217,1.682,218,2.178,219,0.814,220,0.814,221,0.857,222,0.8,223,1.311,224,0.814,225,0.857,226,0.8,227,0.857,228,0.786,229,0.773,230,1.557,231,1.593,232,0.786,233,0.8,234,0.8,235,0.786,236,0.857,237,0.814,238,1.924,239,0.814,240,0.8,241,0.814,242,0.814,243,0.814,244,0.8,245,0.857,246,0.786,247,0.814,248,0.857,249,0.8,250,0.857,251,0.8,252,0.8,253,1.316,254,0.857,255,0.8,256,0.857,257,0.786,258,0.8,259,0.857,260,0.8,261,0.857,262,0.735,263,0.857,264,0.8,265,1.39,266,0.857,267,0.786,268,0.857,269,0.8,270,0.857,271,0.773,272,0.857,273,0.8,274,0.786,275,0.8,276,0.76,277,0.857,278,0.8,279,0.857,280,0.857,281,0.8,282,0.857,283,0.8,284,0.857,285,0.773,286,0.857,287,0.786,288,0.8,289,0.857,290,0.8,291,0.828,292,0.857,293,2.263,294,0.8,295,1.962,296,0.8,297,0.814,298,0.711,299,0.814,300,0.814,301,1.666,302,0.814,303,0.814,304,1.695,305,0.857,306,0.786,307,0.8,308,0.857,309,0.8,310,0.828,311,0.8,312,0.857,313,0.8,314,0.857,315,0.814,316,0.8,317,0.8,318,0.857,319,0.8,320,0.857,321,0.8,322,0.857,323,0.8,324,0.76,325,0.747,326,0.773,327,0.857,328,0.786,329,0.857,330,0.786,331,0.857,332,0.786,333,0.857,334,0.786,335,0.857,336,0.786,337,0.842,338,0.857,339,0.786,340,0.842,341,0.857,342,0.002,343,0.003,344,0.002,377,1,378,3.764,380,2.792,381,0.903,387,1.679,394,3.971,398,1.724,414,2.169,433,4.297,458,0.967,480,1.831,502,1.909,519,1.77,529,1.859,542,4.651,552,3.117,554,2.792,645,2.929,743,2.814,782,2.073,783,2.073,784,1.583,900,3.986,917,2.271,919,1.913,943,1.846,952,3.321,963,3.722,1001,2.825,1027,4.465,1045,2.038,1051,1.846,1065,4.12,1109,3.392,1117,2.169,1118,2.169,1169,3.698,1183,3.798,1301,1.541,1505,3.7,1507,3.321,1520,3.117,1521,2.169,1529,2.282,1666,2.418,1667,3.7,1668,4.811,1669,4.91,1670,3.855,1671,3.493,1673,3.493,1674,2.792,1675,3.493,1676,3.321,1677,4.244,1679,2.814,1680,2.814,1681,2.814,1682,2.587,1683,2.418,1684,2.169,1685,2.418,1686,1.846,1687,2.282,1688,2.418,1689,2.282,1690,2.169,1691,2.418,1692,2.814,1693,2.418,1694,3.96,1695,4.034,1697,2.282,1698,2.418,1699,2.073,1703,3.7,1705,4.307,1706,2.418,1707,3.493,1708,2.282,1709,2.418,1710,1.728,1711,1.988,1712,2.282,1713,2.282,1714,2.418,1715,2.566,1716,2.282,1717,2.418,1718,2.814,1719,2.587,1721,2.814,1722,4.307,1723,2.587,1724,2.418,1725,2.282,1726,2.282,1727,2.418,1728,2.418,1730,2.587,1731,2.418,1734,2.587,1735,2.282,1736,2.418,1737,2.814,2491,2.814,2492,4.307,4108,6.244,4188,6.958,4190,2.814,4199,5.874,4200,3.159,4201,3.159,4202,3.159,4203,3.159,4204,2.587,4205,3.159]],["title/modules/ResourceModule.html",[345,1.155,1204,3.466]],["body/modules/ResourceModule.html",[3,0.273,4,0.282,10,0.214,25,2.556,26,0.007,152,0.371,154,0.453,155,2.085,156,1.615,167,0.189,168,0.222,198,0.966,208,2.45,217,1.182,294,2.409,295,2.09,296,2.409,297,2.45,298,1.549,299,2.45,300,2.478,301,2.409,302,2.45,303,2.45,342,0.003,343,0.005,344,0.003,345,1.182,347,2.041,348,1.958,349,3.191,350,2.131,351,3.122,357,5.375,358,2.902,359,1.998,360,1.74,362,3.889,363,2.317,364,2.407,542,4.993,606,3.254,607,3.02,696,3.271,697,2.337,700,4.727,783,3.392,784,2.59,1080,5.079,1204,6.907,1205,6.243,1225,3.734,1227,3.956,1233,4.233,1748,5.165,1782,3.734,2121,3.956,2122,3.734,2123,3.392,4109,4.233,4163,4.233,4188,5.923,4206,4.604,4207,4.604,4208,5.168,4209,4.604,4210,4.604,4211,5.168,4212,4.604,4213,5.168,4214,4.604,4215,6.883,4216,4.604]],["title/injectables/ResourceService.html",[660,1.494,1748,2.949]],["body/injectables/ResourceService.html",[0,0.301,3,0.183,4,0.189,10,0.143,12,0.4,26,0.007,32,1.376,39,0.369,40,0.759,45,1.547,46,1.475,48,1.458,52,2.04,54,0.818,68,0.822,69,1.822,70,1.107,72,1.313,73,1.432,83,3.752,84,1.381,88,2.219,89,1.286,98,2.602,100,1.24,101,1.012,102,0.88,121,0.683,131,1.085,133,3.13,142,2.141,143,1.047,152,0.322,154,0.304,166,1.203,167,0.19,168,0.149,183,1.028,188,1.65,193,1.962,209,1.924,217,1.068,295,2.169,298,1.86,342,0.002,343,0.003,344,0.002,368,0.942,369,2.756,373,1.694,377,1.428,381,0.992,387,2.113,389,2.934,398,1.809,450,3.917,457,2.911,458,0.694,459,1.9,460,2.786,463,1.57,483,2.603,486,1.01,496,4.534,502,1.371,514,3.917,542,4.177,546,4.562,548,4.365,552,4.793,554,3.822,580,2.879,581,3.567,584,2.67,593,3.008,606,2.186,609,2.657,650,3.269,660,1.538,662,4.045,663,1.74,670,1.432,713,1.609,716,2.029,719,2.385,759,3.957,778,4.268,782,2.279,784,1.74,805,4.083,817,3.269,818,3.567,825,2.279,913,4.852,917,2.008,937,1.79,943,3.035,970,3.778,995,3.607,1019,2.934,1045,2.911,1055,2.844,1073,4.083,1152,2.468,1156,3.665,1178,2.103,1277,1.962,1313,2.385,1456,4.183,1645,2.844,1710,2.842,1741,2.534,1742,3.752,1743,3.752,1744,3.035,1745,2.534,1746,3.567,1747,3.567,1748,3.636,1749,4.254,1750,4.627,1751,4.627,1752,4.532,1754,4.254,1756,3.769,1757,4.254,1761,3.146,1766,4.254,1767,4.254,1769,3.146,1770,3.636,1774,4.254,1775,3.752,1777,5.341,1792,3.146,1804,5.096,1805,2.844,1806,2.844,1807,2.844,1812,4.254,1814,2.508,1818,2.844,1819,2.844,1820,2.844,1821,2.844,1822,2.844,1823,6.055,1824,2.279,1825,2.385,1826,2.844,1900,2.657,2011,2.657,2014,3.975,3593,2.844,4108,6.078,4204,2.844,4217,2.844,4218,5.193,4219,5.193,4220,3.472,4221,6.152,4222,6.152,4223,3.472,4224,5.543,4225,3.472,4226,4.627,4227,3.472,4228,3.472,4229,4.627,4230,3.472,4231,4.627,4232,4.627,4233,4.627,4234,3.472,4235,4.627,4236,4.627,4237,3.472,4238,3.472,4239,3.093,4240,3.093,4241,3.093,4242,3.093,4243,3.093,4244,3.093,4245,4.254,4246,3.093,4247,6.152,4248,3.093,4249,3.093,4250,3.093,4251,3.093,4252,3.093,4253,3.093,4254,3.093,4255,3.093,4256,3.093,4257,3.093,4258,3.093,4259,3.093,4260,3.093,4261,4.627,4262,5.543,4263,3.093,4264,4.627,4265,3.093,4266,3.093]],["title/interfaces/SdkField.html",[368,1.369,4267,4.133]],["body/interfaces/SdkField.html",[3,0.454,4,0.313,10,0.238,12,1.065,26,0.007,32,1.433,39,0.611,40,0.9,45,1.528,48,2.796,68,0.886,69,1.957,72,1.403,121,1.197,167,0.21,230,1.476,342,0.004,343,0.005,344,0.004,368,1.559,370,2.48,372,2.48,375,3.671,377,2.024,387,2.645,445,2.963,514,4.646,558,2.091,619,4.432,730,3.36,759,3.515,916,6.438,1048,3.804,1154,3.804,1156,3.916,1745,3.6,1770,5.025,1792,4.47,1835,6.574,1869,5.729,1889,5.332,1914,5.068,1918,5.318,1924,4.646,3589,3.949,3611,5.122,3626,5.122,3687,7.661,3688,7.661,3739,5.068,4267,6.044,4268,5.122,4269,5.122,4270,5.749,4271,7.379,4272,7.379,4273,7.379,4274,7.379,4275,5.648,4276,6.044]],["title/modules/SdkModule.html",[345,1.155,1205,3.312]],["body/modules/SdkModule.html",[3,0.38,4,0.392,10,0.297,25,2.975,26,0.007,152,0.344,154,0.63,167,0.263,168,0.309,198,1.345,342,0.005,343,0.006,344,0.005,345,1.646,347,2.841,348,2.725,349,3.493,350,2.967,351,3.418,358,3.572,359,2.782,360,2.422,362,4.065,363,2.422,364,2.963,460,3.877,1205,6.306,2121,5.507,2122,5.198,2123,4.722,4277,6.41,4278,6.41,4279,7.195,4280,7.195]],["title/injectables/SdkService.html",[460,2.036,660,1.494]],["body/injectables/SdkService.html",[3,0.32,4,0.181,10,0.137,12,0.382,25,1.66,26,0.007,27,2.982,32,1.248,39,0.353,40,0.613,44,4.566,45,1.33,46,1.835,54,0.791,55,4.754,68,0.794,69,1.451,70,1.181,72,0.955,83,3.63,84,1.401,85,3.589,86,3.451,87,2.667,88,1.598,89,1.292,90,0.735,100,1.163,101,0.948,102,0.923,117,2.805,121,1.073,124,1.312,133,3.434,136,2.721,138,3.133,152,0.319,154,0.291,167,0.122,168,0.143,175,3.845,188,1.592,191,2.543,209,2.24,214,1.149,342,0.002,343,0.003,344,0.002,373,2.956,377,1.039,385,4.394,398,1.999,425,3.044,448,2.721,451,4.377,457,2.118,458,0.665,460,2.725,464,2.721,469,3.044,484,5.354,486,1.965,499,2.388,500,2.272,504,3.297,522,2.18,529,1.999,532,3.451,554,3.21,558,2.457,569,3.295,579,2.118,593,1.828,646,5.136,648,1.943,659,2.272,660,1.488,662,3.969,663,1.665,671,2.393,693,3.044,694,2.839,713,1.54,715,4.115,716,4.459,717,3.297,718,6.017,719,6.581,720,4.115,721,3.163,722,5.552,723,4.115,724,4.115,725,5.169,726,4.115,727,4.476,728,3.63,729,5.532,730,2.936,731,4.476,732,4.476,733,4.476,735,4.115,738,2.96,745,3.163,746,4.476,750,3.845,751,4.476,759,1.433,761,2.749,763,3.044,781,7.269,782,2.18,785,2.092,791,4.962,803,2.96,831,2.092,851,5.519,864,1.942,970,1.818,993,4.476,1045,2.118,1286,2.4,1307,3.63,1325,2.749,1524,3.63,1614,4.161,1630,2.092,1972,4.639,2362,2.96,2543,2.839,2985,4.115,3080,3.845,3125,3.845,3280,4.962,3281,2.721,3595,5.169,3707,4.115,3786,4.115,4007,2.96,4281,2.96,4282,5.024,4283,5.024,4284,5.024,4285,5.024,4286,5.024,4287,6.059,4288,5.398,4289,5.398,4290,6.059,4291,8.159,4292,5.024,4293,5.024,4294,6.059,4295,5.024,4296,3.322,4297,5.024,4298,5.024,4299,3.322,4300,6.059,4301,5.024,4302,3.322,4303,5.024,4304,8.352,4305,5.024,4306,3.322,4307,7.63,4308,5.024,4309,3.322,4310,5.024,4311,3.322,4312,3.322,4313,3.322,4314,3.322,4315,4.476,4316,3.322,4317,5.398,4318,3.322,4319,3.322,4320,3.322,4321,5.024,4322,3.322,4323,4.476,4324,3.322,4325,5.024,4326,5.024,4327,3.322,4328,3.322,4329,3.322,4330,3.322,4331,3.322,4332,3.322,4333,3.322,4334,3.322,4335,3.322,4336,3.322,4337,6.059,4338,3.322,4339,3.322,4340,5.024,4341,3.322,4342,3.322,4343,3.322,4344,6.059,4345,3.322,4346,3.322,4347,3.322,4348,3.322,4349,3.322,4350,3.322,4351,5.024,4352,3.322,4353,3.322,4354,3.322,4355,3.322,4356,3.322,4357,5.024,4358,3.322,4359,3.322,4360,3.322,4361,3.322,4362,3.322,4363,3.322,4364,6.754,4365,3.322,4366,5.024,4367,3.322,4368,3.322,4369,3.322,4370,3.322,4371,5.024,4372,3.322]],["title/modules/SelectModule.html",[345,1.155,4373,3.646]],["body/modules/SelectModule.html",[3,0.327,4,0.338,10,0.256,25,2.556,26,0.007,27,3.726,28,4.617,29,4.617,30,4.617,31,4.977,32,1.432,152,0.359,154,0.543,166,1.199,167,0.283,168,0.266,198,1.159,205,2.389,306,2.478,342,0.004,343,0.005,344,0.004,345,1.418,347,2.447,348,2.347,349,3.479,350,2.556,351,3.404,358,3.263,359,2.396,360,2.086,363,2.605,364,2.168,696,3.678,697,2.802,702,4.743,1214,7.518,1215,4.743,1216,4.478,1227,4.743,2171,6.088,2179,5.076,3061,6.705,4373,7.128,4374,5.522,4375,5.522,4376,5.522,4377,6.198,4378,5.522,4379,5.522,4380,5.522,4381,6.198,4382,5.522,4383,6.198]],["title/components/SignupComponent.html",[0,0.292,307,1.278]],["body/components/SignupComponent.html",[0,0.369,1,0.913,2,0.982,3,0.191,4,0.197,5,0.759,7,0.978,8,0.945,9,1.52,10,0.149,12,0.415,17,1.308,20,2.109,21,0.883,24,0.811,26,0.007,32,0.568,33,2.188,34,1.873,37,1.308,39,0.383,40,0.652,42,1.315,45,1.038,46,1.496,48,1.5,54,0.841,65,1.33,68,0.79,70,1.162,72,1.21,84,0.619,85,2.683,89,0.798,90,1.182,100,0.784,101,1.022,102,0.556,119,4.532,121,0.988,124,2.109,127,1.353,129,0.898,131,1.669,142,2.624,143,2.371,152,0.287,153,1.631,154,0.316,156,1.127,166,0.697,167,0.132,168,0.155,198,0.674,199,1.424,200,0.746,201,1.52,202,1.875,203,0.978,204,0.978,205,0.883,206,1.726,207,0.883,208,0.929,209,1.83,210,0.913,211,0.929,212,2.208,213,0.913,214,1.456,215,1.908,216,0.929,217,1.351,218,2.268,219,0.929,220,0.929,221,0.978,222,0.913,223,1.449,224,0.929,225,0.978,226,0.913,227,0.978,228,0.898,229,0.883,230,1.629,231,1.726,232,0.898,233,0.913,234,0.913,235,0.898,236,0.978,237,0.929,238,2.037,239,0.929,240,0.913,241,0.929,242,0.929,243,0.929,244,0.913,245,0.978,246,0.898,247,0.929,248,0.978,249,0.913,250,0.978,251,0.913,252,0.913,253,1.069,254,0.978,255,0.913,256,0.978,257,0.898,258,0.913,259,0.978,260,0.913,261,0.978,262,1.243,263,0.978,264,0.913,265,1.506,266,0.978,267,0.898,268,0.978,269,0.913,270,0.978,271,2.206,272,0.978,273,1.611,274,2.163,275,0.913,276,0.868,277,0.978,278,0.913,279,0.978,280,0.978,281,0.913,282,0.978,283,0.913,284,0.978,285,0.883,286,0.978,287,0.898,288,0.913,289,0.978,290,0.913,291,1.667,292,0.978,293,0.898,294,0.913,295,1.85,296,0.913,297,0.929,298,0.811,299,0.929,300,0.929,301,0.913,302,0.929,303,0.929,304,0.929,305,0.978,306,0.898,307,1.782,308,0.978,309,0.913,310,2.191,311,0.913,312,0.978,313,0.913,314,0.978,315,0.929,316,0.913,317,0.913,318,0.978,319,0.913,320,0.978,321,0.913,322,0.978,323,0.913,324,0.868,325,0.853,326,0.883,327,0.978,328,0.898,329,0.978,330,0.898,331,0.978,332,0.898,333,0.978,334,0.898,335,0.978,336,0.898,337,0.961,338,0.978,339,0.898,340,0.961,341,0.978,342,0.002,343,0.004,344,0.002,375,2.155,480,2.023,484,5.343,486,1.554,487,3.377,519,1.61,522,2.367,529,1.4,530,2.76,550,3.891,648,3.302,651,2.539,654,4.397,655,1.631,662,4.672,664,4.429,667,5.212,668,4.176,669,1.506,691,4.597,693,3.236,706,3.213,761,2.923,766,3.506,767,2.954,779,3.213,797,6.994,1017,3.377,1018,3.855,1032,3.018,1033,1.943,1034,1.394,1069,4.597,1072,3.626,1108,3.236,1109,2.754,1110,4.597,1115,2.27,1116,2.27,1153,1.286,1630,2.27,1715,2.835,1864,3.236,1907,4.87,2203,4.176,2218,5.212,3258,4.759,3259,4.375,3260,5.548,3261,6.152,3267,5.669,3268,5.669,3269,5.669,3271,3.213,3272,3.213,3275,5.212,3280,2.954,3281,2.954,3282,2.954,3283,3.213,3285,3.213,3287,3.213,3288,2.954,4384,3.213,4385,5.342,4386,5.342,4387,3.606,4388,3.606,4389,4.089,4390,3.606,4391,3.606,4392,3.606,4393,3.606,4394,3.606,4395,3.606,4396,3.606,4397,3.606,4398,3.606,4399,3.606,4400,3.606,4401,3.606,4402,3.606,4403,3.606,4404,3.606,4405,3.606,4406,3.606]],["title/components/SignupFormComponent.html",[0,0.292,309,1.278]],["body/components/SignupFormComponent.html",[0,0.416,1,0.822,2,0.907,3,0.171,4,0.177,5,0.683,7,0.88,8,0.85,9,1.368,10,0.134,12,0.374,17,1.208,20,1.949,21,0.794,22,2.637,24,0.73,26,0.007,32,1.051,33,2.179,34,1.865,37,1.208,39,0.345,40,0.602,42,1.342,45,1.422,46,1.438,48,2.33,51,1.433,54,0.777,57,3.554,65,1.229,68,0.726,69,0.649,70,1.201,72,0.939,88,1.413,89,1.174,90,1.476,100,0.876,101,1.013,102,0.622,119,4.906,121,1.147,127,1.25,129,0.808,131,2.872,142,2.752,143,1.488,147,1.966,152,0.274,154,0.284,155,1.309,166,0.628,167,0.119,168,0.139,188,0.877,198,0.607,199,1.316,200,0.671,201,1.368,202,1.779,203,0.88,204,0.88,205,0.794,206,1.62,207,0.794,208,0.836,209,1.553,210,0.822,211,0.836,212,2.132,213,0.822,214,1.366,215,1.81,216,0.836,217,1.298,218,2.197,219,0.836,220,0.836,221,0.88,222,0.822,223,1.339,224,0.836,225,0.88,226,0.822,227,0.88,228,0.808,229,0.794,230,1.572,231,1.62,232,0.808,233,0.822,234,0.822,235,0.808,236,0.88,237,0.836,238,1.947,239,0.836,240,0.822,241,0.836,242,0.836,243,0.836,244,0.822,245,0.88,246,0.808,247,0.836,248,0.88,249,0.822,250,0.88,251,0.822,252,0.822,253,0.987,254,0.88,255,0.822,256,0.88,257,0.808,258,0.822,259,0.88,260,0.822,261,0.88,262,1.148,263,0.88,264,0.822,265,1.413,266,0.88,267,0.808,268,0.88,269,0.822,270,0.88,271,0.794,272,0.88,273,2.383,274,2.24,275,0.822,276,0.781,277,0.88,278,0.822,279,0.88,280,0.88,281,0.822,282,0.88,283,0.822,284,0.88,285,0.794,286,0.88,287,0.808,288,0.822,289,0.88,290,0.822,291,1.981,292,0.88,293,0.808,294,0.822,295,1.792,296,0.822,297,0.836,298,1.11,299,0.836,300,0.836,301,0.822,302,0.836,303,0.836,304,0.836,305,0.88,306,0.808,307,0.822,308,0.88,309,1.69,310,2.174,311,0.822,312,0.88,313,0.822,314,0.88,315,0.836,316,0.822,317,0.822,318,0.88,319,0.822,320,0.88,321,0.822,322,0.88,323,0.822,324,0.781,325,0.768,326,0.794,327,0.88,328,0.808,329,0.88,330,0.808,331,0.88,332,0.808,333,0.88,334,0.808,335,0.88,336,0.808,337,0.865,338,0.88,339,0.808,340,0.865,341,0.88,342,0.002,343,0.003,344,0.002,377,0.671,388,3.027,480,1.869,487,3.17,496,2.884,499,2.839,529,1.293,544,3.239,550,2.637,564,1.673,579,2.518,618,3.44,648,2.924,654,2.914,659,1.467,745,3.76,766,3.239,797,6.634,888,1.309,917,2.776,1017,3.17,1033,1.795,1034,1.255,1045,2.518,1072,1.673,1113,2.345,1120,2.13,1150,4.584,1160,2.13,1161,1.834,1171,4.571,1225,2.345,1390,4.315,1446,2.345,1524,2.345,1592,2.345,1715,1.722,1864,2.99,1902,2.345,1918,2.884,2156,5.787,2212,4.042,2649,2.345,3111,2.13,3260,4.201,3289,2.658,3291,2.484,3292,2.658,3293,5.321,3294,4.397,3295,4.397,3296,5.946,3297,6.736,3298,7.002,3299,5.321,3300,4.397,3301,7.002,3302,5.946,3303,4.397,3304,4.397,3305,4.397,3306,4.397,3312,1.072,3313,2.891,3315,2.891,3317,5.466,3318,2.891,3320,2.891,3321,2.891,3322,2.891,3324,2.891,3329,2.891,3330,2.891,3332,4.571,3333,5.321,3334,5.321,3337,5.321,3338,2.891,3340,2.891,3341,2.891,3342,2.891,3343,2.484,3344,2.891,3349,2.891,3350,2.891,3351,2.658,3354,2.891,3355,2.891,3356,5.321,3357,2.891,3358,2.658,3359,2.891,3364,2.891,3365,2.891,3366,2.891,3367,2.891,3369,2.891,3370,2.891,3371,4.042,4389,3.778,4407,7.002,4408,6.437,4409,5.973,4410,4.936,4411,3.245,4412,4.936,4413,3.245,4414,3.245,4415,3.245,4416,3.245,4417,3.245,4418,3.245,4419,3.245,4420,3.245,4421,3.245,4422,3.245,4423,3.245,4424,4.936,4425,3.245,4426,3.245,4427,3.245,4428,3.245,4429,3.245,4430,3.245,4431,3.245,4432,3.245,4433,3.245,4434,3.245,4435,3.245,4436,3.245,4437,3.245]],["title/directives/SlotHostDirective.html",[200,1.044,339,1.256]],["body/directives/SlotHostDirective.html",[0,0.477,2,1.682,3,0.362,4,0.374,10,0.283,12,0.789,24,1.542,26,0.007,33,1.79,39,0.728,40,1.004,41,4.65,46,1.565,48,2.311,68,0.737,70,1.043,72,1.565,100,1.005,101,0.82,102,0.713,116,4.242,152,0.261,154,0.6,167,0.251,168,0.294,200,1.702,325,1.621,339,2.049,340,2.194,342,0.005,343,0.005,344,0.005,393,2.706,458,1.764,476,5.006,550,3.633,558,2.994,715,6.74,1066,3.912,1321,4.65,1520,4.368,1552,7.99,1601,6.74,4438,7.859,4439,6.105,4440,8.23,4441,6.852,4442,6.852,4443,8.23,4444,6.852]],["title/classes/Sorter.html",[168,0.217,4445,4.133]],["body/classes/Sorter.html",[3,0.26,4,0.268,10,0.204,12,0.767,26,0.007,32,1.049,39,0.803,40,0.813,45,1.231,52,2.233,54,1.274,68,0.725,69,1.813,70,0.957,72,0.936,84,0.846,88,2.109,89,1.209,100,0.978,101,0.798,102,0.928,121,0.648,152,0.188,166,1.461,167,0.296,168,0.286,183,2.236,188,1.665,342,0.005,343,0.004,344,0.003,377,1.749,426,2.878,427,3.948,445,4.492,450,3.1,470,1.722,493,3.195,502,2.982,558,1.791,567,3.536,584,3.755,647,2.782,659,3.415,671,2.982,755,3.619,759,2.874,828,6.438,861,6.71,888,1.987,892,4.787,904,3.1,905,4.033,973,4.387,982,4.387,1002,4.033,1051,2.878,1185,2.983,1192,5.457,1325,4.132,1514,4.387,1601,4.033,1623,6.186,1761,2.983,1825,4.576,1939,4.195,1940,3.769,1943,3.894,1952,3.232,1958,7.606,2158,4.033,2203,4.373,2278,5.457,2387,4.373,2686,3.769,2866,7.532,2875,7.298,2876,5.936,3922,5.936,4445,7.138,4446,4.033,4447,6.663,4448,6.663,4449,7.552,4450,6.663,4451,5.457,4452,5.457,4453,5.457,4454,4.924,4455,6.663,4456,4.924,4457,8.455,4458,6.663,4459,4.924,4460,6.471,4461,4.033,4462,4.924,4463,4.387,4464,4.924,4465,4.924,4466,4.924,4467,4.387,4468,4.387,4469,4.387,4470,4.924,4471,4.387,4472,4.387,4473,4.387,4474,6.663,4475,4.924,4476,4.924,4477,4.924,4478,4.924,4479,4.924,4480,6.663,4481,4.924,4482,8.092,4483,4.924,4484,4.924,4485,4.924,4486,4.924,4487,4.924,4488,4.924,4489,4.924,4490,4.924]],["title/interfaces/Symbol.html",[368,1.369,1033,1.836]],["body/interfaces/Symbol.html",[3,0.373,4,0.385,10,0.292,12,0.813,26,0.007,39,0.75,40,1.022,68,0.751,69,1.934,73,3.455,101,1.173,102,0.93,107,4.85,167,0.258,342,0.005,343,0.006,344,0.005,368,1.915,370,3.046,529,2.196,916,4.85,1033,3.517,1163,7.465,1336,6.413,1500,5.755,2354,6.863,2387,6.344,2388,6.054,4491,6.291,4492,7.465,4493,8.379,4494,8.379]],["title/modules/SymbolModule.html",[345,1.155,2172,3.312]],["body/modules/SymbolModule.html",[0,0.454,2,1.439,3,0.334,4,0.427,5,1.329,10,0.261,12,0.727,25,2.811,26,0.007,37,1.546,121,0.831,152,0.349,154,0.553,167,0.286,168,0.336,198,1.181,342,0.004,343,0.005,344,0.004,345,1.445,347,2.494,348,2.392,349,3.509,350,2.604,351,3.433,358,3.301,359,2.442,360,2.126,363,2.126,364,2.739,385,3.826,389,3.568,444,3.976,470,2.209,486,1.837,500,2.856,509,4.145,651,3.002,670,2.604,694,4.424,695,5.993,696,3.722,697,2.856,755,2.392,881,3.826,916,4.338,1033,2.848,1034,3.692,1152,3.002,1273,3.352,1995,4.145,2107,4.563,2172,6.317,2192,3.352,2388,4.563,2418,3.976,2562,4.145,3103,3.976,3122,5.173,3769,4.834,3957,5.173,4323,6.976,4495,5.626,4496,5.626,4497,5.626,4498,5.626,4499,7.07,4500,6.315,4501,7,4502,3.691,4503,6.149,4504,5.173,4505,5.173,4506,6.734,4507,5.626,4508,5.626,4509,5.626,4510,5.626,4511,5.626,4512,5.626,4513,5.626,4514,5.626,4515,5.626,4516,5.626,4517,6.413,4518,4.563,4519,5.626,4520,6.315]],["title/injectables/SymbolPipe.html",[660,1.494,4499,3.646]],["body/injectables/SymbolPipe.html",[3,0.458,4,0.358,10,0.272,12,0.757,17,1.609,26,0.007,39,0.698,54,1.264,68,0.589,69,1.851,70,0.833,88,1.899,89,0.982,100,0.964,101,1.126,102,0.684,152,0.33,154,0.576,167,0.24,168,0.282,188,1.426,199,1.752,342,0.004,343,0.005,344,0.004,458,1.315,558,2.919,660,2.376,670,2.71,713,3.046,730,4.69,745,5.052,759,2.835,1033,3.525,1034,3.577,1273,4.788,1279,5.266,1285,5.798,1995,5.266,2387,5.266,4276,5.383,4499,5.798,4506,5.798,4519,5.856,4521,5.856,4522,8.025,4523,8.025,4524,8.025,4525,6.573,4526,8.025,4527,5.856,4528,6.573]],["title/injectables/SymbolService.html",[660,1.494,1034,1.951]],["body/injectables/SymbolService.html",[3,0.224,4,0.231,9,1.787,10,0.175,12,0.488,26,0.007,39,0.741,40,0.733,45,1.395,46,1.662,54,0.946,68,0.837,69,1.929,70,1.176,72,1.142,84,0.728,87,3.284,88,2.068,89,1.305,90,1.678,100,1.282,101,1.147,102,0.91,107,5.211,121,1.169,135,3.941,138,2.909,152,0.289,154,0.371,166,1.349,167,0.155,168,0.182,183,1.255,188,1.423,201,1.787,342,0.003,343,0.004,344,0.003,458,1.395,486,1.747,529,2.49,532,2.911,660,1.778,713,1.964,761,4.781,777,4.918,861,6.794,864,3.509,970,2.319,995,4.173,1033,3.611,1034,2.322,1741,3.701,1825,4.125,1943,4.861,1999,6.214,2386,8.053,2387,3.941,2429,4.596,2434,5.35,3554,6.214,3596,6.759,3741,6.759,4501,4.596,4503,6.009,4506,6.65,4518,6.313,4527,3.776,4529,3.776,4530,6.005,4531,6.005,4532,4.238,4533,7.587,4534,4.238,4535,7.587,4536,8.318,4537,4.238,4538,7.587,4539,4.238,4540,4.238,4541,7.587,4542,4.238,4543,7.587,4544,4.238,4545,6.005,4546,4.238,4547,6.005,4548,4.238,4549,6.005,4550,6.005,4551,4.238,4552,4.238,4553,4.238,4554,4.238,4555,4.238,4556,4.238,4557,4.238,4558,4.238,4559,4.238,4560,6.005,4561,4.238,4562,4.238,4563,4.238,4564,4.238,4565,4.238,4566,8.009,4567,4.238,4568,4.238,4569,4.238,4570,4.238,4571,3.776,4572,4.238,4573,4.238,4574,4.238]],["title/components/TabComponent.html",[0,0.292,311,1.278]],["body/components/TabComponent.html",[0,0.394,1,1.027,2,1.07,3,0.214,4,0.221,5,0.853,7,1.099,8,1.062,10,0.168,12,0.467,21,0.992,24,0.912,26,0.007,32,1.072,33,2.197,34,1.882,37,1.424,39,0.431,40,0.71,42,1.472,46,1.106,54,0.916,65,1.448,68,0.774,69,1.487,70,1.131,84,0.999,88,1.377,89,0.869,90,1.287,100,0.595,101,1.034,102,0.422,121,0.765,123,3.561,127,1.473,129,1.009,142,2.399,143,2.545,152,0.222,154,0.355,167,0.148,168,0.174,198,0.758,199,1.551,200,0.839,202,1.982,203,1.099,204,1.099,205,0.992,206,1.846,207,0.992,208,1.044,209,0.943,210,1.027,211,1.044,212,2.29,213,1.027,214,1.557,215,2.017,216,1.044,217,1.407,218,2.343,219,1.044,220,1.044,221,1.099,222,1.027,223,1.578,224,1.044,225,1.099,226,1.027,227,1.099,228,1.009,229,0.992,230,1.689,231,1.846,232,1.009,233,1.027,234,1.027,235,1.009,236,1.099,237,1.044,238,2.136,239,1.044,240,1.027,241,1.044,242,1.044,243,1.044,244,1.027,245,1.099,246,1.009,247,1.044,248,1.099,249,1.027,250,1.099,251,1.027,252,1.027,253,1.164,254,1.099,255,1.027,256,1.099,257,1.009,258,1.027,259,1.099,260,1.027,261,1.099,262,0.943,263,1.099,264,1.027,265,1.61,266,1.099,267,1.009,268,1.099,269,1.027,270,1.099,271,0.992,272,1.099,273,1.027,274,1.009,275,1.027,276,0.976,277,1.099,278,1.027,279,1.099,280,1.099,281,1.027,282,1.099,283,1.027,284,1.099,285,0.992,286,1.099,287,1.009,288,1.027,289,1.099,290,1.027,291,1.062,292,1.099,293,1.009,294,1.027,295,1.911,296,1.027,297,1.044,298,0.912,299,1.044,300,1.044,301,1.027,302,1.044,303,1.044,304,1.044,305,1.099,306,1.009,307,1.027,308,1.099,309,1.027,310,1.062,311,1.883,312,1.099,313,2.26,314,1.099,315,1.044,316,1.027,317,1.027,318,1.099,319,1.027,320,1.099,321,1.027,322,1.099,323,1.027,324,0.976,325,0.959,326,0.992,327,1.099,328,1.009,329,1.099,330,1.009,331,1.099,332,1.009,333,1.099,334,1.009,335,1.099,336,1.009,337,1.081,338,1.099,339,1.009,340,1.081,341,1.099,342,0.003,343,0.004,344,0.003,377,1.204,388,3.32,393,1.601,398,1.062,458,1.361,480,2.204,519,2.545,529,1.948,543,4.77,645,5.328,919,3.524,962,5.315,1028,5.114,1045,3.135,1066,2.765,1155,3.818,1183,2.838,1247,4.204,1435,4.765,1458,4.453,1510,3.612,1512,5.373,1711,3.663,2735,6.625,3259,6.09,4575,3.612,4576,7.771,4577,5.183,4578,5.818,4579,7.436,4580,7.874,4581,5.818,4582,4.054,4583,5.818,4584,4.054,4585,4.054,4586,4.054,4587,4.054,4588,4.054,4589,4.054,4590,5.818,4591,4.054,4592,3.612,4593,4.054,4594,4.054]],["title/components/TabsComponent.html",[0,0.292,313,1.278]],["body/components/TabsComponent.html",[0,0.45,1,0.988,2,1.041,3,0.206,4,0.213,5,0.821,7,1.058,8,1.023,9,1.645,10,0.161,12,0.449,17,1.385,21,0.955,24,0.878,26,0.007,32,0.615,33,2.194,34,1.879,37,1.385,39,0.415,40,0.691,42,1.245,45,0.636,54,0.891,65,1.409,68,0.695,69,1.332,70,1.058,73,2.334,84,0.67,86,3.888,88,1.729,89,1.091,90,1.616,100,0.977,101,1.059,102,0.693,121,0.876,124,1.541,127,1.433,129,0.971,152,0.254,154,0.342,166,1.095,167,0.143,168,0.168,183,1.155,188,0.693,198,0.73,199,1.509,200,0.807,201,1.645,202,1.948,203,1.058,204,1.058,205,0.955,206,1.806,207,0.955,208,1.005,209,0.908,210,0.988,211,1.005,212,2.264,213,0.988,214,1.524,215,1.981,216,1.005,217,1.389,218,2.319,219,1.005,220,1.005,221,1.058,222,0.988,223,1.535,224,1.005,225,1.058,226,0.988,227,1.058,228,0.971,229,0.955,230,1.669,231,1.806,232,0.971,233,0.988,234,0.988,235,0.971,236,1.058,237,1.005,238,2.104,239,1.005,240,0.988,241,1.005,242,1.005,243,1.005,244,0.988,245,1.058,246,0.971,247,1.005,248,1.058,249,0.988,250,1.058,251,0.988,252,0.988,253,1.461,254,1.058,255,0.988,256,1.058,257,0.971,258,0.988,259,1.058,260,0.988,261,1.058,262,0.908,263,1.058,264,0.988,265,1.576,266,1.058,267,0.971,268,1.058,269,0.988,270,1.058,271,0.955,272,1.058,273,0.988,274,0.971,275,0.988,276,0.939,277,1.058,278,0.988,279,1.058,280,1.058,281,0.988,282,1.058,283,0.988,284,1.058,285,0.955,286,1.058,287,0.971,288,0.988,289,1.058,290,0.988,291,1.023,292,1.058,293,0.971,294,0.988,295,1.891,296,0.988,297,1.005,298,0.878,299,1.005,300,1.005,301,0.988,302,1.005,303,1.005,304,1.005,305,1.058,306,0.971,307,0.988,308,1.058,309,0.988,310,1.023,311,2.27,312,1.058,313,2.049,314,1.058,315,1.005,316,0.988,317,0.988,318,1.058,319,0.988,320,1.058,321,0.988,322,1.058,323,0.988,324,0.939,325,0.923,326,0.955,327,1.058,328,0.971,329,1.058,330,0.971,331,1.058,332,0.971,333,1.058,334,0.971,335,1.058,336,0.971,337,1.04,338,1.058,339,0.971,340,1.04,341,1.058,342,0.003,343,0.004,344,0.003,398,1.483,443,3.097,458,0.781,470,1.365,486,1.135,529,1.483,543,4.699,604,5.592,631,2.011,651,2.69,661,2.135,670,1.609,671,1.541,716,3.308,917,1.509,970,2.135,1022,4.901,1028,4.699,1155,4.795,1165,3.997,1182,3.429,1338,2.011,1435,4.636,1561,2.987,1684,2.68,1756,3.429,1900,4.332,2469,3.196,2740,3.196,3111,3.715,3493,3.477,3570,3.477,3963,5.934,4143,3.196,4576,7.136,4595,3.477,4596,5.66,4597,5.66,4598,6.66,4599,7.763,4600,5.66,4601,7.306,4602,7.306,4603,5.66,4604,5.66,4605,5.66,4606,5.043,4607,3.902,4608,3.902,4609,5.66,4610,7.306,4611,3.902,4612,5.66,4613,3.902,4614,5.66,4615,3.902,4616,3.902,4617,5.66,4618,3.477,4619,3.902,4620,3.902,4621,3.902,4622,3.902,4623,3.902,4624,3.902,4625,3.902,4626,3.902,4627,3.902,4628,3.902,4629,3.902,4630,3.902,4631,3.902,4632,3.902,4633,3.902,4634,3.902,4635,3.902,4636,5.66,4637,3.902,4638,3.902,4639,5.66]],["title/components/TinymceComponent.html",[0,0.292,317,1.278]],["body/components/TinymceComponent.html",[0,0.328,1,0.752,2,0.848,3,0.157,4,0.162,5,0.625,6,1.626,7,0.806,8,0.779,9,1.253,10,0.123,12,0.342,13,2.696,15,4.029,17,1.129,18,3.559,21,0.727,24,0.669,25,1.524,26,0.007,27,2.036,28,3.093,29,2.524,30,3.093,31,2.524,32,1.003,33,2.171,34,1.857,35,3.027,37,1.129,39,0.316,40,0.563,41,3.897,42,1.424,43,3.559,44,3.559,45,1.495,46,1.388,47,2.312,54,0.726,55,4.179,58,3.027,59,4.011,62,2.794,64,3.86,65,1.148,68,0.754,69,1.46,70,1.162,72,0.877,84,1.185,85,2.687,89,1.176,90,1.742,95,2.904,98,2.123,100,0.935,101,1.007,102,0.663,103,2.904,113,2.904,115,3.168,116,2.378,117,1.784,121,1.139,123,2.556,124,1.173,125,3.53,127,1.168,129,0.74,133,2.571,135,3.027,136,3.778,138,2.229,143,2.296,152,0.35,153,1.344,154,0.26,155,1.199,166,0.575,167,0.109,168,0.128,173,5.979,175,2.274,181,3.027,184,2.434,186,1.489,188,0.82,191,2.274,193,1.679,194,1.871,198,0.556,199,1.23,200,0.615,201,1.253,202,1.699,203,0.806,204,0.806,205,0.727,206,1.533,207,0.727,208,0.765,209,0.691,210,0.752,211,0.765,212,2.066,213,0.752,214,1.293,215,1.728,216,0.765,217,1.254,218,2.135,219,0.765,220,0.765,221,0.806,222,0.752,223,1.251,224,0.765,225,0.806,226,0.752,227,0.806,228,0.74,229,0.727,230,1.524,231,1.533,232,0.74,233,0.752,234,0.752,235,0.74,236,0.806,237,0.765,238,1.871,239,0.765,240,0.752,241,0.765,242,0.765,243,0.765,244,0.752,245,0.806,246,0.74,247,0.765,248,0.806,249,0.752,250,0.806,251,0.752,252,1.432,253,0.923,254,0.806,255,0.752,256,0.806,257,0.74,258,0.752,259,0.806,260,0.752,261,0.806,262,0.691,263,0.806,264,0.752,265,1.338,266,0.806,267,0.74,268,0.806,269,0.752,270,0.806,271,0.727,272,0.806,273,0.752,274,0.74,275,0.752,276,0.715,277,0.806,278,0.752,279,0.806,280,0.806,281,0.752,282,0.806,283,0.752,284,0.806,285,0.727,286,0.806,287,0.74,288,0.752,289,0.806,290,0.752,291,0.779,292,0.806,293,0.74,294,0.752,295,1.742,296,0.752,297,0.765,298,1.038,299,0.765,300,0.765,301,0.752,302,0.765,303,0.765,304,0.765,305,0.806,306,0.74,307,0.752,308,0.806,309,0.752,310,0.779,311,0.752,312,0.806,313,0.752,314,0.806,315,0.765,316,0.752,317,1.849,318,0.806,319,0.752,320,0.806,321,0.752,322,0.806,323,0.752,324,0.715,325,0.703,326,0.727,327,0.806,328,0.74,329,0.806,330,0.74,331,0.806,332,0.74,333,0.806,334,0.74,335,0.806,336,0.74,337,1.23,338,0.806,339,0.74,340,0.792,341,0.806,342,0.002,343,0.003,344,0.002,398,1.481,435,1.8,458,0.594,480,1.747,493,1.821,500,2.086,519,2.296,548,2.62,593,1.678,596,3.778,646,2.904,662,4.168,663,1.489,664,2.904,670,1.225,745,4.011,825,1.95,852,7.203,882,2.606,919,2.794,1001,1.737,1045,1.945,1048,3.556,1066,2.192,1073,3.027,1153,1.645,1160,3.027,1165,3.093,1190,3.53,1312,2.434,1313,2.041,1349,2.647,1390,3.333,1475,4.327,1592,3.333,1846,2.647,2094,3.194,2157,3.53,2231,3.53,2310,2.434,2311,2.647,2444,5.677,2554,5.65,2555,4.63,2605,2.647,2756,3.778,2757,3.778,2825,2.434,3124,2.434,3220,3.778,3385,6.146,3388,5.677,3396,4.109,3414,2.434,3758,3.168,3786,3.778,3894,3.333,4502,4.266,4599,4.109,4640,2.647,4641,5.202,4642,4.613,4643,5.653,4644,4.613,4645,4.613,4646,7.3,4647,2.972,4648,6.372,4649,4.613,4650,4.109,4651,4.613,4652,3.53,4653,2.972,4654,4.613,4655,2.972,4656,4.613,4657,4.613,4658,2.972,4659,4.109,4660,2.972,4661,2.972,4662,4.613,4663,4.613,4664,4.613,4665,4.613,4666,5.653,4667,2.972,4668,2.972,4669,2.972,4670,2.972,4671,2.972,4672,2.972,4673,2.972,4674,2.972,4675,2.972,4676,2.972,4677,2.972,4678,2.972,4679,2.972,4680,2.972,4681,2.972,4682,2.972,4683,2.972,4684,2.972,4685,2.972,4686,2.972,4687,2.972,4688,2.972,4689,2.972,4690,2.972,4691,2.972,4692,2.972,4693,2.972,4694,2.972,4695,4.109,4696,2.972,4697,2.972,4698,2.972,4699,2.972,4700,2.972,4701,2.972,4702,2.972,4703,4.613,4704,2.972,4705,2.972,4706,2.972,4707,2.972,4708,2.972,4709,2.972,4710,2.972,4711,4.613,4712,2.972,4713,2.972,4714,2.972,4715,2.972,4716,2.972,4717,2.972,4718,2.972,4719,2.972]],["title/modules/TinymceModule.html",[345,1.155,4720,3.646]],["body/modules/TinymceModule.html",[3,0.378,4,0.39,10,0.295,25,2.361,26,0.007,152,0.322,154,0.626,166,1.382,167,0.309,168,0.307,198,1.336,317,2.529,342,0.005,343,0.006,344,0.005,345,1.635,347,2.822,348,2.707,349,3.703,350,2.947,351,3.623,358,3.558,359,2.763,360,2.406,362,4.768,364,2.5,4720,7.001,4721,6.367,4722,6.367,4723,6.367,4724,6.367,4725,7.147,4726,6.367,4727,7.147]],["title/components/ToggleComponent.html",[0,0.292,319,1.278]],["body/components/ToggleComponent.html",[0,0.459,1,1.045,2,1.083,3,0.218,4,0.225,5,1.446,7,1.119,8,1.081,10,0.171,12,0.475,17,1.442,18,4.327,21,1.01,24,0.928,25,1.946,26,0.007,27,2.601,28,3.76,29,3.224,30,3.76,31,3.224,32,0.928,33,2.198,34,1.883,37,1.442,39,0.438,40,0.719,42,1.482,43,4.327,45,1.493,54,0.928,58,3.867,59,4.719,62,3.569,65,1.467,68,0.616,69,1.179,70,1.075,72,1.121,89,1.12,90,1.658,95,3.709,97,4.51,98,1.999,99,4.257,100,0.865,101,1.057,102,0.613,103,3.709,113,3.709,115,4.047,121,1.116,127,1.492,129,1.027,138,2.061,152,0.225,154,0.361,155,1.665,167,0.151,168,0.177,181,4.51,193,2.331,194,2.598,198,0.772,199,1.571,200,0.854,202,1.998,203,1.119,204,1.119,205,1.01,206,1.864,207,1.01,208,1.063,209,0.96,210,1.045,211,1.063,212,2.302,213,1.045,214,1.572,215,2.033,216,1.063,217,1.416,218,2.354,219,1.063,220,1.063,221,1.119,222,1.045,223,1.598,224,1.063,225,1.119,226,1.045,227,1.119,228,1.027,229,1.01,230,1.698,231,1.864,232,1.027,233,1.045,234,1.045,235,1.027,236,1.119,237,1.063,238,2.15,239,1.063,240,1.045,241,1.063,242,1.063,243,1.063,244,1.045,245,1.119,246,1.027,247,1.063,248,1.119,249,1.045,250,1.119,251,1.045,252,1.045,253,1.179,254,1.119,255,1.045,256,1.119,257,1.027,258,1.045,259,1.119,260,1.045,261,1.119,262,0.96,263,1.119,264,1.045,265,1.626,266,1.119,267,1.027,268,1.119,269,1.045,270,1.119,271,1.01,272,1.119,273,1.045,274,1.027,275,1.045,276,0.993,277,1.119,278,1.045,279,1.119,280,1.119,281,1.045,282,1.119,283,1.045,284,1.119,285,1.01,286,1.119,287,1.027,288,1.045,289,1.119,290,1.045,291,1.081,292,1.119,293,1.027,294,1.045,295,1.92,296,1.045,297,1.063,298,0.928,299,1.063,300,1.063,301,1.045,302,1.063,303,1.063,304,1.063,305,1.119,306,1.027,307,1.045,308,1.119,309,1.045,310,1.081,311,1.045,312,1.119,313,1.045,314,1.119,315,1.063,316,1.045,317,1.045,318,1.119,319,2.088,320,1.119,321,1.045,322,1.119,323,1.045,324,0.993,325,0.976,326,1.01,327,1.119,328,1.027,329,1.119,330,1.027,331,1.119,332,1.027,333,1.119,334,1.027,335,1.119,336,1.027,337,1.1,338,1.119,339,1.027,340,1.1,341,1.119,342,0.003,343,0.004,344,0.003,377,1.756,449,3.867,486,1.714,618,4.087,900,5.428,952,5.149,1321,3.329,2429,4.51,2479,4.826,2955,4.826,3220,3.38,3414,3.38,3528,4.047,4728,3.676,4729,5.892,4730,5.892,4731,4.126,4732,4.126,4733,4.126,4734,5.892,4735,4.126,4736,4.126,4737,5.892,4738,4.126,4739,4.126]],["title/injectables/TypeConfigService.html",[660,1.494,1208,3.057]],["body/injectables/TypeConfigService.html",[3,0.148,4,0.153,5,0.926,10,0.116,12,0.322,21,1.078,26,0.007,32,1.51,34,1.574,39,0.298,40,0.537,42,1.708,45,1.597,48,1.236,51,1.944,54,0.971,68,0.818,69,1.625,70,1.006,73,1.815,84,0.756,88,1.46,89,1.318,90,0.619,98,1.281,100,0.905,101,0.924,102,0.642,121,0.98,152,0.303,154,0.245,156,0.875,166,0.852,167,0.102,168,0.12,188,1.472,207,1.642,214,1.629,217,0.756,228,2.215,229,1.943,230,1.88,232,1.773,253,1.793,265,1.042,316,1.115,342,0.002,343,0.003,344,0.002,373,2.148,377,0.911,381,0.8,387,2.407,388,1.856,398,1.154,427,3.474,441,2.023,443,2.409,445,2.805,451,4.457,452,3.922,458,0.56,479,3.181,493,2.436,512,3.024,519,2.574,529,1.154,584,3.343,618,2.269,631,1.443,638,4.314,660,1.304,665,1.837,670,1.154,671,2.812,713,1.297,761,2.409,766,2.889,785,3.883,873,3.606,875,3.606,877,3.606,881,4.674,882,4.023,907,2.573,989,2.293,999,2.772,1019,2.487,1033,2.244,1034,2.385,1036,3.18,1071,3.024,1076,1.532,1156,3.779,1165,2.409,1166,4.063,1182,2.667,1187,3.606,1208,2.667,1221,2.667,1222,2.667,1223,2.023,1230,5.87,1237,2.889,1246,2.573,1268,2.772,1269,2.023,1278,5.783,1290,2.494,1302,2.494,1321,5.406,1391,4.556,1491,5.3,1500,3.024,1611,1.837,1618,1.837,1729,2.023,1745,3.01,1775,2.023,1839,2.023,1858,4.673,1861,5.781,1862,6.862,1863,6.6,1870,6.218,1871,3.606,1935,2.772,1963,3.024,2031,3.181,2067,5.45,2094,2.487,2349,3.37,2451,3.606,2517,6.445,2540,6.218,2559,2.143,2673,3.922,2890,2.143,2912,3.922,3004,6.637,3554,2.293,3589,5.58,3591,2.409,3666,7.502,4467,5.496,4506,3.181,4740,4.403,4741,4.403,4742,6.169,4743,4.403,4744,6.169,4745,6.169,4746,2.8,4747,2.8,4748,4.403,4749,2.8,4750,4.403,4751,4.403,4752,2.8,4753,2.8,4754,2.8,4755,4.403,4756,4.403,4757,4.403,4758,2.8,4759,2.8,4760,4.403,4761,4.403,4762,4.403,4763,6.169,4764,7.716,4765,6.169,4766,7.121,4767,7.121,4768,7.121,4769,4.403,4770,4.403,4771,4.403,4772,4.403,4773,4.403,4774,4.403,4775,4.403,4776,4.403,4777,4.403,4778,6.707,4779,6.169,4780,4.403,4781,4.403,4782,4.403,4783,4.403,4784,4.403,4785,2.8,4786,2.293,4787,4.403,4788,2.8,4789,2.8,4790,2.8,4791,2.8,4792,2.8,4793,2.494,4794,2.8,4795,2.8,4796,2.8,4797,2.8,4798,2.8,4799,2.8]],["title/modules/UiModule.html",[345,1.155,357,2.851]],["body/modules/UiModule.html",[3,0.308,4,0.318,10,0.241,25,1.926,26,0.007,152,0.365,154,0.511,166,1.128,167,0.272,168,0.25,198,1.09,342,0.004,343,0.005,344,0.004,345,1.334,347,2.303,348,2.209,349,2.404,350,2.404,351,3.31,357,5.679,358,3.14,359,2.255,360,1.963,363,2.507,364,2.039,2159,6.65,2168,6.354,2169,6.354,2170,5.865,2171,6.354,2172,6.354,2174,4.776,2179,4.776,2180,4.213,2183,4.776,2184,4.776,3061,6.65,3068,5.195,3811,6.995,4373,6.995,4380,5.195,4800,5.195,4801,5.831,4802,5.195,4803,5.195,4804,5.831,4805,5.831,4806,5.195,4807,5.831]],["title/interfaces/Update.html",[368,1.369,548,2.339]],["body/interfaces/Update.html",[0,0.235,3,0.214,4,0.221,10,0.168,12,0.467,26,0.007,32,1.36,39,0.431,40,0.831,45,1.473,46,1.107,48,1.139,52,1.606,68,0.837,69,1.842,72,1.107,73,2.4,83,2.931,84,1.277,88,2.112,89,0.606,98,2.291,102,0.929,131,1.268,133,2.747,142,1.673,143,1.755,152,0.336,154,0.355,166,1.317,167,0.213,168,0.174,183,1.201,188,1.686,193,2.292,209,1.731,217,1.45,295,2.171,298,1.944,342,0.003,343,0.004,344,0.003,368,1.1,369,2.153,370,1.75,373,1.979,377,1.539,381,1.159,387,1.159,389,4.632,398,1.949,450,4.286,457,2.454,460,2.348,463,1.835,483,2.033,486,1.693,496,3.979,514,3.665,542,3.289,546,4.353,548,4.355,552,4.845,554,3.236,580,2.16,581,5.109,584,2.251,593,2.865,606,2.554,609,3.105,650,2.554,660,1.724,662,3.725,663,2.033,670,1.673,716,3.402,719,2.786,759,3.536,778,4.18,782,2.662,784,2.033,805,4.468,817,4.683,818,5.109,825,2.662,913,4.468,917,1.569,937,2.091,943,2.371,970,3.725,995,3.321,1019,2.292,1045,2.454,1055,4.768,1073,4.468,1152,1.928,1156,3.089,1178,2.458,1277,3.289,1313,2.786,1456,3.526,1645,4.768,1710,2.22,1741,1.979,1742,2.931,1743,2.931,1744,2.371,1745,1.979,1746,2.786,1747,2.786,1748,3.979,1752,3.82,1754,3.323,1756,3.526,1757,3.323,1761,2.458,1766,3.323,1767,3.323,1769,2.458,1770,3.402,1774,3.323,1775,2.931,1777,5.374,1792,3.526,1804,5.576,1805,3.323,1806,3.323,1807,3.323,1812,4.768,1814,2.931,1818,3.323,1819,3.323,1820,3.323,1821,3.323,1822,3.323,1823,6.451,1824,2.662,1825,2.786,1826,3.323,1900,4.455,2011,4.455,2014,3.105,3593,4.768,4108,2.786,4204,3.323,4217,3.323,4221,5.186,4222,5.186,4224,5.186,4226,3.614,4229,3.614,4231,3.614,4232,3.614,4233,3.614,4235,3.614,4236,3.614,4239,3.614,4240,5.186,4241,5.186,4242,5.186,4243,5.186,4244,5.186,4245,6.451,4246,3.614,4247,6.627,4248,3.614,4249,3.614,4250,3.614,4251,3.614,4252,3.614,4253,3.614,4254,3.614,4255,3.614,4256,3.614,4257,3.614,4258,3.614,4259,3.614,4260,3.614,4261,5.186,4262,6.065,4263,3.614,4264,5.186,4265,3.614,4266,3.614]],["title/interfaces/Upload.html",[324,1.214,368,1.369]],["body/interfaces/Upload.html",[0,0.196,3,0.179,4,0.185,10,0.302,12,0.39,26,0.007,32,1.256,39,0.36,40,0.622,46,1.71,48,0.951,52,2.481,68,0.766,69,1.595,70,0.429,72,1.297,84,1.529,88,1.451,89,0.762,98,0.985,102,0.905,117,1.31,121,0.446,131,1.593,133,3.218,135,3.346,142,1.397,143,2.205,152,0.331,154,0.297,166,1.587,167,0.224,168,0.145,183,1.815,188,1.714,209,1.186,214,2.172,217,1.409,230,0.678,252,0.858,253,0.678,295,1.356,298,0.762,324,2.119,342,0.002,343,0.003,344,0.002,368,1.663,369,1.798,370,1.461,372,2.942,373,1.653,374,1.914,377,1.411,381,0.968,387,1.949,398,1.917,425,2.052,426,3.583,445,1.746,450,4.605,457,2.585,458,0.678,460,2.057,463,1.532,477,4.692,483,1.698,496,1.98,499,1.61,514,2.133,520,5.93,521,2.448,531,2.98,542,3.464,548,2.841,552,3.254,558,1.232,574,2.914,579,1.428,580,1.257,581,4.685,593,2.481,606,2.133,614,3.714,615,5.876,637,2.775,638,5.635,650,2.133,658,2.327,660,1.51,669,0.802,671,2.694,716,2.98,755,2.771,783,2.223,784,2.556,802,2.775,817,3.86,825,2.223,831,3.21,892,3.962,917,1.31,937,1.746,958,2.488,963,2.841,995,1.653,1001,4.275,1019,1.914,1073,4.023,1138,4.476,1148,2.448,1152,1.61,1153,1.818,1154,4.231,1156,2.706,1161,1.914,1168,2.593,1175,1.746,1185,3.089,1208,3.089,1230,2.448,1491,2.327,1593,2.327,1710,2.79,1741,1.653,1742,2.448,1743,2.448,1744,1.98,1745,1.653,1746,2.327,1747,2.327,1748,3.583,1756,3.714,1777,2.448,1782,2.448,1787,2.775,1792,4.656,1816,4.692,1918,2.98,1943,1.98,1988,2.775,1989,5.462,1990,4.543,1991,4.543,1992,4.543,1993,4.543,1994,4.543,1995,2.223,1996,3.018,1997,3.018,1998,3.018,1999,2.775,2000,2.775,2001,3.018,2002,3.018,2003,4.543,2004,3.018,2005,4.692,2006,2.593,2007,3.018,2008,3.018,2009,4.176,2010,5.992,2011,3.902,2012,3.018,2013,3.018,2014,2.593,2015,3.018,2016,3.018,2017,5.462,2018,3.018,2019,5.462,2020,3.018,2021,3.018,2022,3.018,2023,2.593,2024,3.018,2025,3.018,2026,3.018,2027,3.018,2028,2.775,2029,3.018,2030,5.221,2031,2.448,2032,3.018,2033,4.543,2034,3.018,2035,4.543,2036,4.543,2037,3.018,2038,3.018,2039,3.018,2040,3.018,2041,4.543,2042,3.018,2043,2.775,2044,3.018,2045,2.593,2046,3.018,2047,6.848,2048,3.018,2049,3.018,2050,3.018,2051,3.018,2052,3.018,2053,5.462,2054,2.775,2055,3.018,2056,3.018,2057,4.543,2058,3.018,2059,4.543,2060,4.543,2061,4.543,2062,4.543,2063,5.462,2064,4.543,2065,4.543,2066,4.543,2067,2.593,2068,2.775,2069,3.018,2070,3.018,2071,3.018,2072,4.543,2073,3.018,2074,3.018,2075,3.018,2076,3.018,2077,3.018,2078,3.018,2079,3.018,2080,3.018,2081,3.018,2082,2.448,2083,3.018,2084,5.462,2085,3.018,2086,3.018,2087,2.448,2088,4.543,2089,3.018,2090,3.018,2091,3.018,2092,2.775,2093,3.018,2094,1.914,2095,3.018,2096,3.018,2097,3.018,2098,3.018,2099,3.018,2100,3.018,2101,3.018,2102,3.018,2103,3.018,2104,3.018,2105,3.018,2106,3.018,2107,2.448,2108,3.018,2109,3.018,2110,3.018,2111,2.593,2112,3.018,2113,3.018,2114,3.018]],["title/components/UploadComponent.html",[0,0.292,321,1.278]],["body/components/UploadComponent.html",[0,0.397,1,0.743,2,0.84,3,0.155,4,0.16,5,0.617,7,0.796,8,0.769,10,0.283,12,0.338,17,1.118,21,0.718,24,0.66,26,0.007,32,0.883,33,2.17,34,1.855,37,1.118,39,0.312,40,0.557,42,1.711,45,1.118,46,1.066,48,1.283,51,3.461,54,0.719,65,1.137,68,0.798,69,1.372,70,1.177,72,1.203,84,1.087,87,1.803,89,1.085,90,1.241,98,1.631,100,1.066,101,1.045,102,0.756,121,0.997,123,2.536,124,1.803,127,1.736,129,0.73,133,1.843,138,1.597,143,2.285,152,0.262,153,1.327,154,0.257,156,0.917,167,0.107,168,0.126,186,3.93,188,1.393,198,0.549,199,1.217,200,0.607,202,1.687,203,0.796,204,0.796,205,0.718,206,1.521,207,0.718,208,0.756,209,2.103,210,0.743,211,0.756,212,2.056,213,0.743,214,1.843,215,1.716,216,0.756,217,1.247,218,2.126,219,0.756,220,0.756,221,0.796,222,0.743,223,1.239,224,0.756,225,0.796,226,0.743,227,0.796,228,0.73,229,0.718,230,1.516,231,1.521,232,0.73,233,0.743,234,0.743,235,0.73,236,0.796,237,0.756,238,1.86,239,0.756,240,0.743,241,0.756,242,0.756,243,0.756,244,0.743,245,0.796,246,0.73,247,0.756,248,0.796,249,0.743,250,0.796,251,0.743,252,0.743,253,0.914,254,0.796,255,0.743,256,0.796,257,0.73,258,0.743,259,0.796,260,0.743,261,0.796,262,1.472,263,0.796,264,0.743,265,1.327,266,0.796,267,0.73,268,0.796,269,0.743,270,0.796,271,0.718,272,0.796,273,0.743,274,0.73,275,0.743,276,0.706,277,0.796,278,0.743,279,0.796,280,0.796,281,0.743,282,0.796,283,0.743,284,0.796,285,0.718,286,0.796,287,0.73,288,0.743,289,0.796,290,0.743,291,0.769,292,0.796,293,1.575,294,0.743,295,1.734,296,0.743,297,0.756,298,1.262,299,0.756,300,0.756,301,0.743,302,0.756,303,0.756,304,0.756,305,0.796,306,0.73,307,0.743,308,0.796,309,0.743,310,0.769,311,0.743,312,0.796,313,0.743,314,0.796,315,0.756,316,0.743,317,0.743,318,0.796,319,0.743,320,0.796,321,1.602,322,0.796,323,0.743,324,2.268,325,0.694,326,0.718,327,0.796,328,0.73,329,0.796,330,0.73,331,0.796,332,0.73,333,0.796,334,0.73,335,0.796,336,0.73,337,0.782,338,0.796,339,0.73,340,0.782,341,0.796,342,0.002,343,0.003,344,0.002,375,1.843,377,0.945,426,1.715,457,1.926,458,0.914,459,1.605,460,2.553,463,1.327,480,1.73,484,3.68,486,1.328,487,2.424,488,3.741,517,5.104,519,1.69,522,1.925,529,1.197,531,4.244,550,3.347,569,2.228,614,4.593,615,3.851,618,3.535,620,4.593,630,2.12,631,2.354,633,2.875,638,2.767,647,1.658,648,2.168,654,3.699,655,2.862,671,2.708,805,1.925,831,1.847,851,2.875,910,1.925,917,2.652,1001,2.669,1012,3.137,1017,2.976,1018,3.397,1028,2.767,1029,4.431,1032,3.168,1033,3.14,1034,2.447,1045,2.668,1065,3.828,1072,2.89,1108,2.767,1109,2.354,1110,4.051,1113,2.12,1115,1.847,1120,1.925,1138,3.68,1153,2,1154,3.908,1165,2.499,1168,3.495,1380,2.403,1446,3.3,1534,2.403,1593,2.015,1627,2.403,1770,2.669,1792,2.767,1824,4.5,1893,3.741,2009,5.183,2054,2.403,2068,3.741,2203,2.997,2498,2.614,2518,5.183,2586,3.3,2688,3.495,2786,4.069,2798,4.843,2959,3.741,3260,3.984,3480,4.069,3615,3.741,3846,3.741,4793,2.614,4808,2.614,4809,4.567,4810,5.608,4811,5.608,4812,5.608,4813,4.069,4814,4.567,4815,4.567,4816,2.934,4817,2.934,4818,2.934,4819,4.567,4820,2.934,4821,4.069,4822,2.934,4823,2.934,4824,2.934,4825,2.934,4826,4.069,4827,4.567,4828,2.934,4829,2.934,4830,4.069,4831,2.934,4832,4.567,4833,2.934,4834,4.567,4835,4.567,4836,2.934,4837,2.934,4838,2.934,4839,4.567,4840,2.934,4841,4.567,4842,2.934,4843,4.567,4844,2.934,4845,2.934,4846,4.567,4847,2.934,4848,2.934,4849,2.614,4850,2.934,4851,2.934,4852,2.934,4853,2.934,4854,2.934,4855,2.934,4856,2.934,4857,2.934,4858,2.934,4859,2.934,4860,2.934,4861,2.934,4862,5.608,4863,2.934,4864,2.934,4865,2.934,4866,2.934,4867,2.934,4868,2.934,4869,2.934,4870,2.934,4871,2.934,4872,2.934,4873,2.934,4874,2.934,4875,4.567,4876,4.567,4877,4.567,4878,4.567,4879,4.567,4880,4.567]],["title/components/UploadSelectComponent.html",[0,0.292,323,1.278]],["body/components/UploadSelectComponent.html",[0,0.422,1,0.85,2,0.931,3,0.177,4,0.183,5,0.706,7,0.91,8,0.879,10,0.139,17,1.239,21,0.821,22,2.691,24,0.755,26,0.007,33,2.182,34,1.867,37,1.239,39,0.357,40,0.618,42,1.662,45,1.107,46,1.556,49,3.837,51,3.381,54,0.797,57,3.07,65,1.26,68,0.817,69,1.219,70,1.193,84,1.251,87,1.999,89,1.088,90,1.612,100,0.996,101,1.038,102,0.707,121,1.008,124,1.325,127,1.282,129,0.835,143,2.705,152,0.312,153,1.517,154,0.294,156,1.582,167,0.123,168,0.144,186,3.403,198,0.627,199,1.35,200,0.694,202,1.81,203,0.91,204,0.91,205,0.821,206,1.653,207,0.821,208,0.864,209,0.781,210,0.85,211,0.864,212,2.156,213,0.85,214,1.667,215,1.841,216,0.864,217,1.315,218,2.22,219,0.864,220,0.864,221,0.91,222,0.85,223,1.373,224,0.864,225,0.91,226,0.85,227,0.91,228,0.835,229,0.821,230,1.59,231,1.653,232,0.835,233,0.85,234,0.85,235,0.835,236,0.91,237,0.864,238,1.976,239,0.864,240,0.85,241,0.864,242,0.864,243,0.864,244,0.85,245,0.91,246,0.835,247,0.864,248,0.91,249,0.85,250,0.91,251,0.85,252,0.85,253,1.358,254,0.91,255,0.85,256,0.91,257,0.835,258,0.85,259,0.91,260,0.85,261,0.91,262,1.58,263,0.91,264,0.85,265,1.442,266,0.91,267,0.835,268,0.91,269,0.85,270,0.91,271,0.821,272,0.91,273,0.85,274,0.835,275,0.85,276,0.808,277,0.91,278,0.85,279,0.91,280,0.91,281,0.85,282,0.91,283,0.85,284,0.91,285,0.821,286,0.91,287,0.835,288,0.85,289,0.91,290,0.85,291,0.879,292,0.91,293,0.835,294,0.85,295,1.81,296,0.85,297,0.864,298,0.755,299,0.864,300,0.864,301,0.85,302,0.864,303,0.864,304,0.864,305,0.91,306,0.835,307,0.85,308,0.91,309,0.85,310,0.879,311,0.85,312,0.91,313,0.85,314,0.91,315,0.864,316,0.85,317,0.85,318,0.91,319,0.85,320,0.91,321,1.719,322,0.91,323,1.719,324,2.223,325,0.794,326,0.821,327,0.91,328,0.835,329,0.91,330,0.835,331,0.91,332,0.835,333,0.91,334,0.835,335,0.91,336,0.835,337,0.895,338,0.91,339,0.835,340,0.895,341,0.91,342,0.002,343,0.003,344,0.002,377,1.584,387,1.742,393,1.325,398,1.597,435,2.033,458,0.671,480,1.917,519,2.046,520,2.425,521,2.425,529,1.327,550,2.691,612,2.749,613,4.51,614,5.17,615,4.187,619,3.142,620,4.993,622,2.99,627,2.99,628,2.99,629,2.99,630,2.425,917,1.958,1001,2.958,1033,3.318,1034,2.817,1036,3.562,1045,2.862,1058,2.537,1065,2.406,1076,1.836,1138,4,1153,2.174,1154,3.142,1165,4.191,1182,3.067,1216,3.658,1729,2.425,1839,2.425,1892,4.146,2005,2.568,2006,2.568,2010,4.993,2129,2.99,2130,7.74,2518,2.749,4813,4.51,4821,4.51,4826,4.51,4830,4.51,4849,2.99,4881,8.419,4882,6.096,4883,6.096,4884,6.096,4885,6.789,4886,5.062,4887,5.062,4888,6.096,4889,5.431,4890,5.062,4891,3.356,4892,3.356,4893,3.356,4894,3.356,4895,3.356,4896,3.356,4897,3.356,4898,3.356,4899,3.356,4900,5.062,4901,3.356,4902,5.062,4903,3.356,4904,3.356,4905,5.062,4906,5.062,4907,3.356,4908,5.062,4909,3.356,4910,3.356,4911,6.096,4912,3.356,4913,3.356,4914,3.356,4915,3.356,4916,3.356,4917,5.062,4918,6.789,4919,5.062,4920,5.062,4921,5.062]],["title/modules/UtilityModule.html",[345,1.155,2169,3.312]],["body/modules/UtilityModule.html",[3,0.308,4,0.318,10,0.241,25,2.712,26,0.007,151,5.162,152,0.369,154,0.511,155,2.355,166,1.129,167,0.273,168,0.251,198,1.091,273,2.452,274,1.453,278,2.452,309,2.452,310,1.53,311,2.452,313,2.452,334,2.411,342,0.004,343,0.005,344,0.004,345,1.336,347,2.305,348,2.211,349,3.385,350,2.407,351,3.312,358,3.142,359,2.257,360,1.965,362,3.298,363,2.508,364,2.042,661,3.194,696,3.542,697,2.64,699,5.931,700,5.638,1213,7.313,1225,5.384,2167,6.378,2169,6.567,2176,5.2,3291,4.468,4408,4.781,4592,5.2,4618,5.2,4922,5.2,4923,5.2,4924,5.837,4925,5.2,4926,5.2,4927,5.2,4928,5.837,4929,5.837,4930,5.837,4931,5.2,4932,5.837]],["title/pipes/VisibleFieldsPipe.html",[1273,2.678,2166,3.646]],["body/pipes/VisibleFieldsPipe.html",[3,0.352,4,0.363,10,0.275,12,0.767,17,1.631,24,1.499,26,0.007,40,0.813,46,1.267,48,1.871,50,4.929,54,1.049,68,0.725,70,1.025,89,0.995,100,0.978,101,1.043,102,0.694,131,3.079,152,0.332,154,0.584,167,0.244,168,0.286,188,1.184,342,0.004,343,0.005,344,0.004,360,2.724,381,1.904,390,3.591,393,2.631,398,2.12,529,2.12,755,3.517,1178,4.902,1246,4.729,1273,4.295,1274,4.814,1277,5.121,1279,4.373,1285,5.847,1485,5.458,2166,6.549,4933,7.764,4934,5.936,4935,8.092,4936,8.092,4937,8.092,4938,8.092,4939,6.663,4940,8.092,4941,6.663,4942,6.663,4943,6.663,4944,6.663]],["title/interfaces/WithLoader.html",[368,1.369,1017,2.678]],["body/interfaces/WithLoader.html",[0,0.494,3,0.384,4,0.397,10,0.301,12,0.837,26,0.007,39,0.773,40,1.04,68,0.652,72,1.621,152,0.277,167,0.266,262,2.171,342,0.005,343,0.006,344,0.005,368,2.453,370,3.137,506,4.525,550,4.323,761,4.665,1017,4.525,3099,6.984,3143,5.957,4945,6.48,4946,6.48,4947,8.527,4948,8.527]],["title/interfaces/WithNotifications.html",[368,1.369,1018,3.057]],["body/interfaces/WithNotifications.html",[0,0.482,3,0.369,4,0.38,10,0.288,12,0.803,26,0.007,32,1.31,39,0.742,40,1.015,68,0.745,72,1.582,73,3.431,102,0.958,152,0.266,167,0.255,342,0.005,343,0.005,344,0.005,368,2.411,370,3.01,377,1.839,654,4.743,761,4.552,1018,5.04,1072,4.971,1073,5.46,1553,7.539,1864,5.04,2353,8.201,2375,7.412,2591,5.46,2644,4.862,3911,8.201,4949,6.217,4950,6.217]],["title/changelog.html",[4951,3.086,4952,2.933,4953,1.761]],["body/changelog.html",[15,3.314,26,0.006,98,2.235,156,2.401,342,0.005,343,0.006,344,0.005,381,2.196,1270,4.341,1745,3.748,3788,4.204,4953,3.168,4954,2.971,4955,4.654,4956,4.837,4957,5.042,4958,5.042,4959,4.837,4960,5.042]],["title/coverage.html",[4961,6.035]],["body/coverage.html",[0,0.574,1,0.695,10,0.113,11,3.86,14,1.662,21,0.671,26,0.007,48,0.77,50,1.456,52,0.757,63,1.375,68,0.246,84,0.471,129,0.683,131,0.857,151,1.55,168,0.37,200,1.529,205,0.671,207,0.671,208,0.707,210,0.695,213,0.695,216,0.707,217,1.354,219,0.707,220,0.707,222,0.695,224,0.707,226,0.695,228,0.683,229,0.671,230,1.074,232,0.683,233,0.695,234,0.695,237,0.707,239,0.707,240,0.695,241,0.707,242,0.707,243,0.707,244,0.695,246,0.683,247,0.707,249,0.695,251,0.695,253,0.867,255,0.695,257,0.683,258,0.695,260,0.695,262,0.638,264,0.695,267,0.683,269,0.695,271,0.671,273,0.695,275,0.695,278,0.695,281,0.695,283,0.695,285,0.671,287,0.683,288,0.695,290,0.695,293,0.683,294,0.695,296,0.695,297,0.707,298,0.975,299,0.707,300,0.707,301,0.695,302,0.707,303,0.707,304,0.707,306,0.683,307,0.695,309,0.695,311,0.695,313,0.695,315,0.707,317,0.695,319,0.695,321,0.695,323,0.695,324,0.66,326,0.671,328,0.683,330,0.683,332,0.683,334,0.683,336,0.683,339,0.683,342,0.002,343,0.003,344,0.002,361,2.444,366,2.444,368,2.47,369,1.456,371,4.11,380,1.304,383,2.1,387,1.238,389,1.55,427,2.976,440,5.835,441,1.982,442,3.88,446,5.864,460,1.107,471,2.444,538,2.444,539,2.247,540,4.784,542,1.55,548,1.271,581,1.884,600,1.982,601,1.727,606,2.728,610,2.444,611,2.247,612,6.054,614,1.662,639,2.1,640,2.1,642,2.444,643,2.444,655,1.241,660,2.664,690,2.1,691,1.603,692,2.247,707,2.247,714,2.444,783,1.8,858,1.982,859,2.444,872,2.444,887,1.8,889,2.444,958,4.735,963,1.271,987,2.444,1010,2.444,1017,1.456,1018,1.662,1029,1.603,1030,1.727,1031,1.55,1033,0.998,1034,1.061,1036,1.603,1072,1.414,1077,3.549,1079,3.316,1081,3.524,1122,2.444,1123,4.653,1138,1.8,1166,1.662,1206,1.884,1207,1.982,1208,1.662,1209,2.444,1222,2.625,1224,2.247,1226,3.86,1230,1.982,1234,2.444,1236,2.444,1273,3.525,1275,2.444,1276,1.884,1298,2.247,1299,3.86,1316,2.247,1430,2.444,1467,3.549,1472,3.549,1473,2.1,1491,6.737,1495,2.1,1501,2.444,1543,3.549,1544,2.247,1545,2.444,1559,1.982,1560,2.444,1581,2.444,1643,2.444,1666,5.657,1669,1.603,1740,2.444,1748,1.603,1758,1.603,1837,2.444,1857,2.444,1858,1.8,1986,3.86,1988,4.398,2124,2.444,2125,2.444,2130,2.247,2131,2.247,2132,2.444,2133,2.444,2135,2.444,2149,2.1,2150,2.444,2165,1.982,2166,1.982,2173,2.444,2185,2.444,2190,2.444,2259,1.8,2260,3.86,2261,1.8,2324,2.444,2329,2.444,2384,2.444,2394,1.884,2404,2.444,2428,2.444,2432,2.444,2435,2.444,2477,2.444,2551,2.444,2640,2.444,2641,2.247,2642,2.444,2644,1.603,2671,2.444,2689,2.1,2690,3.549,2753,2.444,2758,2.444,2768,1.662,2769,1.982,2862,2.444,2889,4.11,2890,4.669,2933,2.247,2934,2.444,3031,2.247,3032,2.444,3067,2.444,3074,2.444,3076,2.444,3145,2.444,3151,4.11,3152,2.444,3187,3.86,3189,2.444,3197,2.444,3205,2.444,3242,2.444,3257,2.444,3290,2.444,3291,2.1,3292,4.996,3351,2.247,3358,2.247,3372,2.444,3373,2.444,3379,4.996,3380,3.549,3381,2.444,3424,2.444,3426,2.444,3428,2.444,3526,2.444,3589,4.562,3724,2.247,3725,2.444,3726,2.444,3750,2.444,3820,3.86,3846,2.247,3865,2.444,3876,2.444,3948,2.444,3992,2.444,4004,2.444,4005,2.444,4040,2.444,4086,2.444,4088,2.444,4090,2.444,4107,2.247,4108,5.977,4109,3.549,4110,4.784,4111,2.444,4163,2.247,4164,2.444,4188,4.11,4212,3.86,4214,2.444,4216,2.444,4217,3.549,4267,2.247,4268,2.444,4269,2.444,4281,2.444,4379,2.444,4382,2.444,4384,2.444,4407,2.444,4408,2.247,4438,2.444,4439,2.444,4445,2.247,4446,5.44,4451,2.247,4452,2.247,4453,2.247,4463,2.444,4491,2.444,4499,3.13,4503,1.982,4518,1.982,4521,3.86,4529,2.444,4575,2.444,4595,2.444,4606,8.669,4640,2.444,4695,2.444,4724,2.444,4726,2.444,4728,2.444,4803,2.444,4806,2.444,4808,2.444,4881,2.444,4927,2.444,4931,2.444,4933,2.444,4934,2.444,4945,2.444,4946,2.444,4949,2.444,4950,2.444,4961,2.444,4962,2.247,4963,2.743,4964,4.333,4965,2.743,4966,9.199,4967,9.549,4968,4.333,4969,6.826,4970,2.743,4971,4.333,4972,2.743,4973,2.743,4974,2.743,4975,4.333,4976,2.743,4977,5.434,4978,2.743,4979,2.743,4980,2.743,4981,4.333,4982,2.743,4983,6.642,4984,2.743,4985,2.743,4986,4.333,4987,2.743,4988,6.642,4989,2.743,4990,2.743,4991,2.743,4992,5.37,4993,2.743,4994,6.1,4995,2.743,4996,2.743,4997,2.743,4998,5.37,4999,2.743,5000,2.743,5001,2.743,5002,2.743,5003,2.743,5004,4.333,5005,5.37,5006,2.743,5007,2.743,5008,2.743,5009,2.743,5010,2.743,5011,2.743,5012,4.333,5013,2.743,5014,5.37,5015,5.37,5016,4.333,5017,2.743,5018,2.743,5019,2.743,5020,2.743,5021,5.37,5022,2.743,5023,5.37,5024,2.743,5025,4.333,5026,2.743,5027,2.743,5028,6.642,5029,2.743,5030,2.743,5031,2.743,5032,2.743,5033,2.743,5034,4.333,5035,4.333,5036,2.743,5037,4.333,5038,2.743,5039,2.743,5040,6.1,5041,2.743,5042,5.37,5043,4.333,5044,2.743,5045,2.743,5046,5.37,5047,2.743,5048,4.333,5049,4.333,5050,2.743,5051,5.37,5052,5.37,5053,4.333,5054,4.333,5055,5.37,5056,2.743,5057,2.743,5058,2.743,5059,2.743,5060,2.743,5061,2.743,5062,2.743,5063,2.743,5064,2.743,5065,2.743,5066,6.642,5067,2.743,5068,2.743,5069,4.333,5070,2.743,5071,2.743,5072,4.333,5073,2.743,5074,2.743,5075,2.743,5076,2.743,5077,2.743,5078,2.743,5079,2.743,5080,2.743,5081,2.743,5082,2.743,5083,4.333,5084,2.743,5085,2.743,5086,2.743,5087,4.333,5088,4.333,5089,4.333,5090,4.333,5091,2.743,5092,2.743,5093,4.333,5094,6.642,5095,2.743,5096,4.333,5097,2.743,5098,2.743,5099,2.743,5100,4.333,5101,2.743,5102,2.743,5103,2.743,5104,2.743,5105,2.743,5106,2.743,5107,2.743,5108,2.743,5109,2.743,5110,4.333,5111,2.743,5112,2.743,5113,4.333,5114,2.743,5115,4.333,5116,4.333,5117,2.743,5118,2.743,5119,2.743,5120,2.743,5121,2.743,5122,4.333,5123,2.743,5124,2.743,5125,2.743,5126,2.743,5127,4.333,5128,2.743,5129,2.743,5130,2.743,5131,2.743,5132,2.743,5133,2.743,5134,2.743,5135,2.743,5136,2.743,5137,2.743,5138,2.743,5139,2.743,5140,2.743,5141,2.743,5142,2.743,5143,2.743,5144,2.743,5145,2.743,5146,2.743,5147,2.743,5148,2.743,5149,4.333,5150,2.743]],["title/dependencies.html",[348,2.287,4954,1.651]],["body/dependencies.html",[14,4.098,15,3.523,26,0.007,154,0.593,155,2.729,156,2.114,235,1.684,276,1.628,342,0.004,343,0.005,344,0.004,348,2.562,381,1.933,554,3.215,661,3.702,663,3.391,697,3.059,702,6.25,703,6.027,717,4.44,1215,5.178,1216,4.888,1268,4.259,1269,4.888,1270,3.822,2122,5.9,2123,5.359,2289,5.541,3252,6.027,3529,4.888,4641,4.259,4955,4.098,4956,4.259,4957,4.44,4958,4.44,4959,4.259,4960,4.44,5151,8.167,5152,6.765,5153,6.027,5154,9.669,5155,6.027,5156,6.765,5157,5.178,5158,6.765,5159,6.765,5160,6.765,5161,6.027,5162,6.765,5163,5.541,5164,6.765,5165,6.765,5166,6.765,5167,6.765,5168,6.765,5169,6.765,5170,6.765,5171,6.765,5172,6.765,5173,6.765]],["title/miscellaneous/functions.html",[5174,3.269,5175,5.38]],["body/miscellaneous/functions.html",[26,0.006,39,0.776,89,1.091,100,1.33,101,1.085,102,0.943,342,0.005,343,0.006,344,0.005,472,4.126,690,6.935,692,5.982,698,5.277,701,6.507,828,6.966,905,5.982,1825,5.016,4446,5.982,4451,7,4452,7,4453,7,4460,6.935,4468,6.507,4469,6.507,4471,6.507,4472,6.507,4473,6.507,5174,5.59,5175,6.507,5176,7.304,5177,9.061]],["title/index.html",[39,0.454,4951,3.086,4952,2.933]],["body/index.html",[0,0.463,2,1.655,3,0.291,4,0.301,6,3.018,13,4.947,14,3.342,15,3.651,16,4.172,26,0.006,72,1.366,73,2.275,78,3.704,79,3.704,84,1.507,98,1.605,101,0.66,102,0.574,121,0.726,156,1.724,253,1.103,276,1.328,342,0.004,343,0.005,344,0.004,348,2.089,360,1.857,372,3.651,381,1.577,386,3.473,455,3.986,470,2.513,486,2.462,500,3.249,517,3.224,548,2.557,554,4.024,558,2.007,567,2.928,569,2.691,632,2.047,633,4.523,651,3.415,659,4.07,665,3.62,717,3.62,730,4.199,761,3.018,815,3.342,851,4.523,860,3.473,882,3.117,888,2.226,964,3.62,1040,4.783,1066,2.622,1152,2.622,1184,3.62,1268,3.473,1270,3.117,1301,2.691,1334,6.933,1404,4.518,1796,4.518,1935,3.473,1972,3.789,2192,2.928,2261,3.62,2654,5.03,2738,4.222,2808,5.191,3529,3.986,3594,4.518,3739,3.789,3756,4.518,3758,3.789,4131,4.518,4275,5.499,4389,5.499,4460,4.222,4461,6.933,4502,4.67,4641,3.473,4951,3.986,4952,3.789,4954,3.273,4955,3.342,4956,3.473,4957,3.62,4958,3.62,4959,3.473,4960,3.62,4962,5.885,5157,4.222,5163,6.545,5178,4.005,5179,4.915,5180,6.401,5181,4.915,5182,6.401,5183,5.555,5184,4.915,5185,4.915,5186,4.915,5187,6.401,5188,4.915,5189,4.915,5190,4.518,5191,4.222,5192,4.915,5193,4.915,5194,6.479,5195,6.401,5196,4.915,5197,4.915,5198,4.915,5199,4.915,5200,5.885,5201,4.915,5202,7.119,5203,4.915,5204,4.364,5205,3.789,5206,6.933,5207,4.915,5208,4.915,5209,6.266,5210,3.117,5211,4.493,5212,4.915,5213,4.518,5214,4.518,5215,4.915,5216,3.117,5217,4.222,5218,4.915,5219,6.401,5220,4.915,5221,3.117,5222,3.117,5223,4.915,5224,4.915,5225,6.116,5226,2.928,5227,4.518,5228,4.915,5229,5.885,5230,6.295,5231,3.986,5232,4.915,5233,4.915,5234,4.915,5235,6.029,5236,4.915,5237,4.915,5238,4.518,5239,4.518,5240,4.518,5241,6.401,5242,3.117,5243,6.401,5244,4.915,5245,4.915,5246,4.915,5247,7.119,5248,4.222,5249,4.915,5250,4.915]],["title/modules.html",[347,2.675]],["body/modules.html",[26,0.005,342,0.004,343,0.005,344,0.004,346,4.906,347,2.682,357,3.837,684,4.906,854,4.457,1197,4.664,1203,4.906,1204,4.664,1205,4.457,2123,6.598,2159,4.664,2167,4.664,2168,4.457,2169,4.457,2170,4.114,2171,4.457,2172,4.457,3061,4.664,3181,4.906,3419,4.906,3577,7.264,3811,4.906,4373,4.906,4720,4.906,4889,8.956,5251,10.053]],["title/overview.html",[5252,3.827]],["body/overview.html",[1,2.099,2,0.43,21,1.182,25,0.773,26,0.007,27,3.301,28,4.091,29,4.091,30,4.091,31,4.595,32,1.322,50,2.563,129,1.726,151,2.728,183,0.693,198,0.438,205,1.697,207,1.182,208,1.786,210,1.756,213,1.756,216,1.786,219,1.786,220,1.786,222,1.756,224,1.786,226,1.756,228,1.202,229,1.182,232,1.202,233,1.756,234,1.756,237,1.786,239,1.786,240,1.756,241,1.786,242,1.786,243,1.786,244,1.756,246,1.726,247,1.786,249,1.756,251,1.756,255,1.756,257,1.726,258,1.756,260,1.756,262,1.613,264,1.756,267,1.726,269,1.756,271,1.697,273,1.756,275,2.099,278,1.756,281,1.756,283,1.756,285,1.697,287,1.726,288,1.756,290,1.756,293,1.726,294,1.756,296,1.756,297,1.786,299,1.786,300,1.786,301,1.756,302,1.786,303,1.786,304,1.786,306,2.063,307,1.756,309,1.756,311,1.756,313,1.756,315,1.786,317,1.756,319,1.756,321,1.756,323,1.756,325,0.554,326,1.697,328,1.726,330,1.726,332,1.726,334,1.726,336,1.726,339,1.726,342,0.002,343,0.003,344,0.002,345,0.536,346,5.01,347,0.925,348,0.887,349,0.965,350,0.965,351,0.945,352,2.086,353,2.086,354,2.086,355,2.086,356,2.086,357,5.374,358,1.609,359,0.905,360,0.788,370,1.01,460,1.948,542,2.728,601,3.04,614,2.925,639,1.792,655,2.184,684,6.446,685,2.086,686,2.086,687,2.086,688,2.086,689,2.086,690,3.696,691,2.822,713,1.085,854,5.686,855,2.086,856,2.086,857,2.086,858,5.01,888,0.945,927,1.474,1029,2.822,1031,2.728,1034,1.867,1197,6.683,1198,2.086,1199,2.086,1200,2.086,1201,2.086,1202,2.086,1203,6.959,1204,6.578,1205,5.511,1206,3.317,1207,3.489,1208,2.925,1274,1.692,1276,4.762,1669,2.822,1748,2.822,1963,1.608,2115,2.086,2116,2.086,2118,2.086,2119,2.086,2159,6.607,2160,2.086,2161,2.086,2162,2.086,2163,2.086,2164,2.086,2165,5.01,2166,5.01,2167,6.257,2168,5.818,2169,6.129,2170,5.146,2171,5.439,2172,5.439,2259,3.169,2394,3.317,2422,2.086,2423,2.086,2424,2.086,2425,2.086,2663,2.086,2664,2.086,2665,2.086,3061,6.508,3062,2.086,3063,2.086,3065,2.086,3066,2.086,3138,2.086,3139,2.086,3140,2.086,3141,2.086,3181,6.067,3182,2.086,3183,2.086,3185,2.086,3186,2.086,3419,4.43,3420,2.086,3421,2.086,3422,2.086,3423,2.086,3811,6.313,3812,2.086,3813,2.086,3815,2.086,3816,2.086,4081,2.086,4082,2.086,4084,2.086,4085,2.086,4206,2.086,4207,2.086,4209,2.086,4210,2.086,4277,2.086,4278,2.086,4373,6.26,4374,2.086,4375,2.086,4376,2.086,4378,2.086,4495,2.086,4496,2.086,4497,2.086,4498,2.086,4499,5.01,4720,4.43,4721,2.086,4722,2.086,4723,2.086,4800,2.086,4802,2.086,4922,2.086,4923,2.086,4925,2.086,4926,2.086,4977,2.086,5252,1.323,5253,2.23,5254,2.341,5255,1.918]],["title/miscellaneous/typealiases.html",[5174,3.269,5256,6.038]],["body/miscellaneous/typealiases.html",[26,0.006,39,0.824,68,0.694,342,0.005,343,0.006,344,0.005,371,5.932,376,6.77,427,3.781,5174,5.932,5257,7.75,5258,7.75]],["title/additional-documentation/angular-7-upgrade-guide.html",[16,1.389,669,0.692,927,1.84,3312,0.966,5191,2.237,5259,2.923]],["body/additional-documentation/angular-7-upgrade-guide.html",[2,1.057,3,0.304,10,0.238,16,4.65,26,0.006,42,1.075,72,1.403,78,3.804,79,2.963,84,0.987,98,2.146,152,0.347,166,1.112,183,1.702,342,0.004,343,0.005,344,0.004,345,1.865,363,1.935,374,4.169,385,3.483,387,1.643,486,2.501,504,3.773,517,3.36,548,3.777,580,2.134,584,2.223,593,3.128,632,2.134,647,4.858,648,3.519,665,3.773,730,4.313,763,3.483,815,3.483,881,3.483,907,3.36,927,5.413,937,4.432,1116,4.646,1153,2.907,1154,2.963,1193,5.348,1224,4.709,1237,3.773,1270,3.248,1273,3.051,1337,4.709,1426,5.122,1752,3.773,1792,4.47,1888,4.843,1943,4.763,1970,4.709,2192,3.051,2242,5.122,2418,5.598,2438,4.4,2542,4.154,2543,3.248,2569,5.122,2644,3.36,3103,3.619,3343,4.4,3419,4.154,3541,3.773,3777,4.4,4289,5.122,4951,4.154,4954,2.223,4955,3.483,4959,3.619,5183,3.773,5191,6.238,5209,3.773,5211,3.051,5217,6.238,5227,4.709,5229,6.044,5231,4.154,5235,5.068,5238,4.709,5248,4.4,5260,5.749,5261,7.379,5262,5.749,5263,5.749,5264,5.749,5265,5.749,5266,5.749,5267,5.749,5268,5.749,5269,5.749,5270,5.749,5271,5.749,5272,4.709,5273,5.749,5274,7.379,5275,5.749,5276,5.749,5277,5.749,5278,5.122,5279,5.749,5280,5.122,5281,5.749,5282,5.749,5283,5.749,5284,5.749,5285,5.749,5286,5.749,5287,5.122,5288,5.749,5289,5.749,5290,5.122,5291,5.749,5292,7.379,5293,8.599,5294,7.379,5295,7.379,5296,6.574,5297,5.749,5298,5.749,5299,5.749,5300,5.749,5301,5.749,5302,8.15,5303,5.749,5304,5.749,5305,8.15,5306,8.15,5307,7.379,5308,5.749,5309,5.749,5310,5.749,5311,4.709,5312,5.749,5313,8.15,5314,5.749,5315,7.379,5316,5.749,5317,5.749,5318,5.749,5319,5.749,5320,5.749,5321,5.749,5322,5.749,5323,5.749,5324,5.749,5325,5.749,5326,5.122,5327,5.749]],["title/additional-documentation/project-setup-tutorial.html",[669,0.773,3312,1.079,4502,1.909,5178,1.637,5328,2.36]],["body/additional-documentation/project-setup-tutorial.html",[0,0.403,2,0.964,3,0.277,6,4.265,16,2.493,25,1.732,26,0.007,32,1.095,34,1.615,72,1.322,73,2.163,77,4.296,79,2.703,84,1.483,99,3.789,101,0.628,116,2.703,117,2.028,121,0.69,152,0.355,154,0.459,155,2.116,166,1.344,167,0.285,168,0.225,183,1.553,235,1.306,342,0.003,343,0.005,344,0.003,347,2.071,349,2.163,350,2.163,363,2.34,364,1.834,372,2.998,398,1.374,455,5.022,486,2.022,500,2.372,517,3.065,529,1.374,554,2.493,567,3.689,579,2.93,632,3.487,654,2.559,659,2.372,661,2.87,694,2.963,697,2.372,719,6.586,722,5.32,724,4.296,725,6.353,728,5.632,729,5.693,730,4.556,850,6.945,851,4.908,907,3.065,908,2.629,926,4.014,927,3.302,964,3.442,1033,1.908,1040,3.927,1066,2.493,1072,2.703,1112,3.602,1116,3.302,1152,3.304,1154,2.703,1165,2.87,1197,5.701,1210,4.672,1247,5.022,1325,2.87,1391,2.559,1674,2.493,1741,2.559,1752,3.442,1790,5.693,1908,3.442,1944,3.442,1971,4.672,2045,4.014,2121,4.014,2122,5.022,2123,4.561,2192,3.689,2280,4.296,2350,4.296,2418,4.376,2543,2.963,2649,3.789,2654,3.302,2738,4.014,2809,4.672,2817,4.296,2954,4.014,3089,3.789,3101,4.014,3103,4.376,3430,5.693,3528,4.774,3541,3.442,3613,4.672,3622,3.442,3632,4.014,3707,5.693,3758,3.602,4024,4.672,4276,4.296,4502,3.065,4505,5.693,4954,2.688,4955,4.722,4956,3.302,5153,4.672,5155,6.192,5178,4.608,5183,3.442,5190,4.296,5194,5.32,5204,2.703,5206,6.798,5209,5.116,5210,4.689,5211,3.689,5213,4.296,5217,5.32,5225,5.32,5226,2.783,5230,5.701,5231,3.789,5235,3.602,5239,6.385,5240,6.385,5248,4.014,5272,4.296,5280,4.672,5296,4.672,5328,5.632,5329,5.245,5330,5.245,5331,4.672,5332,5.245,5333,6.95,5334,6.95,5335,9.471,5336,5.245,5337,5.245,5338,5.245,5339,5.245,5340,5.245,5341,5.245,5342,4.672,5343,5.245,5344,5.245,5345,5.245,5346,5.245,5347,5.245,5348,5.245,5349,5.245,5350,5.245,5351,5.245,5352,5.245,5353,6.192,5354,5.245,5355,6.95,5356,5.245,5357,5.245,5358,5.245,5359,5.245,5360,5.245,5361,5.245,5362,5.245,5363,4.062,5364,5.245,5365,6.95,5366,5.245,5367,4.014,5368,5.245,5369,5.245,5370,5.245,5371,5.245,5372,5.245,5373,5.245,5374,5.245,5375,5.245,5376,5.245]],["title/additional-documentation/project-setup-tutorial/routes.html",[644,2.933,669,1.011,3312,1.411]],["body/additional-documentation/project-setup-tutorial/routes.html",[0,0.539,2,1.321,5,1.512,26,0.007,84,1.454,152,0.274,166,1.39,183,2.127,342,0.005,343,0.006,344,0.005,374,4.783,499,3.415,543,5.452,580,3.142,632,2.667,644,6.383,907,4.199,908,3.601,1019,4.059,2418,4.523,2543,4.059,2591,4.715,2654,5.666,2985,5.885,3622,4.715,5205,4.935,5209,4.715,5230,4.935,5328,5.191,5377,7.185,5378,7.185,5379,7.185,5380,5.885,5381,7.185,5382,7.185,5383,7.185,5384,7.185,5385,7.542,5386,7.185,5387,7.185,5388,6.401,5389,7.185]],["title/additional-documentation/project-setup-tutorial/authorization.html",[669,1.011,3312,1.411,5367,3.269]],["body/additional-documentation/project-setup-tutorial/authorization.html",[0,0.424,5,1.799,26,0.006,78,3.77,79,3.77,84,1.256,183,2.165,271,1.79,274,2.257,342,0.005,343,0.006,344,0.005,393,2.888,486,2.127,499,3.476,529,1.916,543,5.492,580,3.175,632,3.175,644,5.023,652,7.006,907,4.274,908,3.666,1022,5.182,1152,3.476,1674,3.476,2192,3.882,3263,5.99,4502,4.274,5178,3.666,5204,3.77,5328,6.55,5367,6.547,5380,5.99,5390,5.99,5391,6.516,5392,6.516,5393,6.516,5394,6.516]],["title/additional-documentation/project-setup-tutorial/localization.html",[669,1.011,3312,1.411,4501,3.269]],["body/additional-documentation/project-setup-tutorial/localization.html",[0,0.488,4,0.389,5,1.499,26,0.006,37,1.745,121,0.938,152,0.272,167,0.261,168,0.306,342,0.005,343,0.006,344,0.005,385,4.318,389,4.027,444,4.487,486,2.073,500,3.223,509,4.678,651,3.388,670,2.939,755,2.7,881,4.318,916,4.895,1033,3.065,1034,3.258,1152,3.388,1273,3.783,1995,4.678,2107,5.15,2192,3.783,2388,5.15,2418,4.487,2562,4.678,3103,4.487,3122,5.838,3769,5.455,3957,5.838,4501,6.865,4502,4.165,4503,6.481,4504,5.838,4505,5.838,4506,6.928,4507,6.35,4508,6.35,4509,6.35,4510,6.35,4511,6.35,4512,6.35,4513,6.35,4514,6.35,4515,6.35,4516,6.35,4517,6.901,4518,5.15]],["title/additional-documentation/project-setup-tutorial/custom-fields-config.html",[387,0.934,390,1.263,669,0.773,1153,1.165,3312,1.079]],["body/additional-documentation/project-setup-tutorial/custom-fields-config.html",[0,0.353,26,0.007,32,0.96,34,1.14,40,0.935,45,1.595,48,2.542,51,3.879,52,1.683,68,0.546,72,1.16,73,2.515,84,1.047,101,1.003,117,2.358,121,1.008,131,2.829,167,0.223,168,0.262,188,1.642,217,1.316,230,1.22,342,0.004,343,0.005,344,0.004,380,2.898,387,2.394,388,3.817,390,2.358,398,1.598,426,3.564,427,2.975,493,2.408,519,1.838,529,2.007,558,2.787,564,3.143,634,6.052,670,2.515,694,4.328,778,4.066,904,3.839,962,4.823,989,6.275,999,3.839,1019,3.445,1030,3.839,1031,4.328,1066,3.641,1071,4.188,1109,3.143,1153,2.175,1161,4.732,1172,4.667,1175,3.143,1182,3.694,1268,3.839,1279,4.002,1311,4.406,1316,4.995,1338,3.143,1391,2.975,1674,2.898,1758,3.564,1770,3.564,1869,4.823,1871,4.995,1894,3.839,1908,5.497,1963,4.188,1966,4.406,2332,5.433,2591,4.002,2653,4.406,2877,5.433,2883,4.995,3453,6.275,3591,3.337,3622,4.002,3654,5.433,3777,4.667,4492,5.433,5209,4.002,5385,5.433,5395,6.098,5396,6.098,5397,6.098,5398,4.995,5399,6.098,5400,6.098,5401,6.098,5402,6.098,5403,6.098,5404,6.098,5405,5.433,5406,5.433,5407,6.098,5408,6.098,5409,7.661,5410,6.098,5411,6.098,5412,6.098,5413,6.098]],["title/additional-documentation/project-setup-tutorial/custom-entry-list.html",[217,0.561,230,0.653,669,0.773,1153,1.165,3312,1.079]],["body/additional-documentation/project-setup-tutorial/custom-entry-list.html",[0,0.464,2,0.881,5,1.008,20,1.892,26,0.007,33,1.042,34,1.223,40,1.022,42,0.896,45,1.366,48,2.247,51,3.532,52,2.385,54,1.173,68,0.667,70,0.607,72,1.416,88,1.134,98,2.166,117,2.529,121,1.137,131,1.497,167,0.175,168,0.206,183,1.419,188,1.6,217,1.438,230,1.49,287,1.628,342,0.004,343,0.004,344,0.003,360,1.613,372,2.067,380,2.277,387,2.665,388,2.02,390,3.421,398,1.255,445,2.47,446,5.006,449,3.144,476,3.579,481,2.8,486,2.327,499,2.277,500,2.167,519,2.667,529,1.951,546,4.124,550,2.115,558,2.379,574,2.277,579,2.758,580,1.778,584,3.238,585,3.924,607,2.8,619,3.371,634,4.725,647,2.707,648,1.853,650,3.016,651,3.803,654,2.337,659,2.167,694,2.707,759,2.067,778,3.952,892,2.47,910,3.144,927,4.117,958,2.337,962,3.016,997,4.269,1027,4.117,1031,2.707,1048,2.47,1065,3.109,1066,3.109,1071,4.492,1151,3.667,1153,3.295,1156,2.543,1161,2.707,1173,3.924,1177,4.269,1178,2.902,1185,3.962,1188,4.292,1193,3.144,1277,3.695,1279,5.251,1311,5.38,1320,6.099,1325,2.622,1338,3.371,1391,4.456,1614,3.291,1674,3.539,1686,2.8,1703,3.667,1745,2.337,1758,2.8,1814,3.462,1861,5.037,1862,5.006,1867,4.492,1887,5.699,1888,4.292,1889,3.462,1894,4.117,1908,3.144,1935,3.016,1943,4.894,1944,4.292,1946,3.924,1950,4.269,1952,3.144,1966,3.462,2023,3.667,2107,3.462,2349,5.006,2418,3.016,2521,3.924,2543,3.695,2588,6.051,2591,3.144,2653,3.462,2654,3.016,2768,2.902,2875,3.924,2883,5.357,2983,3.924,3111,3.144,3161,4.269,3530,5.699,3577,3.462,3591,2.622,3595,3.667,3622,3.144,3758,3.291,3881,4.269,3895,4.269,3998,5.357,4000,4.074,4571,4.269,4652,3.667,5353,4.269,5388,7.128,5398,7.08,5405,7.701,5414,4.791,5415,4.791,5416,4.791,5417,4.791,5418,6.54,5419,4.791,5420,4.791,5421,4.269,5422,4.791,5423,4.791,5424,4.791,5425,4.791,5426,6.54,5427,9.006,5428,6.54,5429,4.791,5430,4.791,5431,4.791,5432,4.791,5433,4.791,5434,4.791,5435,4.791,5436,7.447,5437,4.269,5438,4.791,5439,4.791,5440,4.791,5441,4.791,5442,5.006,5443,6.54,5444,4.791,5445,4.791,5446,4.791,5447,4.791,5448,4.791,5449,4.791,5450,4.791,5451,4.791,5452,4.791,5453,4.791,5454,4.791,5455,4.791,5456,4.791]],["title/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[230,0.653,669,0.773,1153,1.165,1894,2.057,3312,1.079]],["body/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[0,0.535,2,1.082,5,1.667,16,1.958,17,1.008,18,4.988,20,2.324,22,1.819,25,1.361,26,0.007,27,2.599,28,3.22,29,2.254,30,3.22,31,2.254,32,0.649,33,1.494,34,1.751,35,3.863,37,1.681,40,0.718,41,2.328,42,1.798,43,4.323,45,1.414,47,2.065,48,2.436,52,1.137,59,2.594,62,3.565,65,1.465,66,3.153,68,0.615,72,0.783,73,1.699,75,3.153,78,3.54,79,4.084,84,1.011,86,2.83,88,0.975,95,2.594,98,1.712,101,0.493,103,2.594,113,2.594,116,2.124,117,2.276,121,0.985,129,2.159,131,2.908,138,1.441,139,3.325,152,0.331,154,0.601,155,2.374,156,2.146,164,4.821,165,3.153,167,0.251,168,0.295,181,3.863,183,1.22,193,2.328,194,3.705,230,1.585,235,1.465,316,1.043,342,0.003,343,0.004,344,0.003,345,0.943,360,1.387,362,3.325,364,1.441,373,2.01,375,2.374,380,1.958,385,2.496,387,2.59,388,3.158,390,3.064,442,2.977,453,3.67,456,4.505,469,2.496,481,2.408,486,2.523,493,1.627,509,3.863,519,2.07,550,2.599,558,2.498,567,3.124,571,3.153,579,1.737,580,3.058,584,2.655,592,2.83,593,2.141,632,3.058,634,4.252,648,1.593,650,3.705,651,2.797,654,2.871,659,1.863,668,3.863,694,2.328,730,4.013,763,2.496,815,2.496,897,3.374,907,2.408,908,2.065,937,3.034,958,2.01,962,2.594,1012,4.042,1015,3.153,1030,2.594,1031,2.328,1054,4.252,1112,5.145,1146,2.977,1150,2.83,1153,3.405,1156,2.186,1160,2.704,1161,3.879,1164,4.505,1165,3.22,1175,3.034,1193,3.863,1221,2.496,1281,3.153,1321,4.232,1336,3.153,1500,2.83,1594,5.244,1614,4.716,1616,3.67,1674,1.958,1686,2.408,1695,2.83,1758,2.408,1776,3.67,1789,4.252,1889,2.977,1894,4.716,1902,2.977,1918,2.408,1923,4.505,1963,2.83,1966,4.252,1967,5.244,2156,5.256,2157,3.153,2203,3.863,2231,4.505,2254,3.67,2297,3.153,2388,2.977,2543,4.792,2559,3.153,2562,3.863,2588,4.252,2591,3.863,2600,3.67,2601,3.374,2643,3.67,2644,3.44,2653,4.252,2654,2.594,2676,3.67,2885,3.374,3080,3.153,3492,5.624,3530,6.307,3541,2.704,3577,2.977,3591,2.254,3595,3.153,3615,3.374,3622,2.704,3632,4.505,3692,3.67,3738,3.67,3739,2.83,3776,4.042,3777,3.153,3822,3.153,3843,3.374,3867,3.67,3967,5.244,3973,3.67,4000,3.757,4176,6.118,4275,3.153,4517,3.374,4577,3.67,4650,3.67,4652,4.505,4659,3.67,4969,3.67,5205,2.83,5230,2.83,5231,2.977,5326,3.67,5331,3.67,5363,2.408,5398,3.374,5406,5.244,5421,3.67,5457,3.67,5458,4.12,5459,4.12,5460,4.12,5461,4.12,5462,4.12,5463,3.67,5464,4.12,5465,4.12,5466,4.12,5467,5.886,5468,4.12,5469,4.12,5470,5.886,5471,5.886,5472,4.12,5473,4.12,5474,4.12,5475,3.153,5476,4.12,5477,5.886,5478,4.12,5479,4.12,5480,4.12,5481,4.12,5482,4.12,5483,4.12,5484,4.12,5485,4.12,5486,4.12,5487,5.886,5488,4.12,5489,4.12,5490,8.24,5491,4.12,5492,5.886,5493,4.12,5494,4.12,5495,4.12,5496,4.12,5497,4.12,5498,5.886,5499,4.12,5500,4.12,5501,4.12,5502,4.12,5503,4.12,5504,4.12,5505,4.12,5506,4.12,5507,5.886,5508,4.12,5509,4.12,5510,4.12,5511,4.12,5512,4.12,5513,4.12,5514,4.12,5515,4.12,5516,4.12,5517,4.12,5518,4.12,5519,4.12,5520,4.12,5521,4.12]],["title/additional-documentation/readme.html",[470,1.494,669,1.011,3312,1.411]],["body/additional-documentation/readme.html",[0,0.463,2,1.655,3,0.291,4,0.301,6,3.018,13,4.947,14,3.342,15,3.651,16,4.172,26,0.006,72,1.366,73,2.275,78,3.704,79,3.704,84,1.507,98,1.605,101,0.66,102,0.574,121,0.726,156,1.724,253,1.103,276,1.328,342,0.004,343,0.005,344,0.004,348,2.089,360,1.857,372,3.651,381,1.577,386,3.473,455,3.986,470,2.513,486,2.462,500,3.249,517,3.224,548,2.557,554,4.024,558,2.007,567,2.928,569,2.691,632,2.047,633,4.523,651,3.415,659,4.07,665,3.62,717,3.62,730,4.199,761,3.018,815,3.342,851,4.523,860,3.473,882,3.117,888,2.226,964,3.62,1040,4.783,1066,2.622,1152,2.622,1184,3.62,1268,3.473,1270,3.117,1301,2.691,1334,6.933,1404,4.518,1796,4.518,1935,3.473,1972,3.789,2192,2.928,2261,3.62,2654,5.03,2738,4.222,2808,5.191,3529,3.986,3594,4.518,3739,3.789,3756,4.518,3758,3.789,4131,4.518,4275,5.499,4389,5.499,4460,4.222,4461,6.933,4502,4.67,4641,3.473,4951,3.986,4952,3.789,4954,3.273,4955,3.342,4956,3.473,4957,3.62,4958,3.62,4959,3.473,4960,3.62,4962,5.885,5157,4.222,5163,6.545,5178,4.005,5179,4.915,5180,6.401,5181,4.915,5182,6.401,5183,5.555,5184,4.915,5185,4.915,5186,4.915,5187,6.401,5188,4.915,5189,4.915,5190,4.518,5191,4.222,5192,4.915,5193,4.915,5194,6.479,5195,6.401,5196,4.915,5197,4.915,5198,4.915,5199,4.915,5200,5.885,5201,4.915,5202,7.119,5203,4.915,5204,4.364,5205,3.789,5206,6.933,5207,4.915,5208,4.915,5209,6.266,5210,3.117,5211,4.493,5212,4.915,5213,4.518,5214,4.518,5215,4.915,5216,3.117,5217,4.222,5218,4.915,5219,6.401,5220,4.915,5221,3.117,5222,3.117,5223,4.915,5224,4.915,5225,6.116,5226,2.928,5227,4.518,5228,4.915,5229,5.885,5230,6.295,5231,3.986,5232,4.915,5233,4.915,5234,4.915,5235,6.029,5236,4.915,5237,4.915,5238,4.518,5239,4.518,5240,4.518,5241,6.401,5242,3.117,5243,6.401,5244,4.915,5245,4.915,5246,4.915,5247,7.119,5248,4.222,5249,4.915,5250,4.915]],["title/additional-documentation/readme/data-readme.html",[372,1.597,470,1.295,669,0.876,3312,1.223]],["body/additional-documentation/readme/data-readme.html",[2,1.564,8,1.898,20,2.861,26,0.006,72,1.378,152,0.276,167,0.265,168,0.311,183,2.145,342,0.005,343,0.006,344,0.005,345,2.066,363,2.438,364,2.534,554,3.443,580,2.688,632,2.688,659,3.276,669,1.714,694,4.093,851,4.56,888,3.432,1197,5.842,1892,5.933,1935,4.56,3894,5.234,4953,2.987,4954,3.289,4955,5.47,5210,4.806,5211,3.845,5252,4.806,5363,4.233,5442,5.544,5475,5.544,5522,5.933,5523,5.933,5524,6.967,5525,7.244,5526,7.244,5527,4.388,5528,4.754]],["title/additional-documentation/readme/ui-readme.html",[470,1.295,669,0.876,1040,2.092,3312,1.223]],["body/additional-documentation/readme/ui-readme.html",[2,1.341,8,1.911,16,3.467,26,0.007,152,0.278,156,2.83,167,0.267,168,0.313,183,2.16,342,0.005,343,0.006,344,0.005,345,1.954,357,4.825,363,2.455,364,2.551,381,2.084,632,2.707,659,3.298,669,1.726,888,2.942,3625,6.498,3822,5.582,3894,5.27,4786,5.974,4953,3.007,4954,3.502,5210,4.825,5211,3.871,5252,4.825,5363,4.262,5442,5.582,5475,5.582,5522,5.974,5523,5.974,5524,6.995,5527,4.418,5528,4.787,5529,6.498,5530,7.294]],["title/additional-documentation/readme/core-readme.html",[470,1.295,554,1.76,669,0.876,3312,1.223]],["body/additional-documentation/readme/core-readme.html",[16,3.554,26,0.006,52,2.064,84,1.284,166,1.446,342,0.005,343,0.006,344,0.005,381,2.476,554,3.554,659,3.918,815,4.53,888,3.496,964,4.908,2686,5.723,3822,5.723,4953,3.083,4954,2.892,5211,3.969,5252,4.225,5442,5.723,5475,5.723,5522,6.125,5523,6.125,5524,6.125,5527,4.53,5529,6.662,5531,7.478,5532,7.478,5533,7.478,5534,7.478,5535,7.478]],["title/additional-documentation/readme/style-readme.html",[470,1.295,669,0.876,3312,1.223,3528,2.543]],["body/additional-documentation/readme/style-readme.html",[6,5.307,26,0.006,152,0.355,183,2.127,342,0.005,343,0.006,344,0.005,387,2.419,470,2.513,486,2.462,500,3.249,579,3.569,632,3.34,647,4.059,659,3.249,828,5.191,908,3.601,1153,2.563,1175,3.704,2192,3.813,2403,5.499,2588,6.116,3529,6.714,4502,4.199,4953,2.963,4954,3.273,4956,5.329,5183,4.715,5210,5.085,5211,3.813,5235,4.935,5252,4.059,5287,8.279,5342,6.401,5527,4.353,5536,7.185,5537,8.465,5538,7.185,5539,7.185,5540,7.185,5541,7.185]],["title/additional-documentation/readme/calendar-readme.html",[470,1.295,669,0.876,860,2.331,3312,1.223]],["body/additional-documentation/readme/calendar-readme.html",[2,1.363,26,0.006,152,0.283,167,0.271,168,0.318,183,2.196,342,0.005,343,0.006,344,0.005,345,1.973,363,2.496,364,2.594,486,2.157,632,2.752,669,1.755,854,5.659,860,4.668,881,4.492,908,3.717,1051,4.334,1270,5.151,1551,6.074,2192,3.936,4953,3.058,4954,3.334,5210,4.872,5211,3.936,5252,4.872,5363,4.334,5527,4.492,5528,4.867]],["title/additional-documentation/readme/location-readme.html",[265,0.876,470,1.295,669,0.876,3312,1.223]],["body/additional-documentation/readme/location-readme.html",[13,4.257,16,3.462,26,0.007,42,1.596,121,0.958,152,0.278,167,0.266,168,0.313,183,2.157,265,1.724,267,1.813,342,0.005,343,0.006,344,0.005,345,1.952,363,2.452,364,2.548,390,2.816,486,2.119,632,2.703,669,1.724,670,3.003,908,3.651,1184,4.78,1208,4.412,1894,4.585,1949,6.489,2031,5.262,2261,4.78,3181,6.165,4953,3.003,4954,3.3,4958,5.94,5210,4.821,5211,3.866,5252,4.821,5363,4.257,5527,4.412,5528,4.78,5542,7.284]],["title/additional-documentation/readme/ace-readme.html",[14,2.243,470,1.295,669,0.876,3312,1.223]],["body/additional-documentation/readme/ace-readme.html",[0,0.418,13,4.21,14,5.458,15,3.108,16,3.424,26,0.006,77,5.901,152,0.355,157,6.419,167,0.264,168,0.309,183,2.133,342,0.005,343,0.006,344,0.005,345,1.94,346,6.126,363,2.425,364,2.52,486,2.466,632,3.344,669,1.705,908,3.611,1193,4.728,2403,5.514,2438,5.514,2588,5.205,3541,4.728,4652,5.514,4953,2.971,4954,3.279,4957,5.913,5157,5.514,5210,4.79,5211,3.824,5252,4.79,5363,4.21,5527,4.364,5528,4.728,5543,8.479,5544,7.205,5545,7.205,5546,7.205]],["title/additional-documentation/readme/medium-editor-readme.html",[15,1.409,276,0.786,470,1.143,669,0.773,3312,1.079]],["body/additional-documentation/readme/medium-editor-readme.html",[13,4.322,15,4.046,16,3.515,26,0.006,152,0.282,167,0.271,168,0.317,183,2.19,200,1.53,276,1.78,342,0.005,343,0.006,344,0.005,345,1.97,363,2.489,364,2.586,486,2.151,632,2.745,669,1.75,908,3.706,4953,3.049,4954,3.329,4959,5.734,5210,4.864,5211,3.925,5252,4.864,5290,7.67,5363,4.322,5527,4.48,5528,4.853]],["title/additional-documentation/readme/tinymce-readme.html",[470,1.295,669,0.876,3312,1.223,4641,2.331]],["body/additional-documentation/readme/tinymce-readme.html",[0,0.425,6,4.688,13,4.286,15,3.163,16,3.486,26,0.007,152,0.28,167,0.268,168,0.315,183,2.171,342,0.005,343,0.006,344,0.005,345,1.96,363,2.469,364,2.565,486,2.133,517,4.286,632,3.18,669,1.735,908,3.676,3541,4.813,4641,4.617,4720,6.19,4953,3.024,4954,3.313,4960,5.957,5210,4.84,5211,3.892,5252,4.84,5311,6.007,5363,4.286,5527,4.443,5528,4.813,5547,7.334,5548,7.334]],["title/additional-documentation/changelog.html",[669,1.011,3312,1.411,4953,1.761]],["body/additional-documentation/changelog.html",[15,3.314,26,0.006,98,2.235,156,2.401,342,0.005,343,0.006,344,0.005,381,2.196,1270,4.341,1745,3.748,3788,4.204,4953,3.168,4954,2.971,4955,4.654,4956,4.837,4957,5.042,4958,5.042,4959,4.837,4960,5.042]],["title/additional-documentation/changelog/data-changelog.html",[372,1.597,669,0.876,3312,1.223,4953,1.527]],["body/additional-documentation/changelog/data-changelog.html",[0,0.188,2,0.909,5,0.684,10,0.134,15,3.496,26,0.006,32,0.778,34,0.924,39,0.345,42,1.118,45,0.53,46,0.618,48,1.388,50,2.623,51,2.64,52,1.364,63,3.348,65,1.23,84,0.558,98,0.946,108,2.663,117,1.911,121,0.65,131,1.545,188,0.578,211,0.837,214,1.854,217,1.478,230,1.745,253,1.859,265,1.415,295,1.991,316,1.252,324,0.782,342,0.002,343,0.003,344,0.002,351,1.312,363,1.094,372,1.402,374,1.837,377,0.673,380,1.545,387,2.523,390,1.911,445,2.548,457,2.816,476,1.779,500,2.704,512,2.233,517,1.9,519,0.98,529,1.75,532,2.233,546,3.704,548,2.291,558,1.183,569,1.586,574,1.545,576,1.9,579,1.371,580,1.834,592,3.395,593,1.183,607,2.888,619,3.082,632,2.219,633,2.047,638,1.97,645,1.97,646,2.047,648,1.911,665,2.134,669,0.769,693,1.97,705,2.488,725,3.783,735,2.663,755,1.231,763,1.97,785,3.764,791,2.663,897,4.048,910,2.134,917,1.257,920,3.924,937,1.676,963,1.507,1023,2.663,1031,1.837,1036,2.888,1065,3.596,1112,3.395,1133,2.349,1137,2.897,1148,3.571,1153,1.763,1157,3.783,1162,2.349,1164,2.488,1165,1.779,1175,2.548,1178,1.97,1182,1.97,1185,1.97,1221,1.97,1240,2.134,1264,2.897,1277,1.837,1301,1.586,1304,2.233,1325,1.779,1330,2.488,1338,2.548,1431,1.97,1458,2.488,1583,2.897,1588,2.897,1592,2.349,1670,4.715,1674,2.349,1686,2.888,1735,3.571,1741,1.586,1744,1.9,1758,1.9,1761,1.97,1769,1.97,1770,1.9,1789,2.349,1824,2.134,1860,2.663,1861,2.047,1863,2.349,1888,2.134,1894,2.047,1939,2.047,1982,2.233,2030,2.488,2082,3.571,2087,2.349,2094,1.837,2136,2.663,2446,2.897,2540,2.488,2542,3.571,2543,4.929,2562,3.244,2586,3.571,2766,2.663,2865,2.349,2870,2.488,2871,2.663,2935,2.488,3089,2.349,3332,2.488,3527,2.488,3550,5.113,3591,1.779,3643,3.783,3776,5.402,3788,2.704,3843,2.663,3887,4.422,4000,5.151,4245,4.048,4288,2.897,4315,2.897,4317,4.403,4786,2.663,4952,2.233,4954,3.64,4955,5.702,5178,1.63,5204,1.676,5216,1.837,5221,1.837,5222,1.837,5226,4.996,5242,1.837,5253,3.904,5255,2.663,5390,2.663,5437,2.897,5457,2.897,5463,2.897,5549,1.97,5550,1.97,5551,2.994,5552,1.97,5553,3.251,5554,6.026,5555,5.348,5556,5.885,5557,5.702,5558,3.251,5559,3.251,5560,5.885,5561,5.866,5562,2.897,5563,4.048,5564,2.663,5565,3.251,5566,3.251,5567,3.251,5568,3.251,5569,5.495,5570,4.943,5571,3.251,5572,3.251,5573,3.251,5574,3.251,5575,3.251,5576,3.251,5577,2.897,5578,2.663,5579,2.663,5580,3.251,5581,4.048,5582,2.897,5583,2.897,5584,3.251,5585,3.251,5586,3.251,5587,3.251,5588,3.251,5589,5.906,5590,5.113,5591,3.251,5592,3.251,5593,4.943,5594,3.251,5595,3.251,5596,3.251,5597,3.251,5598,3.251,5599,3.251,5600,3.251,5601,2.663,5602,2.663,5603,3.251,5604,3.251,5605,4.897,5606,3.251,5607,3.251,5608,3.251,5609,2.663,5610,2.663,5611,3.251,5612,2.663,5613,2.663,5614,3.251,5615,3.251,5616,3.251,5617,5.63,5618,3.251,5619,4.764,5620,3.251,5621,3.251,5622,2.897,5623,4.943,5624,4.403,5625,4.403,5626,1.97,5627,1.97,5628,4.403,5629,3.251,5630,3.251,5631,2.663,5632,3.251,5633,3.251,5634,2.663,5635,2.663,5636,2.488,5637,3.251,5638,3.251,5639,3.251,5640,3.251,5641,2.663,5642,3.251,5643,3.251,5644,4.048,5645,3.251,5646,3.251,5647,2.897,5648,3.251,5649,3.251,5650,3.251,5651,3.251,5652,3.251,5653,2.897,5654,2.897,5655,2.897,5656,3.251,5657,3.251,5658,3.251,5659,3.251,5660,3.251,5661,5.495,5662,3.251,5663,2.663,5664,2.663,5665,3.251,5666,4.352,5667,3.251,5668,3.251,5669,3.251,5670,3.251,5671,3.251,5672,3.251,5673,3.251,5674,2.663,5675,3.251,5676,3.251,5677,2.897,5678,2.897,5679,2.897,5680,3.251,5681,3.251,5682,3.251,5683,3.251,5684,3.251,5685,3.251,5686,3.251,5687,3.251,5688,3.251,5689,3.251,5690,3.251,5691,2.897,5692,2.663,5693,2.897,5694,4.943,5695,3.251,5696,2.897,5697,2.897,5698,3.251,5699,2.897,5700,3.251,5701,3.251,5702,3.251,5703,4.352,5704,3.251,5705,3.251,5706,3.251,5707,3.251,5708,2.897,5709,3.251,5710,2.897,5711,3.251,5712,3.251,5713,3.251,5714,3.251,5715,3.251,5716,2.897,5717,2.897,5718,3.251,5719,2.897,5720,3.251,5721,2.897,5722,3.251,5723,3.251,5724,3.251,5725,3.251,5726,3.251,5727,3.251,5728,3.251,5729,3.251,5730,2.897,5731,2.897,5732,2.897,5733,3.251,5734,3.251,5735,3.251,5736,3.251,5737,3.251,5738,3.251,5739,2.897,5740,2.897,5741,2.897,5742,3.251,5743,3.251,5744,2.663,5745,3.251,5746,3.251,5747,2.897,5748,2.897,5749,3.251,5750,3.251,5751,3.251,5752,2.897,5753,2.897,5754,3.251,5755,3.251,5756,3.251,5757,3.251,5758,3.251,5759,3.251,5760,3.251,5761,3.251,5762,2.897,5763,2.897,5764,2.663,5765,2.663,5766,2.897,5767,2.897,5768,2.897,5769,3.251,5770,3.251,5771,2.897]],["title/additional-documentation/changelog/ui-changelog.html",[669,0.876,1040,2.092,3312,1.223,4953,1.527]],["body/additional-documentation/changelog/ui-changelog.html",[0,0.389,2,0.729,5,0.834,10,0.164,15,3.366,26,0.006,32,1.058,34,1.07,42,1.635,44,2.495,46,0.754,47,2.869,48,2.067,51,2.527,53,2.601,55,2.103,63,2.869,65,1.673,78,2.043,84,0.983,98,1.153,101,0.474,108,3.246,121,0.753,131,1.789,139,2.239,145,2.239,152,0.218,156,2.811,167,0.145,214,1.786,217,1.525,230,1.145,235,0.987,253,1.75,295,0.877,342,0.003,343,0.004,344,0.003,351,1.599,363,1.334,377,0.82,380,1.884,387,2.103,390,1.533,398,1.039,445,2.043,529,1.761,546,4.023,558,1.442,567,2.103,580,1.471,592,3.932,593,1.442,619,3.464,632,2.494,638,2.401,648,2.213,663,1.986,759,1.709,763,3.468,917,1.533,920,4.829,937,2.043,963,1.837,1040,2.239,1065,3.498,1133,2.864,1148,4.136,1157,3.033,1162,4.855,1178,2.401,1182,2.401,1221,3.468,1237,2.601,1240,3.757,1277,2.239,1286,2.864,1301,1.934,1325,2.169,1330,3.033,1338,4.192,1431,2.401,1561,3.033,1614,2.722,1670,4.829,1674,3.194,1676,2.722,1735,4.136,1741,1.934,1744,3.345,1761,2.401,1769,3.468,1770,2.316,1824,2.601,1859,3.033,1861,2.495,1863,2.864,1867,3.932,1887,3.033,1982,2.722,1995,2.601,2082,2.864,2087,2.864,2094,2.239,2136,3.246,2517,3.033,2521,3.246,2543,4.737,2555,3.246,2631,3.531,2644,3.345,2766,3.246,2865,2.864,2868,3.033,2870,3.033,2871,3.246,2935,3.033,3089,2.864,3111,2.601,3332,3.033,3347,3.531,3430,3.246,3527,3.033,3550,4.381,3591,3.132,3643,3.033,3646,3.531,3776,5.896,3788,2.169,3887,4.301,3894,2.864,4000,4.921,4503,2.864,4518,2.864,4576,4.688,4952,2.722,4954,3.515,5178,1.986,5204,2.043,5216,2.239,5221,2.239,5222,2.239,5226,4.773,5242,2.239,5253,4.301,5255,3.246,5549,2.401,5550,2.401,5551,2.401,5552,2.401,5554,6.011,5555,5.299,5556,6.027,5557,5.448,5560,5.891,5561,5.878,5562,3.531,5563,4.688,5564,3.246,5569,5.506,5578,3.246,5579,3.246,5581,6.661,5582,5.986,5583,3.531,5589,5.503,5590,3.033,5601,3.246,5602,3.246,5605,4.688,5609,3.246,5610,3.246,5612,3.246,5613,3.246,5617,5.703,5619,4.927,5622,3.531,5626,2.401,5627,2.401,5628,5.1,5634,3.246,5635,3.246,5636,3.033,5641,3.246,5644,3.246,5653,3.531,5654,3.531,5655,3.531,5661,5.08,5663,4.688,5664,3.246,5666,4.07,5674,3.246,5691,3.531,5692,3.246,5693,3.531,5696,3.531,5697,3.531,5699,3.531,5703,4.728,5708,3.531,5710,3.531,5716,3.531,5717,3.531,5721,3.531,5730,3.531,5731,3.531,5732,3.531,5739,3.531,5740,3.531,5741,3.531,5744,3.246,5747,3.531,5748,3.531,5752,3.531,5753,3.531,5762,3.531,5763,3.531,5764,3.246,5765,3.246,5768,3.531,5771,3.531,5772,3.963,5773,3.963,5774,3.963,5775,3.963,5776,3.963,5777,3.963,5778,3.963,5779,3.963,5780,3.963,5781,3.963,5782,3.963,5783,3.963,5784,3.963,5785,3.963,5786,3.963,5787,3.963,5788,3.963,5789,3.963,5790,3.963,5791,3.963,5792,3.963,5793,3.963,5794,3.963,5795,3.963,5796,3.963,5797,3.963,5798,5.724,5799,5.724,5800,5.724,5801,5.724,5802,3.963,5803,3.963,5804,3.963,5805,3.963,5806,3.963,5807,3.963,5808,3.963,5809,3.963,5810,3.963,5811,3.963,5812,3.963,5813,3.963,5814,3.963,5815,3.531,5816,3.531,5817,3.531,5818,3.963,5819,3.963,5820,3.531,5821,3.531,5822,3.531,5823,3.531,5824,3.531,5825,3.531,5826,3.531,5827,3.963,5828,3.963,5829,3.963,5830,3.963,5831,3.963,5832,3.963,5833,3.963,5834,3.963,5835,3.963,5836,3.963,5837,3.963,5838,3.246,5839,3.963,5840,3.963,5841,3.963,5842,3.963,5843,3.963,5844,3.963,5845,3.963,5846,3.963,5847,3.963,5848,3.963,5849,3.963,5850,3.963,5851,3.963,5852,3.963,5853,3.963,5854,3.963,5855,3.963,5856,3.963,5857,3.963,5858,3.963,5859,3.963,5860,3.963,5861,3.963,5862,3.963,5863,3.963,5864,3.963,5865,3.963,5866,3.963,5867,3.531,5868,3.963,5869,3.531,5870,3.963,5871,3.963,5872,3.963]],["title/additional-documentation/changelog/core-changelog.html",[554,1.76,669,0.876,3312,1.223,4953,1.527]],["body/additional-documentation/changelog/core-changelog.html",[2,1.048,10,0.236,15,2.458,26,0.006,34,1.066,45,0.929,65,1.419,98,2.135,131,1.781,188,1.013,217,1.26,230,1.14,253,1.14,342,0.004,343,0.005,344,0.004,380,3.488,381,2.724,390,2.838,500,2.577,529,1.494,546,2.938,558,2.073,567,3.025,569,2.781,574,2.709,576,3.331,593,2.073,632,2.115,920,3.741,963,2.641,1133,4.118,1277,3.22,1325,3.119,1330,4.362,1338,3.783,1431,3.453,1442,4.118,1769,3.453,1770,3.331,1860,4.668,1861,3.588,1939,3.588,1982,3.915,2087,4.118,2540,4.362,2543,4.586,2586,4.118,2644,3.331,2789,5.078,2865,5.302,2868,4.362,3089,5.302,3533,5.078,3550,4.362,3643,4.362,3776,6.343,3788,3.119,3887,3.331,4000,5.215,4954,3.685,5178,2.857,5204,2.938,5216,3.22,5221,3.22,5222,3.22,5226,5.058,5242,3.22,5253,4.743,5549,3.453,5550,3.453,5551,3.453,5552,3.453,5554,6.009,5555,4.917,5557,5.774,5560,5.373,5561,5.373,5569,5.373,5577,5.078,5578,4.668,5579,4.668,5589,5.625,5601,4.668,5602,4.668,5609,4.668,5610,4.668,5612,4.668,5613,4.668,5617,5.726,5619,4.917,5626,3.453,5627,3.453,5636,4.362,5641,4.668,5644,4.668,5661,5.373,5663,4.668,5664,4.668,5666,4.917,5674,4.668,5703,5.192,5719,5.078,5744,4.668,5764,4.668,5765,4.668,5766,5.078,5767,5.078,5815,5.078,5816,5.078,5817,5.078,5838,4.668,5869,5.078,5873,5.7,5874,5.7,5875,5.7,5876,5.7,5877,5.7,5878,5.7,5879,5.7,5880,5.7,5881,5.7,5882,5.7,5883,5.078,5884,5.078,5885,5.7,5886,5.7,5887,5.7,5888,5.7,5889,5.7,5890,5.7,5891,5.7,5892,5.7,5893,5.7,5894,5.7,5895,5.7,5896,5.7,5897,5.7]],["title/additional-documentation/changelog/style-changelog.html",[669,0.876,3312,1.223,3528,2.543,4953,1.527]],["body/additional-documentation/changelog/style-changelog.html",[10,0.259,26,0.006,34,1.457,42,1.171,63,3.139,98,1.822,102,0.652,131,1.957,217,1.076,253,1.696,295,1.723,342,0.004,343,0.005,344,0.004,387,2.226,512,4.302,519,1.888,546,3.229,558,2.278,567,3.324,593,2.278,920,4.11,1162,4.525,1338,3.229,1431,3.794,1769,3.794,2151,5.13,2543,3.539,2868,4.794,3591,3.427,3776,4.302,3788,3.427,3887,3.66,4000,5.259,4954,3.717,4956,6.051,5161,5.58,5178,3.139,5204,3.229,5216,3.539,5221,3.539,5222,3.539,5226,5.101,5242,3.539,5253,4.552,5549,3.794,5550,3.794,5551,3.794,5552,3.794,5554,5.983,5555,3.794,5557,5.823,5560,5.527,5561,5.527,5569,5.374,5589,4.11,5617,5.862,5619,5.136,5626,3.794,5627,3.794,5634,5.13,5635,5.13,5636,4.794,5661,5.136,5666,3.794,5677,5.58,5678,5.58,5679,5.58,5692,5.13,5703,5.374,5838,5.13,5883,5.58,5884,5.58,5898,6.263,5899,6.263,5900,6.263,5901,6.263,5902,6.263,5903,6.263,5904,6.263,5905,6.263,5906,6.263,5907,6.263,5908,6.263,5909,6.263,5910,6.263,5911,6.263]],["title/additional-documentation/changelog/calendar-changelog.html",[669,0.876,860,2.331,3312,1.223,4953,1.527]],["body/additional-documentation/changelog/calendar-changelog.html",[10,0.262,15,2.731,26,0.005,98,1.841,342,0.004,343,0.005,344,0.004,558,2.303,593,2.303,619,3.263,1237,4.154,1270,5.506,2935,4.845,3788,3.464,3887,3.699,4000,5.332,4954,3.768,5178,3.173,5204,3.263,5216,3.576,5221,3.576,5222,3.576,5226,5.172,5242,3.576,5253,4.979,5549,3.835,5550,3.835,5551,3.835,5552,3.835,5554,6.005,5555,4.75,5556,5.185,5557,5.903,5560,5.394,5561,5.394,5563,5.185,5564,5.185,5569,5.394,5581,6.423,5589,4.154,5605,6.423,5617,5.786,5619,4.75,5626,3.835,5627,3.835,5661,4.75,5666,4.75,5703,5.394,5820,5.64,5821,5.64,5822,5.64,5823,5.64,5824,5.64,5825,5.64,5826,5.64,5912,6.33,5913,6.33,5914,6.33,5915,6.33,5916,6.33,5917,7.842,5918,6.33,5919,6.33,5920,6.33,5921,6.33,5922,6.33,5923,6.33,5924,6.33,5925,6.33,5926,6.33,5927,5.64,5928,6.33,5929,6.33,5930,6.33]],["title/additional-documentation/changelog/location-changelog.html",[265,0.876,669,0.876,3312,1.223,4953,1.527]],["body/additional-documentation/changelog/location-changelog.html",[10,0.268,26,0.005,50,4.221,53,4.25,98,1.884,265,1.882,342,0.004,343,0.005,344,0.004,558,2.356,593,2.356,3206,7.085,3788,3.544,3887,4.648,4000,5.322,4954,3.761,4958,6.383,5178,3.246,5204,3.339,5216,3.659,5221,3.659,5222,3.659,5226,5.162,5242,3.659,5253,4.648,5549,3.923,5550,3.923,5551,3.923,5552,3.923,5554,5.987,5555,3.923,5557,5.892,5560,5.214,5561,5.214,5569,5.214,5589,4.25,5590,4.957,5617,5.755,5619,4.818,5624,7.085,5625,7.085,5626,3.923,5627,3.923,5647,5.77,5661,5.214,5666,4.818,5703,5.437,5931,6.477,5932,6.477,5933,6.477,5934,6.477,5935,6.477,5936,6.477,5937,7.953,5938,6.477,5939,6.477,5940,6.477,5941,6.477,5942,6.477,5943,6.477,5944,6.477,5945,6.477,5946,6.477]],["title/additional-documentation/changelog/ace-changelog.html",[14,2.243,669,0.876,3312,1.223,4953,1.527]],["body/additional-documentation/changelog/ace-changelog.html",[10,0.272,14,4.869,26,0.005,98,1.917,342,0.004,343,0.005,344,0.004,558,2.397,593,2.397,1040,3.723,3788,3.605,3887,3.851,4000,5.336,4954,3.771,4957,6.399,5178,3.303,5204,3.396,5216,3.723,5221,3.723,5222,3.723,5226,5.175,5242,4.541,5253,4.697,5549,3.992,5550,3.992,5551,3.992,5552,3.992,5554,5.981,5555,3.992,5557,5.907,5560,4.869,5561,4.869,5569,5.253,5589,4.324,5590,5.043,5617,5.775,5619,4.869,5626,3.992,5627,3.992,5631,5.397,5661,4.869,5666,4.869,5703,5.47,5947,6.589,5948,6.589,5949,6.589,5950,8.037,5951,6.589,5952,6.589,5953,6.589,5954,6.589,5955,6.589,5956,6.589,5957,6.589,5958,6.589,5959,6.589,5960,6.589]],["title/additional-documentation/changelog/medium-editor-changelog.html",[15,1.409,276,0.786,669,0.773,3312,1.079,4953,1.347]],["body/additional-documentation/changelog/medium-editor-changelog.html",[10,0.273,15,4.208,26,0.005,98,1.924,342,0.004,343,0.005,344,0.004,558,2.406,593,2.406,3788,3.619,3887,3.865,4000,5.338,4954,3.773,4959,6.142,5178,3.315,5204,3.409,5216,3.737,5221,3.737,5222,3.737,5226,5.178,5242,3.737,5253,4.708,5549,4.006,5550,4.006,5551,4.006,5552,4.006,5554,5.963,5555,4.006,5557,5.91,5560,4.006,5561,4.006,5569,5.262,5617,5.78,5619,4.88,5626,4.006,5627,4.006,5661,4.88,5666,4.88,5703,5.477,5961,6.614,5962,8.055,5963,6.614,5964,6.614,5965,6.614,5966,6.614,5967,6.614,5968,6.614,5969,6.614,5970,6.614,5971,6.614]],["title/additional-documentation/changelog/tinymce-changelog.html",[669,0.876,3312,1.223,4641,2.331,4953,1.527]],["body/additional-documentation/changelog/tinymce-changelog.html",[0,0.376,10,0.268,16,3.086,26,0.005,55,3.446,62,3.933,98,1.889,133,2.619,342,0.004,343,0.005,344,0.004,558,2.362,569,3.168,593,2.362,648,2.511,2542,4.691,3788,3.553,3887,4.655,4000,5.324,4641,5.014,4954,3.762,4960,6.385,5178,3.254,5204,3.347,5216,3.668,5221,3.668,5222,3.668,5226,5.19,5242,3.668,5253,4.655,5549,3.933,5550,3.933,5551,3.933,5552,3.933,5554,5.971,5555,3.933,5557,5.894,5560,5.219,5561,5.219,5569,5.219,5617,5.814,5619,4.825,5626,3.933,5627,3.933,5661,4.825,5666,4.825,5703,5.442,5972,6.493,5973,7.965,5974,6.493,5975,6.493,5976,6.493,5977,6.493,5978,6.493,5979,6.493,5980,6.493,5981,6.493,5982,6.493,5983,6.493,5984,6.493,5985,6.493,5986,6.493,5987,6.493,5988,6.493,5989,6.493]],["title/additional-documentation/adding-new-packages.html",[84,0.561,669,0.773,3312,1.079,5183,2.144,5205,2.244]],["body/additional-documentation/adding-new-packages.html",[26,0.007,45,1.041,73,2.632,78,3.29,79,3.29,84,1.575,98,1.857,101,0.943,152,0.35,183,1.89,342,0.004,343,0.005,344,0.004,348,2.418,363,2.653,372,3.852,385,5.18,517,3.731,558,2.322,580,2.369,632,3.405,662,4.313,663,3.2,669,1.511,717,4.189,769,5.687,896,5.687,904,4.019,907,3.731,908,3.2,926,4.886,927,4.019,1018,4.775,1072,4.063,1116,4.962,1193,4.189,1458,4.886,1790,6.456,1908,5.173,1963,4.384,2192,4.183,2354,5.228,2418,4.019,2438,4.886,2542,6.179,2644,3.731,2654,5.383,2960,6.456,3080,4.886,3541,4.189,3998,6.456,4143,5.228,4953,2.632,4954,3.453,5183,4.189,5194,4.886,5200,5.228,5205,4.384,5209,4.189,5214,5.228,5225,4.886,5226,3.388,5230,5.873,5235,5.414,5272,7.004,5278,5.687,5311,5.228,5631,5.228,5867,5.687,5990,6.384,5991,7.882,5992,6.384,5993,8.552,5994,6.384,5995,6.384,5996,6.384,5997,6.384,5998,6.384,5999,6.384,6000,6.384,6001,6.384,6002,6.384,6003,6.384,6004,6.384,6005,6.384,6006,7.882,6007,7.882,6008,6.384,6009,6.384,6010,6.384,6011,6.384,6012,6.384,6013,6.384,6014,6.384,6015,6.384,6016,6.384,6017,7.882,6018,7.882,6019,6.384]],["title/additional-documentation/stackblitz.html",[669,1.011,3312,1.411,6020,3.805]],["body/additional-documentation/stackblitz.html",[2,1.356,6,4.035,16,3.505,26,0.007,152,0.347,167,0.27,168,0.317,342,0.005,343,0.006,344,0.005,345,1.687,363,2.482,364,2.579,486,2.145,580,2.737,632,2.737,854,5.641,1270,4.856,2192,3.914,2403,5.644,4504,6.04,5363,4.31,5927,6.57,6020,7.658,6021,7.375,6022,7.375,6023,7.375,6024,7.375]],["title/additional-documentation/publishing.html",[669,1.011,3312,1.411,6025,4.271]],["body/additional-documentation/publishing.html",[0,0.424,5,1.799,26,0.006,78,3.77,79,3.77,84,1.256,183,2.165,271,1.79,274,2.257,342,0.005,343,0.006,344,0.005,393,2.888,486,2.127,499,3.476,529,1.916,543,5.492,580,3.175,632,3.175,644,5.023,652,7.006,907,4.274,908,3.666,1022,5.182,1152,3.476,1674,3.476,2192,3.882,3263,5.99,4502,4.274,5178,3.666,5204,3.77,5328,6.55,5367,6.547,5380,5.99,5390,5.99,5391,6.516,5392,6.516,5393,6.516,5394,6.516]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["0",{"_index":958,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["0.12.3\",in",{"_index":5310,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["0.18.10",{"_index":5940,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.11",{"_index":5939,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.12",{"_index":5938,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.13",{"_index":5937,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.14",{"_index":5932,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.15",{"_index":5931,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.3",{"_index":5946,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.4",{"_index":5945,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.5",{"_index":5944,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.6",{"_index":5943,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.7",{"_index":5647,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.8",{"_index":5942,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.9",{"_index":5941,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.19.10",{"_index":5890,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.11",{"_index":5889,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.12",{"_index":5888,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.6",{"_index":5894,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.7",{"_index":5893,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.8",{"_index":5892,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.9",{"_index":5891,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.2.10",{"_index":5923,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.11",{"_index":5922,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.12",{"_index":5921,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.13",{"_index":5918,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.14",{"_index":5917,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.15",{"_index":5914,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.16",{"_index":5913,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.17",{"_index":5912,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.3",{"_index":5930,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.4",{"_index":5929,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.5",{"_index":5928,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.6",{"_index":5927,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["0.2.7",{"_index":5926,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.8",{"_index":5925,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.9",{"_index":5924,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.20.0",{"_index":5887,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.20.1",{"_index":5886,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.20.2",{"_index":5885,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.21.0",{"_index":5884,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.1",{"_index":5909,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.2",{"_index":5908,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.3",{"_index":5907,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.4",{"_index":5161,"title":{},"body":{"dependencies.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.5",{"_index":5906,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.6",{"_index":5905,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.0",{"_index":5883,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.1",{"_index":5904,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.2",{"_index":5903,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.3",{"_index":5902,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.4",{"_index":5901,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.5",{"_index":5900,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.6",{"_index":5899,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.7",{"_index":5898,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.23.0",{"_index":5882,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.0",{"_index":5880,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.1",{"_index":5879,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.2",{"_index":5878,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.3",{"_index":5877,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.25.0",{"_index":5876,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.25.1",{"_index":5875,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.25.2",{"_index":5874,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.26.0",{"_index":5873,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.36.10",{"_index":5845,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.11",{"_index":5844,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.12",{"_index":5843,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.13",{"_index":5842,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.14",{"_index":5841,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.15",{"_index":5840,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.4",{"_index":5856,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.5",{"_index":5855,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.6",{"_index":5854,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.7",{"_index":5853,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.8",{"_index":5850,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.9",{"_index":5846,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.0",{"_index":5837,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.1",{"_index":5835,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.2",{"_index":5834,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.3",{"_index":5833,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.4",{"_index":5832,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.38.0",{"_index":5831,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.0",{"_index":5830,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.1",{"_index":5827,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.2",{"_index":5819,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.3",{"_index":5818,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.4.10",{"_index":5964,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.11",{"_index":5963,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.12",{"_index":5962,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.13",{"_index":5961,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.3",{"_index":5971,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.4",{"_index":5970,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.5",{"_index":5969,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.6",{"_index":5968,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.7",{"_index":5967,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.8",{"_index":5966,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.9",{"_index":5965,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.40.0",{"_index":5810,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.0",{"_index":5802,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.1",{"_index":5798,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.2",{"_index":5797,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.3",{"_index":5794,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.4",{"_index":5791,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.5",{"_index":5790,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.6",{"_index":5788,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.0",{"_index":5786,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.1",{"_index":5785,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.10",{"_index":5711,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.11",{"_index":5709,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.12",{"_index":5707,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.13",{"_index":5706,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.14",{"_index":5705,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.15",{"_index":5704,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.16",{"_index":5702,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.2",{"_index":5784,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.3",{"_index":5783,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.4",{"_index":5717,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.5",{"_index":5716,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.6",{"_index":5715,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.7",{"_index":5714,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.8",{"_index":5713,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.9",{"_index":5712,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.0",{"_index":5699,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.1",{"_index":5697,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.10",{"_index":5675,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.2",{"_index":5696,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.3",{"_index":5693,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.4",{"_index":5691,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.5",{"_index":5687,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.6",{"_index":5685,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.7",{"_index":5683,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.8",{"_index":5680,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.9",{"_index":5676,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.44.0",{"_index":5673,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.44.1",{"_index":5670,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.44.2",{"_index":5665,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.0",{"_index":5662,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.1",{"_index":5660,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.2",{"_index":5657,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.3",{"_index":5656,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.4",{"_index":5652,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.5",{"_index":5649,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.6",{"_index":5643,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.0",{"_index":5633,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.1",{"_index":5629,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.2",{"_index":5623,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.3",{"_index":5621,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.4",{"_index":5620,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.5",{"_index":5618,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.6",{"_index":5616,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.7",{"_index":5615,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.8",{"_index":5614,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.0",{"_index":5611,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.1",{"_index":5608,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.2",{"_index":5606,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.3",{"_index":5604,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.4",{"_index":5599,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.5",{"_index":5598,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.6",{"_index":5595,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.7",{"_index":5592,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.8",{"_index":5588,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.9",{"_index":5580,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.0",{"_index":5575,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.1",{"_index":5573,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.2",{"_index":5568,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.3",{"_index":5565,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.4",{"_index":5559,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.5",{"_index":5558,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.6",{"_index":5553,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.5.10",{"_index":5976,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.11",{"_index":5975,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.12",{"_index":5974,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.13",{"_index":5973,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.14",{"_index":5972,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.3",{"_index":5987,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.4",{"_index":5986,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.5",{"_index":5985,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.6",{"_index":5984,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.7",{"_index":5979,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.8",{"_index":5978,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.9",{"_index":5977,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.6.10",{"_index":5953,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.11",{"_index":5952,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.12",{"_index":5950,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.13",{"_index":5948,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.14",{"_index":5947,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.3",{"_index":5960,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.4",{"_index":5959,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.5",{"_index":5958,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.6",{"_index":5957,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.7",{"_index":5956,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.8",{"_index":5955,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.9",{"_index":5954,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.8.29",{"_index":5173,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4967,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":5050,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":5137,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":5067,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5136,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":5068,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5138,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5069,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5103,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5117,"title":{},"body":{"coverage.html":{}}}],["00a2e2e",{"_index":5988,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["00dbf0",{"_index":3448,"title":{},"body":{"components/MenuComponent.html":{}}}],["01",{"_index":5617,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["01d1130",{"_index":5574,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["02",{"_index":5661,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["020e689",{"_index":5743,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0256008",{"_index":5642,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["03",{"_index":5569,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["04",{"_index":5589,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["041cd83",{"_index":5805,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["04fffbd",{"_index":5748,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["05",{"_index":5555,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["06b615c",{"_index":5729,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0777809",{"_index":5826,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["08",{"_index":5605,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["0b433be",{"_index":5726,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0dbce91",{"_index":5793,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0dd22f6",{"_index":5610,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["1",{"_index":183,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["1&&!pagination?.isfirst",{"_index":3978,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1&&!pagination?.islast",{"_index":3982,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1)[0",{"_index":986,"title":{},"body":{"classes/Collection.html":{}}}],["1.0.0",{"_index":5151,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":5167,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":5162,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":5334,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["1.4.3",{"_index":5158,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":5171,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":4966,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1908,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["10/10",{"_index":4975,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":5142,"title":{},"body":{"coverage.html":{}}}],["10/13",{"_index":5120,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1491,"title":{},"body":{"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["10004",{"_index":1498,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["10m",{"_index":2823,"title":{},"body":{"components/ListComponent.html":{}}}],["11",{"_index":6017,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["11/12",{"_index":5071,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":5009,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":5129,"title":{},"body":{"coverage.html":{}}}],["11/18",{"_index":5006,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1982,"title":{},"body":{"classes/Field.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["12/12",{"_index":4992,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":5049,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":5041,"title":{},"body":{"coverage.html":{}}}],["12/15",{"_index":5095,"title":{},"body":{"coverage.html":{}}}],["12/20",{"_index":5024,"title":{},"body":{"coverage.html":{}}}],["12/30",{"_index":5079,"title":{},"body":{"coverage.html":{}}}],["121566c",{"_index":5761,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["13/16",{"_index":5019,"title":{},"body":{"coverage.html":{}}}],["13/29",{"_index":5031,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":5255,"title":{},"body":{"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["14/18",{"_index":5022,"title":{},"body":{"coverage.html":{}}}],["14/19",{"_index":5073,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":5666,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["15/25",{"_index":5033,"title":{},"body":{"coverage.html":{}}}],["15/26",{"_index":5091,"title":{},"body":{"coverage.html":{}}}],["16/16",{"_index":4982,"title":{},"body":{"coverage.html":{}}}],["16/18",{"_index":5054,"title":{},"body":{"coverage.html":{}}}],["17/22",{"_index":5065,"title":{},"body":{"coverage.html":{}}}],["18/21",{"_index":5099,"title":{},"body":{"coverage.html":{}}}],["18/28",{"_index":5057,"title":{},"body":{"coverage.html":{}}}],["187",{"_index":5733,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["19",{"_index":5254,"title":{},"body":{"overview.html":{}}}],["1].id",{"_index":418,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["1].indexof(tab.route",{"_index":4626,"title":{},"body":{"components/TabsComponent.html":{}}}],["1].property",{"_index":3027,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["1c382d1",{"_index":5753,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["1cb8b1c",{"_index":5868,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["1cfc328",{"_index":5721,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["1d9e231",{"_index":5860,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["2",{"_index":907,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["2.0.1",{"_index":5166,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":5338,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["2.6.5",{"_index":5160,"title":{},"body":{"dependencies.html":{}}}],["2.html",{"_index":5510,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["2/2",{"_index":5066,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5116,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2819,"title":{},"body":{"components/ListComponent.html":{}}}],["20/21",{"_index":5139,"title":{},"body":{"coverage.html":{}}}],["20/23",{"_index":5036,"title":{},"body":{"coverage.html":{}}}],["20/26",{"_index":4965,"title":{},"body":{"coverage.html":{}}}],["20/28",{"_index":5114,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":2444,"title":{},"body":{"directives/ImageDirective.html":{},"components/TinymceComponent.html":{}}}],["2000",{"_index":3114,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2019",{"_index":5554,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["21",{"_index":5253,"title":{},"body":{"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["21/22",{"_index":5140,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":5644,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["22/22",{"_index":5000,"title":{},"body":{"coverage.html":{}}}],["22/24",{"_index":4995,"title":{},"body":{"coverage.html":{}}}],["22/28",{"_index":5123,"title":{},"body":{"coverage.html":{}}}],["22/36",{"_index":5074,"title":{},"body":{"coverage.html":{}}}],["229",{"_index":5915,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["232",{"_index":5820,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["237",{"_index":5654,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["24",{"_index":5556,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["24868b9",{"_index":5741,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["25",{"_index":3887,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["25/26",{"_index":5141,"title":{},"body":{"coverage.html":{}}}],["25/31",{"_index":5128,"title":{},"body":{"coverage.html":{}}}],["25/36",{"_index":4974,"title":{},"body":{"coverage.html":{}}}],["25/42",{"_index":5045,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":5919,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["259",{"_index":5582,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["25a36aa",{"_index":5839,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["26",{"_index":5590,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["26/26",{"_index":4996,"title":{},"body":{"coverage.html":{}}}],["26/38",{"_index":4978,"title":{},"body":{"coverage.html":{}}}],["261",{"_index":5779,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["263",{"_index":1809,"title":{},"body":{"injectables/EntryService.html":{}}}],["267",{"_index":5781,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["27",{"_index":4100,"title":{},"body":{"injectables/PopService.html":{}}}],["27/27",{"_index":5020,"title":{},"body":{"coverage.html":{}}}],["277",{"_index":5653,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["28",{"_index":5703,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["2826ac4",{"_index":5758,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["289",{"_index":5811,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["29",{"_index":5619,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["29/31",{"_index":4991,"title":{},"body":{"coverage.html":{}}}],["29/37",{"_index":5126,"title":{},"body":{"coverage.html":{}}}],["29/40",{"_index":5082,"title":{},"body":{"coverage.html":{}}}],["293",{"_index":5593,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["29a9e1",{"_index":3447,"title":{},"body":{"components/MenuComponent.html":{}}}],["2b0b354",{"_index":5659,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["2d2e536",{"_index":5579,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["2e0756e",{"_index":5778,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["2e97a10",{"_index":5639,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["3",{"_index":908,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["3.13.1",{"_index":5164,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":4983,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5007,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":5063,"title":{},"body":{"coverage.html":{}}}],["30/31",{"_index":4987,"title":{},"body":{"coverage.html":{}}}],["30/35",{"_index":5078,"title":{},"body":{"coverage.html":{}}}],["30/42",{"_index":5038,"title":{},"body":{"coverage.html":{}}}],["30/44",{"_index":4980,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":3179,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["32/35",{"_index":5107,"title":{},"body":{"coverage.html":{}}}],["32/47",{"_index":5032,"title":{},"body":{"coverage.html":{}}}],["330",{"_index":5601,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["336ba95",{"_index":5585,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["34/44",{"_index":5080,"title":{},"body":{"coverage.html":{}}}],["343",{"_index":5586,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["348",{"_index":5584,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["35/66",{"_index":5102,"title":{},"body":{"coverage.html":{}}}],["35022a6",{"_index":5635,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["36/53",{"_index":5132,"title":{},"body":{"coverage.html":{}}}],["363",{"_index":5774,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["364",{"_index":5566,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["364482b",{"_index":5757,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["373bebf",{"_index":5911,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["38",{"_index":5118,"title":{},"body":{"coverage.html":{}}}],["388924d",{"_index":5576,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["39;muffin",{"_index":3641,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["3fb8f47",{"_index":5866,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["3fe4aaf",{"_index":5572,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["4",{"_index":3541,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["4.3.6",{"_index":5335,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["4.7.4",{"_index":5980,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["4.9.3",{"_index":5169,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":4988,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":5113,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":5112,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":5025,"title":{},"body":{"coverage.html":{}}}],["40/44",{"_index":5029,"title":{},"body":{"coverage.html":{}}}],["40/46",{"_index":5075,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":2486,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["42",{"_index":1430,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["42/44",{"_index":4999,"title":{},"body":{"coverage.html":{}}}],["42301aa",{"_index":5686,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["43/43",{"_index":4985,"title":{},"body":{"coverage.html":{}}}],["431e3fd",{"_index":5737,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["43c7da5",{"_index":5723,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["44",{"_index":5030,"title":{},"body":{"coverage.html":{}}}],["44/58",{"_index":4972,"title":{},"body":{"coverage.html":{}}}],["45b12e4",{"_index":5607,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["4650da9",{"_index":5672,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["46d4a1f",{"_index":5836,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["47/50",{"_index":5003,"title":{},"body":{"coverage.html":{}}}],["47a7930",{"_index":5763,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["48.8093253",{"_index":3158,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["4920dd4",{"_index":5692,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["4a14246",{"_index":5728,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["4a5ea9",{"_index":3449,"title":{},"body":{"components/MenuComponent.html":{}}}],["5",{"_index":1963,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["5.0.0",{"_index":2243,"title":{},"body":{"injectables/FormService.html":{}}}],["5.23.2",{"_index":5165,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":5124,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":5089,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":5144,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3453,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["500",{"_index":3461,"title":{},"body":{"components/MenuComponent.html":{}}}],["5000",{"_index":3841,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["500px",{"_index":197,"title":{},"body":{"components/AceComponent.html":{}}}],["50e2d98",{"_index":5862,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["52dc850",{"_index":5564,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["53",{"_index":5101,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":5085,"title":{},"body":{"coverage.html":{}}}],["54/84",{"_index":5047,"title":{},"body":{"coverage.html":{}}}],["56/61",{"_index":5081,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":5090,"title":{},"body":{"coverage.html":{}}}],["57/95",{"_index":5062,"title":{},"body":{"coverage.html":{}}}],["58/86",{"_index":5084,"title":{},"body":{"coverage.html":{}}}],["5892365",{"_index":5742,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["59",{"_index":5044,"title":{},"body":{"coverage.html":{}}}],["5af4631",{"_index":5613,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["5see",{"_index":3926,"title":{},"body":{"classes/Pagination.html":{}}}],["5the",{"_index":1965,"title":{},"body":{"classes/Field.html":{}}}],["6",{"_index":926,"title":{},"body":{"classes/Collection.html":{},"components/ImageSelectPopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["6.3.3",{"_index":5168,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":5086,"title":{},"body":{"coverage.html":{}}}],["6/14",{"_index":5027,"title":{},"body":{"coverage.html":{}}}],["6/15",{"_index":5026,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":5056,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":5092,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":5023,"title":{},"body":{"coverage.html":{}}}],["600d7ac",{"_index":5936,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["61",{"_index":5005,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":5143,"title":{},"body":{"coverage.html":{}}}],["62162b7",{"_index":5567,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["624aecf",{"_index":5664,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["63",{"_index":5014,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":5046,"title":{},"body":{"coverage.html":{}}}],["64/94",{"_index":5039,"title":{},"body":{"coverage.html":{}}}],["651f1de",{"_index":5682,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["65fa558",{"_index":5934,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["66",{"_index":5115,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":5083,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":4977,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["68f12f5",{"_index":5684,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["69",{"_index":4973,"title":{},"body":{"coverage.html":{}}}],["6e961b8",{"_index":5710,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["6f53065",{"_index":5636,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["7",{"_index":927,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["7.2.0",{"_index":5309,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["7.2.1",{"_index":5227,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["7.2.7",{"_index":5154,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":5015,"title":{},"body":{"coverage.html":{}}}],["7/23",{"_index":5064,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":5055,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":5052,"title":{},"body":{"coverage.html":{}}}],["70d5e24",{"_index":5869,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["71",{"_index":5037,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":5016,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":5072,"title":{},"body":{"coverage.html":{}}}],["7430c70",{"_index":5838,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["75",{"_index":4971,"title":{},"body":{"coverage.html":{}}}],["7580583",{"_index":5759,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["76",{"_index":4964,"title":{},"body":{"coverage.html":{}}}],["7664cb2",{"_index":5795,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["77",{"_index":5021,"title":{},"body":{"coverage.html":{}}}],["7733151",{"_index":5849,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["77a8486",{"_index":5789,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["78",{"_index":5122,"title":{},"body":{"coverage.html":{}}}],["789e7ca",{"_index":5725,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["79c1a6d",{"_index":5698,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["7a88da8",{"_index":5871,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["7d50c5f",{"_index":5807,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["7dcaf42",{"_index":5587,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["7f99383",{"_index":5640,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["8",{"_index":2817,"title":{},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["8/10",{"_index":5108,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":5017,"title":{},"body":{"coverage.html":{}}}],["8/13",{"_index":5070,"title":{},"body":{"coverage.html":{}}}],["8/21",{"_index":5119,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":5127,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":5094,"title":{},"body":{"coverage.html":{}}}],["80b8030",{"_index":5787,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["80eecab",{"_index":5775,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["81",{"_index":5018,"title":{},"body":{"coverage.html":{}}}],["8236caf",{"_index":5771,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["83",{"_index":5088,"title":{},"body":{"coverage.html":{}}}],["83cc6374",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/SdkService.html":{}}}],["84",{"_index":5008,"title":{},"body":{"coverage.html":{}}}],["846039a",{"_index":5577,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["85",{"_index":5040,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":5035,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":5051,"title":{},"body":{"coverage.html":{}}}],["878e9df",{"_index":5829,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["88",{"_index":5053,"title":{},"body":{"coverage.html":{}}}],["8ab4791",{"_index":5796,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["8abc48b",{"_index":5695,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["8f56fb2",{"_index":5817,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["8fab72f",{"_index":5989,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["9",{"_index":2045,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/PopService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["9.1.3",{"_index":5156,"title":{},"body":{"dependencies.html":{}}}],["9.159388100000001",{"_index":3159,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["9/10",{"_index":5042,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":5135,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":5028,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":4994,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":5048,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":4990,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":5002,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":4998,"title":{},"body":{"coverage.html":{}}}],["95f8cc1",{"_index":5949,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["96",{"_index":4986,"title":{},"body":{"coverage.html":{}}}],["96a29d70d11b",{"_index":3534,"title":{},"body":{"components/ModalComponent.html":{}}}],["9776",{"_index":3030,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["98ae3d0",{"_index":5674,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["9915311",{"_index":5812,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["9a",{"_index":3704,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["9bf067d",{"_index":5765,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["9e23457",{"_index":5690,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["9e671b9",{"_index":5740,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["9ea65ad",{"_index":5628,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["_",{"_index":193,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"injectables/EntryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["_'@ec.components/$1'_",{"_index":5286,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["_'@ec.components/(\\w+).*'_",{"_index":5285,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["_]{22}$/.test(id",{"_index":2046,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["_]{7,14",{"_index":3706,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_api",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["_api.login(email",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["_api.resetpassword(email",{"_index":840,"title":{},"body":{"injectables/AuthService.html":{}}}],["_blank",{"_index":2731,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["_created",{"_index":3654,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["_creator",{"_index":3662,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_entry",{"_index":1803,"title":{},"body":{"injectables/EntryService.html":{}}}],["_entrytitle",{"_index":3708,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_item.id",{"_index":1638,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["_items",{"_index":4477,"title":{},"body":{"classes/Sorter.html":{}}}],["_items.indexof(item",{"_index":4478,"title":{},"body":{"classes/Sorter.html":{}}}],["_methods",{"_index":835,"title":{},"body":{"injectables/AuthService.html":{}}}],["_methods.filter((x",{"_index":833,"title":{},"body":{"injectables/AuthService.html":{}}}],["_modified",{"_index":3660,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_moment",{"_index":1444,"title":{},"body":{"interfaces/Day.html":{}}}],["_resource",{"_index":4262,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["_toggle",{"_index":4065,"title":{},"body":{"components/PopComponent.html":{}}}],["_upload",{"_index":4870,"title":{},"body":{"components/UploadComponent.html":{}}}],["a.path",{"_index":4146,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["a.then((r",{"_index":829,"title":{},"body":{"injectables/AuthService.html":{}}}],["a08a9d6",{"_index":5751,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a2b4ace",{"_index":5597,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a542c43",{"_index":5646,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a992381",{"_index":5732,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ab86f41",{"_index":5625,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["above",{"_index":1966,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["abstract",{"_index":1002,"title":{},"body":{"classes/Config.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{}}}],["abstractcontrol",{"_index":2225,"title":{},"body":{"injectables/FormService.html":{},"components/InputComponent.html":{}}}],["abstraction",{"_index":5475,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["ac3bb86",{"_index":5648,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ac4aec3",{"_index":5920,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["ac83326",{"_index":5562,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["accepts",{"_index":3856,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["access",{"_index":2591,"title":{},"body":{"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["access=public",{"_index":5220,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["accessed",{"_index":5483,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["accessible",{"_index":1163,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Symbol.html":{}}}],["accessors",{"_index":4295,"title":{},"body":{"injectables/SdkService.html":{}}}],["according",{"_index":3919,"title":{},"body":{"classes/Pagination.html":{}}}],["account",{"_index":451,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["accountresource",{"_index":3280,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["accounts",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["accounts(environment.environment",{"_index":4353,"title":{},"body":{"injectables/SdkService.html":{}}}],["ace",{"_index":14,"title":{"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog/ace-changelog.html":{}},"body":{"components/AceComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ace'},{'name",{"_index":204,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ace.component",{"_index":365,"title":{},"body":{"modules/AceModule.html":{}}}],["ace.component.html",{"_index":38,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.component.scss",{"_index":36,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.edit(this.container.nativeelement",{"_index":174,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/mode",{"_index":109,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/theme",{"_index":112,"title":{},"body":{"components/AceComponent.html":{}}}],["acecomponent",{"_index":1,"title":{"components/AceComponent.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acemodule",{"_index":346,"title":{"modules/AceModule.html":{}},"body":{"modules/AceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["acemoduleconfig",{"_index":366,"title":{},"body":{"modules/AceModule.html":{},"coverage.html":{}}}],["act",{"_index":4515,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["action",{"_index":369,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["action(item.getbody().data",{"_index":4118,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar",{"_index":382,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["actionbar'},{'name",{"_index":206,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["actionbar.component",{"_index":4215,"title":{},"body":{"modules/ResourceModule.html":{}}}],["actionbar.component.ts",{"_index":4110,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["actionbar.dropdownloader",{"_index":4139,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar.dropdownloader.wait(loading",{"_index":4140,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar.loadactions(actions",{"_index":4137,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar/actionbar.component",{"_index":4381,"title":{},"body":{"modules/SelectModule.html":{}}}],["actionbar/api",{"_index":4216,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["actionbar/resource",{"_index":4109,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["actionbarcomponent",{"_index":205,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actionbarconfig",{"_index":383,"title":{"interfaces/ActionbarConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"coverage.html":{}}}],["actionfunction",{"_index":376,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":391,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["actions.length",{"_index":4155,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actions.push",{"_index":4121,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionsbefore",{"_index":409,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["actionstack",{"_index":392,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["activate",{"_index":2735,"title":{},"body":{"injectables/KeycommandsService.html":{},"components/TabComponent.html":{}}}],["activate(keyconfig",{"_index":2714,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["activated",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["activatedroute",{"_index":604,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{}}}],["active",{"_index":1183,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{}}}],["active>a",{"_index":3523,"title":{},"body":{"components/MenuComponent.html":{}}}],["activies",{"_index":3127,"title":{},"body":{"components/LoaderComponent.html":{}}}],["activity",{"_index":3100,"title":{},"body":{"components/LoaderComponent.html":{}}}],["acts",{"_index":1514,"title":{},"body":{"directives/DropzoneDirective.html":{},"classes/Sorter.html":{}}}],["actual",{"_index":3033,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["actual_component",{"_index":341,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ad58c68",{"_index":5770,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["add",{"_index":632,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["add(item",{"_index":915,"title":{},"body":{"classes/Collection.html":{}}}],["add3ee6",{"_index":5801,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["addall",{"_index":893,"title":{},"body":{"classes/Collection.html":{}}}],["addall(items",{"_index":923,"title":{},"body":{"classes/Collection.html":{}}}],["added",{"_index":920,"title":{},"body":{"classes/Collection.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["addfield",{"_index":2193,"title":{},"body":{"injectables/FormService.html":{}}}],["addfield(field",{"_index":2201,"title":{},"body":{"injectables/FormService.html":{}}}],["addimagebyurl",{"_index":4645,"title":{},"body":{"components/TinymceComponent.html":{}}}],["addimagebyurl(url",{"_index":4665,"title":{},"body":{"components/TinymceComponent.html":{}}}],["adding",{"_index":5205,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["additional",{"_index":3312,"title":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}},"body":{"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{}}}],["address",{"_index":2279,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{}}}],["adds",{"_index":919,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{}}}],["addtostack",{"_index":424,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["admin",{"_index":455,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["adminentryinputcomponent",{"_index":207,"title":{"components/AdminEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adresse",{"_index":4014,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["advanced",{"_index":3770,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["advantage",{"_index":3117,"title":{},"body":{"components/LoaderComponent.html":{}}}],["af10188",{"_index":5780,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["affect",{"_index":5435,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["aftercontentinit",{"_index":4598,"title":{},"body":{"components/TabsComponent.html":{}}}],["afterviewinit",{"_index":1475,"title":{},"body":{"components/DefaultInputComponent.html":{},"directives/FocusDirective.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["afterwards",{"_index":3557,"title":{},"body":{"components/ModalComponent.html":{}}}],["agm",{"_index":3180,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["agm/core",{"_index":2289,"title":{},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"dependencies.html":{}}}],["agmcoremodule",{"_index":3192,"title":{},"body":{"modules/LocationModule.html":{}}}],["agmcoremodule.forroot",{"_index":3198,"title":{},"body":{"modules/LocationModule.html":{}}}],["agnostic",{"_index":5524,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["aizasyadgeue1yxo1f",{"_index":3200,"title":{},"body":{"modules/LocationModule.html":{}}}],["algorithm",{"_index":4457,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.resolve",{"_index":4486,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.sort(property",{"_index":4488,"title":{},"body":{"classes/Sorter.html":{}}}],["aliases",{"_index":5257,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["allows",{"_index":1124,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["along",{"_index":5364,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["already",{"_index":3834,"title":{},"body":{"injectables/NotificationsService.html":{},"classes/Pagination.html":{}}}],["als",{"_index":5409,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["alt",{"_index":2503,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["alter(value",{"_index":1459,"title":{},"body":{"interfaces/Day.html":{}}}],["altered",{"_index":4274,"title":{},"body":{"interfaces/SdkField.html":{}}}],["alternative",{"_index":2479,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ToggleComponent.html":{}}}],["alternatively",{"_index":5461,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["always",{"_index":1146,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["alwaysloadentry",{"_index":1126,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["alwaysshowheader",{"_index":2863,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["amazement",{"_index":5406,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["amazement_factor",{"_index":5405,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amazement_factor>=5",{"_index":5456,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amazing",{"_index":5427,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amount",{"_index":3744,"title":{},"body":{"classes/Notification.html":{}}}],["angezeigt",{"_index":678,"title":{},"body":{"guards/AuthGuard.html":{}}}],["angular",{"_index":16,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"components/AceComponent.html":{},"injectables/FormService.html":{},"components/MenuComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["angular.json",{"_index":5311,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["angular/animations",{"_index":5153,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cli",{"_index":5333,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/clithe",{"_index":5332,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/common",{"_index":697,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/compiler",{"_index":5155,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/core",{"_index":154,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/core/src/metadata/lifecycle_hooks",{"_index":3056,"title":{},"body":{"components/ListItemsComponent.html":{},"components/PaginationComponent.html":{}}}],["angular/datamanager",{"_index":5184,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["angular/forms",{"_index":155,"title":{},"body":{"components/AceComponent.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/http",{"_index":5336,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/language",{"_index":5337,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/platform",{"_index":2122,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/router",{"_index":661,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular7",{"_index":5260,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["animate",{"_index":3543,"title":{},"body":{"components/ModalComponent.html":{}}}],["animation",{"_index":3537,"title":{},"body":{"components/ModalComponent.html":{}}}],["another",{"_index":668,"title":{},"body":{"guards/AuthGuard.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["anweisungen",{"_index":4032,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["anything",{"_index":5277,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["anywhere",{"_index":1896,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{}}}],["api",{"_index":209,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["api(api",{"_index":4342,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.asset(this.assetid).then((asset",{"_index":535,"title":{},"body":{"directives/AssetDirective.html":{}}}],["api.checkpermission(permission",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.getschema(model",{"_index":4368,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.logout",{"_index":841,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.resourcelist",{"_index":572,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["api.signup(email",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiactionbarcomponent",{"_index":208,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apikey",{"_index":3199,"title":{},"body":{"modules/LocationModule.html":{}}}],["apiresolved",{"_index":4287,"title":{},"body":{"injectables/SdkService.html":{}}}],["apis",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["app",{"_index":3758,"title":{},"body":{"components/NotificationsComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["app.component",{"_index":5376,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["app.component.html",{"_index":4504,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/stackblitz.html":{}}}],["app.module",{"_index":5544,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["appcomponent",{"_index":4505,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["appear",{"_index":1893,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/UploadComponent.html":{}}}],["appears",{"_index":4061,"title":{},"body":{"components/PopComponent.html":{}}}],["append",{"_index":1593,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["appended",{"_index":3732,"title":{},"body":{"classes/Notification.html":{}}}],["appletree",{"_index":2814,"title":{},"body":{"components/ListComponent.html":{}}}],["application",{"_index":4650,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["applicationref",{"_index":4648,"title":{},"body":{"components/TinymceComponent.html":{}}}],["applications",{"_index":5180,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["apply",{"_index":1324,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ModalComponent.html":{}}}],["applyconfig",{"_index":2892,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["applyconfig(list",{"_index":2896,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["appmodule",{"_index":5363,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["approutingmodule",{"_index":5361,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["arbitrary",{"_index":3922,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{}}}],["architect",{"_index":5312,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["area",{"_index":4041,"title":{},"body":{"components/PopComponent.html":{}}}],["argument",{"_index":1810,"title":{},"body":{"injectables/EntryService.html":{},"components/ListComponent.html":{}}}],["arguments",{"_index":1521,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["around",{"_index":3973,"title":{},"body":{"components/PaginationComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["array",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["array(42",{"_index":1408,"title":{},"body":{"interfaces/Day.html":{}}}],["array(math.ceil(this.total",{"_index":3940,"title":{},"body":{"classes/Pagination.html":{}}}],["array.from",{"_index":3928,"title":{},"body":{"classes/Pagination.html":{}}}],["array.isarray(asset",{"_index":2039,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["array.isarray(pattern",{"_index":1295,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["array.slice(start",{"_index":3378,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["artifacts",{"_index":5236,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["asking",{"_index":3833,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asks",{"_index":3840,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asobservable",{"_index":1349,"title":{},"body":{"interfaces/Day.html":{},"components/TinymceComponent.html":{}}}],["asset",{"_index":214,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["asset(value.img",{"_index":2506,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.assetid",{"_index":2042,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["asset.file.resolution",{"_index":2528,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getfilevariant(this.size",{"_index":2470,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimagethumburl(this.size",{"_index":2472,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimageurl(size",{"_index":2508,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getimageurl(this.size",{"_index":2473,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getoriginalfile",{"_index":2522,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.id",{"_index":2468,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.reduce",{"_index":2040,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["asset.title",{"_index":2525,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.type",{"_index":2466,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset/asset.directive",{"_index":2126,"title":{},"body":{"modules/FilesModule.html":{},"directives/ImageDirective.html":{}}}],["assetdirective",{"_index":326,"title":{"directives/AssetDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetgroup",{"_index":211,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["assetgroupid",{"_index":615,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["assetgroupids",{"_index":2021,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist",{"_index":2012,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist(forcereload",{"_index":2102,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplistpromise",{"_index":2013,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgroups",{"_index":616,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["assetgroupselectcomponent",{"_index":210,"title":{"components/AssetgroupSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetid",{"_index":477,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["assetids",{"_index":2075,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetlist.getallitems",{"_index":2060,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetlistcomponent",{"_index":213,"title":{"components/AssetListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetlistpopcomponent",{"_index":216,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assets",{"_index":638,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["assets.map((asset",{"_index":2063,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets.reduce((ids",{"_index":2085,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets/asset",{"_index":473,"title":{},"body":{"directives/AssetDirective.html":{}}}],["assets[0",{"_index":2061,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetselectcomponent",{"_index":219,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assign",{"_index":1814,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["assigning",{"_index":1880,"title":{},"body":{"classes/Field.html":{}}}],["assigns",{"_index":2451,"title":{},"body":{"directives/ImageDirective.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{}}}],["associated",{"_index":1900,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{}}}],["assumes",{"_index":5371,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["async",{"_index":422,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{}}}],["attempt",{"_index":3790,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["attributes",{"_index":1567,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["audio",{"_index":2026,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["auth",{"_index":693,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["auth.service",{"_index":705,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["auth/auth.module",{"_index":1217,"title":{},"body":{"modules/DataModule.html":{}}}],["auth/auth.service",{"_index":1078,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["authentication",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["authguard",{"_index":640,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":684,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":5367,"title":{"additional-documentation/project-setup-tutorial/authorization.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["authservice",{"_index":691,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":2437,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{}}}],["autocomplete",{"_index":2275,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["autocomplete.addlistener('place_changed",{"_index":2295,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocomplete.getplace",{"_index":2298,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress",{"_index":2264,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress(el",{"_index":2273,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autofocus",{"_index":1859,"title":{},"body":{"classes/Field.html":{},"directives/FocusDirective.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["autofocused",{"_index":2984,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["autofocusfirst",{"_index":2767,"title":{},"body":{"components/ListComponent.html":{}}}],["autoload",{"_index":478,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{}}}],["autoload=false",{"_index":501,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["automatic",{"_index":5415,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["automatically",{"_index":1972,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Notification.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["availabe",{"_index":80,"title":{},"body":{"components/AceComponent.html":{}}}],["available",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["available.validator.ts",{"_index":5011,"title":{},"body":{"coverage.html":{}}}],["availablesizes",{"_index":2864,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["avatar",{"_index":4763,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["avatars",{"_index":4765,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["await",{"_index":428,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/ModelConfigService.html":{}}}],["b",{"_index":828,"title":{},"body":{"injectables/AuthService.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{},"additional-documentation/readme/style-readme.html":{}}}],["b(r",{"_index":830,"title":{},"body":{"injectables/AuthService.html":{}}}],["b.resolve",{"_index":4487,"title":{},"body":{"classes/Sorter.html":{}}}],["b.sort(property",{"_index":4489,"title":{},"body":{"classes/Sorter.html":{}}}],["b0c6065",{"_index":5782,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b2cf446",{"_index":5669,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b365847",{"_index":5983,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["b3e8115",{"_index":5897,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["b461540",{"_index":5591,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b4d03eb",{"_index":5745,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b5a578d",{"_index":5655,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["b603867",{"_index":5916,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["b6ec56b",{"_index":5772,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b7460e6",{"_index":5859,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b760780",{"_index":5872,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b7d33e2",{"_index":5651,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b900b38",{"_index":5594,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ba52443",{"_index":5701,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["back",{"_index":1178,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"components/ModalComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["backdrop",{"_index":1712,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["backend",{"_index":5442,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["backenderrorcodes",{"_index":5013,"title":{},"body":{"coverage.html":{}}}],["background",{"_index":1326,"title":{},"body":{"interfaces/Day.html":{}}}],["bake",{"_index":3780,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["baken",{"_index":3782,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bakery:bakeryservice",{"_index":3779,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["baking",{"_index":3785,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["ball",{"_index":3771,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bar",{"_index":4117,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["barrel",{"_index":5851,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["base",{"_index":4467,"title":{},"body":{"classes/Sorter.html":{},"injectables/TypeConfigService.html":{}}}],["based",{"_index":1923,"title":{},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["basic",{"_index":1474,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/ListComponent.html":{}}}],["basis",{"_index":1448,"title":{},"body":{"interfaces/Day.html":{}}}],["bbe7ba3",{"_index":5773,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["bc9bb53",{"_index":5650,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bcbbc51",{"_index":5803,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["bcbefd1",{"_index":5738,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bd766bf",{"_index":5600,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["before",{"_index":569,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["beforehand",{"_index":5432,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["beforesave",{"_index":1860,"title":{},"body":{"classes/Field.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["begin",{"_index":1403,"title":{},"body":{"interfaces/Day.html":{}}}],["begin.clone().add(index",{"_index":1411,"title":{},"body":{"interfaces/Day.html":{}}}],["behaviour",{"_index":3591,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["beim",{"_index":4036,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["being",{"_index":3894,"title":{},"body":{"classes/Pagination.html":{},"components/TinymceComponent.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["belonging",{"_index":2561,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["below",{"_index":3738,"title":{},"body":{"classes/Notification.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["beneath",{"_index":2645,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["beschreibung",{"_index":3765,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["beta.5",{"_index":5152,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":3126,"title":{},"body":{"components/LoaderComponent.html":{}}}],["between",{"_index":2191,"title":{},"body":{"injectables/FormService.html":{}}}],["bilder",{"_index":5400,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["bind",{"_index":5325,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["binding",{"_index":5857,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["birch",{"_index":2818,"title":{},"body":{"components/ListComponent.html":{}}}],["blur",{"_index":2241,"title":{},"body":{"injectables/FormService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["bobby",{"_index":1960,"title":{},"body":{"classes/Field.html":{}}}],["body",{"_index":1944,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.amazement_factor",{"_index":5434,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.amazement_factor*body.flavour/body.price",{"_index":5439,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.value.name",{"_index":1954,"title":{},"body":{"classes/Field.html":{}}}],["boolean",{"_index":377,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["booleans",{"_index":4472,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":350,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["both",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/adding-new-packages.html":{}}}],["bound",{"_index":1519,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["box",{"_index":1015,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["breaking",{"_index":5261,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["breaks",{"_index":4657,"title":{},"body":{"components/TinymceComponent.html":{}}}],["broadcast",{"_index":4245,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["broken",{"_index":5760,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["browse",{"_index":4889,"title":{},"body":{"components/UploadSelectComponent.html":{},"modules.html":{}}}],["browser",{"_index":2123,"title":{},"body":{"modules/FilesModule.html":{},"injectables/NotificationsService.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["browsermodule",{"_index":2121,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["btn._clear",{"_index":5910,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["bubbling",{"_index":5762,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["buchstaben",{"_index":1957,"title":{},"body":{"classes/Field.html":{}}}],["bug",{"_index":5560,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["bugged",{"_index":5724,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bugs",{"_index":5624,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["build",{"_index":5235,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["builder",{"_index":5313,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders",{"_index":5304,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders/custom",{"_index":5305,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders/dev",{"_index":5306,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builds",{"_index":5157,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["builds/blob/master/src/ext",{"_index":170,"title":{},"body":{"components/AceComponent.html":{}}}],["builds/src",{"_index":157,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["builds/webpack",{"_index":159,"title":{},"body":{"components/AceComponent.html":{}}}],["built",{"_index":5185,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["bump",{"_index":5557,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["button",{"_index":1150,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FormConfig.html":{},"components/LoginFormComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["buttonclasses",{"_index":3300,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["buttonlabel",{"_index":3301,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["c",{"_index":5485,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["c0c7f17",{"_index":5806,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["c483625",{"_index":5679,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["c89591a",{"_index":5767,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["c950461",{"_index":5852,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["c9c8d4",{"_index":3450,"title":{},"body":{"components/MenuComponent.html":{}}}],["cache",{"_index":5638,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["caches",{"_index":4303,"title":{},"body":{"injectables/SdkService.html":{}}}],["calculcates",{"_index":3915,"title":{},"body":{"classes/Pagination.html":{}}}],["calendar",{"_index":860,"title":{"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog/calendar-changelog.html":{}},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["calendar'},{'name",{"_index":221,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["calendar/calendar.component",{"_index":868,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendar/month.component",{"_index":871,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendarcomponent",{"_index":220,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendarish",{"_index":1315,"title":{},"body":{"interfaces/Day.html":{}}}],["calendarmodule",{"_index":854,"title":{"modules/CalendarModule.html":{}},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["calendarmoduleconfig",{"_index":872,"title":{},"body":{"modules/CalendarModule.html":{},"coverage.html":{}}}],["calendars",{"_index":1426,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["call",{"_index":1614,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["callback",{"_index":99,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["called",{"_index":499,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/publishing.html":{}}}],["calling",{"_index":1592,"title":{},"body":{"directives/EntriesDirective.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["calls",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TinymceComponent.html":{}}}],["can't",{"_index":5293,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["canactivate",{"_index":653,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["canalter(value",{"_index":1451,"title":{},"body":{"interfaces/Day.html":{}}}],["cancels",{"_index":3465,"title":{},"body":{"components/MenuComponent.html":{}}}],["canceltimeout",{"_index":3435,"title":{},"body":{"components/MenuComponent.html":{}}}],["cand",{"_index":3172,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["caption",{"_index":4666,"title":{},"body":{"components/TinymceComponent.html":{}}}],["case",{"_index":2601,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["catch",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch((err",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/EntryService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{}}}],["catch((error",{"_index":1630,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["catch(error",{"_index":3784,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["catched",{"_index":3094,"title":{},"body":{"components/LoaderComponent.html":{}}}],["caution",{"_index":4244,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["cb43986",{"_index":5583,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["cbe9627",{"_index":5627,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["ccc",{"_index":1332,"title":{},"body":{"interfaces/Day.html":{}}}],["cd",{"_index":5341,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["cd90ef7",{"_index":5951,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["cdn",{"_index":5543,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["cdr",{"_index":394,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["cea52fc",{"_index":5814,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["cell",{"_index":1311,"title":{},"body":{"interfaces/Day.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cells",{"_index":1320,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["center",{"_index":3157,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["certain",{"_index":2673,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/TypeConfigService.html":{}}}],["change",{"_index":98,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["change(e",{"_index":4827,"title":{},"body":{"components/UploadComponent.html":{}}}],["change(filter",{"_index":1754,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change)=\"updatesize($event.target.value",{"_index":3989,"title":{},"body":{"components/PaginationComponent.html":{}}}],["change.broadcast",{"_index":4248,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change.colors",{"_index":1398,"title":{},"body":{"interfaces/Day.html":{}}}],["change.date",{"_index":1395,"title":{},"body":{"interfaces/Day.html":{}}}],["change.heatmap",{"_index":1399,"title":{},"body":{"interfaces/Day.html":{}}}],["change.selected",{"_index":1393,"title":{},"body":{"interfaces/Day.html":{}}}],["change.timespan",{"_index":1397,"title":{},"body":{"interfaces/Day.html":{}}}],["change[key",{"_index":4250,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["changed",{"_index":1048,"title":{},"body":{"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["changedetection",{"_index":2390,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategy",{"_index":2411,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":2391,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectorref",{"_index":378,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["changelog",{"_index":4953,"title":{"changelog.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}},"body":{"changelog.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["changelog.md",{"_index":6018,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["changelogging",{"_index":5224,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["changes",{"_index":593,"title":{},"body":{"components/AssetListComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["changes.field",{"_index":2607,"title":{},"body":{"components/InputComponent.html":{}}}],["changes.list",{"_index":2997,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["changesenvironment",{"_index":4288,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["changespan",{"_index":1342,"title":{},"body":{"interfaces/Day.html":{}}}],["changing",{"_index":592,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["check",{"_index":665,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["checkbox",{"_index":2955,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ToggleComponent.html":{}}}],["checkboxes",{"_index":2879,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["checkpermission",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpermission(permission",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{}}}],["checks",{"_index":658,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/FileOptions.html":{},"components/ListItemsComponent.html":{},"interfaces/Upload.html":{}}}],["child",{"_index":3480,"title":{},"body":{"components/MenuComponent.html":{},"components/UploadComponent.html":{}}}],["child.data?.title",{"_index":3520,"title":{},"body":{"components/MenuComponent.html":{}}}],["child.path",{"_index":3521,"title":{},"body":{"components/MenuComponent.html":{}}}],["children",{"_index":5387,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["circular",{"_index":5630,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["class",{"_index":168,"title":{"classes/Collection.html":{},"classes/Config.html":{},"classes/Field.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/Sorter.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["class.is",{"_index":1506,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["class=\"input",{"_index":3990,"title":{},"body":{"components/PaginationComponent.html":{}}}],["classes",{"_index":888,"title":{},"body":{"classes/Collection.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"index.html":{},"overview.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["clean",{"_index":1749,"title":{},"body":{"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/ResourceService.html":{}}}],["clean(value",{"_index":1757,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["cleanreadonly",{"_index":1759,"title":{},"body":{"injectables/EntryService.html":{}}}],["clear",{"_index":1824,"title":{},"body":{"injectables/EntryService.html":{},"components/LocationSearchComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["cleared",{"_index":2987,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clearer",{"_index":5429,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["clearfilter",{"_index":2942,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clears",{"_index":1446,"title":{},"body":{"interfaces/Day.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["clearselection",{"_index":1447,"title":{},"body":{"interfaces/Day.html":{}}}],["cleartimeout(this.timeout",{"_index":3515,"title":{},"body":{"components/MenuComponent.html":{}}}],["cli",{"_index":5225,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["cli/issues/11041",{"_index":5982,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["click",{"_index":1686,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["clickeable",{"_index":2982,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clicked",{"_index":1046,"title":{},"body":{"components/CrudComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["clickedoutside($event",{"_index":4067,"title":{},"body":{"components/PopComponent.html":{}}}],["clickevent",{"_index":1671,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["clicking",{"_index":2983,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["clicks",{"_index":5421,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["client",{"_index":850,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clientid",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["clipboard",{"_index":2726,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["clone",{"_index":1404,"title":{},"body":{"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["close",{"_index":1690,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["closed",{"_index":2986,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["closes",{"_index":2342,"title":{},"body":{"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{}}}],["clubapp",{"_index":5488,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["clunky",{"_index":5452,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cluster_acemodule",{"_index":352,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_acecomponent_providers",{"_index":354,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_declarations",{"_index":353,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_exports",{"_index":356,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_imports",{"_index":355,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":685,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":686,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":688,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":687,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":689,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_calendarmodule",{"_index":855,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_declarations",{"_index":856,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_exports",{"_index":857,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_datamodule",{"_index":1198,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_declarations",{"_index":1199,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_exports",{"_index":1201,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_imports",{"_index":1200,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_providers",{"_index":1202,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":2115,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_declarations",{"_index":2116,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":2118,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":2117,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":2119,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":2160,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":2161,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":2163,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":2162,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":2164,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_iconmodule",{"_index":2422,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_declarations",{"_index":2423,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_exports",{"_index":2424,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_providers",{"_index":2425,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iomodule",{"_index":2663,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_declarations",{"_index":2664,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_exports",{"_index":2665,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_listmodule",{"_index":3062,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_declarations",{"_index":3063,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_exports",{"_index":3065,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_imports",{"_index":3064,"title":{},"body":{"modules/ListModule.html":{}}}],["cluster_listmodule_providers",{"_index":3066,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_loadermodule",{"_index":3138,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_declarations",{"_index":3139,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_exports",{"_index":3140,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_providers",{"_index":3141,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_locationmodule",{"_index":3182,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declarations",{"_index":3183,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_exports",{"_index":3185,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_imports",{"_index":3184,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_providers",{"_index":3186,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule",{"_index":3420,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_declarations",{"_index":3421,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_exports",{"_index":3423,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_mediumeditorcomponent_providers",{"_index":3422,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule",{"_index":3812,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_declarations",{"_index":3813,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_exports",{"_index":3815,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_imports",{"_index":3814,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_providers",{"_index":3816,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_popmodule",{"_index":4081,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_declarations",{"_index":4082,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_exports",{"_index":4084,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_imports",{"_index":4083,"title":{},"body":{"modules/PopModule.html":{}}}],["cluster_popmodule_providers",{"_index":4085,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_resourcemodule",{"_index":4206,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_declarations",{"_index":4207,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_exports",{"_index":4209,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_imports",{"_index":4208,"title":{},"body":{"modules/ResourceModule.html":{}}}],["cluster_resourcemodule_providers",{"_index":4210,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_sdkmodule",{"_index":4277,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_sdkmodule_providers",{"_index":4278,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_selectmodule",{"_index":4374,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_declarations",{"_index":4375,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_exports",{"_index":4378,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_imports",{"_index":4377,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_selectmodule_selectcomponent_providers",{"_index":4376,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_symbolmodule",{"_index":4495,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_declarations",{"_index":4496,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_exports",{"_index":4497,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_providers",{"_index":4498,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule",{"_index":4721,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_declarations",{"_index":4722,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_exports",{"_index":4723,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_uimodule",{"_index":4800,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_exports",{"_index":4802,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_imports",{"_index":4801,"title":{},"body":{"modules/UiModule.html":{}}}],["cluster_utilitymodule",{"_index":4922,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_declarations",{"_index":4923,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_exports",{"_index":4925,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_imports",{"_index":4924,"title":{},"body":{"modules/UtilityModule.html":{}}}],["cluster_utilitymodule_providers",{"_index":4926,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cmd+click",{"_index":5491,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["code",{"_index":4389,"title":{},"body":{"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["coded",{"_index":5480,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["col",{"_index":1922,"title":{},"body":{"classes/Field.html":{},"components/ModalComponent.html":{}}}],["collator",{"_index":4463,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{}}}],["collator.compare(a",{"_index":4470,"title":{},"body":{"classes/Sorter.html":{}}}],["collection",{"_index":887,"title":{"classes/Collection.html":{}},"body":{"classes/Collection.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"coverage.html":{}}}],["collection([1",{"_index":906,"title":{},"body":{"classes/Collection.html":{}}}],["collection.add(4",{"_index":955,"title":{},"body":{"classes/Collection.html":{}}}],["collection.addall([10,11,12",{"_index":959,"title":{},"body":{"classes/Collection.html":{}}}],["collection.has(1",{"_index":953,"title":{},"body":{"classes/Collection.html":{}}}],["collection.has(4",{"_index":954,"title":{},"body":{"classes/Collection.html":{}}}],["collection.hasall([1,10,11",{"_index":960,"title":{},"body":{"classes/Collection.html":{}}}],["collection.index(1",{"_index":957,"title":{},"body":{"classes/Collection.html":{}}}],["collection.remove(4",{"_index":956,"title":{},"body":{"classes/Collection.html":{}}}],["collection.removeall();it",{"_index":961,"title":{},"body":{"classes/Collection.html":{}}}],["collections",{"_index":2811,"title":{},"body":{"components/ListComponent.html":{}}}],["collects",{"_index":4323,"title":{},"body":{"injectables/SdkService.html":{},"modules/SymbolModule.html":{}}}],["color",{"_index":1318,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{}}}],["colors",{"_index":1323,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{}}}],["column",{"_index":1188,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["columnclick",{"_index":2761,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["columnclick(item",{"_index":2783,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["columnclicked",{"_index":1027,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["columns",{"_index":1924,"title":{},"body":{"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/PopService.html":{},"interfaces/SdkField.html":{}}}],["com",{"_index":5581,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["combination",{"_index":3756,"title":{},"body":{"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["combined",{"_index":5441,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["come",{"_index":453,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["comes",{"_index":2023,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/NotificationsService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["coming",{"_index":468,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["command",{"_index":5996,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["commented",{"_index":3121,"title":{},"body":{"components/LoaderComponent.html":{}}}],["commit",{"_index":5551,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["commits",{"_index":5222,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["commonmodule",{"_index":696,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UtilityModule.html":{}}}],["communicate",{"_index":3334,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["communicates",{"_index":3275,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupComponent.html":{}}}],["complaining",{"_index":3847,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["complete",{"_index":4826,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["complex",{"_index":5472,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["compliant",{"_index":5995,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["component",{"_index":0,"title":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["component(s",{"_index":6024,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["component_template",{"_index":203,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["componentfactory",{"_index":1575,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["componentfactoryresolver",{"_index":1549,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentinstance",{"_index":2552,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref",{"_index":1569,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentref.instance",{"_index":2622,"title":{},"body":{"components/InputComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["components.entrecode.de",{"_index":5192,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["concat",{"_index":5735,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["concat(actions",{"_index":430,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["concat(this.config.availablesizes",{"_index":3930,"title":{},"body":{"classes/Pagination.html":{}}}],["concat(this.getresourcelistactions(list",{"_index":4129,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["concat(this.timespan",{"_index":1364,"title":{},"body":{"interfaces/Day.html":{}}}],["concatted",{"_index":4123,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["concept",{"_index":1969,"title":{},"body":{"classes/Field.html":{}}}],["conceptualizes",{"_index":2981,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["config",{"_index":387,"title":{"classes/Config.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["config.fields",{"_index":1827,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key",{"_index":1828,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].beforesave",{"_index":1831,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].beforesave(value[key",{"_index":1832,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].immutable",{"_index":1829,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].readonly",{"_index":1830,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.filter",{"_index":2036,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["config.input",{"_index":4791,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.interface",{"_index":1076,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["config.interface.ts",{"_index":1123,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["config.interface.ts:11",{"_index":3996,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:6",{"_index":1987,"title":{},"body":{"interfaces/FieldConfig.html":{}}}],["config.interface.ts:7",{"_index":3999,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:9",{"_index":3997,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.output",{"_index":4792,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["config.service.ts",{"_index":2890,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["config.service.ts:122",{"_index":3634,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:13",{"_index":2903,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:143",{"_index":3624,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:15",{"_index":4759,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:17",{"_index":2905,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:175",{"_index":4746,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:179",{"_index":4752,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:19",{"_index":3604,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:195",{"_index":4758,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:205",{"_index":4749,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:210",{"_index":3607,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:212",{"_index":4747,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:217",{"_index":4753,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:22",{"_index":2899,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:222",{"_index":4754,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:23",{"_index":4785,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:241",{"_index":3630,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:34",{"_index":2907,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:37",{"_index":3619,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:43",{"_index":2897,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:52",{"_index":3639,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:57",{"_index":3635,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:6",{"_index":2908,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:8",{"_index":2901,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.view",{"_index":4790,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config/field",{"_index":1973,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["config/model",{"_index":1081,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["config/resource",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config/resource.service",{"_index":1782,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{}}}],["config/resource.service.ts",{"_index":4217,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["config/resource.service.ts:102",{"_index":4223,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:122",{"_index":4225,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:135",{"_index":4227,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:35",{"_index":4219,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:38",{"_index":4238,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:47",{"_index":4230,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:52",{"_index":4220,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:61",{"_index":4234,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:80",{"_index":4237,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:97",{"_index":4228,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/sdk",{"_index":4268,"title":{},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["config/type",{"_index":1230,"title":{},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config?.createlabel",{"_index":1121,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["configinput",{"_index":2829,"title":{},"body":{"components/ListComponent.html":{}}}],["configuration",{"_index":999,"title":{},"body":{"classes/Config.html":{},"interfaces/FieldConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["configuration.interface.ts",{"_index":3725,"title":{},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["configurations",{"_index":988,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["configure",{"_index":989,"title":{},"body":{"classes/Config.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["configure(key",{"_index":991,"title":{},"body":{"classes/Config.html":{}}}],["configure?(key",{"_index":1006,"title":{},"body":{"classes/Config.html":{}}}],["configured",{"_index":1054,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["configuring",{"_index":3592,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["confirmation",{"_index":1194,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["connect",{"_index":2631,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["connectcontrol",{"_index":2553,"title":{},"body":{"components/InputComponent.html":{}}}],["connector",{"_index":556,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["connectors",{"_index":560,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["considered",{"_index":5262,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["consistent",{"_index":1433,"title":{},"body":{"interfaces/Day.html":{}}}],["console.error('cannot",{"_index":4793,"title":{},"body":{"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["console.error('missing",{"_index":4788,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["console.error(err",{"_index":4871,"title":{},"body":{"components/UploadComponent.html":{}}}],["console.error(notification.error",{"_index":3853,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.log('cannot",{"_index":2918,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.log('could",{"_index":3288,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["console.log('entry',item.getbody(),item.id",{"_index":5422,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["console.log('error",{"_index":1111,"title":{},"body":{"components/CrudComponent.html":{}}}],["console.log('no",{"_index":4119,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["console.log('raw",{"_index":1291,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["console.log('received",{"_index":5521,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["console.log('routes",{"_index":3501,"title":{},"body":{"components/MenuComponent.html":{}}}],["console.log('should",{"_index":2541,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["console.warn",{"_index":2078,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["console.warn('addfield",{"_index":2246,"title":{},"body":{"injectables/FormService.html":{}}}],["console.warn('cannot",{"_index":1623,"title":{},"body":{"directives/EntriesDirective.html":{},"injectables/LoaderService.html":{},"classes/Sorter.html":{}}}],["console.warn('could",{"_index":2610,"title":{},"body":{"components/InputComponent.html":{}}}],["console.warn('field",{"_index":2932,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.warn('has",{"_index":971,"title":{},"body":{"classes/Collection.html":{}}}],["console.warn('no",{"_index":2111,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"interfaces/Upload.html":{}}}],["console.warn('notification.time",{"_index":3809,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["console.warn('this",{"_index":3860,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.warn('to",{"_index":4078,"title":{},"body":{"components/PopComponent.html":{}}}],["console.warn('tried",{"_index":2837,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{}}}],["console.warn('wont",{"_index":2091,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["console.warn(`ec",{"_index":3576,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.warn(`entryservice.change",{"_index":1786,"title":{},"body":{"injectables/EntryService.html":{}}}],["console.warn(`icon",{"_index":2416,"title":{},"body":{"components/IconComponent.html":{}}}],["console.warn(`relation",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":166,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"modules/UtilityModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/readme/core-readme.html":{}}}],["constructed",{"_index":1879,"title":{},"body":{"classes/Field.html":{}}}],["constructor",{"_index":458,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["constructor(@inject('environment",{"_index":4346,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(@inject('moment.format.date",{"_index":1288,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["constructor(@inject('moment.format.month",{"_index":1343,"title":{},"body":{"interfaces/Day.html":{}}}],["constructor(@inject('usedesktopnotifications",{"_index":3848,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(app",{"_index":4647,"title":{},"body":{"components/TinymceComponent.html":{}}}],["constructor(auth",{"_index":3264,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["constructor(cdr",{"_index":3038,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["constructor(componentfactoryresolver",{"_index":1548,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["constructor(config",{"_index":3885,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["constructor(el",{"_index":1510,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/TabComponent.html":{}}}],["constructor(element",{"_index":2137,"title":{},"body":{"directives/FocusDirective.html":{}}}],["constructor(entryservice",{"_index":3603,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["constructor(environment",{"_index":4296,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(fb",{"_index":3307,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(fileservice",{"_index":621,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["constructor(formservice",{"_index":1476,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["constructor(geocodeservice",{"_index":3211,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["constructor(host",{"_index":3084,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(iconservice",{"_index":2393,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(items",{"_index":901,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(listconfig",{"_index":2770,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["constructor(maploader",{"_index":2268,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["constructor(modelconfig",{"_index":1678,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["constructor(notification",{"_index":3728,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(notificationservice",{"_index":2338,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{}}}],["constructor(popservice",{"_index":2484,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["constructor(private",{"_index":670,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme/location-readme.html":{}}}],["constructor(property",{"_index":1877,"title":{},"body":{"classes/Field.html":{}}}],["constructor(protected",{"_index":3353,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PopComponent.html":{}}}],["constructor(public",{"_index":393,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["constructor(resourceconfig",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceListPopComponent.html":{}}}],["constructor(router",{"_index":2740,"title":{},"body":{"injectables/KeycommandsService.html":{},"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["constructor(sdk",{"_index":459,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"directives/ImageDirective.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/UploadComponent.html":{}}}],["constructor(symbol",{"_index":1839,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/InputErrorsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["constructor(usedesktopnotifications",{"_index":3828,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(viewcontainerref",{"_index":4441,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["constructors",{"_index":3830,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructs",{"_index":903,"title":{},"body":{"classes/Collection.html":{},"components/ModalComponent.html":{}}}],["consume",{"_index":5419,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["contacted",{"_index":4947,"title":{},"body":{"interfaces/WithLoader.html":{}}}],["contain",{"_index":1940,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"classes/Sorter.html":{}}}],["contained",{"_index":921,"title":{},"body":{"classes/Collection.html":{}}}],["container",{"_index":41,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["containing",{"_index":1337,"title":{},"body":{"interfaces/Day.html":{},"components/ListComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["contains",{"_index":659,"title":{},"body":{"guards/AuthGuard.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["content",{"_index":2387,"title":{},"body":{"components/IconComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["contentchildren",{"_index":3570,"title":{},"body":{"components/ModalComponent.html":{},"components/TabsComponent.html":{}}}],["contentchildren(tabcomponent",{"_index":4614,"title":{},"body":{"components/TabsComponent.html":{}}}],["contentchildren(templateref",{"_index":3563,"title":{},"body":{"components/ModalComponent.html":{}}}],["contents",{"_index":2676,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["context",{"_index":4969,"title":{},"body":{"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["contexts",{"_index":2687,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["control",{"_index":47,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Pagination.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["control's",{"_index":2643,"title":{},"body":{"components/InputErrorsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["controls",{"_index":2231,"title":{},"body":{"injectables/FormService.html":{},"classes/PaginationConfig.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["controls[field.property",{"_index":2237,"title":{},"body":{"injectables/FormService.html":{}}}],["controlvalueaccessor",{"_index":18,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["controlvalueaccessor#setdisabled",{"_index":2596,"title":{},"body":{"components/InputComponent.html":{}}}],["conventional",{"_index":5221,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["cookie",{"_index":703,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["cookiefactory",{"_index":690,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["cookiemodule",{"_index":701,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{}}}],["cookiemodule.forroot",{"_index":712,"title":{},"body":{"modules/AuthModule.html":{}}}],["coords",{"_index":2301,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{}}}],["coords.lat",{"_index":3176,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["coords.lng",{"_index":3175,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["copied",{"_index":2725,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["copy",{"_index":3652,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["copyable",{"_index":5612,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["copycelltoclipboard",{"_index":2736,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["copycelltoclipboard(label",{"_index":2727,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["copytoclipboard",{"_index":2737,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["copytoclipboard(value",{"_index":2717,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["core",{"_index":554,"title":{"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/core-changelog.html":{}},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["correct",{"_index":6001,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["correctly",{"_index":5477,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["count",{"_index":3916,"title":{},"body":{"classes/Pagination.html":{}}}],["counter",{"_index":5515,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["counter.component.html",{"_index":5516,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["countercomponent",{"_index":5517,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["course",{"_index":1967,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["coverage",{"_index":4961,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crash",{"_index":5596,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["create",{"_index":580,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["create(model",{"_index":1762,"title":{},"body":{"injectables/EntryService.html":{}}}],["create(relation",{"_index":4224,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["create/edit/delete",{"_index":1013,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["create/read/update/delete",{"_index":4240,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["createclicked",{"_index":4166,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["created",{"_index":514,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["created.otherwise",{"_index":4235,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["createdmassets(assetgroupid",{"_index":2058,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["createentry(model",{"_index":1833,"title":{},"body":{"injectables/EntryService.html":{}}}],["createlabel",{"_index":1127,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["createlist",{"_index":545,"title":{},"body":{"components/AssetListComponent.html":{}}}],["createnew",{"_index":4158,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["creates",{"_index":83,"title":{},"body":{"components/AceComponent.html":{},"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{}}}],["creates/updates",{"_index":595,"title":{},"body":{"components/AssetListComponent.html":{}}}],["creating",{"_index":4275,"title":{},"body":{"interfaces/SdkField.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["creator",{"_index":3643,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["credentials",{"_index":3293,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["crud",{"_index":1019,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["crud'ed",{"_index":1042,"title":{},"body":{"components/CrudComponent.html":{}}}],["crud's",{"_index":1039,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud'},{'name",{"_index":223,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["crud.component",{"_index":4213,"title":{},"body":{"modules/ResourceModule.html":{}}}],["crud.component.html",{"_index":1020,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.ts",{"_index":4164,"title":{},"body":{"components/ResourceCrudComponent.html":{},"coverage.html":{}}}],["crud.component.ts:29",{"_index":4168,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:31",{"_index":4170,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:33",{"_index":4169,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:35",{"_index":4171,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:37",{"_index":4182,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:39",{"_index":4185,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:41",{"_index":4183,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:43",{"_index":4172,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:45",{"_index":4174,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:47",{"_index":4167,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:54",{"_index":4187,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:55",{"_index":4186,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:58",{"_index":4179,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:62",{"_index":4178,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:72",{"_index":4177,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:77",{"_index":4180,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:90",{"_index":4175,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud/crud",{"_index":1729,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["crud/crud.component",{"_index":1218,"title":{},"body":{"modules/DataModule.html":{}}}],["crud/resource",{"_index":4163,"title":{},"body":{"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["crudcomponent",{"_index":222,"title":{"components/CrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["crudcomponent#loadentry",{"_index":4193,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crudconfig",{"_index":1036,"title":{"interfaces/CrudConfig.html":{}},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["crypto",{"_index":5322,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["css",{"_index":5537,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["current",{"_index":138,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["currentactions",{"_index":421,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["currentid",{"_index":413,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["currently",{"_index":449,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"interfaces/Day.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cursor",{"_index":5822,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["custom",{"_index":1153,"title":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["customfieldcomponent",{"_index":1556,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["customfieldconfig",{"_index":3606,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["customfieldconfig).then((modelconfig",{"_index":3668,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["customfieldscomponent",{"_index":5512,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["custominputcomponent",{"_index":5490,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["customization",{"_index":1038,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["customizations",{"_index":5417,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["customize",{"_index":3615,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["customizing",{"_index":5449,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["customupload",{"_index":1128,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["customwebpackconfig",{"_index":5315,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["d5dc292",{"_index":5720,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["d7fa72b",{"_index":5708,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["d8ad11d",{"_index":5632,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["d8c67be",{"_index":5641,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["darf",{"_index":5412,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["dark",{"_index":3545,"title":{},"body":{"components/ModalComponent.html":{}}}],["das",{"_index":3761,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["data",{"_index":372,"title":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["data.entryid",{"_index":2381,"title":{},"body":{"injectables/HistoryService.html":{}}}],["data.module",{"_index":5754,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["datamanager",{"_index":851,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["datamanager(environment.environment",{"_index":4359,"title":{},"body":{"injectables/SdkService.html":{}}}],["datamanager.enablehistoryevents(eventsource",{"_index":2377,"title":{},"body":{"injectables/HistoryService.html":{}}}],["datamanagerid",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamanagerresource",{"_index":448,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["datamanagers",{"_index":2333,"title":{},"body":{"injectables/HistoryService.html":{}}}],["datamodule",{"_index":1197,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/data-readme.html":{}}}],["datamodule.forenvironment(environment",{"_index":5362,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["datamoduleconfig",{"_index":1234,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["datarun",{"_index":6015,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["date",{"_index":881,"title":{},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"modules/SymbolModule.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["date()).format(this.symbol.resolve('moment.format.date",{"_index":4776,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date(0",{"_index":4777,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date.clone",{"_index":1437,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('dd",{"_index":1424,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('mm",{"_index":1418,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format(this.monthformat",{"_index":1439,"title":{},"body":{"interfaces/Day.html":{}}}],["date.isbetween(this.timespan[0",{"_index":1420,"title":{},"body":{"interfaces/Day.html":{}}}],["date.now",{"_index":3134,"title":{},"body":{"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{}}}],["dateformat",{"_index":1289,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["datenschutz",{"_index":5250,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["datepickers",{"_index":4510,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["daterange'},{'name",{"_index":225,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["daterange/daterange.component",{"_index":870,"title":{},"body":{"modules/CalendarModule.html":{}}}],["daterangecomponent",{"_index":224,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetime",{"_index":1237,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["datetime'},{'name",{"_index":227,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["datetime.component.html",{"_index":1239,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime.pipe",{"_index":867,"title":{},"body":{"modules/CalendarModule.html":{}}}],["datetime/datetime.component",{"_index":2177,"title":{},"body":{"modules/FormModule.html":{}}}],["datetimecomponent",{"_index":226,"title":{"components/DatetimeComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetimepipe",{"_index":858,"title":{"pipes/DatetimePipe.html":{}},"body":{"modules/CalendarModule.html":{},"pipes/DatetimePipe.html":{},"coverage.html":{},"overview.html":{}}}],["datum",{"_index":4774,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["day",{"_index":1298,"title":{"interfaces/Day.html":{}},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["day.date.clone",{"_index":1366,"title":{},"body":{"interfaces/Day.html":{}}}],["day.first",{"_index":1359,"title":{},"body":{"interfaces/Day.html":{}}}],["day.format('mm",{"_index":1419,"title":{},"body":{"interfaces/Day.html":{}}}],["day.last",{"_index":1361,"title":{},"body":{"interfaces/Day.html":{}}}],["dayclicked",{"_index":1340,"title":{},"body":{"interfaces/Day.html":{}}}],["days",{"_index":1266,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["dd.mm.yyyy",{"_index":874,"title":{},"body":{"modules/CalendarModule.html":{}}}],["dd83e20",{"_index":5637,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["de",{"_index":4518,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["de51159",{"_index":5734,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["deactivate",{"_index":4579,"title":{},"body":{"components/TabComponent.html":{}}}],["deactivated",{"_index":4580,"title":{},"body":{"components/TabComponent.html":{}}}],["death",{"_index":5825,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["debounce",{"_index":2554,"title":{},"body":{"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetime",{"_index":1312,"title":{},"body":{"interfaces/Day.html":{},"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["decide",{"_index":5492,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["decides",{"_index":2219,"title":{},"body":{"injectables/FormService.html":{},"components/ListComponent.html":{}}}],["decimal",{"_index":4762,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["deck",{"_index":3566,"title":{},"body":{"components/ModalComponent.html":{}}}],["declarations",{"_index":349,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["declare",{"_index":165,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["declares",{"_index":2291,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["decoration",{"_index":3524,"title":{},"body":{"components/MenuComponent.html":{}}}],["decorators",{"_index":124,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["decrement",{"_index":5520,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["deduplicate",{"_index":1989,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["def9084",{"_index":5718,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["default",{"_index":121,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["defaultcolumns",{"_index":4095,"title":{},"body":{"injectables/PopService.html":{}}}],["defaultentryinputcomponent",{"_index":228,"title":{"components/DefaultEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultentryinputcomponent#autofocus",{"_index":5813,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["defaultentryoutputcomponent",{"_index":229,"title":{"components/DefaultEntryOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultfilter",{"_index":2865,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["defaulting",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["defaultinputcomponent",{"_index":21,"title":{"components/DefaultInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultinputcomponent:14",{"_index":141,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:16",{"_index":149,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:18",{"_index":148,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:20",{"_index":140,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:22",{"_index":144,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:25",{"_index":146,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:27",{"_index":122,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:33",{"_index":120,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultmonthformat",{"_index":1344,"title":{},"body":{"interfaces/Day.html":{}}}],["defaultoptions",{"_index":2015,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["defaultoutputcomponent",{"_index":232,"title":{"components/DefaultOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaults",{"_index":487,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["defaultsize",{"_index":2483,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["defaulttime",{"_index":3825,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["define",{"_index":5437,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["defined",{"_index":70,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["defines",{"_index":1187,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"injectables/TypeConfigService.html":{}}}],["del",{"_index":1750,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{}}}],["del(model",{"_index":1764,"title":{},"body":{"injectables/EntryService.html":{}}}],["del(relation",{"_index":4226,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["delay",{"_index":3455,"title":{},"body":{"components/MenuComponent.html":{}}}],["delete",{"_index":298,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["deletenullproperties",{"_index":4222,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["deleteonremove",{"_index":1129,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["deletes",{"_index":1766,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["deliver",{"_index":3628,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["demo",{"_index":633,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["demonstrates",{"_index":5377,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["demos",{"_index":6021,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["denied",{"_index":3859,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["dependencies",{"_index":348,"title":{"dependencies.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["dependency",{"_index":5631,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["depending",{"_index":75,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["depends",{"_index":4276,"title":{},"body":{"interfaces/SdkField.html":{},"injectables/SymbolPipe.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["deprecated",{"_index":1787,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["der",{"_index":3763,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["desc",{"_index":2866,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["desc/asc",{"_index":5799,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["descending",{"_index":2876,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["describe",{"_index":1936,"title":{},"body":{"classes/Field.html":{}}}],["describes",{"_index":2672,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}}}],["deselects",{"_index":4590,"title":{},"body":{"components/TabComponent.html":{}}}],["desired",{"_index":3161,"title":{},"body":{"components/LocationMapComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["desktop",{"_index":3823,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification",{"_index":3826,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification(notification",{"_index":3831,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["dest",{"_index":6007,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["destroy",{"_index":4646,"title":{},"body":{"components/TinymceComponent.html":{}}}],["destroys",{"_index":3396,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["details",{"_index":5539,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["determine",{"_index":3968,"title":{},"body":{"components/PaginationComponent.html":{}}}],["determines",{"_index":1307,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ItemConfig.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["dev",{"_index":5206,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["develop",{"_index":1130,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["developer",{"_index":3614,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{}}}],["developing",{"_index":5193,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["development",{"_index":5228,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["devkit/build",{"_index":5307,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["devthe",{"_index":5308,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["dialog",{"_index":2488,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["die",{"_index":3764,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["diese",{"_index":674,"title":{},"body":{"guards/AuthGuard.html":{}}}],["diff(date",{"_index":1425,"title":{},"body":{"interfaces/Day.html":{}}}],["differ",{"_index":1059,"title":{},"body":{"components/CrudComponent.html":{}}}],["different",{"_index":1325,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["direct",{"_index":3123,"title":{},"body":{"components/LoaderComponent.html":{}}}],["directive",{"_index":200,"title":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["directives",{"_index":325,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":5234,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["directly",{"_index":509,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["directory",{"_index":5238,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["disable",{"_index":3119,"title":{},"body":{"components/LoaderComponent.html":{}}}],["disablecolumnfilter",{"_index":2152,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{}}}],["disablecreatepop",{"_index":1131,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabled",{"_index":1240,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["disabledrag",{"_index":2867,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["disabledragend",{"_index":1335,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledragstart",{"_index":1333,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledrop",{"_index":4888,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["disabledropdown",{"_index":2868,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["disableheader",{"_index":1735,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["disablelegacy",{"_index":617,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["disablelistpop",{"_index":1132,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disableremove",{"_index":1133,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["disables",{"_index":3546,"title":{},"body":{"components/ModalComponent.html":{}}}],["disablesearchbar",{"_index":1134,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["disableselectswitch",{"_index":1135,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabletime",{"_index":1243,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["disableupdates",{"_index":2336,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableupdates(key",{"_index":2340,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableurlupload",{"_index":1136,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["display",{"_index":1391,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["displayaccount",{"_index":4742,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate",{"_index":4743,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate(time",{"_index":4748,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displayed",{"_index":1246,"title":{},"body":{"components/DatetimeComponent.html":{},"components/DefaultOutputComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["displays",{"_index":1314,"title":{},"body":{"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{}}}],["dist",{"_index":5200,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["dist/data",{"_index":6016,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["div",{"_index":3962,"title":{},"body":{"components/PaginationComponent.html":{}}}],["dma",{"_index":3691,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["dmasset",{"_index":2067,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["dmasset(this.assetgroupid",{"_index":2514,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["dmassetconfig",{"_index":2016,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist",{"_index":2003,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist(assetgroupid",{"_index":2093,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist.getallitems",{"_index":2096,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetresource",{"_index":2005,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["dmassets",{"_index":4768,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["dnddraggable",{"_index":5730,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["dndmodule",{"_index":1214,"title":{},"body":{"modules/DataModule.html":{},"modules/SelectModule.html":{}}}],["doc",{"_index":634,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["docs",{"_index":3533,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["document",{"_index":2028,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ListHeaderComponent.html":{},"interfaces/Upload.html":{}}}],["document.addeventlistener",{"_index":2706,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.body.appendchild(el",{"_index":2720,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.body.removechild(el",{"_index":2723,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.createelement('textarea",{"_index":2718,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.execcommand('copy",{"_index":2722,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document:click",{"_index":1677,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["document:click($event",{"_index":1697,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["documentation",{"_index":4962,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["documented",{"_index":5550,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["done",{"_index":5992,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["dont",{"_index":5470,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dosomethingrisky",{"_index":3766,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["doubt",{"_index":2080,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["drag",{"_index":1215,"title":{},"body":{"modules/DataModule.html":{},"interfaces/Day.html":{},"modules/SelectModule.html":{},"dependencies.html":{}}}],["dragend",{"_index":3169,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["draggable",{"_index":1300,"title":{},"body":{"interfaces/Day.html":{}}}],["dragged",{"_index":1308,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ListConfig.html":{}}}],["dragging",{"_index":1373,"title":{},"body":{"interfaces/Day.html":{}}}],["dragleave",{"_index":1508,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragleave(e",{"_index":1522,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover",{"_index":1509,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover(e",{"_index":1525,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragstart(day",{"_index":1377,"title":{},"body":{"interfaces/Day.html":{}}}],["drawer",{"_index":4044,"title":{},"body":{"components/PopComponent.html":{}}}],["driven",{"_index":5179,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["drop",{"_index":1216,"title":{},"body":{"modules/DataModule.html":{},"directives/DropzoneDirective.html":{},"modules/SelectModule.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{}}}],["drop(e",{"_index":1527,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropday(day",{"_index":1357,"title":{},"body":{"interfaces/Day.html":{}}}],["dropdown",{"_index":1162,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["dropdownfields",{"_index":1137,"title":{},"body":{"interfaces/CrudConfig.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["dropdowns",{"_index":1167,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ListHeaderComponent.html":{}}}],["dropped",{"_index":1517,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropzone/dropzone.directive",{"_index":2127,"title":{},"body":{"modules/FilesModule.html":{}}}],["dropzonedirective",{"_index":328,"title":{"directives/DropzoneDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["due",{"_index":5981,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["duplicates",{"_index":1999,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{}}}],["during",{"_index":3321,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["dynamic",{"_index":235,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["dynamically",{"_index":3867,"title":{},"body":{"components/OutputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dynamicrackcomponent",{"_index":233,"title":{"components/DynamicRackComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent",{"_index":234,"title":{"components/DynamicSlotComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent:11",{"_index":2603,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:14",{"_index":2602,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:17",{"_index":2584,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["e",{"_index":186,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["e).then",{"_index":4914,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["e.datatransfer.files",{"_index":1538,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.datatransfer.files.length",{"_index":1539,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.g",{"_index":73,"title":{},"body":{"components/AceComponent.html":{},"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["e.metakey",{"_index":2701,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["e.preventdefault",{"_index":1380,"title":{},"body":{"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/UploadComponent.html":{}}}],["e.stopimmediatepropagation",{"_index":3060,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["e.stoppropagation",{"_index":1534,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListItemsComponent.html":{},"components/UploadComponent.html":{}}}],["e.target",{"_index":4850,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.files",{"_index":4851,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.files.length",{"_index":4852,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.localname",{"_index":4713,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e.toelement",{"_index":4715,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e2bbf1a",{"_index":5808,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["e2e",{"_index":5245,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["e8b0e49",{"_index":5895,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["ea24c06",{"_index":5809,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["ea4ba17",{"_index":5622,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["each",{"_index":1745,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog.html":{}}}],["easy",{"_index":5990,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["eb506da",{"_index":5746,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ec",{"_index":34,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ec.api",{"_index":454,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["ec.components",{"_index":2192,"title":{},"body":{"injectables/FormService.html":{},"modules/SymbolModule.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["ec.components/ace",{"_index":4957,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ec.components/ace@0.6.0",{"_index":5263,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/calendar",{"_index":1270,"title":{},"body":{"components/DatetimeComponent.html":{},"modules/FormModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["ec.components/calendar@0.2.0",{"_index":5264,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/core",{"_index":381,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["ec.components/core@0.19.0",{"_index":5265,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/coreimport",{"_index":5534,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["ec.components/data",{"_index":4955,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["ec.components/data/src/entry",{"_index":5275,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/data@0.42.0",{"_index":5266,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/location",{"_index":4958,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["ec.components/location@0.18.0",{"_index":5267,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/medium",{"_index":4959,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["ec.components/style",{"_index":4956,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ec.components/style/components';new",{"_index":5288,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/style/components.scss\";5",{"_index":5348,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/style/scss/components",{"_index":5541,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["ec.components/style/scss/components';3",{"_index":5289,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/style@0.21.0",{"_index":5269,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/tinymce",{"_index":4960,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["ec.components/tinymce@0.5.0",{"_index":5270,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/ui",{"_index":156,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"modules/FilesModule.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ec.components/ui';8",{"_index":6011,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["ec.components/ui/src/icon/emoji",{"_index":2405,"title":{},"body":{"components/IconComponent.html":{}}}],["ec.components/ui@0.36.0",{"_index":5271,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.datamanager",{"_index":5522,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["ec.sdk",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"classes/Field.html":{},"injectables/SdkService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ec.sdk/lib/accounts",{"_index":4334,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/core",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/datamanager",{"_index":2362,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/publicapi",{"_index":522,"title":{},"body":{"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["ec.sdk/lib/resources/accounts/accountresource",{"_index":3281,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["ec.sdk/lib/resources/datamanager/datamanagerresource",{"_index":464,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/modelresource",{"_index":2361,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.sdk/lib/resources/listresource",{"_index":1619,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/ResourceActionbarState.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetlist",{"_index":2004,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetresource",{"_index":2006,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/publicapi/entrylist",{"_index":1617,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/entryresource",{"_index":1618,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetlist",{"_index":2008,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetresource",{"_index":521,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/resource",{"_index":4204,"title":{},"body":{"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/session",{"_index":4335,"title":{},"body":{"injectables/SdkService.html":{}}}],["ecasset",{"_index":475,"title":{},"body":{"directives/AssetDirective.html":{}}}],["ecasset]'},{'name",{"_index":327,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecdropzone",{"_index":1504,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ecdropzone]'},{'name",{"_index":329,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentries",{"_index":1583,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["ecentries]'},{'name",{"_index":331,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentry",{"_index":1644,"title":{},"body":{"directives/EntryDirective.html":{}}}],["ecentry]'},{'name",{"_index":333,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecfocus",{"_index":2136,"title":{},"body":{"directives/FocusDirective.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ecfocus]'},{'name",{"_index":335,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecicons",{"_index":2432,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["ecimage",{"_index":2439,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ecimage]'},{'name",{"_index":338,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecslothost",{"_index":340,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecthis",{"_index":5998,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["edge",{"_index":1374,"title":{},"body":{"interfaces/Day.html":{}}}],["edit",{"_index":1112,"title":{},"body":{"components/CrudComponent.html":{},"injectables/FormService.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["edit/create",{"_index":5459,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["editable",{"_index":1249,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["edited",{"_index":2572,"title":{},"body":{"components/InputComponent.html":{},"interfaces/ItemConfig.html":{}}}],["edititem",{"_index":5667,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["editor",{"_index":15,"title":{"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}},"body":{"components/AceComponent.html":{},"injectables/EntryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["editor#mediumeditor",{"_index":3408,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor'},{'name",{"_index":277,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["editor.component",{"_index":3425,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["editor.component.html",{"_index":3387,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.scss",{"_index":3386,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts",{"_index":3381,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:35",{"_index":3390,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":3391,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":3393,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":3394,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":3401,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":3405,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":3402,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":3404,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":3397,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":3395,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":3400,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":3403,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:77",{"_index":3398,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:81",{"_index":3399,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.getcontent",{"_index":4698,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.module.ts",{"_index":3424,"title":{},"body":{"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["editor.on('change",{"_index":185,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.scss",{"_index":3418,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.setcontent(this.value",{"_index":3416,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.setvalue(this.value",{"_index":192,"title":{},"body":{"components/AceComponent.html":{}}}],["editor/dist/js/medium",{"_index":3406,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/src/lib/medium",{"_index":3380,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["editor/src/sass/medium",{"_index":3417,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/src/test.ts",{"_index":5096,"title":{},"body":{"coverage.html":{}}}],["editor?e=1",{"_index":3384,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor@0.4.0",{"_index":5268,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["editor[0",{"_index":4710,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editorsettings",{"_index":4695,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["editorsettings.setup(editor",{"_index":4705,"title":{},"body":{"components/TinymceComponent.html":{}}}],["ee3518f",{"_index":5602,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["efa26a0",{"_index":5603,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["efb984e",{"_index":5881,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["eine",{"_index":4029,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["eingeloggt",{"_index":682,"title":{},"body":{"guards/AuthGuard.html":{}}}],["eject",{"_index":5303,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["el",{"_index":1512,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/TabComponent.html":{}}}],["el.select",{"_index":2721,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["el.value",{"_index":2719,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["element",{"_index":127,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["elementref",{"_index":123,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["elements",{"_index":3967,"title":{},"body":{"components/PaginationComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["email",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{}}}],["emailavailable",{"_index":3358,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["emailavailable(email",{"_index":844,"title":{},"body":{"injectables/AuthService.html":{}}}],["emaillabel",{"_index":3302,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emailplaceholder",{"_index":3303,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emailvalidator",{"_index":5146,"title":{},"body":{"coverage.html":{}}}],["embedd",{"_index":2402,"title":{},"body":{"components/IconComponent.html":{}}}],["embedded",{"_index":1554,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["emit",{"_index":1442,"title":{},"body":{"interfaces/Day.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["emit(host",{"_index":3772,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["emit(notification",{"_index":3836,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["emits",{"_index":1045,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["emitted",{"_index":1073,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithNotifications.html":{}}}],["emitter",{"_index":145,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/NotificationsService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["emojiicons",{"_index":2404,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["empty",{"_index":937,"title":{},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["empty=true",{"_index":5468,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["en",{"_index":4503,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["enable",{"_index":848,"title":{},"body":{"injectables/AuthService.html":{}}}],["enables",{"_index":2348,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{}}}],["enableupdates",{"_index":2337,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enableupdates(resource",{"_index":2345,"title":{},"body":{"injectables/HistoryService.html":{}}}],["encapsulation",{"_index":2756,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["end",{"_index":1334,"title":{},"body":{"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["endless",{"_index":1588,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["enforces",{"_index":5369,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enhance",{"_index":4543,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enough",{"_index":5350,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ensure",{"_index":4022,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/PopComponent.html":{}}}],["enters",{"_index":5495,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entities",{"_index":1186,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["entity",{"_index":1195,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ItemConfig.html":{}}}],["entrecode",{"_index":5182,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["entrecode.github.io/ec.components",{"_index":5189,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["entries",{"_index":1156,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entries/entries.directive",{"_index":1220,"title":{},"body":{"modules/DataModule.html":{}}}],["entriesdirective",{"_index":330,"title":{"directives/EntriesDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entry",{"_index":230,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["entry(this.model",{"_index":1660,"title":{},"body":{"directives/EntryDirective.html":{}}}],["entry.del().then((res",{"_index":1836,"title":{},"body":{"injectables/EntryService.html":{}}}],["entry.getimagethumburl(property",{"_index":4764,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.gettitle(property",{"_index":4778,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.save",{"_index":1799,"title":{},"body":{"injectables/EntryService.html":{}}}],["entry.saved",{"_index":4523,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["entry/entry.directive",{"_index":1228,"title":{},"body":{"modules/DataModule.html":{}}}],["entry/entry.service",{"_index":1219,"title":{},"body":{"modules/DataModule.html":{},"injectables/ModelConfigService.html":{}}}],["entry[key",{"_index":1808,"title":{},"body":{"injectables/EntryService.html":{}}}],["entrycomponent",{"_index":5496,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entrycomponents",{"_index":362,"title":{},"body":{"modules/AceModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/TinymceModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entrycreated",{"_index":2382,"title":{},"body":{"injectables/HistoryService.html":{}}}],["entrydirective",{"_index":332,"title":{"directives/EntryDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryform",{"_index":5274,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["entryformcomponent",{"_index":237,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryid",{"_index":1645,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["entryitem",{"_index":1772,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryitem.config",{"_index":1813,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryitem.getbody",{"_index":1798,"title":{},"body":{"injectables/EntryService.html":{}}}],["entrylist",{"_index":600,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["entrylist(this.model",{"_index":1626,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["entrylist.model",{"_index":1739,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["entrylistcomponent",{"_index":239,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrylistpopcomponent",{"_index":240,"title":{"components/EntryListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrylistselectcomponent",{"_index":241,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrypop",{"_index":1021,"title":{},"body":{"components/CrudComponent.html":{}}}],["entrypopcomponent",{"_index":242,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryresource",{"_index":1611,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["entryselectcomponent",{"_index":243,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryservice",{"_index":1206,"title":{"injectables/EntryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["entryservice#change",{"_index":1794,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryupdated",{"_index":2379,"title":{},"body":{"injectables/HistoryService.html":{}}}],["env",{"_index":4317,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["environment",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["environment.clientid",{"_index":4351,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.datamanagerid",{"_index":4354,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.environment",{"_index":4361,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.init",{"_index":4347,"title":{},"body":{"injectables/SdkService.html":{}}}],["environments",{"_index":5352,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["environments/environment",{"_index":5360,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["equal",{"_index":1093,"title":{},"body":{"components/CrudComponent.html":{}}}],["equally",{"_index":1937,"title":{},"body":{"classes/Field.html":{}}}],["erhalten",{"_index":4033,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["err",{"_index":1113,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["err.message",{"_index":3360,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":648,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["error'},{'name",{"_index":245,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["error('cannot",{"_index":533,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{}}}],["error('get",{"_index":4341,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('no",{"_index":4336,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('the",{"_index":4570,"title":{},"body":{"injectables/SymbolService.html":{}}}],["error(`cannot",{"_index":3941,"title":{},"body":{"classes/Pagination.html":{}}}],["error.code",{"_index":1851,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.code}}{{error.datapath}}{{error?.message}}{{error.detail}}{{error.verbose",{"_index":1856,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":1838,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.datapath",{"_index":1852,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.detail}}{{error.verbose",{"_index":1854,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.message",{"_index":2662,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["error.verbose",{"_index":1855,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":3818,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["error?.message",{"_index":1853,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcomponent",{"_index":244,"title":{"components/ErrorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":3296,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["errors",{"_index":2644,"title":{},"body":{"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["errors'},{'name",{"_index":256,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["errors.component",{"_index":2669,"title":{},"body":{"modules/IoModule.html":{}}}],["errors.component.html",{"_index":2646,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts",{"_index":2642,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["errors.component.ts:12",{"_index":2648,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:14",{"_index":2655,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:17",{"_index":2651,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors/input",{"_index":2641,"title":{},"body":{"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["errs",{"_index":2661,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errs.push",{"_index":2660,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["erstellen",{"_index":4157,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["erstellt",{"_index":5403,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["es6",{"_index":1269,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{}}}],["esc",{"_index":1689,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["escape",{"_index":4091,"title":{},"body":{"injectables/PopService.html":{}}}],["etc",{"_index":1889,"title":{},"body":{"classes/Field.html":{},"components/ListItemsComponent.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["even",{"_index":1148,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["event",{"_index":917,"title":{},"body":{"classes/Collection.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["event.key",{"_index":4101,"title":{},"body":{"injectables/PopService.html":{}}}],["event.keycode",{"_index":4099,"title":{},"body":{"injectables/PopService.html":{}}}],["eventemitter",{"_index":143,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["eventemitter.ts",{"_index":1005,"title":{},"body":{"classes/Config.html":{}}}],["events",{"_index":4093,"title":{},"body":{"injectables/PopService.html":{}}}],["eventsource",{"_index":2363,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventsource/lib/eventsource",{"_index":2364,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventsources",{"_index":2334,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventually",{"_index":4855,"title":{},"body":{"components/UploadComponent.html":{}}}],["everything",{"_index":3593,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["everytime",{"_index":2014,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["exact",{"_index":1278,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/TypeConfigService.html":{}}}],["exactly",{"_index":5454,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["example",{"_index":904,"title":{},"body":{"classes/Collection.html":{},"classes/Field.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/adding-new-packages.html":{}}}],["examples",{"_index":9,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["execute",{"_index":5243,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["exist",{"_index":4571,"title":{},"body":{"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["existing",{"_index":1775,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ListConfigService.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["existing.hide",{"_index":2927,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["existing.hide.foreach((property",{"_index":2930,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["exists",{"_index":5280,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["expected",{"_index":2388,"title":{},"body":{"components/IconComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["expects",{"_index":162,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{}}}],["experimental",{"_index":2247,"title":{},"body":{"injectables/FormService.html":{},"interfaces/ListConfig.html":{}}}],["export",{"_index":167,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["exportas",{"_index":523,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["exporting",{"_index":5847,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["exports",{"_index":351,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["expose",{"_index":4483,"title":{},"body":{"classes/Sorter.html":{}}}],["exposes",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{}}}],["extend",{"_index":5487,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["extended",{"_index":3346,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["extending",{"_index":5609,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["extends",{"_index":20,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{}}}],["extension",{"_index":2151,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ModalComponent.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["extensions/modes/themes",{"_index":5546,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["external",{"_index":1176,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Pagination.html":{}}}],["extra",{"_index":1158,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["extracts",{"_index":2211,"title":{},"body":{"injectables/FormService.html":{}}}],["f.hideinlist",{"_index":3025,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["f.hideinlist).map((f",{"_index":2924,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.name",{"_index":4880,"title":{},"body":{"components/UploadComponent.html":{}}}],["f.property",{"_index":2925,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.url",{"_index":2056,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["f3590a7",{"_index":5769,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["f7b65f4",{"_index":5865,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["factor",{"_index":5467,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["fadein",{"_index":3540,"title":{},"body":{"components/ModalComponent.html":{}}}],["fail",{"_index":972,"title":{},"body":{"classes/Collection.html":{}}}],["failiure",{"_index":3789,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["fails",{"_index":666,"title":{},"body":{"guards/AuthGuard.html":{}}}],["faktor",{"_index":5407,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["fall",{"_index":1819,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fallback",{"_index":2788,"title":{},"body":{"components/ListComponent.html":{},"components/ModalComponent.html":{}}}],["falling",{"_index":3579,"title":{},"body":{"components/ModalComponent.html":{}}}],["falls",{"_index":1177,"title":{},"body":{"interfaces/CrudConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["false",{"_index":398,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"modules/NotificationsModule.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["fancier",{"_index":4729,"title":{},"body":{"components/ToggleComponent.html":{}}}],["fb",{"_index":3310,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["fcfdf32",{"_index":5755,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fd41ccc",{"_index":5858,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["features",{"_index":3776,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["fed2c52",{"_index":5736,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fehler",{"_index":3768,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{}}}],["ffnungszeiten",{"_index":5499,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field",{"_index":48,"title":{"classes/Field.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["field#autofocus",{"_index":5815,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["field's",{"_index":1912,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{}}}],["field('name",{"_index":1953,"title":{},"body":{"classes/Field.html":{}}}],["field(this.property",{"_index":2613,"title":{},"body":{"components/InputComponent.html":{}}}],["field.component",{"_index":1557,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["field.create",{"_index":2227,"title":{},"body":{"injectables/FormService.html":{}}}],["field.display(name",{"_index":1961,"title":{},"body":{"classes/Field.html":{}}}],["field.edit",{"_index":2229,"title":{},"body":{"injectables/FormService.html":{}}}],["field.form",{"_index":2230,"title":{},"body":{"injectables/FormService.html":{}}}],["field.getlabel",{"_index":3029,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.getplaceholder",{"_index":1493,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["field.getview('filter",{"_index":3003,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.group(name",{"_index":1962,"title":{},"body":{"classes/Field.html":{}}}],["field.hideinform",{"_index":4944,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["field.hideinlist",{"_index":2929,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["field.immutable",{"_index":2253,"title":{},"body":{"injectables/FormService.html":{}}}],["field.maxitems||10",{"_index":1496,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["field.nestedcrudconfig",{"_index":3005,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.placeholder",{"_index":1492,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["field.property",{"_index":2991,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.readonly",{"_index":2254,"title":{},"body":{"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field.required",{"_index":2249,"title":{},"body":{"injectables/FormService.html":{}}}],["field.resolve({value:{name:'bobby",{"_index":1959,"title":{},"body":{"classes/Field.html":{}}}],["field.sort(name",{"_index":1964,"title":{},"body":{"classes/Field.html":{}}}],["field.ts",{"_index":4269,"title":{},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["field.type",{"_index":467,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["field.validate",{"_index":2222,"title":{},"body":{"injectables/FormService.html":{}}}],["field.validate(control.value",{"_index":2252,"title":{},"body":{"injectables/FormService.html":{}}}],["fieldconfig",{"_index":1166,"title":{"interfaces/FieldConfig.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["fieldconfig[field].inputview",{"_index":3673,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[field].type",{"_index":3671,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[key",{"_index":3719,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[property",{"_index":3685,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfigproperty",{"_index":1858,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{},"components/InputComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["fieldfilter",{"_index":589,"title":{},"body":{"components/AssetListComponent.html":{}}}],["fieldhost",{"_index":1563,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldhostdirective",{"_index":1572,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldname",{"_index":1990,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["fields",{"_index":390,"title":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["fields.filter((field",{"_index":4942,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pipe",{"_index":2175,"title":{},"body":{"modules/FormModule.html":{}}}],["fields.pipe.ts",{"_index":4934,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["fields.pipe.ts:10",{"_index":4941,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pipe.ts:12",{"_index":4939,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fieldvalidators",{"_index":3351,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["fieldvalidators.email",{"_index":3357,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["fieldvalidators.uuid",{"_index":4436,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["file",{"_index":10,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["file.service",{"_index":630,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["fileinput",{"_index":4810,"title":{},"body":{"components/UploadComponent.html":{}}}],["filelist",{"_index":2049,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["filename",{"_index":1991,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["filenames",{"_index":2002,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["fileoptions",{"_index":1138,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["files",{"_index":517,"title":{},"body":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["files.length",{"_index":2053,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["files.map((f",{"_index":2055,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["files.split('\\n').map((url",{"_index":4856,"title":{},"body":{"components/UploadComponent.html":{}}}],["files/file.service",{"_index":1196,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["files/files.module",{"_index":1229,"title":{},"body":{"modules/DataModule.html":{}}}],["files[0].url",{"_index":2054,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["fileservice",{"_index":614,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fileservice#resolveassets",{"_index":2079,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["filesmodule",{"_index":1203,"title":{"modules/FilesModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestoupload",{"_index":4811,"title":{},"body":{"components/UploadComponent.html":{}}}],["fill(0",{"_index":1409,"title":{},"body":{"interfaces/Day.html":{}}}],["filte",{"_index":3637,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["filter",{"_index":546,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["filter((field",{"_index":2233,"title":{},"body":{"injectables/FormService.html":{},"injectables/ModelConfigService.html":{}}}],["filter((i",{"_index":4127,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter((item",{"_index":4476,"title":{},"body":{"classes/Sorter.html":{}}}],["filter((route",{"_index":3496,"title":{},"body":{"components/MenuComponent.html":{}}}],["filter((v",{"_index":4150,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter((value",{"_index":4147,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter(property",{"_index":582,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["filter.model",{"_index":1783,"title":{},"body":{"injectables/EntryService.html":{}}}],["filter.relation",{"_index":1784,"title":{},"body":{"injectables/EntryService.html":{}}}],["filter[key",{"_index":4251,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["filterable",{"_index":1861,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["filtercomponent",{"_index":3665,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["filterdropdownlist(listcomponent",{"_index":4142,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filteredfield",{"_index":2937,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filteredfield.getlabel",{"_index":3028,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterfield",{"_index":2943,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterfield(property",{"_index":2957,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterform",{"_index":2938,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterformconfig",{"_index":2939,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filtering",{"_index":1887,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filterinput",{"_index":2940,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filteroperator",{"_index":1862,"title":{},"body":{"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["filteroperators",{"_index":5739,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filteroptions",{"_index":1599,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["filterpop",{"_index":2941,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterpopclass",{"_index":1863,"title":{},"body":{"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filters",{"_index":1277,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["filterview",{"_index":3636,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["find",{"_index":5190,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["finds",{"_index":4535,"title":{},"body":{"injectables/SymbolService.html":{}}}],["finished",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["fire",{"_index":3843,"title":{},"body":{"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["fired",{"_index":2704,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["fires",{"_index":496,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["first",{"_index":1301,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["fits",{"_index":4232,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fix",{"_index":2542,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["fixed",{"_index":3550,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["fixes",{"_index":5561,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["flag",{"_index":567,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"injectables/NotificationsService.html":{},"classes/Sorter.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["flags",{"_index":4819,"title":{},"body":{"components/UploadComponent.html":{}}}],["flexible",{"_index":2812,"title":{},"body":{"components/ListComponent.html":{}}}],["flip",{"_index":1725,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["flips",{"_index":1524,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{}}}],["flow",{"_index":5390,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/publishing.html":{}}}],["fn",{"_index":103,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["focus",{"_index":63,"title":{"interfaces/Focus.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"components/InputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["focus(focus",{"_index":118,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["focus/focus.directive",{"_index":4928,"title":{},"body":{"modules/UtilityModule.html":{}}}],["focusdirective",{"_index":334,"title":{"directives/FocusDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["focused",{"_index":2705,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["focuses",{"_index":4906,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["focusevent",{"_index":49,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/UploadSelectComponent.html":{}}}],["focusfirst",{"_index":2762,"title":{},"body":{"components/ListComponent.html":{}}}],["focusitem",{"_index":2759,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["focusnext",{"_index":2763,"title":{},"body":{"components/ListComponent.html":{}}}],["focusprev",{"_index":2764,"title":{},"body":{"components/ListComponent.html":{}}}],["focussed",{"_index":3052,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["folder",{"_index":5278,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/adding-new-packages.html":{}}}],["folders",{"_index":5199,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["following",{"_index":2418,"title":{},"body":{"components/IconComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["follows",{"_index":5392,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["font",{"_index":4493,"title":{},"body":{"interfaces/Symbol.html":{}}}],["footer",{"_index":3538,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["forcegroup",{"_index":2020,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["forcereload",{"_index":2103,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["foreach",{"_index":3686,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["foreach((field",{"_index":2235,"title":{},"body":{"injectables/FormService.html":{}}}],["forenvironment",{"_index":1210,"title":{},"body":{"modules/DataModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["forenvironment(environment",{"_index":1211,"title":{},"body":{"modules/DataModule.html":{}}}],["forever",{"_index":3742,"title":{},"body":{"classes/Notification.html":{}}}],["form",{"_index":131,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["form's",{"_index":2592,"title":{},"body":{"components/InputComponent.html":{}}}],["form'},{'name",{"_index":238,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["form.component",{"_index":1225,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{}}}],["form.component'new",{"_index":5276,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["form.component.html",{"_index":3295,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts",{"_index":3292,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:16",{"_index":4411,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:18",{"_index":3341,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:20",{"_index":3344,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:22",{"_index":3340,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:24",{"_index":3328,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":3327,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:28",{"_index":3320,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:30",{"_index":3326,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":3316,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":3319,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:36",{"_index":3323,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:37",{"_index":4423,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:38",{"_index":3325,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:40",{"_index":3314,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:42",{"_index":3311,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:44",{"_index":3309,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:47",{"_index":3345,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:50",{"_index":3335,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:58",{"_index":3339,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:66",{"_index":3331,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:72",{"_index":3336,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.create",{"_index":5863,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["form.display('amazement_factor",{"_index":5476,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["form.fields",{"_index":2232,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form",{"_index":2255,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.display",{"_index":2258,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.isediting",{"_index":2257,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getbody",{"_index":2228,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getvalue('keepratio",{"_index":2546,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.getvalue('ratio",{"_index":2545,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.getvalue(field.property",{"_index":2238,"title":{},"body":{"injectables/FormService.html":{}}}],["form.group.controls.alt.setvalue(title",{"_index":2533,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.height.setvalue(math.round(value",{"_index":2547,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.ratio.setvalue(ratio",{"_index":2534,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(math.round(value",{"_index":2549,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(width",{"_index":2532,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.service",{"_index":1485,"title":{},"body":{"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["form.ts",{"_index":5076,"title":{},"body":{"coverage.html":{}}}],["form/admin",{"_index":441,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/default",{"_index":1222,"title":{},"body":{"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/entry",{"_index":1224,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["form/form.component",{"_index":2226,"title":{},"body":{"injectables/FormService.html":{},"components/ListHeaderComponent.html":{}}}],["form/form.module",{"_index":3068,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["form/login",{"_index":3291,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["form/resource",{"_index":4212,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["form/signup",{"_index":4408,"title":{},"body":{"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["format",{"_index":1302,"title":{},"body":{"interfaces/Day.html":{},"injectables/TypeConfigService.html":{}}}],["formats",{"_index":866,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.date",{"_index":884,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.month",{"_index":886,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.time",{"_index":885,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formatted",{"_index":1310,"title":{},"body":{"interfaces/Day.html":{}}}],["formattedtext",{"_index":4760,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formatter",{"_index":4756,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formbuilder",{"_index":3308,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formcomponent",{"_index":246,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcomponent#inputs",{"_index":2594,"title":{},"body":{"components/InputComponent.html":{}}}],["formconfig",{"_index":2149,"title":{"interfaces/FormConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["formcontrol",{"_index":139,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["formdata",{"_index":2047,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["formdata.append(key",{"_index":2050,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["formgroup",{"_index":147,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["formgroup(controls",{"_index":2245,"title":{},"body":{"injectables/FormService.html":{}}}],["formmodule",{"_index":2159,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["formmoduleconfig",{"_index":2185,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{}}}],["forms",{"_index":1894,"title":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["formservice",{"_index":50,"title":{"injectables/FormService.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/LocationPickerComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["formsmodule",{"_index":700,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ListModule.html":{},"modules/ResourceModule.html":{},"modules/UtilityModule.html":{}}}],["formtemplate",{"_index":5105,"title":{},"body":{"coverage.html":{}}}],["forroot",{"_index":862,"title":{},"body":{"modules/CalendarModule.html":{},"modules/LocationModule.html":{}}}],["forroot(formats",{"_index":863,"title":{},"body":{"modules/CalendarModule.html":{}}}],["forroot(undefined",{"_index":3190,"title":{},"body":{"modules/LocationModule.html":{}}}],["forwardref",{"_index":30,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["found",{"_index":647,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/style-readme.html":{}}}],["framework",{"_index":5523,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["freedom",{"_index":5465,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["fresh",{"_index":5207,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["from(this.maploader.load()).pipe(switchmap",{"_index":2308,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["fromsearch",{"_index":3218,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["fruit",{"_index":5526,"title":{},"body":{"additional-documentation/readme/data-readme.html":{}}}],["fruits",{"_index":2815,"title":{},"body":{"components/ListComponent.html":{}}}],["fs",{"_index":5323,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["full",{"_index":3477,"title":{},"body":{"components/MenuComponent.html":{}}}],["fun",{"_index":5372,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["function",{"_index":427,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"modules/AuthModule.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["functionalities",{"_index":849,"title":{},"body":{"injectables/AuthService.html":{}}}],["functionality",{"_index":1014,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["functions",{"_index":5175,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamental",{"_index":891,"title":{},"body":{"classes/Collection.html":{}}}],["further",{"_index":3739,"title":{},"body":{"classes/Notification.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["future",{"_index":1795,"title":{},"body":{"injectables/EntryService.html":{}}}],["g",{"_index":5331,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["generally",{"_index":5478,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["generate",{"_index":2654,"title":{},"body":{"components/InputErrorsComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["generateconfig",{"_index":3598,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generateconfig(model",{"_index":3605,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generated",{"_index":3594,"title":{},"body":{"injectables/ModelConfigService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["generates",{"_index":3608,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generation",{"_index":5457,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["generic",{"_index":571,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["geo",{"_index":3222,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["geocode",{"_index":2263,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode.service",{"_index":3193,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["geocodelatlng",{"_index":2265,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodelatlng(geocoder",{"_index":2276,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder",{"_index":2281,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder.geocode",{"_index":2312,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservice",{"_index":2259,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["get(name",{"_index":4533,"title":{},"body":{"injectables/SymbolService.html":{}}}],["get(property",{"_index":3618,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["get(type",{"_index":4751,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["getaccount",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["getaccount(api",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getalgorithm",{"_index":4450,"title":{},"body":{"classes/Sorter.html":{}}}],["getalgorithm(items",{"_index":4455,"title":{},"body":{"classes/Sorter.html":{}}}],["getallowedmodelmethods",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedmodelmethods(model",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods(relation",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["getapi",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getapi(email",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["getassetconfig(assetgroupid",{"_index":2032,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["getcolor",{"_index":3436,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolor(level",{"_index":3466,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolumns",{"_index":1872,"title":{},"body":{"classes/Field.html":{}}}],["getcomponent",{"_index":1873,"title":{},"body":{"classes/Field.html":{}}}],["getcomponent(occasion",{"_index":1925,"title":{},"body":{"classes/Field.html":{}}}],["getdaycolor(_moment",{"_index":1384,"title":{},"body":{"interfaces/Day.html":{}}}],["getdayheat(_moment",{"_index":1387,"title":{},"body":{"interfaces/Day.html":{}}}],["geterrors",{"_index":2647,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["getfieldconfig",{"_index":3599,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getfieldconfig(model",{"_index":3623,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getformdata(files",{"_index":2048,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["getformlabel",{"_index":2194,"title":{},"body":{"injectables/FormService.html":{}}}],["getformlabel(form",{"_index":2204,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup",{"_index":2195,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup(form",{"_index":2207,"title":{},"body":{"injectables/FormService.html":{}}}],["getheader",{"_index":1672,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["getheader(entrylist",{"_index":1700,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["getitemcolor",{"_index":3437,"title":{},"body":{"components/MenuComponent.html":{}}}],["getitemcolor(item",{"_index":3469,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlabel",{"_index":1874,"title":{},"body":{"classes/Field.html":{}}}],["getlevel",{"_index":3438,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel(level",{"_index":3471,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlightmodel",{"_index":3600,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getlightmodel(model",{"_index":3629,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel",{"_index":3601,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel(model",{"_index":3633,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel(this.model",{"_index":1097,"title":{},"body":{"components/CrudComponent.html":{}}}],["getmonth(day",{"_index":1402,"title":{},"body":{"interfaces/Day.html":{}}}],["getnearestaddress",{"_index":2266,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getnearestaddress(location",{"_index":2282,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getpage",{"_index":3879,"title":{},"body":{"classes/Pagination.html":{}}}],["getpages",{"_index":3880,"title":{},"body":{"classes/Pagination.html":{}}}],["getpath",{"_index":438,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/MenuComponent.html":{}}}],["getpath(item",{"_index":3475,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpermission",{"_index":3827,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getplaceholder",{"_index":1875,"title":{},"body":{"classes/Field.html":{}}}],["getresourcelistactions(listresource",{"_index":4113,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["getroot",{"_index":4329,"title":{},"body":{"injectables/SdkService.html":{}}}],["gets",{"_index":3735,"title":{},"body":{"classes/Notification.html":{}}}],["getschema",{"_index":4292,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema(model",{"_index":4301,"title":{},"body":{"injectables/SdkService.html":{}}}],["getstoragekey",{"_index":2893,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getstoragekey(list",{"_index":2898,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getsystemfields",{"_index":3602,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getter",{"_index":993,"title":{},"body":{"classes/Config.html":{},"injectables/SdkService.html":{}}}],["getting",{"_index":4951,"title":{"changelog.html":{},"index.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["getvalidators",{"_index":2196,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalidators(field",{"_index":2209,"title":{},"body":{"injectables/FormService.html":{}}}],["getview",{"_index":1876,"title":{},"body":{"classes/Field.html":{}}}],["getview(occasion",{"_index":1930,"title":{},"body":{"classes/Field.html":{}}}],["ghost",{"_index":5473,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["give",{"_index":4935,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["given",{"_index":88,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["gives",{"_index":4231,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["giving",{"_index":5446,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["global",{"_index":3101,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["globalloader",{"_index":3107,"title":{},"body":{"components/LoaderComponent.html":{}}}],["globally",{"_index":5330,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["glyph",{"_index":4494,"title":{},"body":{"interfaces/Symbol.html":{}}}],["go",{"_index":5248,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["google",{"_index":2261,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{}}}],["google.maps.geocoder",{"_index":2319,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.places.autocomplete(el",{"_index":2294,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["googlemaps",{"_index":3252,"title":{},"body":{"components/LocationSearchComponent.html":{},"dependencies.html":{}}}],["googlemaps.apikey",{"_index":3204,"title":{},"body":{"modules/LocationModule.html":{}}}],["granted",{"_index":3835,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["group",{"_index":51,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["group.addcontrol(field.property",{"_index":2248,"title":{},"body":{"injectables/FormService.html":{}}}],["group.pipe",{"_index":3069,"title":{},"body":{"modules/ListModule.html":{}}}],["group.value",{"_index":608,"title":{},"body":{"components/AssetListComponent.html":{}}}],["groupchanged",{"_index":620,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["groupdate",{"_index":4744,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["grouping",{"_index":1950,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["grouppipe",{"_index":1276,"title":{"pipes/GroupPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":1595,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["größer",{"_index":5408,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["guard",{"_index":639,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":704,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard.service.ts",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":656,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.service.ts:16",{"_index":657,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guide",{"_index":5191,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["guidelines",{"_index":5552,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["h",{"_index":2821,"title":{},"body":{"components/ListComponent.html":{}}}],["haben",{"_index":4027,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["hacks",{"_index":5747,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["handle",{"_index":2262,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["handler",{"_index":2785,"title":{},"body":{"components/ListComponent.html":{}}}],["handles",{"_index":2203,"title":{},"body":{"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["handling",{"_index":3492,"title":{},"body":{"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["handy",{"_index":5440,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["happened",{"_index":2011,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["happens",{"_index":1687,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hard",{"_index":5479,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["has(item",{"_index":928,"title":{},"body":{"classes/Collection.html":{}}}],["hasactivepath",{"_index":3439,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasactivepath(item",{"_index":3478,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasall",{"_index":894,"title":{},"body":{"classes/Collection.html":{}}}],["hasall(items",{"_index":931,"title":{},"body":{"classes/Collection.html":{}}}],["hasfocus",{"_index":3036,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hasfocus(item",{"_index":3050,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hasmethod",{"_index":1023,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["hasmethod(method",{"_index":1049,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["hassle",{"_index":5538,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["having",{"_index":447,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":1338,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["header'},{'name",{"_index":259,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["header.component",{"_index":3070,"title":{},"body":{"modules/ListModule.html":{}}}],["header.component.html",{"_index":2936,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts",{"_index":2934,"title":{},"body":{"components/ListHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:105",{"_index":2968,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:113",{"_index":2956,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:122",{"_index":2972,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:132",{"_index":2974,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:138",{"_index":2966,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:16",{"_index":2952,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:18",{"_index":2953,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:20",{"_index":2980,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:22",{"_index":2978,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":2976,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:24",{"_index":2977,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:25",{"_index":2951,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:27",{"_index":2975,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:29",{"_index":2970,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":2964,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:38",{"_index":2962,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:46",{"_index":2967,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:83",{"_index":2958,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header/items/pagination",{"_index":5424,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["header/list",{"_index":2933,"title":{},"body":{"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["headers",{"_index":5402,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["headline",{"_index":3746,"title":{},"body":{"classes/Notification.html":{}}}],["heat",{"_index":1303,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap",{"_index":1322,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap'},{'name",{"_index":248,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["heatmap/heatmap.component",{"_index":869,"title":{},"body":{"modules/CalendarModule.html":{}}}],["heatmapcomponent",{"_index":247,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":196,"title":{},"body":{"components/AceComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/LocationMapComponent.html":{}}}],["hellip",{"_index":1497,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["help",{"_index":5247,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["helper",{"_index":1601,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{}}}],["helpful",{"_index":2587,"title":{},"body":{"components/InputComponent.html":{}}}],["here",{"_index":3103,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["hh:mm",{"_index":876,"title":{},"body":{"modules/CalendarModule.html":{}}}],["hidden",{"_index":1864,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/WithNotifications.html":{}}}],["hide",{"_index":1109,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["hideassetgroupselect",{"_index":1139,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["hidefirstlast",{"_index":3993,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hideformlabel",{"_index":1865,"title":{},"body":{"classes/Field.html":{}}}],["hideformlabelifempty",{"_index":1866,"title":{},"body":{"classes/Field.html":{}}}],["hideinform",{"_index":2537,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{}}}],["hideinlist",{"_index":3653,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonclickoutside",{"_index":1675,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hideoncreate",{"_index":3693,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonedit",{"_index":3694,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonescape",{"_index":1676,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["hidepages",{"_index":3994,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepagination",{"_index":1734,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{}}}],["hides",{"_index":1169,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["hidesubmitbutton",{"_index":2153,"title":{},"body":{"interfaces/FormConfig.html":{}}}],["hiding",{"_index":3773,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["higher",{"_index":2822,"title":{},"body":{"components/ListComponent.html":{}}}],["highest",{"_index":5531,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["histories",{"_index":2358,"title":{},"body":{"injectables/HistoryService.html":{}}}],["history",{"_index":2375,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["historyservice",{"_index":1207,"title":{"injectables/HistoryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/HistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["holds",{"_index":443,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/InputComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"injectables/PopService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{}}}],["host",{"_index":1520,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{}}}],["host.directive",{"_index":1574,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{}}}],["host.directive.ts",{"_index":4439,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["host.directive.ts:11",{"_index":4444,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["host.directive.ts:9",{"_index":4442,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["hostbinding",{"_index":1529,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class",{"_index":1730,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class.is",{"_index":1531,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["hostbindings",{"_index":1505,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostlistener",{"_index":1530,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["hostlistener('document:click",{"_index":4066,"title":{},"body":{"components/PopComponent.html":{}}}],["hostlistener('dragleave",{"_index":1541,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('dragover",{"_index":1532,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('drop",{"_index":1536,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlisteners",{"_index":1507,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hosts",{"_index":5450,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["hours",{"_index":5503,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hours.component.html",{"_index":5504,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hours.component.scss",{"_index":5505,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hover",{"_index":3433,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverdelay",{"_index":3444,"title":{},"body":{"components/MenuComponent.html":{}}}],["hovered",{"_index":3491,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem",{"_index":3440,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem(item",{"_index":3481,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverout",{"_index":3441,"title":{},"body":{"components/MenuComponent.html":{}}}],["hovers",{"_index":3483,"title":{},"body":{"components/MenuComponent.html":{}}}],["html",{"_index":199,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["http",{"_index":5294,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["http://localhost:1337",{"_index":5232,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["https",{"_index":5296,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://angular.io/guide/dynamic",{"_index":4440,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["https://blog.thoughtram.io/angular/2016/07/27/custom",{"_index":5509,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["https://components.entrecode.de/assets/asset?e=1",{"_index":474,"title":{},"body":{"directives/AssetDirective.html":{}}}],["https://components.entrecode.de/auth/auth?e=1",{"_index":3262,"title":{},"body":{"components/LoginComponent.html":{}}}],["https://components.entrecode.de/auth/password",{"_index":4008,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["https://components.entrecode.de/auth/signup?e=1",{"_index":4385,"title":{},"body":{"components/SignupComponent.html":{}}}],["https://components.entrecode.de/entries/crud?e=1",{"_index":1016,"title":{},"body":{"components/CrudComponent.html":{}}}],["https://components.entrecode.de/entries/entries?e=1",{"_index":1582,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["https://components.entrecode.de/misc/ace?e=1",{"_index":19,"title":{},"body":{"components/AceComponent.html":{}}}],["https://components.entrecode.de/misc/medium",{"_index":3383,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["https://components.entrecode.de/misc/tinymce?e=1",{"_index":4642,"title":{},"body":{"components/TinymceComponent.html":{}}}],["https://components.entrecode.de/ui/datetime?e=1",{"_index":1238,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["https://components.entrecode.de/ui/icons?e=1",{"_index":2389,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["https://components.entrecode.de/ui/list/basic?e=1",{"_index":2754,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/list/transforms?e=1",{"_index":2755,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/loader?e=1",{"_index":3081,"title":{},"body":{"components/LoaderComponent.html":{}}}],["https://components.entrecode.de/ui/login?e=1",{"_index":3294,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["https://components.entrecode.de/ui/modal?e=1",{"_index":3531,"title":{},"body":{"components/ModalComponent.html":{}}}],["https://components.entrecode.de/ui/notifications?e=1",{"_index":3752,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["https://components.entrecode.de/ui/pop?e=1",{"_index":4045,"title":{},"body":{"components/PopComponent.html":{}}}],["https://components.entrecode.de/ui/symbols?e=1",{"_index":4530,"title":{},"body":{"injectables/SymbolService.html":{}}}],["https://components.entrecode.de/ui/tabs?e=1",{"_index":4597,"title":{},"body":{"components/TabsComponent.html":{}}}],["https://doc.entrecode.de/data_manager/#field",{"_index":4270,"title":{},"body":{"interfaces/SdkField.html":{}}}],["https://entrecode.github.io/ec.sdk/#api",{"_index":559,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["https://entrecode.github.io/ec.sdk/#environment",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://github.com/ajaxorg/ace",{"_index":169,"title":{},"body":{"components/AceComponent.html":{}}}],["https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4",{"_index":2244,"title":{},"body":{"injectables/FormService.html":{}}}],["https://github.com/auth0/angular2",{"_index":710,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://github.com/ng",{"_index":4555,"title":{},"body":{"injectables/SymbolService.html":{}}}],["https://localhost:4200",{"_index":5375,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["https://localhost:4200/muffins",{"_index":5389,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["https://medium.com/claritydesignsystem/ng",{"_index":3532,"title":{},"body":{"components/ModalComponent.html":{}}}],["human",{"_index":1947,"title":{},"body":{"classes/Field.html":{}}}],["humans",{"_index":2680,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["i+1",{"_index":3981,"title":{},"body":{"components/PaginationComponent.html":{}}}],["i.getbody",{"_index":4126,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["i.id",{"_index":4128,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["icon",{"_index":1867,"title":{},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["icon'},{'name",{"_index":250,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["icon.component",{"_index":2427,"title":{},"body":{"modules/IconModule.html":{}}}],["icon.component.html",{"_index":2392,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.content",{"_index":2421,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.service",{"_index":2412,"title":{},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{}}}],["icon/icon.module",{"_index":2180,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{}}}],["iconcomponent",{"_index":249,"title":{"components/IconComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconmodule",{"_index":2170,"title":{"modules/IconModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["icons",{"_index":2385,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListHeaderComponent.html":{}}}],["icons.ts",{"_index":5110,"title":{},"body":{"coverage.html":{}}}],["iconservice",{"_index":2394,"title":{"injectables/IconService.html":{}},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"coverage.html":{},"overview.html":{}}}],["id",{"_index":373,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["idea",{"_index":2810,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["identifier",{"_index":389,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["identifierpattern",{"_index":2674,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{}}}],["identify",{"_index":2678,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["ids",{"_index":2087,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["ids.push(asset",{"_index":2086,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["if(body.amazement_factor",{"_index":5433,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(value",{"_index":5428,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(value===10",{"_index":5426,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["iframes",{"_index":201,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["ignored",{"_index":2880,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["ignoreduplicates",{"_index":1992,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ignores",{"_index":1998,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ignoring",{"_index":4243,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["image",{"_index":252,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["image/image.directive",{"_index":2128,"title":{},"body":{"modules/FilesModule.html":{}}}],["imagedirective",{"_index":336,"title":{"directives/ImageDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["imageform",{"_index":2481,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["imageloader",{"_index":2482,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["images",{"_index":2478,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["imageselectpopcomponent",{"_index":251,"title":{"components/ImageSelectPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["img",{"_index":337,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["img's",{"_index":2436,"title":{},"body":{"directives/ImageDirective.html":{}}}],["immediately",{"_index":491,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/PopComponent.html":{}}}],["immutable",{"_index":1769,"title":{},"body":{"injectables/EntryService.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["implement",{"_index":5507,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["implementation",{"_index":1254,"title":{},"body":{"components/DatetimeComponent.html":{},"components/NotificationsComponent.html":{}}}],["implemented",{"_index":4273,"title":{},"body":{"interfaces/SdkField.html":{}}}],["implements",{"_index":17,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["import",{"_index":152,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{}}}],["imported",{"_index":163,"title":{},"body":{"components/AceComponent.html":{},"components/InputErrorsComponent.html":{}}}],["importing",{"_index":77,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["imports",{"_index":363,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{}}}],["impressum",{"_index":5249,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["improved",{"_index":5634,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["include",{"_index":4511,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["includeassetidinpath",{"_index":1993,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["included",{"_index":2218,"title":{},"body":{"injectables/FormService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["includes",{"_index":2000,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{}}}],["including",{"_index":2431,"title":{},"body":{"injectables/IconService.html":{}}}],["incoming",{"_index":4737,"title":{},"body":{"components/ToggleComponent.html":{}}}],["increment",{"_index":5518,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["index",{"_index":39,"title":{"index.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["index(item",{"_index":934,"title":{},"body":{"classes/Collection.html":{}}}],["index.html",{"_index":2403,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["indexable",{"_index":1932,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{}}}],["indicate",{"_index":3098,"title":{},"body":{"components/LoaderComponent.html":{}}}],["indices",{"_index":1997,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["information",{"_index":3632,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["infos",{"_index":3908,"title":{},"body":{"classes/Pagination.html":{}}}],["inhabits",{"_index":2682,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["inherit",{"_index":5445,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["inherited",{"_index":119,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["init",{"_index":55,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["init(environment",{"_index":4305,"title":{},"body":{"injectables/SdkService.html":{}}}],["init(list",{"_index":2795,"title":{},"body":{"components/ListComponent.html":{}}}],["inital",{"_index":5681,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["initfilterform",{"_index":2944,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["initfilterform(filterform",{"_index":2961,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["initfilterquery",{"_index":547,"title":{},"body":{"components/AssetListComponent.html":{}}}],["initfilterquery(fieldfilter",{"_index":586,"title":{},"body":{"components/AssetListComponent.html":{}}}],["initial",{"_index":1843,"title":{},"body":{"components/ErrorComponent.html":{},"components/MenuComponent.html":{}}}],["initialized",{"_index":136,"title":{},"body":{"components/AceComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["initializes",{"_index":1390,"title":{},"body":{"interfaces/Day.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{}}}],["initially",{"_index":4605,"title":{},"body":{"components/TabsComponent.html":{}}}],["initing",{"_index":4283,"title":{},"body":{"injectables/SdkService.html":{}}}],["initmethods",{"_index":4165,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["initmode",{"_index":3536,"title":{},"body":{"components/ModalComponent.html":{}}}],["inits",{"_index":93,"title":{},"body":{"components/AceComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MediumEditorComponent.html":{}}}],["inittabs",{"_index":4601,"title":{},"body":{"components/TabsComponent.html":{}}}],["inject",{"_index":1286,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["inject('environment",{"_index":4319,"title":{},"body":{"injectables/SdkService.html":{}}}],["injectable",{"_index":660,"title":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["injectables",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"overview.html":{}}}],["injection",{"_index":5935,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["injects",{"_index":483,"title":{},"body":{"directives/AssetDirective.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["input",{"_index":42,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["input's",{"_index":1252,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["input'},{'name",{"_index":254,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["input('config",{"_index":2828,"title":{},"body":{"components/ListComponent.html":{}}}],["input.component",{"_index":1221,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["input.component.html",{"_index":456,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.scss",{"_index":5489,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.ts",{"_index":442,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.ts:10",{"_index":1466,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.component.ts:13",{"_index":461,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["input.component.ts:14",{"_index":462,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultInputComponent.html":{}}}],["input.component.ts:16",{"_index":1483,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:18",{"_index":1482,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:20",{"_index":1480,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:22",{"_index":1477,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:25",{"_index":1481,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:27",{"_index":1479,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:33",{"_index":1478,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:9",{"_index":1465,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.focus(true",{"_index":2993,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["input/default",{"_index":1473,"title":{},"body":{"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"coverage.html":{}}}],["input/ec",{"_index":5462,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input/form",{"_index":5828,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["input/input.component",{"_index":2668,"title":{},"body":{"modules/IoModule.html":{}}}],["input/output",{"_index":5474,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input[type=file",{"_index":4841,"title":{},"body":{"components/UploadComponent.html":{}}}],["inputcomponent",{"_index":129,"title":{"components/InputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inputcomponent#focus",{"_index":5816,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["inputcomponents",{"_index":2593,"title":{},"body":{"components/InputComponent.html":{}}}],["inputerrorscomponent",{"_index":255,"title":{"components/InputErrorsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputready",{"_index":2945,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["inputready(input",{"_index":2963,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["inputs",{"_index":65,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["inputthis",{"_index":5486,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inputview",{"_index":2517,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["inputviews",{"_index":4780,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["inside",{"_index":1066,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["inspiration",{"_index":4194,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["install",{"_index":5210,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["installation",{"_index":5527,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["instance",{"_index":85,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{}}}],["instanceof",{"_index":2469,"title":{},"body":{"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/TabsComponent.html":{}}}],["instances",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"pipes/DatetimePipe.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["instead",{"_index":1789,"title":{},"body":{"injectables/EntryService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["intended",{"_index":4664,"title":{},"body":{"components/TinymceComponent.html":{}}}],["interaction",{"_index":3821,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["interface",{"_index":368,"title":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["interfaces",{"_index":370,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"overview.html":{}}}],["interfere",{"_index":3128,"title":{},"body":{"components/LoaderComponent.html":{}}}],["internal",{"_index":1179,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["interpreted",{"_index":2022,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["intialization",{"_index":2590,"title":{},"body":{"components/InputComponent.html":{}}}],["intl.collator(undefined",{"_index":4464,"title":{},"body":{"classes/Sorter.html":{}}}],["invalid",{"_index":4771,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["invite",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["inviteplaceholder",{"_index":4409,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["invoked",{"_index":2681,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["io/input/input.component",{"_index":2989,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["io/io.module",{"_index":2176,"title":{},"body":{"modules/FormModule.html":{},"modules/UtilityModule.html":{}}}],["iomodule",{"_index":2167,"title":{"modules/IoModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["isactive",{"_index":3442,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{}}}],["isactive(page",{"_index":3899,"title":{},"body":{"classes/Pagination.html":{}}}],["isactive(path",{"_index":3485,"title":{},"body":{"components/MenuComponent.html":{}}}],["isclickable",{"_index":3037,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["isdisabled",{"_index":1258,"title":{},"body":{"components/DatetimeComponent.html":{},"components/InputComponent.html":{}}}],["isempty",{"_index":895,"title":{},"body":{"classes/Collection.html":{}}}],["isend",{"_index":1416,"title":{},"body":{"interfaces/Day.html":{}}}],["isfirst",{"_index":1584,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isimmutableproperty",{"_index":1751,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{}}}],["isimmutableproperty(key",{"_index":1767,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["islast",{"_index":1585,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["islastcolumn",{"_index":2946,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["islastcolumn(field",{"_index":2965,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["isloading",{"_index":2760,"title":{},"body":{"components/ListComponent.html":{}}}],["isn't",{"_index":5327,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["isnewasset(asset",{"_index":2038,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isnewassetgroupid(assetgroupid",{"_index":2108,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["iso",{"_index":4755,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["isodate",{"_index":4745,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["isoldassetgroupid",{"_index":2497,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["isoldassetgroupid(assetgroupid",{"_index":2106,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isoutside",{"_index":1673,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isoutside(element",{"_index":1708,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isreadonly",{"_index":2197,"title":{},"body":{"injectables/FormService.html":{}}}],["isreadonly(field",{"_index":2214,"title":{},"body":{"injectables/FormService.html":{}}}],["issame(this.timespan[0].clone().startof('day",{"_index":1415,"title":{},"body":{"interfaces/Day.html":{}}}],["issame(this.timespan[1].clone().startof('day",{"_index":1417,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected",{"_index":3443,"title":{},"body":{"components/MenuComponent.html":{}}}],["isselected(_moment",{"_index":1449,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected(item",{"_index":3487,"title":{},"body":{"components/MenuComponent.html":{}}}],["isstart",{"_index":1413,"title":{},"body":{"interfaces/Day.html":{}}}],["issue",{"_index":5824,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["ist",{"_index":3762,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["isvisible",{"_index":3951,"title":{},"body":{"components/PaginationComponent.html":{}}}],["isvisible(page",{"_index":3954,"title":{},"body":{"components/PaginationComponent.html":{}}}],["item",{"_index":52,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["item's",{"_index":3042,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["item('a",{"_index":5535,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["item(asset",{"_index":2064,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item(assets[0",{"_index":2062,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item(s",{"_index":2109,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item.config.fields[property].form",{"_index":1095,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.fields[property].list",{"_index":1094,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.onsave",{"_index":4255,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.data?.title",{"_index":3519,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.deleteimmutableproperties(value",{"_index":4257,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbody",{"_index":609,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbody().action",{"_index":400,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().action(item",{"_index":401,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().children",{"_index":402,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().select",{"_index":397,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.group(property",{"_index":2328,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["item.id",{"_index":1105,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{}}}],["item.path",{"_index":3517,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.resolve(field.property",{"_index":5448,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["item.sort(property",{"_index":4474,"title":{},"body":{"classes/Sorter.html":{}}}],["item/item",{"_index":2158,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["item?.display(field.property",{"_index":1471,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["item?.resolve(field.property)?.length",{"_index":1499,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["itemclick",{"_index":5688,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["itemconfig",{"_index":1758,"title":{"interfaces/ItemConfig.html":{}},"body":{"injectables/EntryService.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["items",{"_index":892,"title":{},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"pipes/DatetimePipe.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["items'},{'name",{"_index":261,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["items.component",{"_index":3071,"title":{},"body":{"modules/ListModule.html":{}}}],["items.component.html",{"_index":3035,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts",{"_index":3032,"title":{},"body":{"components/ListItemsComponent.html":{},"coverage.html":{}}}],["items.component.ts:14",{"_index":3045,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:16",{"_index":3046,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:18",{"_index":3041,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:20",{"_index":3047,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:22",{"_index":3040,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:24",{"_index":3039,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:26",{"_index":3055,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:28",{"_index":3054,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:44",{"_index":3051,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:48",{"_index":3053,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:53",{"_index":3048,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.filter((item",{"_index":2327,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["items.foreach((item",{"_index":966,"title":{},"body":{"classes/Collection.html":{}}}],["items.length",{"_index":982,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.pipe",{"_index":2182,"title":{},"body":{"modules/FormModule.html":{}}}],["items.pipe.ts",{"_index":3373,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["items.pipe.ts:7",{"_index":3377,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["items.reduce((has",{"_index":973,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.reverse",{"_index":4490,"title":{},"body":{"classes/Sorter.html":{}}}],["items.slice((this.config.page",{"_index":3943,"title":{},"body":{"classes/Pagination.html":{}}}],["items.sort((a",{"_index":4485,"title":{},"body":{"classes/Sorter.html":{}}}],["items/list",{"_index":3031,"title":{},"body":{"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["iterate",{"_index":2652,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{}}}],["itself",{"_index":1711,"title":{},"body":{"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{}}}],["javascript",{"_index":74,"title":{},"body":{"components/AceComponent.html":{}}}],["join",{"_index":3583,"title":{},"body":{"components/ModalComponent.html":{}}}],["js",{"_index":5159,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["json.parse(config",{"_index":2910,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.parse(e.data",{"_index":2380,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.stringify(object.assign(existing",{"_index":2914,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.stringify(value",{"_index":2912,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["jump",{"_index":5823,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["jwt/issues/305",{"_index":711,"title":{},"body":{"modules/AuthModule.html":{}}}],["kann",{"_index":676,"title":{},"body":{"guards/AuthGuard.html":{}}}],["karma",{"_index":5244,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["keep",{"_index":1431,"title":{},"body":{"interfaces/Day.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["keeppopopen",{"_index":1140,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["keepratio",{"_index":2538,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["keeps",{"_index":2330,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{}}}],["key",{"_index":995,"title":{},"body":{"classes/Config.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["key[0",{"_index":1820,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["keyaction",{"_index":2689,"title":{"interfaces/KeyAction.html":{}},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"coverage.html":{}}}],["keycommands",{"_index":53,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["keycommands/keycommands.service",{"_index":4930,"title":{},"body":{"modules/UtilityModule.html":{}}}],["keycommandsservice",{"_index":151,"title":{"injectables/KeycommandsService.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/LocationPickerComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["keyconfig",{"_index":2713,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["keyconfig.action(e",{"_index":2716,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["keyconfig.canactivate",{"_index":2715,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["keydown",{"_index":4092,"title":{},"body":{"injectables/PopService.html":{}}}],["keys",{"_index":2692,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"injectables/PopService.html":{}}}],["keyup",{"_index":4717,"title":{},"body":{"components/TinymceComponent.html":{}}}],["kind",{"_index":3099,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/WithLoader.html":{}}}],["kinds",{"_index":4448,"title":{},"body":{"classes/Sorter.html":{}}}],["kleiner",{"_index":5410,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["know",{"_index":5484,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["knowing",{"_index":2092,"title":{},"body":{"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{}}}],["known",{"_index":504,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["label",{"_index":388,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["labels",{"_index":1902,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["language",{"_index":108,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["languages",{"_index":5848,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["last",{"_index":1304,"title":{},"body":{"interfaces/Day.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["lat",{"_index":2320,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["later",{"_index":1553,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/WithNotifications.html":{}}}],["latest",{"_index":4094,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop",{"_index":4103,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop.hide",{"_index":4105,"title":{},"body":{"injectables/PopService.html":{}}}],["latitude",{"_index":2302,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["layer",{"_index":3822,"title":{},"body":{"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["layout",{"_index":1432,"title":{},"body":{"interfaces/Day.html":{}}}],["lazy",{"_index":2555,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["left",{"_index":3556,"title":{},"body":{"components/ModalComponent.html":{}}}],["legacy",{"_index":637,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["legacyasset",{"_index":2030,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["legacyassetconfig",{"_index":2018,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["legend",{"_index":198,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["lemontree",{"_index":2816,"title":{},"body":{"components/ListComponent.html":{}}}],["length",{"_index":976,"title":{},"body":{"classes/Collection.html":{}}}],["lerna",{"_index":5163,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["let's",{"_index":3857,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["letters",{"_index":1743,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["level",{"_index":3468,"title":{},"body":{"components/MenuComponent.html":{}}}],["leveled",{"_index":1834,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{}}}],["levels",{"_index":479,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"injectables/TypeConfigService.html":{}}}],["li",{"_index":3966,"title":{},"body":{"components/PaginationComponent.html":{}}}],["li.is",{"_index":3522,"title":{},"body":{"components/MenuComponent.html":{}}}],["lib",{"_index":6005,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["libraries",{"_index":3202,"title":{},"body":{"modules/LocationModule.html":{}}}],["library",{"_index":5993,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["light",{"_index":3631,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["lightmodel",{"_index":1668,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceListPopComponent.html":{}}}],["lightmodel.titlefield",{"_index":3709,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["line",{"_index":3122,"title":{},"body":{"components/LoaderComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["line:directive",{"_index":2143,"title":{},"body":{"directives/FocusDirective.html":{}}}],["line:no",{"_index":2827,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["link",{"_index":3998,"title":{},"body":{"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["links",{"_index":5395,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["lint",{"_index":5867,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["linter",{"_index":5744,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["list",{"_index":217,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["list'},{'name",{"_index":215,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["list(resolved",{"_index":432,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["list(this.collection.items",{"_index":2836,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.items",{"_index":2833,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component",{"_index":607,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"components/ListComponent.html":{},"modules/ListModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["list.component.html",{"_index":541,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["list.component.ts",{"_index":540,"title":{},"body":{"components/AssetListComponent.html":{},"coverage.html":{}}}],["list.component.ts:9",{"_index":577,"title":{},"body":{"components/AssetListComponent.html":{}}}],["list.config",{"_index":2916,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.config.storagekey",{"_index":2917,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields",{"_index":2915,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.filter((f",{"_index":2923,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.find((f",{"_index":2931,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.foreach((field",{"_index":2928,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.load",{"_index":5453,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["list.ts",{"_index":5034,"title":{},"body":{"coverage.html":{}}}],["list.ts/list.component",{"_index":3927,"title":{},"body":{"classes/Pagination.html":{}}}],["list/asset",{"_index":539,"title":{},"body":{"components/AssetListComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["list/entry",{"_index":1077,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["list/list",{"_index":2888,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["list/list.module",{"_index":4380,"title":{},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["list/resource",{"_index":606,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/FileOptions.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["listcomponent",{"_index":257,"title":{"components/ListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listconfig",{"_index":380,"title":{"interfaces/ListConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["listconfigservice",{"_index":601,"title":{"injectables/ListConfigService.html":{}},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["listens",{"_index":1699,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["listheadercomponent",{"_index":258,"title":{"components/ListHeaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listitemscomponent",{"_index":260,"title":{"components/ListItemsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listmodule",{"_index":3061,"title":{"modules/ListModule.html":{}},"body":{"modules/ListModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["listmoduleconfig",{"_index":3074,"title":{},"body":{"modules/ListModule.html":{},"coverage.html":{}}}],["listresource",{"_index":549,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{}}}],["listresource.follownextlink().then((list",{"_index":4122,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["listresource.getallitems().map((resource",{"_index":4114,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["listresource.hasnextlink",{"_index":4120,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["lists",{"_index":1071,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["lists/forms",{"_index":3617,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["listtemplate",{"_index":2758,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["literal",{"_index":864,"title":{},"body":{"modules/CalendarModule.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{}}}],["live",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lng",{"_index":2322,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["load",{"_index":476,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"directives/SlotHostDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["load(config",{"_index":3904,"title":{},"body":{"classes/Pagination.html":{}}}],["load(id",{"_index":497,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["loadactions(actions",{"_index":423,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["loadactionsbefore",{"_index":408,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["loadcomponent",{"_index":1564,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadcomponent(component",{"_index":1566,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loade",{"_index":3872,"title":{},"body":{"components/OutputComponent.html":{}}}],["loaded",{"_index":481,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["loadentry",{"_index":1024,"title":{},"body":{"components/CrudComponent.html":{}}}],["loadentry(item",{"_index":1052,"title":{},"body":{"components/CrudComponent.html":{}}}],["loader",{"_index":550,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["loader's",{"_index":3097,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":263,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["loader.component",{"_index":3143,"title":{},"body":{"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"interfaces/WithLoader.html":{}}}],["loader.component.html",{"_index":3082,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interface",{"_index":3350,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loader.interface.ts",{"_index":4946,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["loader.service",{"_index":3144,"title":{},"body":{"modules/LoaderModule.html":{}}}],["loader.wait(promise",{"_index":3150,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loader/loader.component",{"_index":3348,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader/loader.module",{"_index":2179,"title":{},"body":{"modules/FormModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["loader/with",{"_index":3349,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loadercomponent",{"_index":262,"title":{"components/LoaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{},"overview.html":{}}}],["loadermodule",{"_index":2171,"title":{"modules/LoaderModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LoaderModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["loaders",{"_index":3104,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loaderservice",{"_index":1029,"title":{"injectables/LoaderService.html":{}},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderthe",{"_index":3102,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadimage",{"_index":2513,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loadimg",{"_index":2519,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loading",{"_index":506,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"interfaces/WithLoader.html":{}}}],["loadresourcelistactions(state",{"_index":4133,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["loads",{"_index":472,"title":{},"body":{"directives/AssetDirective.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"miscellaneous/functions.html":{}}}],["loadwhen",{"_index":551,"title":{},"body":{"components/AssetListComponent.html":{}}}],["local",{"_index":2885,"title":{},"body":{"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["locale",{"_index":5397,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["localizable",{"_index":3688,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["localization",{"_index":4501,"title":{"additional-documentation/project-setup-tutorial/localization.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["localloader",{"_index":3109,"title":{},"body":{"components/LoaderComponent.html":{}}}],["localstorage.getitem(key",{"_index":2909,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["localstorage.setitem(key",{"_index":2911,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["located",{"_index":5188,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["location",{"_index":265,"title":{"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/location-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["location.latitude",{"_index":2321,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location.longitude",{"_index":2323,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location/map",{"_index":3188,"title":{},"body":{"modules/LocationModule.html":{}}}],["location_components",{"_index":3189,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["locationmapcomponent",{"_index":264,"title":{"components/LocationMapComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locationmodule",{"_index":3181,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["locationmoduleconfig",{"_index":3197,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["locationpickercomponent",{"_index":267,"title":{"components/LocationPickerComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["locationsearchcomponent",{"_index":269,"title":{"components/LocationSearchComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locked",{"_index":4023,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["lockform",{"_index":4011,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["log",{"_index":3788,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["logged",{"_index":2401,"title":{},"body":{"components/IconComponent.html":{}}}],["logic",{"_index":5508,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["login",{"_index":274,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login's",{"_index":3342,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login'},{'name",{"_index":272,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["login(undefined",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["login(value",{"_index":3330,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login.component.html",{"_index":3263,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login.component.ts",{"_index":5393,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login/login.component",{"_index":706,"title":{},"body":{"modules/AuthModule.html":{},"components/SignupComponent.html":{}}}],["logincomponent",{"_index":271,"title":{"components/LoginComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["logincomponent:23",{"_index":4390,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:25",{"_index":4393,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:27",{"_index":4392,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:29",{"_index":4399,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:31",{"_index":4400,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:34",{"_index":4398,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:35",{"_index":4401,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:36",{"_index":4402,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:39",{"_index":4395,"title":{},"body":{"components/SignupComponent.html":{}}}],["loginformcomponent",{"_index":273,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["loginformcomponent:18",{"_index":4430,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:20",{"_index":4432,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:22",{"_index":4429,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:24",{"_index":4422,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:26",{"_index":4421,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:28",{"_index":4417,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:30",{"_index":4420,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:32",{"_index":4415,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:34",{"_index":4416,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:36",{"_index":4418,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:38",{"_index":4419,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:40",{"_index":4414,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:42",{"_index":4413,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:44",{"_index":4431,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:47",{"_index":4433,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:50",{"_index":4426,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:58",{"_index":4428,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:66",{"_index":4425,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:72",{"_index":4427,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["logout",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(api",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":2881,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{}}}],["longer",{"_index":5279,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["longitude",{"_index":2304,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["look",{"_index":5353,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["looked",{"_index":3769,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["looks",{"_index":3730,"title":{},"body":{"classes/Notification.html":{}}}],["lookup",{"_index":2280,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lower",{"_index":2824,"title":{},"body":{"components/ListComponent.html":{}}}],["lowest",{"_index":5525,"title":{},"body":{"additional-documentation/readme/data-readme.html":{}}}],["lvl",{"_index":3679,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["lvl1",{"_index":1149,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["made",{"_index":4662,"title":{},"body":{"components/TinymceComponent.html":{}}}],["mail",{"_index":3317,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["main",{"_index":2808,"title":{},"body":{"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["mainly",{"_index":5181,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["make",{"_index":78,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["makes",{"_index":5494,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["making",{"_index":1594,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["managed",{"_index":5198,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["mandatory",{"_index":3555,"title":{},"body":{"components/ModalComponent.html":{}}}],["manually",{"_index":4652,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["many",{"_index":1173,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["map",{"_index":1003,"title":{},"body":{"classes/Config.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{}}}],["map'},{'name",{"_index":266,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["map((a",{"_index":4145,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map((d",{"_index":1410,"title":{},"body":{"interfaces/Day.html":{}}}],["map((date",{"_index":1412,"title":{},"body":{"interfaces/Day.html":{}}}],["map((field",{"_index":3672,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["map((i",{"_index":4125,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map((item",{"_index":4475,"title":{},"body":{"classes/Sorter.html":{}}}],["map((method",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((property",{"_index":3684,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["map.component",{"_index":3194,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["map.component.html",{"_index":3154,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.scss",{"_index":3153,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts",{"_index":3152,"title":{},"body":{"components/LocationMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:11",{"_index":3160,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:13",{"_index":3162,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:15",{"_index":3165,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:17",{"_index":3164,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:23",{"_index":3171,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:30",{"_index":3168,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.value",{"_index":3241,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["maploader",{"_index":2272,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mapped",{"_index":1996,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["mapping",{"_index":1319,"title":{},"body":{"interfaces/Day.html":{}}}],["maps",{"_index":1184,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{}}}],["mapsapiloader",{"_index":2269,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["marker",{"_index":3166,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend",{"_index":3155,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend(coords",{"_index":3167,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markers",{"_index":3163,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["marks",{"_index":1328,"title":{},"body":{"interfaces/Day.html":{}}}],["markup",{"_index":3530,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["match",{"_index":1756,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/LocationSearchComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["match.levels",{"_index":3677,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["matches",{"_index":4218,"title":{},"body":{"injectables/ResourceService.html":{}}}],["matches(change",{"_index":4229,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["matching",{"_index":343,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["math.abs(current",{"_index":3977,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.max(max",{"_index":3680,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["math.max(minlevel",{"_index":1100,"title":{},"body":{"components/CrudComponent.html":{}}}],["math.max(value.width",{"_index":2504,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.defaultsize",{"_index":2531,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.getpage",{"_index":3946,"title":{},"body":{"classes/Pagination.html":{}}}],["matter",{"_index":5358,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["max",{"_index":2181,"title":{},"body":{"modules/FormModule.html":{}}}],["maxcolumns",{"_index":2869,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["maximal",{"_index":2877,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["maximum",{"_index":1906,"title":{},"body":{"classes/Field.html":{}}}],["maxitems",{"_index":1868,"title":{},"body":{"classes/Field.html":{},"pipes/MaxItemsPipe.html":{}}}],["maxitemspipe",{"_index":2165,"title":{"pipes/MaxItemsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/MaxItemsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["meaning",{"_index":2107,"title":{},"body":{"interfaces/FileOptions.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["means",{"_index":5533,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["meant",{"_index":142,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"guards/AuthGuard.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["meantioned",{"_index":5469,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["medium",{"_index":276,"title":{"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["mediumeditor",{"_index":3392,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditor(this.container.nativeelement",{"_index":3411,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditorcomponent",{"_index":275,"title":{"components/MediumEditorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediumeditormodule",{"_index":3419,"title":{"modules/MediumEditorModule.html":{}},"body":{"modules/MediumEditorModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["mediummodule",{"_index":5290,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["mediummoduleconfig",{"_index":3426,"title":{},"body":{"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["menu",{"_index":3429,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu,[ec",{"_index":279,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["menu.component.html",{"_index":3432,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":3431,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.component",{"_index":4929,"title":{},"body":{"modules/UtilityModule.html":{}}}],["menu]'},{'name",{"_index":280,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["menucomponent",{"_index":278,"title":{"components/MenuComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["merge",{"_index":3696,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["merge(route.data",{"_index":1082,"title":{},"body":{"components/CrudComponent.html":{}}}],["merged",{"_index":1000,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["merged[title",{"_index":3697,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["mergedfields",{"_index":3715,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["mergedfields[key",{"_index":3718,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["merges",{"_index":3609,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["merging",{"_index":5677,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["message",{"_index":649,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{}}}],["message.close",{"_index":3863,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["messages",{"_index":2649,"title":{},"body":{"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["met",{"_index":5500,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["meta",{"_index":2694,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["method",{"_index":579,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["methods",{"_index":54,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["middle",{"_index":5530,"title":{},"body":{"additional-documentation/readme/ui-readme.html":{}}}],["mimetypes",{"_index":5060,"title":{},"body":{"coverage.html":{}}}],["min",{"_index":195,"title":{},"body":{"components/AceComponent.html":{}}}],["minimum",{"_index":4003,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["miscellaneous",{"_index":5174,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":5563,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["mit",{"_index":4030,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["mmmm",{"_index":878,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["modal",{"_index":3527,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["modal'},{'name",{"_index":282,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["modal.component.html",{"_index":3535,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.component",{"_index":4087,"title":{},"body":{"modules/PopModule.html":{}}}],["modalcomponent",{"_index":281,"title":{"components/ModalComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":66,"title":{},"body":{"components/AceComponent.html":{},"interfaces/CrudConfig.html":{},"components/ModalComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["model",{"_index":117,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["model's",{"_index":3590,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{}}}],["model.${filter.model",{"_index":1785,"title":{},"body":{"injectables/EntryService.html":{}}}],["model.${model",{"_index":1817,"title":{},"body":{"injectables/EntryService.html":{}}}],["model.fields",{"_index":998,"title":{},"body":{"classes/Config.html":{}}}],["model/schema",{"_index":5420,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["modelchange",{"_index":3389,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["modelconfig",{"_index":1030,"title":{"interfaces/ModelConfig.html":{}},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["modelconfig.fields",{"_index":3669,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get(&#39;muffin&#39",{"_index":3621,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get('muffin",{"_index":3647,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set(&#39;muffin&#39",{"_index":3640,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set('muffin",{"_index":3649,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfields",{"_index":3712,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfields[key",{"_index":3720,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigservice",{"_index":1031,"title":{"injectables/ModelConfigService.html":{}},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["modelconfiguration",{"_index":3724,"title":{"interfaces/ModelConfiguration.html":{}},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["modelist.js",{"_index":171,"title":{},"body":{"components/AceComponent.html":{}}}],["modelresource",{"_index":2346,"title":{},"body":{"injectables/HistoryService.html":{}}}],["models",{"_index":2332,"title":{},"body":{"injectables/HistoryService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["models[model",{"_index":3723,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modes",{"_index":3569,"title":{},"body":{"components/ModalComponent.html":{}}}],["modified",{"_index":3644,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modified'].indexof(key",{"_index":1821,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["modify",{"_index":2589,"title":{},"body":{"components/InputComponent.html":{}}}],["modifying",{"_index":1742,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["module",{"_index":345,"title":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["module's",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["module(s",{"_index":6023,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["module.exports",{"_index":5320,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["modules",{"_index":347,"title":{"modules.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["modulewithproviders",{"_index":698,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/LocationModule.html":{},"miscellaneous/functions.html":{}}}],["moment",{"_index":1268,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme.html":{}}}],["moment's",{"_index":1428,"title":{},"body":{"interfaces/Day.html":{}}}],["moment(new",{"_index":4775,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value",{"_index":1293,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format('yyyy",{"_index":5404,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment(value).format(format",{"_index":4796,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).format(pattern",{"_index":1297,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format(this.symbol.resolve('moment.format.month",{"_index":4798,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).isvalid",{"_index":4772,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).toisostring",{"_index":4799,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.date",{"_index":873,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.format.month",{"_index":877,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.format.time",{"_index":875,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.locale('de",{"_index":5396,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment.locale(this.symbols.resolve('moment.locale'));using",{"_index":4512,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["moment.moment",{"_index":1244,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["monorepo",{"_index":5197,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["month",{"_index":883,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["month'},{'name",{"_index":284,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["month.component.html",{"_index":1317,"title":{},"body":{"interfaces/Day.html":{}}}],["monthcomponent",{"_index":283,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["monthformat",{"_index":1339,"title":{},"body":{"interfaces/Day.html":{}}}],["months",{"_index":1455,"title":{},"body":{"interfaces/Day.html":{}}}],["more",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["mouseout",{"_index":3463,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover",{"_index":3456,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover(day",{"_index":1382,"title":{},"body":{"interfaces/Day.html":{}}}],["mouseup(day",{"_index":1381,"title":{},"body":{"interfaces/Day.html":{}}}],["move",{"_index":896,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/adding-new-packages.html":{}}}],["move(item",{"_index":938,"title":{},"body":{"classes/Collection.html":{}}}],["moves",{"_index":940,"title":{},"body":{"classes/Collection.html":{}}}],["ms",{"_index":2564,"title":{},"body":{"components/InputComponent.html":{},"classes/Notification.html":{}}}],["muffin",{"_index":3622,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffin.entry?.name",{"_index":1658,"title":{},"body":{"directives/EntryDirective.html":{}}}],["muffin.name",{"_index":1616,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffincomponent",{"_index":3778,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["muffinconfiguration",{"_index":5460,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffins",{"_index":5388,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["muffins/muffins.component",{"_index":5386,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinsadd",{"_index":5381,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinscomponent",{"_index":5385,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["multi",{"_index":31,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["multiple",{"_index":1185,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["mustreload",{"_index":1025,"title":{},"body":{"components/CrudComponent.html":{}}}],["mustreload(item",{"_index":1056,"title":{},"body":{"components/CrudComponent.html":{}}}],["mutable",{"_index":3687,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["mute",{"_index":2709,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["muted",{"_index":2693,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["myapp",{"_index":3105,"title":{},"body":{"components/LoaderComponent.html":{}}}],["myasset.asset?.assetid",{"_index":510,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.created",{"_index":515,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.files?.length",{"_index":518,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.tags",{"_index":513,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.title",{"_index":511,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.type",{"_index":516,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myclient",{"_index":853,"title":{},"body":{"injectables/AuthService.html":{}}}],["mycomponent",{"_index":3759,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["myimage.asset?.assetid",{"_index":2460,"title":{},"body":{"directives/ImageDirective.html":{}}}],["name",{"_index":101,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["name[0].touppercase",{"_index":5401,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["names",{"_index":1995,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["namespace",{"_index":2292,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["native",{"_index":2452,"title":{},"body":{"directives/ImageDirective.html":{}}}],["natural",{"_index":4462,"title":{},"body":{"classes/Sorter.html":{}}}],["naturally",{"_index":4468,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":2738,"title":{},"body":{"injectables/KeycommandsService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["navigate(path",{"_index":2732,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["navigationend",{"_index":4617,"title":{},"body":{"components/TabsComponent.html":{}}}],["nearest",{"_index":2284,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["need",{"_index":1193,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/PopComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["needed",{"_index":2559,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["needing",{"_index":5511,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["needs",{"_index":2600,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["nest",{"_index":1573,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["nested",{"_index":1182,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["nestedcrudconfig",{"_index":3004,"title":{},"body":{"components/ListHeaderComponent.html":{},"injectables/TypeConfigService.html":{}}}],["nestedpopactive",{"_index":1141,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["nesting",{"_index":3473,"title":{},"body":{"components/MenuComponent.html":{}}}],["never",{"_index":2569,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["new",{"_index":84,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["newdate",{"_index":1452,"title":{},"body":{"interfaces/Day.html":{}}}],["newdate.isbetween(this.timespan[0",{"_index":1454,"title":{},"body":{"interfaces/Day.html":{}}}],["newhistory",{"_index":2376,"title":{},"body":{"injectables/HistoryService.html":{}}}],["newly",{"_index":4271,"title":{},"body":{"interfaces/SdkField.html":{}}}],["newprojectroot",{"_index":5999,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["newtimespan",{"_index":1363,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan.reverse",{"_index":1368,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[0].isafter(newtimespan[1",{"_index":1367,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[this.dragged.first",{"_index":1365,"title":{},"body":{"interfaces/Day.html":{}}}],["next",{"_index":576,"title":{},"body":{"components/AssetListComponent.html":{},"directives/EntriesDirective.html":{},"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["nexted",{"_index":664,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{}}}],["nexts",{"_index":3259,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TabComponent.html":{}}}],["ng",{"_index":5230,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ng_value_accessor",{"_index":28,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngaftercontentinit",{"_index":4602,"title":{},"body":{"components/TabsComponent.html":{}}}],["ngafterviewinit",{"_index":64,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["ngif",{"_index":1684,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabsComponent.html":{}}}],["ngmodel",{"_index":5326,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngmodule",{"_index":364,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["ngmodule(acemoduleconfig",{"_index":367,"title":{},"body":{"modules/AceModule.html":{}}}],["ngmodule(calendarmoduleconfig",{"_index":880,"title":{},"body":{"modules/CalendarModule.html":{}}}],["ngmodule(datamoduleconfig",{"_index":1235,"title":{},"body":{"modules/DataModule.html":{}}}],["ngmodule(formmoduleconfig",{"_index":2189,"title":{},"body":{"modules/FormModule.html":{}}}],["ngmodule(listmoduleconfig",{"_index":3075,"title":{},"body":{"modules/ListModule.html":{}}}],["ngmodule(locationmoduleconfig",{"_index":3203,"title":{},"body":{"modules/LocationModule.html":{}}}],["ngmodule(mediummoduleconfig",{"_index":3427,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["ngmodule(popmoduleconfig",{"_index":4089,"title":{},"body":{"modules/PopModule.html":{}}}],["ngmodule(selectmoduleconfig",{"_index":4383,"title":{},"body":{"modules/SelectModule.html":{}}}],["ngmodule(tinymcemoduleconfig",{"_index":4727,"title":{},"body":{"modules/TinymceModule.html":{}}}],["ngmodule(uimoduleconfig",{"_index":4807,"title":{},"body":{"modules/UiModule.html":{}}}],["ngmodule(utilitymoduleconfig",{"_index":4932,"title":{},"body":{"modules/UtilityModule.html":{}}}],["ngonchanges",{"_index":56,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ngonchanges(change",{"_index":1392,"title":{},"body":{"interfaces/Day.html":{}}}],["ngonchanges(changes",{"_index":590,"title":{},"body":{"components/AssetListComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["ngondestroy",{"_index":3388,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ngoninit",{"_index":57,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ngx",{"_index":702,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/SelectModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":2270,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationSearchComponent.html":{}}}],["nicht",{"_index":677,"title":{},"body":{"guards/AuthGuard.html":{}}}],["noapi",{"_index":4293,"title":{},"body":{"injectables/SdkService.html":{}}}],["noapi(api",{"_index":4308,"title":{},"body":{"injectables/SdkService.html":{}}}],["noclientid",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["noconflict/ace",{"_index":158,"title":{},"body":{"components/AceComponent.html":{}}}],["noconflict/ace.js';when",{"_index":5545,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["node",{"_index":5321,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules",{"_index":5214,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["node_modules/@ec.components",{"_index":5203,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["node_modules/eventsource/lib/eventsource.js",{"_index":5292,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules/jsonpath",{"_index":5297,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules/tinymce/skins/lightgray/content.min.css",{"_index":5548,"title":{},"body":{"additional-documentation/readme/tinymce-readme.html":{}}}],["node_modules/tinymce/skins/lightgray/skin.min.css",{"_index":5547,"title":{},"body":{"additional-documentation/readme/tinymce-readme.html":{}}}],["non",{"_index":3554,"title":{},"body":{"components/ModalComponent.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}}}],["none",{"_index":3043,"title":{},"body":{"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{}}}],["normal",{"_index":1515,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["notable",{"_index":5549,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["note",{"_index":4000,"title":{},"body":{"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["nothing",{"_index":1336,"title":{},"body":{"interfaces/Day.html":{},"injectables/ModelConfigService.html":{},"interfaces/Symbol.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["notification",{"_index":1072,"title":{"classes/Notification.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["notification(notification",{"_index":3849,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.append",{"_index":3800,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.append.push(notification",{"_index":3801,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.component.ts",{"_index":3791,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.error",{"_index":3749,"title":{},"body":{"classes/Notification.html":{},"injectables/NotificationsService.html":{}}}],["notification.hide",{"_index":3796,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.host",{"_index":3805,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.message",{"_index":3799,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.replace",{"_index":3802,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.length",{"_index":3803,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.push(notification",{"_index":3804,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.sticky",{"_index":3807,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.time",{"_index":3808,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.title",{"_index":3798,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationcomponent",{"_index":3727,"title":{},"body":{"classes/Notification.html":{}}}],["notifications",{"_index":654,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["notifications'},{'name",{"_index":286,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["notifications.component",{"_index":3748,"title":{},"body":{"classes/Notification.html":{},"modules/NotificationsModule.html":{}}}],["notifications.component.html",{"_index":3753,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.interface",{"_index":6010,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["notifications.interface.ts",{"_index":4950,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["notifications.service",{"_index":3792,"title":{},"body":{"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.module",{"_index":4804,"title":{},"body":{"modules/UiModule.html":{}}}],["notifications/notifications.service",{"_index":2691,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["notificationscomponent",{"_index":285,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationservice",{"_index":1032,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["notificationservice.$emitter",{"_index":3751,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationsmodule",{"_index":3811,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservice",{"_index":655,"title":{"injectables/NotificationsService.html":{}},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["now",{"_index":2543,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["npm",{"_index":5211,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["nth",{"_index":3375,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["null",{"_index":970,"title":{},"body":{"classes/Collection.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{}}}],["number",{"_index":493,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["numbers",{"_index":905,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["numbers.add(4",{"_index":922,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.addall([5",{"_index":925,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has(2",{"_index":930,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has([1,2",{"_index":933,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.remove(4",{"_index":944,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.removeall",{"_index":947,"title":{},"body":{"classes/Collection.html":{}}}],["numeric",{"_index":4465,"title":{},"body":{"classes/Sorter.html":{}}}],["object",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"injectables/KeycommandsService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["object.assign",{"_index":1001,"title":{},"body":{"classes/Config.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["object.assign(componentref.instance",{"_index":1580,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["object.assign(config",{"_index":4789,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.assign(entry",{"_index":1811,"title":{},"body":{"injectables/EntryService.html":{}}}],["object.assign(merged",{"_index":3682,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(resource",{"_index":4264,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.assign(this",{"_index":1975,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{}}}],["object.assign(this.config",{"_index":2830,"title":{},"body":{"components/ListComponent.html":{},"classes/Pagination.html":{}}}],["object.assign(this.config[key][property",{"_index":1009,"title":{},"body":{"classes/Config.html":{}}}],["object.assign(this.get(model",{"_index":3703,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(this.types[type",{"_index":4794,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.assigned",{"_index":4659,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["object.keys(customfieldconfig",{"_index":3714,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(fieldconfig",{"_index":3670,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(filter).reduce((match",{"_index":4249,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(item.config.fields).reduce((equal",{"_index":1092,"title":{},"body":{"components/CrudComponent.html":{}}}],["object.keys(permissions",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(symbolservice.sets).length",{"_index":4549,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(this.control.errors).reduce((errs",{"_index":2656,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["object.keys(this.sets).length",{"_index":4567,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(value).foreach((key",{"_index":1806,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(variables).foreach((key",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{}}}],["objects",{"_index":1939,"title":{},"body":{"classes/Field.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"classes/Sorter.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["observable",{"_index":913,"title":{},"body":{"classes/Collection.html":{},"injectables/EntryService.html":{},"injectables/GeocodeService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["observable((observer",{"_index":2293,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observables",{"_index":597,"title":{},"body":{"components/AssetListComponent.html":{}}}],["observeelement",{"_index":2267,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observeelement(el",{"_index":2285,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complete",{"_index":2307,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(coords",{"_index":2306,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observers",{"_index":1705,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["observes",{"_index":2287,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obsolete",{"_index":3787,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["obtained",{"_index":3611,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["occasion",{"_index":1927,"title":{},"body":{"classes/Field.html":{}}}],["occur",{"_index":5513,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["occurs",{"_index":3271,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ok",{"_index":2314,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["old",{"_index":1792,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["oldassetgroupids",{"_index":2024,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["oldvalues",{"_index":1805,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["oldvalues[key",{"_index":1807,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["omit",{"_index":5186,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["omits",{"_index":4298,"title":{},"body":{"injectables/SdkService.html":{}}}],["omitted",{"_index":3645,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["omittedfields",{"_index":3597,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["once",{"_index":5645,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["onchanges",{"_index":23,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ondestroy",{"_index":3385,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ondragleave(e",{"_index":1542,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondragover(e",{"_index":1533,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondrop(e",{"_index":1537,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["one",{"_index":574,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["onedit",{"_index":2675,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["oneline",{"_index":5678,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ones",{"_index":4936,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["onsave",{"_index":2502,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{}}}],["onsubmit",{"_index":3298,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["open",{"_index":1151,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"injectables/PopService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["opened",{"_index":1147,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/PopService.html":{}}}],["opening",{"_index":4176,"title":{},"body":{"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["openinghours",{"_index":5498,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["openinghourscomponent",{"_index":5506,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["opens",{"_index":2959,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"components/UploadComponent.html":{}}}],["openurl",{"_index":2739,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["openurl(url",{"_index":2729,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["operation",{"_index":4948,"title":{},"body":{"interfaces/WithLoader.html":{}}}],["operations",{"_index":1192,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"classes/Sorter.html":{}}}],["operator",{"_index":585,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["operators",{"_index":5455,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["option",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultInputComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["option.label",{"_index":1494,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["optional",{"_index":102,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["optionally",{"_index":3267,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["options",{"_index":1154,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["options[key",{"_index":2051,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["options](https://github.com/yabwe/medium",{"_index":3407,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["original",{"_index":2521,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["original.resolution",{"_index":2524,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["others",{"_index":2960,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{},"additional-documentation/adding-new-packages.html":{}}}],["otherwise",{"_index":1776,"title":{},"body":{"injectables/EntryService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ouput",{"_index":2487,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{}}}],["out",{"_index":360,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["outline",{"_index":5430,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["output",{"_index":519,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["output'},{'name",{"_index":231,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["output('toggle",{"_index":4064,"title":{},"body":{"components/PopComponent.html":{}}}],["output.component",{"_index":1223,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["output.component.html",{"_index":1468,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts",{"_index":1467,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["output.component.ts:11",{"_index":1469,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts:13",{"_index":1470,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output/default",{"_index":1495,"title":{},"body":{"components/DefaultOutputComponent.html":{},"modules/FormModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["output/output.component",{"_index":2667,"title":{},"body":{"modules/IoModule.html":{}}}],["outputcomponent",{"_index":287,"title":{"components/OutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["outputs",{"_index":480,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["outputview",{"_index":5777,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["outside",{"_index":116,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["over",{"_index":2653,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["overlay",{"_index":3565,"title":{},"body":{"components/ModalComponent.html":{}}}],["overridden",{"_index":3364,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["override",{"_index":2409,"title":{},"body":{"components/IconComponent.html":{}}}],["overriden",{"_index":3596,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SymbolService.html":{}}}],["overrides",{"_index":2557,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["overriding",{"_index":2408,"title":{},"body":{"components/IconComponent.html":{}}}],["overview",{"_index":5252,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["overwrite",{"_index":4516,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["overwriting",{"_index":4514,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["overwritten",{"_index":3332,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["p",{"_index":5997,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["package",{"_index":4954,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["package(s",{"_index":6022,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["package.json",{"_index":5272,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["packages",{"_index":5183,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["packages/.../actionbar.component.ts",{"_index":5258,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../auth.module.ts",{"_index":5176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../sorter.ts",{"_index":5177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/ace/src/lib/ace.component.ts",{"_index":11,"title":{},"body":{"components/AceComponent.html":{},"coverage.html":{}}}],["packages/ace/src/lib/ace.component.ts:102",{"_index":114,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:112",{"_index":132,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:115",{"_index":96,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:119",{"_index":104,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:29",{"_index":128,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:33",{"_index":137,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:37",{"_index":134,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:39",{"_index":130,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:43",{"_index":126,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:47",{"_index":71,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:51",{"_index":81,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:54",{"_index":82,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:75",{"_index":106,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:84",{"_index":111,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:93",{"_index":94,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:97",{"_index":91,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.module.ts",{"_index":361,"title":{},"body":{"modules/AceModule.html":{},"coverage.html":{}}}],["packages/ace/src/test.ts",{"_index":4968,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/calendar.module.ts",{"_index":859,"title":{},"body":{"modules/CalendarModule.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/calendar.module.ts:32",{"_index":865,"title":{},"body":{"modules/CalendarModule.html":{}}}],["packages/calendar/src/lib/calendar/calendar.component.ts",{"_index":4970,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/calendar/month.component.ts",{"_index":1299,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/daterange/daterange.component.ts",{"_index":4976,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/datetime.pipe.ts",{"_index":1275,"title":{},"body":{"pipes/DatetimePipe.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/datetime.pipe.ts:12",{"_index":1283,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["packages/calendar/src/lib/heatmap/heatmap.component.ts",{"_index":4979,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/test.ts",{"_index":4981,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/collection/collection.ts",{"_index":889,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["packages/core/src/lib/collection/collection.ts:10",{"_index":909,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:106",{"_index":942,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:12",{"_index":912,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:123",{"_index":946,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:138",{"_index":951,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:14",{"_index":902,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:147",{"_index":949,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:160",{"_index":936,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:165",{"_index":939,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:31",{"_index":935,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:42",{"_index":929,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:53",{"_index":932,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:71",{"_index":918,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:89",{"_index":924,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/config/config.ts",{"_index":987,"title":{},"body":{"classes/Config.html":{},"coverage.html":{}}}],["packages/core/src/lib/config/config.ts:13",{"_index":992,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/lib/config/config.ts:5",{"_index":990,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/lib/config/field",{"_index":1986,"title":{},"body":{"interfaces/FieldConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/field/field.ts",{"_index":1857,"title":{},"body":{"classes/Field.html":{},"coverage.html":{}}}],["packages/core/src/lib/field/field.ts:11",{"_index":1895,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:13",{"_index":1881,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:15",{"_index":1916,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:17",{"_index":1920,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:19",{"_index":1917,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:21",{"_index":1882,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:23",{"_index":1903,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:25",{"_index":1909,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:27",{"_index":1910,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:29",{"_index":1904,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:31",{"_index":1886,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:33",{"_index":1890,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:35",{"_index":1897,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:37",{"_index":1898,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:39",{"_index":1891,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:41",{"_index":1919,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:43",{"_index":1884,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:45",{"_index":1901,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:47",{"_index":1915,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:49",{"_index":1885,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:51",{"_index":1905,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:53",{"_index":1899,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:55",{"_index":1878,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:67",{"_index":1929,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:7",{"_index":1913,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:71",{"_index":1921,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:75",{"_index":1928,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:82",{"_index":1931,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:86",{"_index":1926,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:9",{"_index":1911,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/form/form",{"_index":2150,"title":{},"body":{"interfaces/FormConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/form/form.ts",{"_index":4989,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/item/item",{"_index":2671,"title":{},"body":{"interfaces/ItemConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/item/item.ts",{"_index":4993,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/list/list",{"_index":2862,"title":{},"body":{"interfaces/ListConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/list/list.ts",{"_index":4997,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/pagination/pagination.ts",{"_index":3876,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:102",{"_index":3903,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:11",{"_index":3892,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:111",{"_index":3900,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:116",{"_index":3901,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:121",{"_index":3902,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:129",{"_index":3918,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:13",{"_index":3888,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:134",{"_index":3907,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:146",{"_index":3921,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:15",{"_index":3886,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:37",{"_index":3897,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:42",{"_index":3898,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:47",{"_index":3906,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:56",{"_index":3909,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:67",{"_index":3914,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:7",{"_index":3893,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:80",{"_index":3905,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:88",{"_index":3912,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:9",{"_index":3891,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:97",{"_index":3896,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/selection/selection.ts",{"_index":5001,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/sorter/sorter.ts",{"_index":4446,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:24",{"_index":4454,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:31",{"_index":4456,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:60",{"_index":4459,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/test.ts",{"_index":5004,"title":{},"body":{"coverage.html":{}}}],["packages/data/dist",{"_index":6003,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/lib",{"_index":6004,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/package.json#name",{"_index":6000,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/src/lib/asset",{"_index":538,"title":{},"body":{"components/AssetListComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/auth",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/auth.module.ts",{"_index":692,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/data/src/lib/auth/auth.service.ts",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:128",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:149",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:160",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:174",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:190",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:24",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:29",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:44",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:59",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:71",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:81",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:89",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/email",{"_index":5010,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/auth/errors.ts",{"_index":5012,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts",{"_index":3257,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:23",{"_index":3266,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:25",{"_index":3273,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:27",{"_index":3270,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:29",{"_index":3277,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:31",{"_index":3265,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:34",{"_index":3276,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:35",{"_index":3278,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:36",{"_index":3279,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:39",{"_index":3274,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/password",{"_index":4004,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts",{"_index":4384,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:16",{"_index":4387,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:18",{"_index":4388,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:20",{"_index":4391,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:22",{"_index":4396,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:24",{"_index":4397,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:27",{"_index":4394,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/crud/crud",{"_index":1122,"title":{},"body":{"interfaces/CrudConfig.html":{},"coverage.html":{}}}],["packages/data/src/lib/crud/crud.component.ts",{"_index":1010,"title":{},"body":{"components/CrudComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:116",{"_index":1062,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:30",{"_index":1041,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:32",{"_index":1037,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:34",{"_index":1043,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:36",{"_index":1068,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:38",{"_index":1064,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:40",{"_index":1070,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:42",{"_index":1044,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:44",{"_index":1047,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:46",{"_index":1035,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:56",{"_index":1075,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:57",{"_index":1074,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:69",{"_index":1060,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:77",{"_index":1050,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:82",{"_index":1057,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:89",{"_index":1053,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/data.module.ts",{"_index":1209,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["packages/data/src/lib/data.module.ts:86",{"_index":1212,"title":{},"body":{"modules/DataModule.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts",{"_index":1581,"title":{},"body":{"directives/EntriesDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:103",{"_index":1602,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:111",{"_index":1600,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:22",{"_index":1613,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:24",{"_index":1597,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:26",{"_index":1598,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:28",{"_index":1591,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:30",{"_index":1590,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:32",{"_index":1596,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:34",{"_index":1610,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:35",{"_index":1589,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:40",{"_index":1615,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:41",{"_index":1612,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:45",{"_index":1606,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:58",{"_index":1604,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:74",{"_index":1609,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:85",{"_index":1605,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:92",{"_index":1607,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:99",{"_index":1603,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entry",{"_index":440,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts",{"_index":1643,"title":{},"body":{"directives/EntryDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:19",{"_index":1656,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:21",{"_index":1648,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:23",{"_index":1651,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:25",{"_index":1647,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:27",{"_index":1649,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:29",{"_index":1652,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:31",{"_index":1650,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:33",{"_index":1646,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:38",{"_index":1657,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:39",{"_index":1655,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:43",{"_index":1654,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:51",{"_index":1653,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.service.ts",{"_index":1740,"title":{},"body":{"injectables/EntryService.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:100",{"_index":1763,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:114",{"_index":1765,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:14",{"_index":1753,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:16",{"_index":1781,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:19",{"_index":1755,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:37",{"_index":1773,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:52",{"_index":1780,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:71",{"_index":1768,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:76",{"_index":1760,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/files/asset",{"_index":5043,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts",{"_index":471,"title":{},"body":{"directives/AssetDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:16",{"_index":505,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:18",{"_index":489,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:20",{"_index":492,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:22",{"_index":490,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:24",{"_index":494,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:26",{"_index":485,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:28",{"_index":495,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:30",{"_index":482,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:33",{"_index":507,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:36",{"_index":503,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:47",{"_index":498,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/assetgroup",{"_index":610,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts",{"_index":1501,"title":{},"body":{"directives/DropzoneDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:11",{"_index":1513,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:13",{"_index":1526,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:24",{"_index":1528,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:37",{"_index":1523,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:46",{"_index":1511,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:7",{"_index":1518,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:9",{"_index":1516,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/file.service.ts",{"_index":1988,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/files.module.ts",{"_index":2120,"title":{},"body":{"modules/FilesModule.html":{}}}],["packages/data/src/lib/files/image",{"_index":2477,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts",{"_index":2435,"title":{},"body":{"directives/ImageDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:14",{"_index":2447,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:16",{"_index":2445,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:18",{"_index":2443,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:20",{"_index":2442,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:22",{"_index":2459,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:27",{"_index":2453,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:39",{"_index":2449,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:43",{"_index":2458,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:64",{"_index":2456,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/mime",{"_index":5058,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/tag",{"_index":5061,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/upload",{"_index":4881,"title":{},"body":{"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts",{"_index":4808,"title":{},"body":{"components/UploadComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:104",{"_index":4836,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:22",{"_index":4838,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:23",{"_index":4845,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:24",{"_index":4842,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:26",{"_index":4823,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:28",{"_index":4820,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:30",{"_index":4817,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:32",{"_index":4818,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:34",{"_index":4822,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:36",{"_index":4816,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:38",{"_index":4825,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:40",{"_index":4824,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:42",{"_index":4840,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:44",{"_index":4844,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:46",{"_index":4815,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:56",{"_index":4833,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:66",{"_index":4831,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:72",{"_index":4828,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:80",{"_index":4829,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:87",{"_index":4837,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/model",{"_index":3589,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["packages/data/src/lib/resource",{"_index":4108,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["packages/data/src/lib/resource/resource.module.ts",{"_index":4211,"title":{},"body":{"modules/ResourceModule.html":{}}}],["packages/data/src/lib/sdk/history.service.ts",{"_index":2329,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:15",{"_index":2357,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:17",{"_index":2339,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:20",{"_index":2356,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:21",{"_index":2355,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:22",{"_index":2360,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:23",{"_index":2359,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:27",{"_index":2352,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:47",{"_index":2341,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:57",{"_index":2347,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/sdk.module.ts",{"_index":4279,"title":{},"body":{"modules/SdkModule.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts",{"_index":4281,"title":{},"body":{"injectables/SdkService.html":{},"coverage.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:112",{"_index":4311,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:125",{"_index":4302,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:136",{"_index":4299,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:151",{"_index":4309,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:34",{"_index":4314,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:36",{"_index":4322,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:37",{"_index":4330,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:49",{"_index":4327,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:51",{"_index":4313,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:53",{"_index":4312,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:55",{"_index":4316,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:57",{"_index":4331,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:64",{"_index":4333,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:69",{"_index":4318,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:71",{"_index":4328,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:73",{"_index":4324,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:80",{"_index":4297,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:83",{"_index":4320,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:90",{"_index":4306,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/test.ts",{"_index":5087,"title":{},"body":{"coverage.html":{}}}],["packages/location/src/lib/geocode.service.ts",{"_index":2260,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["packages/location/src/lib/geocode.service.ts:12",{"_index":2271,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:16",{"_index":2286,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:41",{"_index":2274,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:46",{"_index":2277,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:59",{"_index":2283,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/location",{"_index":3151,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["packages/location/src/lib/location.module.ts",{"_index":3187,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["packages/location/src/lib/location.module.ts:31",{"_index":3191,"title":{},"body":{"modules/LocationModule.html":{}}}],["packages/location/src/test.ts",{"_index":5093,"title":{},"body":{"coverage.html":{}}}],["packages/medium",{"_index":3379,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["packages/style",{"_index":5201,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["packages/tinymce/src/lib/tinymce.module.ts",{"_index":4724,"title":{},"body":{"modules/TinymceModule.html":{},"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce",{"_index":5097,"title":{},"body":{"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts",{"_index":4640,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:103",{"_index":4671,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:108",{"_index":4669,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:134",{"_index":4667,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:138",{"_index":4674,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:145",{"_index":4677,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:147",{"_index":4672,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:151",{"_index":4673,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:53",{"_index":4678,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:55",{"_index":4676,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:57",{"_index":4675,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:59",{"_index":4679,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:61",{"_index":4653,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:63",{"_index":4658,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:65",{"_index":4655,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:67",{"_index":4660,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:70",{"_index":4661,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:72",{"_index":4649,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:90",{"_index":4670,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:96",{"_index":4668,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/test.ts",{"_index":5100,"title":{},"body":{"coverage.html":{}}}],["packages/ui",{"_index":5514,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["packages/ui/src/lib/actionbar/actionbar.component.ts",{"_index":371,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts",{"_index":1236,"title":{},"body":{"components/DatetimeComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:24",{"_index":1245,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:26",{"_index":1250,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:28",{"_index":1261,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:30",{"_index":1265,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:32",{"_index":1248,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:34",{"_index":1251,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:36",{"_index":1262,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:39",{"_index":1259,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:44",{"_index":1263,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:47",{"_index":1253,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:52",{"_index":1255,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:54",{"_index":1257,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/default",{"_index":1472,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.component.html.ts",{"_index":5104,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/form/form.component.ts",{"_index":5106,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/form/form.module.ts",{"_index":2173,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.service.ts",{"_index":2190,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.service.ts:10",{"_index":2224,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:14",{"_index":2217,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:25",{"_index":2208,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:45",{"_index":2202,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:53",{"_index":2210,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:65",{"_index":2221,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:80",{"_index":2215,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:85",{"_index":2205,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:9",{"_index":2200,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/max",{"_index":3372,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts",{"_index":4728,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:19",{"_index":4739,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:21",{"_index":4731,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:24",{"_index":4735,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:29",{"_index":4736,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:33",{"_index":4738,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:35",{"_index":4732,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:39",{"_index":4733,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/visible",{"_index":4933,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/ec",{"_index":5109,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/icon/emoji",{"_index":5111,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts",{"_index":2384,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:16",{"_index":2396,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:18",{"_index":2395,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:21",{"_index":2399,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:27",{"_index":2398,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:30",{"_index":2397,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.module.ts",{"_index":2426,"title":{},"body":{"modules/IconModule.html":{}}}],["packages/ui/src/lib/icon/icon.service.ts",{"_index":2428,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.service.ts:11",{"_index":2433,"title":{},"body":{"injectables/IconService.html":{}}}],["packages/ui/src/lib/io/dynamic",{"_index":1543,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input",{"_index":2640,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts",{"_index":2551,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:118",{"_index":2576,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:133",{"_index":2583,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:140",{"_index":2598,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:143",{"_index":2580,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:148",{"_index":2581,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:150",{"_index":2582,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:32",{"_index":2566,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:34",{"_index":2595,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:36",{"_index":2560,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:38",{"_index":2573,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:40",{"_index":2575,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:42",{"_index":2563,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:44",{"_index":2565,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:46",{"_index":2571,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:48",{"_index":2567,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:50",{"_index":2558,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:52",{"_index":2556,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:54",{"_index":2568,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:57",{"_index":2585,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:59",{"_index":2599,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:61",{"_index":2597,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:63",{"_index":2579,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:69",{"_index":2577,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:77",{"_index":2578,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/io.module.ts",{"_index":2666,"title":{},"body":{"modules/IoModule.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts",{"_index":3865,"title":{},"body":{"components/OutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:20",{"_index":3869,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:22",{"_index":3870,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:24",{"_index":3868,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:28",{"_index":3871,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/slot",{"_index":4438,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/group.pipe.ts",{"_index":2324,"title":{},"body":{"pipes/GroupPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/group.pipe.ts:10",{"_index":2326,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["packages/ui/src/lib/list/list",{"_index":2889,"title":{},"body":{"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.html.ts",{"_index":5121,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.ts",{"_index":2753,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.ts:104",{"_index":2784,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:112",{"_index":2803,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:123",{"_index":2802,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:130",{"_index":2791,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:136",{"_index":2792,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:149",{"_index":2793,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:162",{"_index":2790,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:33",{"_index":2805,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:36",{"_index":2807,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:38",{"_index":2774,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:40",{"_index":2775,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:42",{"_index":2773,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:44",{"_index":2779,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:46",{"_index":2780,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:48",{"_index":2781,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:50",{"_index":2782,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:52",{"_index":2776,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:54",{"_index":2777,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:56",{"_index":2778,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:58",{"_index":2772,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:60",{"_index":2806,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:62",{"_index":2771,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:64",{"_index":2804,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:68",{"_index":2797,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:77",{"_index":2796,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.module.ts",{"_index":3067,"title":{},"body":{"modules/ListModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination",{"_index":3992,"title":{},"body":{"classes/PaginationConfig.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts",{"_index":3948,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:15",{"_index":3953,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:17",{"_index":3961,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:19",{"_index":3971,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:21",{"_index":3965,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:23",{"_index":3952,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:26",{"_index":3958,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:31",{"_index":3956,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:39",{"_index":3955,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:50",{"_index":3960,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/searchbar/searchbar.component.ts",{"_index":5125,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts",{"_index":3076,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:14",{"_index":3095,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:16",{"_index":3096,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:18",{"_index":3085,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:24",{"_index":3088,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:30",{"_index":3086,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:37",{"_index":3091,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.module.ts",{"_index":3142,"title":{},"body":{"modules/LoaderModule.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts",{"_index":3145,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:11",{"_index":3147,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:16",{"_index":3148,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:8",{"_index":3149,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/with",{"_index":4945,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts",{"_index":3526,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:26",{"_index":3568,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:29",{"_index":3553,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:31",{"_index":3544,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:33",{"_index":3542,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:35",{"_index":3552,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:37",{"_index":3548,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:39",{"_index":3551,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:41",{"_index":3564,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:43",{"_index":3549,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:45",{"_index":3539,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:47",{"_index":3562,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:51",{"_index":3558,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:74",{"_index":3561,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:78",{"_index":3560,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts",{"_index":1837,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:12",{"_index":1840,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:17",{"_index":1842,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:21",{"_index":1841,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:25",{"_index":1844,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/notification.ts",{"_index":3726,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:10",{"_index":3736,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:12",{"_index":3743,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:14",{"_index":3740,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:16",{"_index":3747,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:18",{"_index":3733,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:20",{"_index":3734,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:22",{"_index":3731,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:24",{"_index":3729,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:6",{"_index":3745,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:8",{"_index":3737,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts",{"_index":3750,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts:19",{"_index":3755,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts:21",{"_index":3754,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/lib/notifications/notifications.module.ts",{"_index":3817,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts",{"_index":3820,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:22",{"_index":3842,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:24",{"_index":3845,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:26",{"_index":3829,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:33",{"_index":3837,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:47",{"_index":3839,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:60",{"_index":3832,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/with",{"_index":4949,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts",{"_index":4040,"title":{},"body":{"components/PopComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:28",{"_index":4047,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:30",{"_index":4057,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:32",{"_index":4050,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:34",{"_index":4048,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:36",{"_index":4049,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:38",{"_index":4051,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:40",{"_index":4058,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:43",{"_index":4052,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:53",{"_index":4046,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:55",{"_index":4059,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:58",{"_index":4054,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:63",{"_index":4056,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:72",{"_index":4055,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:88",{"_index":4053,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.module.ts",{"_index":4086,"title":{},"body":{"modules/PopModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts",{"_index":4090,"title":{},"body":{"injectables/PopService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts:11",{"_index":4096,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts:9",{"_index":4097,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/lib/select/select.component.html.ts",{"_index":5130,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/select/select.component.ts",{"_index":5131,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/select/select.module.ts",{"_index":4379,"title":{},"body":{"modules/SelectModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/de.ts",{"_index":5133,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/symbol/en.ts",{"_index":5134,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.interface.ts",{"_index":4491,"title":{},"body":{"interfaces/Symbol.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.module.ts",{"_index":4500,"title":{},"body":{"modules/SymbolModule.html":{}}}],["packages/ui/src/lib/symbol/symbol.pipe.ts",{"_index":4521,"title":{},"body":{"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.pipe.ts:21",{"_index":4525,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts",{"_index":4529,"title":{},"body":{"injectables/SymbolService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:12",{"_index":4553,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:16",{"_index":4551,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:20",{"_index":4552,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:21",{"_index":4554,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:27",{"_index":4534,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:32",{"_index":4539,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:41",{"_index":4542,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:50",{"_index":4532,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:57",{"_index":4546,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:62",{"_index":4548,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:70",{"_index":4537,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:75",{"_index":4540,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:81",{"_index":4544,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/ui.module.ts",{"_index":4803,"title":{},"body":{"modules/UiModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts",{"_index":2135,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:13",{"_index":2140,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:19",{"_index":2141,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:8",{"_index":2139,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:9",{"_index":2138,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.interface.ts",{"_index":2133,"title":{},"body":{"interfaces/Focus.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/focus/focus.interface.ts:6",{"_index":2134,"title":{},"body":{"interfaces/Focus.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts",{"_index":2690,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:14",{"_index":2750,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:15",{"_index":2751,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:16",{"_index":2741,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:18",{"_index":2752,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:45",{"_index":2745,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:49",{"_index":2749,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:53",{"_index":2748,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:58",{"_index":2742,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:65",{"_index":2744,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:80",{"_index":2743,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:86",{"_index":2747,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:90",{"_index":2746,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/login",{"_index":3290,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts",{"_index":3428,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:107",{"_index":3486,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:15",{"_index":3459,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:17",{"_index":3458,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:19",{"_index":3460,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:21",{"_index":3457,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:23",{"_index":3451,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:25",{"_index":3462,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:27",{"_index":3454,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:29",{"_index":3490,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:31",{"_index":3446,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:37",{"_index":3489,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:47",{"_index":3479,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:53",{"_index":3488,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:59",{"_index":3472,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:64",{"_index":3467,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:69",{"_index":3470,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:74",{"_index":3482,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:85",{"_index":3464,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:92",{"_index":3484,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:99",{"_index":3476,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/signup",{"_index":4407,"title":{},"body":{"components/SignupFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts",{"_index":4575,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:11",{"_index":4582,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:13",{"_index":4585,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:15",{"_index":4584,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:17",{"_index":4586,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:19",{"_index":4587,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:21",{"_index":4581,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:24",{"_index":4591,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:26",{"_index":4588,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:31",{"_index":4589,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts",{"_index":4595,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:14",{"_index":4615,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:16",{"_index":4604,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:27",{"_index":4613,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:38",{"_index":4607,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:48",{"_index":4608,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:53",{"_index":4611,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/utility.module.ts",{"_index":4927,"title":{},"body":{"modules/UtilityModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/validators/email.validator.ts",{"_index":5145,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/utility/validators/field",{"_index":5147,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/test.ts",{"_index":5149,"title":{},"body":{"coverage.html":{}}}],["packagr/issues/696",{"_index":4557,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packagr/ng",{"_index":4556,"title":{},"body":{"injectables/SymbolService.html":{}}}],["page",{"_index":669,"title":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}},"body":{"guards/AuthGuard.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["page!==1",{"_index":1624,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["pagecontainer",{"_index":3950,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pages",{"_index":3877,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{}}}],["paginate",{"_index":3924,"title":{},"body":{"classes/Pagination.html":{}}}],["paginated",{"_index":3895,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["pagination",{"_index":2768,"title":{"classes/Pagination.html":{}},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["pagination'},{'name",{"_index":289,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pagination.component.html",{"_index":3949,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.first",{"_index":3979,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.getpages",{"_index":3925,"title":{},"body":{"classes/Pagination.html":{}}}],["pagination.last",{"_index":3984,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.next",{"_index":3983,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.of",{"_index":3987,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.prev",{"_index":3980,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.settotal(50",{"_index":3923,"title":{},"body":{"classes/Pagination.html":{}}}],["pagination.size",{"_index":3991,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination/pagination",{"_index":2826,"title":{},"body":{"components/ListComponent.html":{}}}],["pagination/pagination.component",{"_index":3072,"title":{},"body":{"modules/ListModule.html":{}}}],["pagination?.params()?.from",{"_index":3985,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.to",{"_index":3986,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.total",{"_index":3988,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":288,"title":{"components/PaginationComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationconfig",{"_index":2769,"title":{"classes/PaginationConfig.html":{}},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["paginationconfig(this.config",{"_index":3975,"title":{},"body":{"components/PaginationComponent.html":{}}}],["param",{"_index":4482,"title":{},"body":{"classes/Sorter.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":3881,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["parent",{"_index":962,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["parent.getpath(item",{"_index":3503,"title":{},"body":{"components/MenuComponent.html":{}}}],["parent=0",{"_index":3474,"title":{},"body":{"components/MenuComponent.html":{}}}],["parse",{"_index":3692,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["parses",{"_index":3559,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{}}}],["parsetype",{"_index":5749,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["part",{"_index":1051,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"classes/Sorter.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["pass",{"_index":2562,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["passed",{"_index":2349,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/LoaderService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["passes",{"_index":4663,"title":{},"body":{"components/TinymceComponent.html":{}}}],["passing",{"_index":3111,"title":{},"body":{"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["password",{"_index":291,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["passwordlabel",{"_index":3304,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordplaceholder",{"_index":3305,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordreset.button",{"_index":4039,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["passwordresetcomponent",{"_index":290,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwort",{"_index":3371,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["pasted",{"_index":4199,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["patch",{"_index":3010,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["path",{"_index":374,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/ItemConfig.html":{},"injectables/KeycommandsService.html":{},"components/MenuComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["paths",{"_index":4143,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"components/TabsComponent.html":{},"additional-documentation/adding-new-packages.html":{}}}],["paths.length",{"_index":4152,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["paths[paths.length",{"_index":4625,"title":{},"body":{"components/TabsComponent.html":{}}}],["pattern",{"_index":1281,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["pattern[0",{"_index":1296,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["pending",{"_index":4325,"title":{},"body":{"injectables/SdkService.html":{}}}],["per",{"_index":2882,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["peripherals",{"_index":3034,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["permission",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{}}}],["permissions",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{}}}],["permissions[method",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{}}}],["phone",{"_index":4769,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["pick",{"_index":2485,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LocationPickerComponent.html":{}}}],["picker",{"_index":3206,"title":{},"body":{"components/LocationPickerComponent.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["picker'},{'name",{"_index":268,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["picker.component",{"_index":3195,"title":{},"body":{"modules/LocationModule.html":{}}}],["picker.component.html",{"_index":3208,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.scss",{"_index":3207,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts",{"_index":3205,"title":{},"body":{"components/LocationPickerComponent.html":{},"coverage.html":{}}}],["picker.component.ts:23",{"_index":3213,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:25",{"_index":3215,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:27",{"_index":3214,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:29",{"_index":3228,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:31",{"_index":3231,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:33",{"_index":3212,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:36",{"_index":3225,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:37",{"_index":3224,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:38",{"_index":3226,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:44",{"_index":3219,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:56",{"_index":3223,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:62",{"_index":3221,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:77",{"_index":3229,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:79",{"_index":3216,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:83",{"_index":3217,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["pickers",{"_index":5273,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["pictures",{"_index":5399,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["pipe",{"_index":1273,"title":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/VisibleFieldsPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["pipe(debouncetime(100",{"_index":1350,"title":{},"body":{"interfaces/Day.html":{}}}],["pipe(debouncetime(800",{"_index":1354,"title":{},"body":{"interfaces/Day.html":{}}}],["pipe(debouncetime(this.debounce",{"_index":4696,"title":{},"body":{"components/TinymceComponent.html":{}}}],["pipes",{"_index":1274,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1285,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["place",{"_index":2297,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["place.geometry",{"_index":2300,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lat",{"_index":2303,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lng",{"_index":2305,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["placed",{"_index":4577,"title":{},"body":{"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["placeholder",{"_index":618,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["placeholders",{"_index":4272,"title":{},"body":{"interfaces/SdkField.html":{}}}],["places",{"_index":3118,"title":{},"body":{"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{}}}],["plain",{"_index":2027,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["plan",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["play",{"_index":5466,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["please",{"_index":2083,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["plugged",{"_index":3077,"title":{},"body":{"components/LoaderComponent.html":{}}}],["plurallabel",{"_index":1142,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["plus/lib'to",{"_index":5301,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["plus/lib/jsonpath.js",{"_index":5298,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["polyfill",{"_index":2365,"title":{},"body":{"injectables/HistoryService.html":{}}}],["pop",{"_index":1065,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["pop'},{'name",{"_index":218,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pop.alt",{"_index":2536,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component",{"_index":1080,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{}}}],["pop.component.html",{"_index":1667,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts",{"_index":1666,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{}}}],["pop.component.ts:23",{"_index":4200,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:24",{"_index":1681,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:25",{"_index":1680,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:26",{"_index":1682,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:27",{"_index":1692,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:28",{"_index":1723,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:29",{"_index":4203,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:30",{"_index":1696,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:31",{"_index":1679,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:32",{"_index":2492,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:34",{"_index":1720,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:35",{"_index":1721,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:36",{"_index":1719,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:37",{"_index":1718,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:38",{"_index":4202,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:39",{"_index":2494,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:40",{"_index":2495,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:41",{"_index":2496,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:42",{"_index":1702,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:43",{"_index":2491,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:44",{"_index":2490,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:49",{"_index":2489,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:50",{"_index":1704,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:53",{"_index":4201,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:59",{"_index":1701,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.header",{"_index":2550,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.height",{"_index":2548,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.keepratio",{"_index":2539,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.service",{"_index":4063,"title":{},"body":{"components/PopComponent.html":{},"modules/PopModule.html":{}}}],["pop.submitbuttonlabel",{"_index":2501,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.width",{"_index":2544,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop/asset",{"_index":2124,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["pop/entry",{"_index":1079,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["pop/image",{"_index":2131,"title":{},"body":{"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["pop/pop.component",{"_index":2988,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{}}}],["pop/pop.module",{"_index":2174,"title":{},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["pop/pop.service",{"_index":3571,"title":{},"body":{"components/ModalComponent.html":{}}}],["pop/resource",{"_index":4188,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["pop_dialog",{"_index":3666,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["popcolumns",{"_index":1143,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["popcomponent",{"_index":293,"title":{"components/PopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popcomponent:28",{"_index":1683,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:30",{"_index":1724,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:32",{"_index":1691,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:34",{"_index":1685,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:36",{"_index":1688,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:38",{"_index":1693,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:40",{"_index":1727,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:43",{"_index":1698,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:55",{"_index":1728,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:58",{"_index":1709,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:63",{"_index":1717,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:72",{"_index":1714,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:88",{"_index":1706,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popmodule",{"_index":2168,"title":{"modules/PopModule.html":{}},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["popmoduleconfig",{"_index":4088,"title":{},"body":{"modules/PopModule.html":{},"coverage.html":{}}}],["pops",{"_index":1190,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/TinymceComponent.html":{}}}],["popservice",{"_index":1669,"title":{"injectables/PopService.html":{}},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popservice.defaultcolumns",{"_index":1191,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["popservice.stack",{"_index":1707,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popthe",{"_index":4062,"title":{},"body":{"components/PopComponent.html":{}}}],["populated",{"_index":2887,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["position",{"_index":3174,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["possesses",{"_index":557,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["possible",{"_index":1161,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["post",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["prebuilt",{"_index":5536,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["preceding",{"_index":3783,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["preexisting",{"_index":4517,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["prefill",{"_index":2540,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["prefilled",{"_index":5766,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["prefix",{"_index":1790,"title":{},"body":{"injectables/EntryService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["prepare",{"_index":1883,"title":{},"body":{"classes/Field.html":{}}}],["prequisites",{"_index":5329,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["present",{"_index":86,"title":{},"body":{"components/AceComponent.html":{},"guards/AuthGuard.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["preservefilenames",{"_index":1994,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["preserves",{"_index":2001,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["pressing",{"_index":4173,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["pretty",{"_index":5451,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["prev",{"_index":1586,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["prevent",{"_index":4282,"title":{},"body":{"injectables/SdkService.html":{}}}],["prevents",{"_index":2702,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["previous",{"_index":2794,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{}}}],["primitive",{"_index":2686,"title":{},"body":{"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/readme/core-readme.html":{}}}],["primitve",{"_index":5502,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["private",{"_index":671,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["pro",{"_index":5281,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["problems",{"_index":5324,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["processing",{"_index":4654,"title":{},"body":{"components/TinymceComponent.html":{}}}],["prod",{"_index":5239,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["production",{"_index":5240,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["programmatically",{"_index":2683,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["project",{"_index":5178,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["project/node_modules/eventsource/lib",{"_index":5295,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["project/node_modules/jsonpath",{"_index":5300,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["promise",{"_index":133,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["promise((resolve",{"_index":2310,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/TinymceComponent.html":{}}}],["promise.all(this.stack.items).then",{"_index":3136,"title":{},"body":{"components/LoaderComponent.html":{}}}],["promise.reject('api_not_found",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject('cannot",{"_index":528,"title":{},"body":{"directives/AssetDirective.html":{}}}],["promise.reject('desktop",{"_index":3858,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["promise.reject('fehler",{"_index":3767,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["promise.reject('getaccount",{"_index":4370,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('getschema",{"_index":4365,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('no_api_found",{"_index":843,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject(`ecimage",{"_index":2467,"title":{},"body":{"directives/ImageDirective.html":{}}}],["promise.reject(err",{"_index":1804,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.reject(this.noclientid",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve",{"_index":831,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["promise.resolve().then",{"_index":2097,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(>assets",{"_index":2089,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(['get",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(actions(this.actionstack",{"_index":429,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["promise.resolve(api",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(item.config.onsave(item",{"_index":4256,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.resolve(methods",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results",{"_index":822,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results.concat(method",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(this.editor",{"_index":176,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["promise.resolve(value",{"_index":3365,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["promises",{"_index":2335,"title":{},"body":{"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["propagate",{"_index":3049,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["propagatechange",{"_index":43,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["propagates",{"_index":3220,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["propagation",{"_index":1264,"title":{},"body":{"components/DatetimeComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["proper",{"_index":5223,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["properly",{"_index":5391,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["properties",{"_index":40,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["property",{"_index":584,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["property.interface",{"_index":1974,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{}}}],["property.interface.ts",{"_index":4984,"title":{},"body":{"coverage.html":{}}}],["protected",{"_index":544,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{}}}],["protractor",{"_index":5246,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["provded",{"_index":3044,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["provide",{"_index":27,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["provided",{"_index":2954,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["providers",{"_index":25,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["provides",{"_index":1551,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["providing",{"_index":3824,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["pseudo",{"_index":5436,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["public",{"_index":46,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["public_api",{"_index":5658,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["publicapi",{"_index":484,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["publicapi#getfieldconfig",{"_index":3626,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["publicapi(shortid",{"_index":4360,"title":{},"body":{"injectables/SdkService.html":{}}}],["publicassetlist",{"_index":2007,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["publicassetresource",{"_index":520,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["publicassetresources",{"_index":2076,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["publish",{"_index":5219,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["publishing",{"_index":6025,"title":{"additional-documentation/publishing.html":{}},"body":{}}],["purpose",{"_index":5578,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["pushed",{"_index":3838,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["put",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["puttable",{"_index":5668,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["qb1mro56u5katpx9j8o4",{"_index":3201,"title":{},"body":{"modules/LocationModule.html":{}}}],["query",{"_index":2870,"title":{},"body":{"interfaces/ListConfig.html":{},"interfaces/ResourceActionbarState.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["queryfilter",{"_index":4766,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["querylist",{"_index":3963,"title":{},"body":{"components/PaginationComponent.html":{},"components/TabsComponent.html":{}}}],["quick",{"_index":1125,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["quickly",{"_index":5378,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["rack",{"_index":1558,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component",{"_index":2670,"title":{},"body":{"modules/IoModule.html":{}}}],["rack.component.html",{"_index":1547,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component.ts",{"_index":1545,"title":{},"body":{"components/DynamicRackComponent.html":{},"coverage.html":{}}}],["rack.component.ts:10",{"_index":1550,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack/dynamic",{"_index":1544,"title":{},"body":{"components/DynamicRackComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["range",{"_index":3995,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["ranking",{"_index":5438,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["ratio",{"_index":2480,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["raw",{"_index":1282,"title":{},"body":{"pipes/DatetimePipe.html":{},"components/LocationPickerComponent.html":{}}}],["rawfilter",{"_index":3659,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["re",{"_index":92,"title":{},"body":{"components/AceComponent.html":{}}}],["reach",{"_index":4241,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["react",{"_index":650,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reactions",{"_index":3272,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactive",{"_index":3382,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["reactiveformsmodule",{"_index":699,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/UtilityModule.html":{}}}],["read",{"_index":1181,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["readable",{"_index":1948,"title":{},"body":{"classes/Field.html":{}}}],["readme",{"_index":470,"title":{"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["readonly",{"_index":619,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["reads",{"_index":2454,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ready",{"_index":44,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["really",{"_index":5570,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["recent",{"_index":3343,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["recognize",{"_index":5750,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["recommended",{"_index":3777,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reconstruct",{"_index":2800,"title":{},"body":{"components/ListComponent.html":{}}}],["reconstructing",{"_index":2799,"title":{},"body":{"components/ListComponent.html":{}}}],["redirect",{"_index":652,"title":{},"body":{"guards/AuthGuard.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["redirecting",{"_index":667,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reduce((a",{"_index":827,"title":{},"body":{"injectables/AuthService.html":{}}}],["reduce((max",{"_index":3678,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["refer",{"_index":5380,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["reference",{"_index":2586,"title":{},"body":{"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["referenced",{"_index":5493,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["references",{"_index":5529,"title":{},"body":{"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["reflect",{"_index":1457,"title":{},"body":{"interfaces/Day.html":{}}}],["reflected",{"_index":1327,"title":{},"body":{"interfaces/Day.html":{}}}],["regex",{"_index":5284,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["regexp",{"_index":2679,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["register",{"_index":2429,"title":{},"body":{"injectables/IconService.html":{},"injectables/KeycommandsService.html":{},"injectables/SymbolService.html":{},"components/ToggleComponent.html":{}}}],["register(keyconfig",{"_index":2711,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["registered",{"_index":2434,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["registeronchange",{"_index":58,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["registeronchange(fn",{"_index":95,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registerontouched",{"_index":59,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registers",{"_index":97,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/ToggleComponent.html":{}}}],["registration",{"_index":4403,"title":{},"body":{"components/SignupComponent.html":{}}}],["registry",{"_index":2386,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["registry.find((s",{"_index":4558,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry.indexof(this.get(symbol.name",{"_index":4563,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry.push(symbol",{"_index":4564,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry[index",{"_index":4565,"title":{},"body":{"injectables/SymbolService.html":{}}}],["regular",{"_index":4940,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["reinit/reload",{"_index":2570,"title":{},"body":{"components/InputComponent.html":{}}}],["reinstantiate",{"_index":5864,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["reject",{"_index":2311,"title":{},"body":{"injectables/GeocodeService.html":{},"components/TinymceComponent.html":{}}}],["reject(status",{"_index":2316,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["related",{"_index":694,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/LocationModule.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{}}}],["relation",{"_index":552,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["relations",{"_index":4315,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["relative",{"_index":1458,"title":{},"body":{"interfaces/Day.html":{},"components/TabComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["relativeto",{"_index":4638,"title":{},"body":{"components/TabsComponent.html":{}}}],["release",{"_index":1796,"title":{},"body":{"injectables/EntryService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["releaseto",{"_index":5218,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["releasing",{"_index":5215,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["relevant",{"_index":450,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["relevantkeys",{"_index":3713,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.foreach((key",{"_index":3717,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.length",{"_index":3716,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["reload",{"_index":4131,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["reloading",{"_index":5416,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["reloads",{"_index":1055,"title":{},"body":{"components/CrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rely",{"_index":5501,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["remain",{"_index":1170,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["removal",{"_index":1159,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["remove",{"_index":897,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["remove(item",{"_index":941,"title":{},"body":{"classes/Collection.html":{}}}],["removeall",{"_index":898,"title":{},"body":{"classes/Collection.html":{}}}],["removeall(items",{"_index":945,"title":{},"body":{"classes/Collection.html":{}}}],["removed",{"_index":1157,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["removeitem",{"_index":5756,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["removes",{"_index":943,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["removing",{"_index":3087,"title":{},"body":{"components/LoaderComponent.html":{}}}],["rename",{"_index":2688,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{}}}],["renamed",{"_index":5291,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["render",{"_index":1012,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ListComponent.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["rendered",{"_index":2157,"title":{},"body":{"interfaces/FormConfig.html":{},"components/OutputComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["rendering",{"_index":3866,"title":{},"body":{"components/OutputComponent.html":{}}}],["renders",{"_index":1429,"title":{},"body":{"interfaces/Day.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/PaginationComponent.html":{}}}],["replace",{"_index":1116,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["replaces",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/SymbolService.html":{}}}],["replacewith",{"_index":899,"title":{},"body":{"classes/Collection.html":{}}}],["replacewith(items",{"_index":948,"title":{},"body":{"classes/Collection.html":{}}}],["repo",{"_index":5208,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["repository",{"_index":5196,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["represented",{"_index":1306,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["represents",{"_index":1934,"title":{},"body":{"classes/Field.html":{}}}],["request",{"_index":4007,"title":{},"body":{"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{}}}],["requested",{"_index":2446,"title":{},"body":{"directives/ImageDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["requests",{"_index":4326,"title":{},"body":{"injectables/SdkService.html":{}}}],["require",{"_index":446,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["require(\"path",{"_index":5319,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["required",{"_index":1869,"title":{},"body":{"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["requires",{"_index":2430,"title":{},"body":{"injectables/IconService.html":{}}}],["res",{"_index":825,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["reset",{"_index":359,"title":{},"body":{"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["reset'},{'name",{"_index":292,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["reset.component",{"_index":708,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset.component.html",{"_index":4010,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts",{"_index":4005,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:16",{"_index":4021,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:18",{"_index":4020,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:20",{"_index":4013,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:22",{"_index":4015,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:24",{"_index":4016,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:26",{"_index":4012,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:28",{"_index":4019,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:30",{"_index":4017,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":707,"title":{},"body":{"modules/AuthModule.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset?e=1",{"_index":4009,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["resetfilter",{"_index":2947,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["resetpassword",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(email",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(this.email",{"_index":4025,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["resets",{"_index":3337,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["resolution",{"_index":2523,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.height",{"_index":2530,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.width",{"_index":2529,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolve",{"_index":1943,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["resolve(name",{"_index":4538,"title":{},"body":{"injectables/SymbolService.html":{}}}],["resolve(results",{"_index":2315,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["resolve(tinymce.init(settings",{"_index":4709,"title":{},"body":{"components/TinymceComponent.html":{}}}],["resolveassets",{"_index":2077,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resolved",{"_index":425,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{}}}],["resolved.find((resource",{"_index":2100,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resolvedapi",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvefn",{"_index":2919,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolvefn(list",{"_index":2921,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolver",{"_index":160,"title":{},"body":{"components/AceComponent.html":{}}}],["resolves",{"_index":135,"title":{},"body":{"components/AceComponent.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{}}}],["resolvevariables",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevariables(string",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["resouce",{"_index":5689,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["resource",{"_index":295,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["resource.assetid",{"_index":2101,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resource.del().then((res",{"_index":4266,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource.newhistory",{"_index":2374,"title":{},"body":{"injectables/HistoryService.html":{}}}],["resource.save",{"_index":4258,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource/resource.module",{"_index":1231,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["resource[identifier",{"_index":4115,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resource[key",{"_index":4263,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource[label",{"_index":4116,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceaction",{"_index":4141,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceactionbarcomponent",{"_index":294,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceactionbarstate",{"_index":4107,"title":{"interfaces/ResourceActionbarState.html":{}},"body":{"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["resourceconfig",{"_index":542,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourceconfig#set",{"_index":5700,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["resourcecrudcomponent",{"_index":296,"title":{"components/ResourceCrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcedeletepopcomponent",{"_index":297,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceform",{"_index":5077,"title":{},"body":{"coverage.html":{}}}],["resourceformcomponent",{"_index":299,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelist",{"_index":581,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["resourcelist(relation",{"_index":4134,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourcelistcomponent",{"_index":300,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelistcomponent:118",{"_index":591,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:127",{"_index":583,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:131",{"_index":588,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:29",{"_index":603,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:31",{"_index":561,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:33",{"_index":573,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:35",{"_index":565,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:37",{"_index":599,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:39",{"_index":555,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:41",{"_index":570,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:43",{"_index":563,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:52",{"_index":602,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:53",{"_index":598,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:54",{"_index":605,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:66",{"_index":578,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:82",{"_index":594,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistpopcomponent",{"_index":301,"title":{"components/ResourceListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcemodule",{"_index":1204,"title":{"modules/ResourceModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcepopcomponent",{"_index":302,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resources",{"_index":4138,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceselectcomponent",{"_index":303,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservice",{"_index":1748,"title":{"injectables/ResourceService.html":{}},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservice.change",{"_index":1788,"title":{},"body":{"injectables/EntryService.html":{}}}],["response",{"_index":2073,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["response['getallitems",{"_index":2072,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["rest",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{}}}],["result",{"_index":342,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["results",{"_index":344,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["results.length",{"_index":3239,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["results.push(method",{"_index":826,"title":{},"body":{"injectables/AuthService.html":{}}}],["results[0].formatted_address",{"_index":3240,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["retoggle",{"_index":5804,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["retrieve",{"_index":2894,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["retrieve(key",{"_index":2900,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["retrieves",{"_index":3620,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["return",{"_index":188,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["returned",{"_index":1835,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/SdkField.html":{}}}],["returns",{"_index":89,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":2278,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"classes/Sorter.html":{}}}],["reversed",{"_index":5800,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["revert",{"_index":5626,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["reverted",{"_index":5571,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["reworked",{"_index":5663,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["role",{"_index":452,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["root",{"_index":385,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"classes/Config.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["roots",{"_index":4289,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["route",{"_index":543,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["route.data",{"_index":3499,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.data.hidden",{"_index":3500,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.params",{"_index":1083,"title":{},"body":{"components/CrudComponent.html":{}}}],["route.path",{"_index":3497,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.path.indexof",{"_index":3498,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.queryparams",{"_index":1084,"title":{},"body":{"components/CrudComponent.html":{}}}],["router",{"_index":1022,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["routermodule",{"_index":1213,"title":{},"body":{"modules/DataModule.html":{},"modules/UtilityModule.html":{}}}],["routes",{"_index":644,"title":{"additional-documentation/project-setup-tutorial/routes.html":{}},"body":{"guards/AuthGuard.html":{},"components/MenuComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["routing",{"_index":3430,"title":{},"body":{"components/MenuComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["routing.module.ts",{"_index":5384,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["row",{"_index":2677,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["run",{"_index":5209,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["running",{"_index":5204,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["runs",{"_index":1945,"title":{},"body":{"classes/Field.html":{}}}],["runtime",{"_index":4286,"title":{},"body":{"injectables/SdkService.html":{}}}],["rxfilter",{"_index":4239,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs",{"_index":663,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"dependencies.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["rxjs';9",{"_index":6013,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["rxjs/operators",{"_index":1313,"title":{},"body":{"interfaces/Day.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{}}}],["rxjs/subject",{"_index":6012,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["s.name",{"_index":4559,"title":{},"body":{"injectables/SymbolService.html":{}}}],["safari",{"_index":5821,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["safedelete",{"_index":1144,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["safeput",{"_index":1779,"title":{},"body":{"injectables/EntryService.html":{}}}],["same",{"_index":910,"title":{},"body":{"classes/Collection.html":{},"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/MenuComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["sandbox.scss",{"_index":5347,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["save",{"_index":1752,"title":{},"body":{"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["save(item",{"_index":4233,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["save(model",{"_index":1771,"title":{},"body":{"injectables/EntryService.html":{}}}],["save(safeput",{"_index":1815,"title":{},"body":{"injectables/EntryService.html":{}}}],["save2",{"_index":5528,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["saved",{"_index":1172,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["saves",{"_index":1774,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["savethis",{"_index":5342,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/style-readme.html":{}}}],["scaffolding",{"_index":5233,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["scale",{"_index":3616,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema",{"_index":3595,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["schemarequests",{"_index":4290,"title":{},"body":{"injectables/SdkService.html":{}}}],["script",{"_index":5213,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["scss",{"_index":5287,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/style-readme.html":{}}}],["scssmake",{"_index":5339,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sdk",{"_index":457,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["sdk.api",{"_index":488,"title":{},"body":{"directives/AssetDirective.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{}}}],["sdk.init",{"_index":4284,"title":{},"body":{"injectables/SdkService.html":{}}}],["sdk.service",{"_index":4280,"title":{},"body":{"modules/SdkModule.html":{}}}],["sdk/history.service",{"_index":1232,"title":{},"body":{"modules/DataModule.html":{}}}],["sdk/sdk.module",{"_index":1233,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{}}}],["sdk/sdk.service",{"_index":463,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["sdkfield",{"_index":4267,"title":{"interfaces/SdkField.html":{}},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["sdkmodule",{"_index":1205,"title":{"modules/SdkModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules.html":{},"overview.html":{}}}],["sdkservice",{"_index":460,"title":{"injectables/SdkService.html":{}},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sdkservice#api",{"_index":3269,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["search",{"_index":1888,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["search'},{'name",{"_index":270,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["search.component",{"_index":3196,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["search.component.html",{"_index":3243,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts",{"_index":3242,"title":{},"body":{"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:12",{"_index":3246,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:14",{"_index":3251,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:16",{"_index":3245,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:20",{"_index":3248,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:26",{"_index":3249,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["searchbar",{"_index":1670,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/GeocodeService.html":{},"interfaces/ItemConfig.html":{},"components/LocationSearchComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["searchbar'},{'name",{"_index":305,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["searchbar/searchbar.component",{"_index":3073,"title":{},"body":{"modules/ListModule.html":{}}}],["searchbarcomponent",{"_index":304,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchinput",{"_index":3244,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["second",{"_index":2820,"title":{},"body":{"components/ListComponent.html":{}}}],["section",{"_index":4060,"title":{},"body":{"components/PopComponent.html":{}}}],["see",{"_index":558,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["sein",{"_index":5413,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["seite",{"_index":675,"title":{},"body":{"guards/AuthGuard.html":{}}}],["select",{"_index":253,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["select#togglepop",{"_index":5694,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["select'},{'name",{"_index":212,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select(item",{"_index":1703,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["select(page",{"_index":3910,"title":{},"body":{"classes/Pagination.html":{}}}],["select(tab",{"_index":4609,"title":{},"body":{"components/TabsComponent.html":{}}}],["select.component",{"_index":1227,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{}}}],["select.component.html",{"_index":613,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts",{"_index":612,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:11",{"_index":626,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:12",{"_index":623,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:13",{"_index":624,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:14",{"_index":625,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:15",{"_index":627,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:16",{"_index":622,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:17",{"_index":4892,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:18",{"_index":629,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:19",{"_index":4893,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:20",{"_index":628,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:22",{"_index":4895,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:24",{"_index":4896,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:25",{"_index":4894,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:26",{"_index":4891,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:28",{"_index":4909,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:30",{"_index":4910,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:32",{"_index":4907,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:34",{"_index":4890,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:36",{"_index":4905,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:38",{"_index":4897,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:41",{"_index":4898,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:46",{"_index":4899,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:53",{"_index":4903,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:59",{"_index":4901,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.emit(item",{"_index":2787,"title":{},"body":{"components/ListComponent.html":{}}}],["select/asset",{"_index":2125,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/assetgroup",{"_index":611,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["select/entry",{"_index":1226,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["select/resource",{"_index":4214,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["select/select.component",{"_index":379,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.component.html",{"_index":384,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.module",{"_index":4805,"title":{},"body":{"modules/UiModule.html":{}}}],["select/tag",{"_index":2132,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/upload",{"_index":2130,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["selectable",{"_index":575,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["selectbyurl",{"_index":4603,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectbyurl(url",{"_index":4612,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectcomponent",{"_index":306,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectday(_moment",{"_index":1441,"title":{},"body":{"interfaces/Day.html":{}}}],["selected",{"_index":1028,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/UploadComponent.html":{}}}],["selectentry",{"_index":1026,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectentry(item",{"_index":1061,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectindex",{"_index":2765,"title":{},"body":{"components/ListComponent.html":{}}}],["selectindex(index",{"_index":2801,"title":{},"body":{"components/ListComponent.html":{}}}],["selecting",{"_index":3247,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["selection",{"_index":963,"title":{},"body":{"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["selection.config.solo",{"_index":2112,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selection.select(upload.item",{"_index":2113,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selection.toggle",{"_index":2789,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["selection.toggleall(upload.items",{"_index":2114,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selectmode",{"_index":2871,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["selectmodule",{"_index":4373,"title":{"modules/SelectModule.html":{}},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["selectmoduleconfig",{"_index":4382,"title":{},"body":{"modules/SelectModule.html":{},"coverage.html":{}}}],["selector",{"_index":33,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["selects",{"_index":1155,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["selecttemplate",{"_index":4111,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["selectupload(upload",{"_index":2110,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["self",{"_index":4148,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["self.indexof(value",{"_index":4149,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["semicolon",{"_index":6014,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["send",{"_index":4006,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["sends",{"_index":4018,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["sensitivity",{"_index":4466,"title":{},"body":{"classes/Sorter.html":{}}}],["sent",{"_index":4024,"title":{},"body":{"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["seperate",{"_index":5776,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["seperated",{"_index":5423,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["seperately",{"_index":5727,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["seperation",{"_index":5425,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["serve",{"_index":5231,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["server",{"_index":5229,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["server:generic\",now",{"_index":5317,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["serveral",{"_index":4596,"title":{},"body":{"components/TabsComponent.html":{}}}],["service",{"_index":1741,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["services",{"_index":695,"title":{},"body":{"modules/AuthModule.html":{},"components/DefaultInputComponent.html":{},"modules/LocationModule.html":{},"modules/SymbolModule.html":{}}}],["session",{"_index":4291,"title":{},"body":{"injectables/SdkService.html":{}}}],["session(environment.environment",{"_index":4350,"title":{},"body":{"injectables/SdkService.html":{}}}],["set",{"_index":529,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/publishing.html":{}}}],["set(key",{"_index":2902,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["set(property",{"_index":3638,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["set(symbols",{"_index":4541,"title":{},"body":{"injectables/SymbolService.html":{}}}],["set(type",{"_index":4757,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["setapi(api",{"_index":4332,"title":{},"body":{"injectables/SdkService.html":{}}}],["setclientid",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["setdate(date",{"_index":1434,"title":{},"body":{"interfaces/Day.html":{}}}],["setdisabledstate",{"_index":1242,"title":{},"body":{"components/DatetimeComponent.html":{},"components/InputComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1256,"title":{},"body":{"components/DatetimeComponent.html":{},"components/InputComponent.html":{}}}],["setemptystringstonull",{"_index":4221,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["setfilter",{"_index":2948,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["setfilter(field",{"_index":2969,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["setgroup",{"_index":4813,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setgroup(group",{"_index":4830,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setmode",{"_index":60,"title":{},"body":{"components/AceComponent.html":{}}}],["setmode(mode",{"_index":105,"title":{},"body":{"components/AceComponent.html":{}}}],["sets",{"_index":87,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setter",{"_index":994,"title":{},"body":{"classes/Config.html":{}}}],["settheme",{"_index":61,"title":{},"body":{"components/AceComponent.html":{}}}],["settheme(theme",{"_index":110,"title":{},"body":{"components/AceComponent.html":{}}}],["settimeout",{"_index":435,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/DefaultInputComponent.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"components/UploadSelectComponent.html":{}}}],["settimeout(resolve",{"_index":3113,"title":{},"body":{"components/LoaderComponent.html":{}}}],["setting",{"_index":3089,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["settings",{"_index":852,"title":{},"body":{"injectables/AuthService.html":{},"components/TinymceComponent.html":{}}}],["settings.ts",{"_index":5098,"title":{},"body":{"coverage.html":{}}}],["settoday",{"_index":1463,"title":{},"body":{"interfaces/Day.html":{}}}],["settotal",{"_index":3882,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(itemcount",{"_index":3942,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(total",{"_index":3913,"title":{},"body":{"classes/Pagination.html":{}}}],["setup",{"_index":4502,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/publishing.html":{}}}],["seturl",{"_index":2440,"title":{},"body":{"directives/ImageDirective.html":{}}}],["seturl(url",{"_index":2455,"title":{},"body":{"directives/ImageDirective.html":{}}}],["setvalue",{"_index":3156,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setvalue(value",{"_index":3170,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["short",{"_index":2985,"title":{},"body":{"components/ListHeaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["shortcuts",{"_index":2703,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["shorthand",{"_index":5340,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["shortid",{"_index":3707,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["shouldbepartofform",{"_index":2198,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldbepartofform(field",{"_index":2216,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldn't",{"_index":5482,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["show",{"_index":1674,"title":{},"body":{"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/publishing.html":{}}}],["show(e",{"_index":1713,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["showerror",{"_index":3299,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showerror(err",{"_index":3338,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showheader",{"_index":2766,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["showing",{"_index":1330,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["showlabels",{"_index":3306,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["shown",{"_index":564,"title":{},"body":{"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["shownotification",{"_index":3760,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["showrawvalue",{"_index":3210,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["shows",{"_index":1715,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["showurlinput",{"_index":4882,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["sie",{"_index":680,"title":{},"body":{"guards/AuthGuard.html":{},"components/PasswordResetComponent.html":{}}}],["signup",{"_index":310,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{}}}],["signup'},{'name",{"_index":308,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["signup(email",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(undefined",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{}}}],["signup(value",{"_index":4424,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signup.component.html",{"_index":4386,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":709,"title":{},"body":{"modules/AuthModule.html":{}}}],["signupcomponent",{"_index":307,"title":{"components/SignupComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupformcomponent",{"_index":309,"title":{"components/SignupFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["silent",{"_index":3911,"title":{},"body":{"classes/Pagination.html":{},"interfaces/WithNotifications.html":{}}}],["simi",{"_index":1004,"title":{},"body":{"classes/Config.html":{}}}],["simibug",{"_index":1620,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["similar",{"_index":1907,"title":{},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["simple",{"_index":3757,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["sind",{"_index":681,"title":{},"body":{"guards/AuthGuard.html":{}}}],["single",{"_index":508,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["singleton",{"_index":4447,"title":{},"body":{"classes/Sorter.html":{}}}],["singularlabel",{"_index":1145,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["site",{"_index":3120,"title":{},"body":{"components/LoaderComponent.html":{}}}],["situations",{"_index":4741,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["size",{"_index":2094,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["sizes",{"_index":2874,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["skipped",{"_index":562,"title":{},"body":{"components/AssetListComponent.html":{}}}],["skiproute",{"_index":4610,"title":{},"body":{"components/TabsComponent.html":{}}}],["slice",{"_index":3883,"title":{},"body":{"classes/Pagination.html":{}}}],["slice(items",{"_index":3917,"title":{},"body":{"classes/Pagination.html":{}}}],["slices",{"_index":3374,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"classes/Pagination.html":{}}}],["slot",{"_index":1561,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{},"components/TabsComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["slot'},{'name",{"_index":236,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["slot.component",{"_index":2604,"title":{},"body":{"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{}}}],["slot.component.html",{"_index":1562,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["slot.component.ts",{"_index":1560,"title":{},"body":{"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["slot.component.ts:11",{"_index":1565,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:14",{"_index":1570,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:17",{"_index":1568,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot/dynamic",{"_index":1559,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["slothostdirective",{"_index":339,"title":{"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sm",{"_index":1983,"title":{},"body":{"classes/Field.html":{}}}],["smoother",{"_index":4001,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["snackbar",{"_index":3567,"title":{},"body":{"components/ModalComponent.html":{}}}],["snippet",{"_index":5418,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["soeben",{"_index":4028,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["solo",{"_index":553,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{}}}],["somebody",{"_index":2081,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["somemodule",{"_index":2406,"title":{},"body":{"components/IconComponent.html":{}}}],["sometimes",{"_index":5896,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["somewhere",{"_index":164,"title":{},"body":{"components/AceComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["soon",{"_index":469,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sophisticated",{"_index":890,"title":{},"body":{"classes/Collection.html":{}}}],["sort",{"_index":1958,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["sort((a",{"_index":3931,"title":{},"body":{"classes/Pagination.html":{}}}],["sort(items",{"_index":4458,"title":{},"body":{"classes/Sorter.html":{}}}],["sortable",{"_index":1870,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["sortboolean",{"_index":4453,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortboolean(a",{"_index":4473,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortby",{"_index":2872,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["sorted",{"_index":2883,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sorter",{"_index":4445,"title":{"classes/Sorter.html":{}},"body":{"classes/Sorter.html":{},"coverage.html":{}}}],["sorting",{"_index":2875,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sortnumber",{"_index":4452,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortnumber(a",{"_index":4471,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorts",{"_index":4460,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["sortstring",{"_index":4451,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortstring(a",{"_index":4469,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorttype",{"_index":4449,"title":{},"body":{"classes/Sorter.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{}}}],["source.addeventlistener",{"_index":2378,"title":{},"body":{"injectables/HistoryService.html":{}}}],["span",{"_index":1329,"title":{},"body":{"interfaces/Day.html":{}}}],["spanchanged",{"_index":1341,"title":{},"body":{"interfaces/Day.html":{}}}],["spancolor",{"_index":1331,"title":{},"body":{"interfaces/Day.html":{}}}],["speakingurl",{"_index":5497,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["spec",{"_index":5933,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["specific",{"_index":1935,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["specified",{"_index":107,"title":{},"body":{"components/AceComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{}}}],["specify",{"_index":3268,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["splice(1",{"_index":3582,"title":{},"body":{"components/ModalComponent.html":{}}}],["split",{"_index":3581,"title":{},"body":{"components/ModalComponent.html":{}}}],["spreadsheet",{"_index":2029,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["square",{"_index":2448,"title":{},"body":{"directives/ImageDirective.html":{}}}],["src",{"_index":2438,"title":{},"body":{"directives/ImageDirective.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["src/app/app",{"_index":5383,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/app/app.component.html",{"_index":5370,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/app.module",{"_index":5359,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/muffins/muffins.component.html",{"_index":5382,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/environments",{"_index":5349,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.prod.ts",{"_index":5356,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.ts",{"_index":5354,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl",{"_index":5365,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl\",without",{"_index":5366,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["stack",{"_index":386,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["stackblitz",{"_index":6020,"title":{"additional-documentation/stackblitz.html":{}},"body":{"additional-documentation/stackblitz.html":{}}}],["stage",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["staging",{"_index":5351,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["standards",{"_index":5994,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["stands",{"_index":996,"title":{},"body":{"classes/Config.html":{}}}],["start",{"_index":1247,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"pipes/MaxItemsPipe.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["started",{"_index":4952,"title":{"changelog.html":{},"index.html":{}},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["startnow",{"_index":5374,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["startof('day",{"_index":1414,"title":{},"body":{"interfaces/Day.html":{}}}],["startof('month",{"_index":1405,"title":{},"body":{"interfaces/Day.html":{}}}],["startof('week",{"_index":1406,"title":{},"body":{"interfaces/Day.html":{}}}],["startthe",{"_index":5212,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["state",{"_index":1744,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["statement",{"_index":5722,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["statements",{"_index":4963,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2935,"title":{},"body":{"components/ListHeaderComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["static",{"_index":861,"title":{},"body":{"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/LocationModule.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{}}}],["status",{"_index":2313,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{}}}],["stay",{"_index":3741,"title":{},"body":{"classes/Notification.html":{},"injectables/SymbolService.html":{}}}],["stays",{"_index":1726,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["step",{"_index":3702,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["steps",{"_index":5991,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["sticky",{"_index":1115,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["still",{"_index":4786,"title":{},"body":{"injectables/TypeConfigService.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["stop",{"_index":2082,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["storage",{"_index":2886,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{}}}],["storagekey",{"_index":2873,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["storagekeyresolver",{"_index":2891,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["store",{"_index":2884,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{}}}],["store(key",{"_index":2904,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig",{"_index":2895,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig(list",{"_index":2906,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["stored",{"_index":5237,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["stores",{"_index":2353,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["strategy=endless",{"_index":1625,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["stream",{"_index":2343,"title":{},"body":{"injectables/HistoryService.html":{}}}],["string",{"_index":69,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["string,value",{"_index":587,"title":{},"body":{"components/AssetListComponent.html":{}}}],["string.replace",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{}}}],["stringify",{"_index":5731,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["strings",{"_index":1825,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"miscellaneous/functions.html":{}}}],["strong",{"_index":5447,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strong.component.ts",{"_index":5444,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strongcomponent",{"_index":5443,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["structured",{"_index":1938,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{}}}],["stuff",{"_index":3080,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["style",{"_index":3528,"title":{"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/style-changelog.html":{}},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["styles.scss",{"_index":5343,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["styleurls",{"_index":35,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sub",{"_index":997,"title":{},"body":{"classes/Config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["subbranches",{"_index":2685,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["subclass",{"_index":3333,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["subject",{"_index":662,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"additional-documentation/adding-new-packages.html":{}}}],["submenus",{"_index":3452,"title":{},"body":{"components/MenuComponent.html":{}}}],["submit",{"_index":2156,"title":{},"body":{"interfaces/FormConfig.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["submitbuttonlabel",{"_index":2154,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{}}}],["submitted",{"_index":3297,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["submitting",{"_index":5458,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["subscribe",{"_index":1085,"title":{},"body":{"components/CrudComponent.html":{}}}],["subscribe((day",{"_index":1351,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe((editor",{"_index":4697,"title":{},"body":{"components/TinymceComponent.html":{}}}],["subscribe((timespan",{"_index":1355,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribed",{"_index":1746,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["subscribers",{"_index":4242,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["subscribes",{"_index":596,"title":{},"body":{"components/AssetListComponent.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["subtract(weeksbefore",{"_index":1407,"title":{},"body":{"interfaces/Day.html":{}}}],["succesful",{"_index":3329,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["success",{"_index":3260,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["success/error",{"_index":3775,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["successful",{"_index":3261,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["successfully",{"_index":1171,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{}}}],["such",{"_index":1942,"title":{},"body":{"classes/Field.html":{}}}],["suitable",{"_index":1949,"title":{},"body":{"classes/Field.html":{},"additional-documentation/readme/location-readme.html":{}}}],["summary.json",{"_index":6019,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["super",{"_index":3646,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["super(elementref",{"_index":395,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["super(formservice",{"_index":465,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["super(popservice",{"_index":1731,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["super(sdk",{"_index":2461,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.filterdropdownlist(listcomponent",{"_index":4153,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["super.load",{"_index":2450,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load(id).then(this.use.bind(this",{"_index":2465,"title":{},"body":{"directives/ImageDirective.html":{}}}],["support",{"_index":3577,"title":{},"body":{"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["supported",{"_index":1180,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ModalComponent.html":{}}}],["supports",{"_index":5414,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sure",{"_index":79,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["svg",{"_index":5251,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1164,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["switchmap",{"_index":2290,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["symbol",{"_index":1033,"title":{"interfaces/Symbol.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol's",{"_index":4508,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.content",{"_index":4561,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.interface",{"_index":4527,"title":{},"body":{"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["symbol.language",{"_index":4513,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.pipe",{"_index":4520,"title":{},"body":{"modules/SymbolModule.html":{}}}],["symbol.service",{"_index":4519,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{}}}],["symbol/symbol.interface",{"_index":2413,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["symbol/symbol.module",{"_index":2183,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["symbol/symbol.service",{"_index":1287,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{}}}],["symbolmodule",{"_index":2172,"title":{"modules/SymbolModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["symbolpipe",{"_index":4499,"title":{"injectables/SymbolPipe.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"coverage.html":{},"overview.html":{}}}],["symbols",{"_index":4506,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbols.map((symbol",{"_index":4562,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice",{"_index":1034,"title":{"injectables/SymbolService.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice#set",{"_index":4509,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice.get(name",{"_index":4560,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.registry",{"_index":4536,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.resolve",{"_index":4526,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["symbolservice.resolve('moment.format.date",{"_index":2186,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve('moment.format.month",{"_index":2188,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve('moment.format.time",{"_index":2187,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve(name",{"_index":4573,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.set(symbols",{"_index":4574,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.sets[object.keys(symbolservice.sets)[0",{"_index":4550,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symlinks",{"_index":5202,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["syntax",{"_index":5431,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["system",{"_index":1770,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["t",{"_index":911,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{}}}],["tab",{"_index":4576,"title":{},"body":{"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["tab's",{"_index":4583,"title":{},"body":{"components/TabComponent.html":{}}}],["tab'},{'name",{"_index":312,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tab.activate",{"_index":4635,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.component.html",{"_index":4578,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.el.nativeelement.getattribute('selected",{"_index":4630,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.label",{"_index":4639,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.parent",{"_index":4629,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.route",{"_index":4636,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab/tab.component",{"_index":4618,"title":{},"body":{"components/TabsComponent.html":{},"modules/UtilityModule.html":{}}}],["tabcomponent",{"_index":311,"title":{"components/TabComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["table",{"_index":1316,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5150,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":4599,"title":{},"body":{"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["tabs'},{'name",{"_index":314,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tabs.component.html",{"_index":4600,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.component",{"_index":4592,"title":{},"body":{"components/TabComponent.html":{},"modules/UtilityModule.html":{}}}],["tabscomponent",{"_index":313,"title":{"components/TabsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":316,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["tags",{"_index":512,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Field.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["tagselectcomponent",{"_index":315,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["takes",{"_index":1011,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["taking",{"_index":1174,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["target",{"_index":3124,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"components/TinymceComponent.html":{}}}],["targeted",{"_index":150,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["task",{"_index":5216,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tell",{"_index":5481,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["tells",{"_index":1914,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Pagination.html":{},"interfaces/SdkField.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/publishing.html":{}}}],["templated",{"_index":4616,"title":{},"body":{"components/TabsComponent.html":{}}}],["templateref",{"_index":3547,"title":{},"body":{"components/ModalComponent.html":{}}}],["templates",{"_index":444,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/ModalComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["templateurl",{"_index":37,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["test",{"_index":5242,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tests",{"_index":4461,"title":{},"body":{"classes/Sorter.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["text",{"_index":1500,"title":{},"body":{"components/DefaultOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MenuComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["textarea",{"_index":4761,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["thats",{"_index":5373,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["theme",{"_index":67,"title":{},"body":{"components/AceComponent.html":{}}}],["themelist.js",{"_index":172,"title":{},"body":{"components/AceComponent.html":{}}}],["then((_entry",{"_index":1802,"title":{},"body":{"injectables/EntryService.html":{}}}],["then((_methods",{"_index":832,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((_resource",{"_index":4261,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((_upload",{"_index":4866,"title":{},"body":{"components/UploadComponent.html":{}}}],["then((account",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["then((actions",{"_index":4136,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["then((asset",{"_index":2507,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["then((assetlist",{"_index":2059,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((assets",{"_index":2074,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((available",{"_index":845,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((dmassetlist",{"_index":2095,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((entry",{"_index":1662,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/EntryService.html":{}}}],["then((list",{"_index":1628,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/ResourceActionbarState.html":{}}}],["then((loadedentry",{"_index":1106,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((minlevel",{"_index":1099,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((res",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((resolvedapi",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((resource",{"_index":4265,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((response",{"_index":2071,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((source",{"_index":2370,"title":{},"body":{"injectables/HistoryService.html":{}}}],["then((upload",{"_index":2065,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((url",{"_index":2509,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["then((user",{"_index":3283,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["then(this.seturl.bind(this",{"_index":2474,"title":{},"body":{"directives/ImageDirective.html":{}}}],["therefor",{"_index":5532,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["therefore",{"_index":2684,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["this._api",{"_index":4304,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.gettoken",{"_index":4372,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.me",{"_index":4371,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then",{"_index":4343,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then((api",{"_index":4363,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.setclientid(environment.clientid",{"_index":4362,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._toggle.emit(this.active",{"_index":4079,"title":{},"body":{"components/PopComponent.html":{}}}],["this.accounts",{"_index":4300,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.actionstack[this.currentid",{"_index":410,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.activate(this.keys[e.key",{"_index":2698,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.activated",{"_index":4075,"title":{},"body":{"components/PopComponent.html":{}}}],["this.activated.next",{"_index":4593,"title":{},"body":{"components/TabComponent.html":{}}}],["this.active",{"_index":1535,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["this.add(item",{"_index":978,"title":{},"body":{"classes/Collection.html":{}}}],["this.add.subscribe((item",{"_index":396,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.addall(items",{"_index":983,"title":{},"body":{"classes/Collection.html":{}}}],["this.additem(item",{"_index":4161,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.api",{"_index":530,"title":{},"body":{"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["this.apiresolved",{"_index":4344,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.app.tick",{"_index":4700,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.asset",{"_index":536,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.assetgroupid",{"_index":2518,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.assetgrouplistpromise",{"_index":2104,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.assetgroups",{"_index":636,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.assetid",{"_index":525,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["this.auth",{"_index":3282,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["this.auth.getallowedmodelmethods(this.model",{"_index":1087,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.auth.getallowedresourcemethods(this.relation",{"_index":4191,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.autofocus",{"_index":2144,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.autofocusfirst",{"_index":2840,"title":{},"body":{"components/ListComponent.html":{}}}],["this.autoload",{"_index":526,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["this.backdrop",{"_index":3586,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.bakery.bake().then",{"_index":3781,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.calendar.writevalue(value",{"_index":1271,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["this.canalter(value",{"_index":1460,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cdr.markforcheck",{"_index":1090,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/PopComponent.html":{}}}],["this.cells",{"_index":1400,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[0",{"_index":1371,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[this.cells.length",{"_index":1372,"title":{},"body":{"interfaces/Day.html":{}}}],["this.center",{"_index":3173,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.asobservable",{"_index":3890,"title":{},"body":{"classes/Pagination.html":{}}}],["this.change.next(this.config",{"_index":3939,"title":{},"body":{"classes/Pagination.html":{}}}],["this.changed.emit",{"_index":2511,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.changed.emit(change",{"_index":2627,"title":{},"body":{"components/InputComponent.html":{}}}],["this.changed.emit(coords",{"_index":3256,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.changed.emit(position",{"_index":3178,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.changed.emit(this.list",{"_index":2844,"title":{},"body":{"components/ListComponent.html":{}}}],["this.changed.emit(this.value",{"_index":4699,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.changes.asobservable",{"_index":4252,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.asobservable().pipe(rxfilter((change",{"_index":4253,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.next",{"_index":4247,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changesenvironment.next(environment",{"_index":4348,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.changespan",{"_index":1353,"title":{},"body":{"interfaces/Day.html":{}}}],["this.changespan.next(this.timespan",{"_index":1370,"title":{},"body":{"interfaces/Day.html":{}}}],["this.checkpermission(`${model}:${method",{"_index":836,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkpermission(`${this.resolvevariables(permissions[method",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.classes",{"_index":3580,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.clean(oldvalues",{"_index":1818,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clean(value",{"_index":1812,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clear",{"_index":4847,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.clearfilter",{"_index":3009,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.clickevent",{"_index":4069,"title":{},"body":{"components/PopComponent.html":{}}}],["this.collection",{"_index":2835,"title":{},"body":{"components/ListComponent.html":{}}}],["this.colors",{"_index":1385,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors.length",{"_index":3509,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.colors[_moment.toisostring",{"_index":1386,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors[this.getlevel(level",{"_index":3508,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.columnclicked.emit(item",{"_index":1118,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.columnclicked.observers.length",{"_index":1117,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.columns",{"_index":1981,"title":{},"body":{"classes/Field.html":{}}}],["this.component",{"_index":3874,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(component",{"_index":1576,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.componentinstance",{"_index":2606,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.control",{"_index":2625,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.control.valuechanges.pipe(debouncetime(this.debounce)).subscribe((change",{"_index":2626,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.disabled",{"_index":2632,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.focusevent",{"_index":2608,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.focusevent.emit(focus",{"_index":2609,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchange",{"_index":2633,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchange(this.propagatechange",{"_index":2634,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.setdisabledstate",{"_index":2638,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.setdisabledstate(isdisabled",{"_index":2639,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalue",{"_index":2636,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalue(value",{"_index":2637,"title":{},"body":{"components/InputComponent.html":{}}}],["this.config",{"_index":433,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/EntryListPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["this.config.alwaysloadentry",{"_index":1102,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.availablesizes",{"_index":3947,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.fields",{"_index":1098,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.levels",{"_index":1101,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.methods",{"_index":1089,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods).then((methods",{"_index":1088,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods.indexof(method",{"_index":1091,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.page",{"_index":3933,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.singularlabel",{"_index":1738,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.config.size",{"_index":3929,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config[key",{"_index":1007,"title":{},"body":{"classes/Config.html":{}}}],["this.config[key][property",{"_index":1008,"title":{},"body":{"classes/Config.html":{}}}],["this.configinput",{"_index":2831,"title":{},"body":{"components/ListComponent.html":{}}}],["this.configure('model",{"_index":3648,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.connectcontrol",{"_index":2623,"title":{},"body":{"components/InputComponent.html":{}}}],["this.container.nativeelement",{"_index":4704,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.container.nativeelement.innerhtml",{"_index":3409,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.control",{"_index":2614,"title":{},"body":{"components/InputComponent.html":{}}}],["this.control.errors[key",{"_index":2657,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.copytoclipboard(json.stringify(item.resolve(property",{"_index":2728,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.create(model",{"_index":1801,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.create(relation",{"_index":4260,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.create.emit(query",{"_index":4160,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.create.observers.length",{"_index":4159,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.createclicked.next",{"_index":4196,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.createclicked.observers.length",{"_index":4195,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.currentactions",{"_index":4144,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.custom",{"_index":4858,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.datamanager",{"_index":4358,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.datamanager.datamanager(this._api.datamanagerid",{"_index":4339,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.date",{"_index":1436,"title":{},"body":{"interfaces/Day.html":{}}}],["this.date.clone().add(value",{"_index":1453,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dateformat",{"_index":1284,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["this.dayclicked.emit(_moment",{"_index":1445,"title":{},"body":{"interfaces/Day.html":{}}}],["this.deactivated.next",{"_index":4594,"title":{},"body":{"components/TabComponent.html":{}}}],["this.defaultmonthformat",{"_index":1347,"title":{},"body":{"interfaces/Day.html":{}}}],["this.defaulttime",{"_index":3864,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.desktopnotification(instance",{"_index":3851,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.destroy",{"_index":4702,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.disabled",{"_index":1272,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/InputComponent.html":{}}}],["this.disabledragend",{"_index":1379,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disabledragstart",{"_index":1378,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disableupdates(key",{"_index":2368,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.displaydate(true",{"_index":4770,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.dmassetconfig",{"_index":2037,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.drag",{"_index":1348,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.next(day",{"_index":1383,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged",{"_index":1358,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.first",{"_index":1360,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.last",{"_index":1362,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropday(day",{"_index":1352,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropdownlist",{"_index":436,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.dropdownlist.focusfirst",{"_index":437,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.ecasset",{"_index":524,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.ecdropzone.emit(e",{"_index":1540,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.ecfocus.emit(true",{"_index":2145,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecfocus.subscribe((event",{"_index":2146,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecimage",{"_index":2462,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.ecimage.assetid",{"_index":2463,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.editor",{"_index":173,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.editor.buttons.image.onclick(true",{"_index":4714,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.destroy",{"_index":3415,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.execcommand('mceinsertcontent",{"_index":4719,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.getcontent",{"_index":3413,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.on('change",{"_index":4716,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.on('dblclick",{"_index":4712,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.remove",{"_index":4701,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.session.setmode('ace/mode",{"_index":189,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setcontent(this.value",{"_index":4711,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.settheme('ace/theme",{"_index":190,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setvalue(this.value",{"_index":182,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.subscribe('editableinput",{"_index":3412,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.element.nativeelement.blur",{"_index":2148,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.element.nativeelement.focus",{"_index":2147,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.elementref",{"_index":4070,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement",{"_index":4073,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.classlist.add(`${this.type",{"_index":3587,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.classlist.remove(`${type",{"_index":3585,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.contains(element",{"_index":4072,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.src",{"_index":2476,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.emitter.asobservable",{"_index":3844,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.emitter.next(instance",{"_index":3852,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.enableupdates(resource",{"_index":2369,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.endless",{"_index":1621,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entry",{"_index":1663,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entryid",{"_index":1659,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entrylist",{"_index":1633,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.follownextlink().then((list",{"_index":1639,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.followprevlink().then((list",{"_index":1640,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.getallitems",{"_index":1634,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasfirstlink",{"_index":1642,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasnextlink",{"_index":1641,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrypop.edit(loadedentry",{"_index":1107,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.entryservice.change({model:'muffin",{"_index":1791,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.entryservice.save(model",{"_index":3710,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.environment",{"_index":4307,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.error",{"_index":1847,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.code",{"_index":1849,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.emit(err",{"_index":3362,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.error.message",{"_index":1850,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.next(error",{"_index":3287,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.errormessage",{"_index":3359,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.event",{"_index":4859,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.eventsources[key",{"_index":2371,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[key].close",{"_index":2373,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[relation",{"_index":2367,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.fb.group",{"_index":3355,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.field",{"_index":1487,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.field.autofocus",{"_index":1488,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.field.config",{"_index":2618,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init",{"_index":2629,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init(this.componentinstance",{"_index":2630,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.input",{"_index":2621,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.output",{"_index":3875,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.field.property",{"_index":2617,"title":{},"body":{"components/InputComponent.html":{}}}],["this.fieldhost.viewcontainerref",{"_index":1577,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.fileinput",{"_index":4846,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.click",{"_index":4848,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.value",{"_index":4854,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.assetgrouplist().then((assetgroups",{"_index":635,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.fileservice.defaultoptions",{"_index":4821,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.fileservice.isnewassetgroupid(this.assetgroupid",{"_index":4863,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.isoldassetgroupid(this.assetgroupid",{"_index":2498,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{}}}],["this.fileservice.uploadassets(files",{"_index":4864,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadfiles(files",{"_index":4865,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filestoupload",{"_index":4857,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filteredfield",{"_index":3006,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filteredfield.property",{"_index":3007,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterfield(this.list.config.defaultfilter",{"_index":2996,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform",{"_index":2994,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.form.getfield(property",{"_index":3014,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group",{"_index":3012,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(property",{"_index":3011,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(property).patchvalue(this.list.getfiltervalue(property",{"_index":3013,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(this.filteredfield.property).reset",{"_index":3017,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterformconfig",{"_index":3000,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterinput",{"_index":2992,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterinput.focus(true",{"_index":2999,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterpop.hide",{"_index":3008,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterpop.show",{"_index":3015,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.focus",{"_index":1489,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.focusevent",{"_index":2619,"title":{},"body":{"components/InputComponent.html":{}}}],["this.focusevent.emit(focus",{"_index":1490,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.focusevent.emit(true",{"_index":4912,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.focusfirst",{"_index":2842,"title":{},"body":{"components/ListComponent.html":{}}}],["this.focusitem",{"_index":2843,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.focusnext",{"_index":2857,"title":{},"body":{"components/ListComponent.html":{}}}],["this.form",{"_index":3354,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.get('password').setvalue",{"_index":3361,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.reset",{"_index":3369,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.valid",{"_index":3367,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.formatted",{"_index":1438,"title":{},"body":{"interfaces/Day.html":{}}}],["this.formservice.shouldbepartofform(field",{"_index":4943,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["this.generateconfig(model",{"_index":3667,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.geocodelatlng(new",{"_index":2318,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocodeservice.autocompleteaddress(this.searchinput.nativeelement).subscribe((coords",{"_index":3255,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.geocodeservice.getnearestaddress(value).then((results",{"_index":3238,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.getaccount().then((user",{"_index":4356,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.getalgorithm(items",{"_index":4484,"title":{},"body":{"classes/Sorter.html":{}}}],["this.getapi(email",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getapi(email)).then((resolvedapi",{"_index":838,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getcolor(1",{"_index":3511,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getdaycolor(date",{"_index":1422,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getdayheat(date",{"_index":1423,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getfieldconfig(model).then((fieldconfig",{"_index":3711,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getformdata(files",{"_index":2057,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.getlightmodel(model",{"_index":3701,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getmonth(date.clone",{"_index":1440,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getmonth(this.date.clone",{"_index":1401,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getpage",{"_index":3944,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpages",{"_index":3945,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpath(item",{"_index":3505,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getpermission().then",{"_index":3861,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.getresourcelistactions(list",{"_index":4135,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.getstoragekey(list",{"_index":2922,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.getsystemfields",{"_index":3683,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getvalidators(field",{"_index":2236,"title":{},"body":{"injectables/FormService.html":{}}}],["this.group",{"_index":2615,"title":{},"body":{"components/InputComponent.html":{}}}],["this.group.get(this.field.property",{"_index":2616,"title":{},"body":{"components/InputComponent.html":{}}}],["this.groupchanged.emit(group",{"_index":4849,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.has(item",{"_index":974,"title":{},"body":{"classes/Collection.html":{}}}],["this.heatmap",{"_index":1388,"title":{},"body":{"interfaces/Day.html":{}}}],["this.heatmap[_moment.toisostring",{"_index":1389,"title":{},"body":{"interfaces/Day.html":{}}}],["this.hide",{"_index":2510,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.hideonclickoutside",{"_index":4068,"title":{},"body":{"components/PopComponent.html":{}}}],["this.hideonescape",{"_index":4076,"title":{},"body":{"components/PopComponent.html":{}}}],["this.host.nativeelement.classlist.add('is",{"_index":3130,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.host.nativeelement.classlist.remove('is",{"_index":3131,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.hover",{"_index":3512,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.hoverdelay",{"_index":3514,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.icon",{"_index":2414,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.get(this.name",{"_index":2415,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.registry",{"_index":2419,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.set(emojiicons",{"_index":2410,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.use(emojiicons",{"_index":2407,"title":{},"body":{"components/IconComponent.html":{}}}],["this.id",{"_index":1976,"title":{},"body":{"classes/Field.html":{}}}],["this.imageform",{"_index":2499,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimage",{"_index":2516,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimg",{"_index":2535,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.index(item",{"_index":969,"title":{},"body":{"classes/Collection.html":{}}}],["this.init",{"_index":191,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.init(new",{"_index":2832,"title":{},"body":{"components/ListComponent.html":{}}}],["this.initmethods",{"_index":4189,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.initmode",{"_index":3588,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.initselection",{"_index":434,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.inittabs",{"_index":4633,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.invite",{"_index":4435,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.isactive(item",{"_index":3510,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.isfirst",{"_index":3937,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isimmutableproperty(key",{"_index":1826,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.islast",{"_index":3936,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isnewasset(a",{"_index":2041,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isnewasset(unresolved",{"_index":2090,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isoldassetgroupid(assetgroupid",{"_index":2033,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isoutside($event.target",{"_index":4071,"title":{},"body":{"components/PopComponent.html":{}}}],["this.isreadonly(field",{"_index":2239,"title":{},"body":{"injectables/FormService.html":{}}}],["this.item",{"_index":2611,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.item.getfield(this.property",{"_index":2612,"title":{},"body":{"components/InputComponent.html":{}}}],["this.items",{"_index":965,"title":{},"body":{"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.items.concat(items",{"_index":1635,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.filter((item",{"_index":1636,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.find((_item",{"_index":1637,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.indexof(item",{"_index":968,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.length",{"_index":977,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.push(item",{"_index":967,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(index",{"_index":984,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.index(item",{"_index":979,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.items.indexof(item",{"_index":985,"title":{},"body":{"classes/Collection.html":{}}}],["this.keys[e.key",{"_index":2697,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.keys[keyconfig.key",{"_index":2712,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.label",{"_index":1979,"title":{},"body":{"classes/Field.html":{}}}],["this.lazy",{"_index":2605,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["this.legacyassetconfig",{"_index":2034,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.levels",{"_index":1661,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.lightmodel",{"_index":1733,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.list",{"_index":431,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.change$.subscribe",{"_index":2839,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["this.list.change$.subscribe((newlist",{"_index":3058,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.clearfilter",{"_index":3018,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config",{"_index":2845,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["this.list.config.alwaysshowheader",{"_index":2853,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.defaultfilter",{"_index":2995,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.disableheader",{"_index":2850,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.fields",{"_index":2998,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.fields[field.property",{"_index":3002,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.selectmode",{"_index":2848,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.config.title",{"_index":2852,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.fields",{"_index":3022,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.fields.filter((f",{"_index":3024,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.fields.length",{"_index":2851,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filter(property",{"_index":2861,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filterablefields().reduce((fields",{"_index":3001,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.isempty",{"_index":2854,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.isfiltered",{"_index":2841,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.isfiltered(this.filteredfield.property",{"_index":3016,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.items",{"_index":4124,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.list.items[index",{"_index":2855,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page",{"_index":3057,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.page.indexof(this.focusitem",{"_index":2858,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page.length",{"_index":2860,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page[index",{"_index":2859,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.setfilter",{"_index":2990,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.togglevisibility(field",{"_index":3020,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.listconfig.applyconfig(this.list",{"_index":2838,"title":{},"body":{"components/ListComponent.html":{}}}],["this.listconfig.storeconfig(this.list",{"_index":3021,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.load",{"_index":527,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"classes/Pagination.html":{}}}],["this.loadactions",{"_index":4156,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.loadactions(actionsbefore",{"_index":411,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(concatted",{"_index":4130,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.loadactions(item.getbody().children",{"_index":403,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.actions",{"_index":412,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.actionstack[this.currentid",{"_index":420,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactionsbefore",{"_index":407,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadcomponent",{"_index":3873,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.loadcomponent(this.component",{"_index":2620,"title":{},"body":{"components/InputComponent.html":{}}}],["this.loaded.emit(asset",{"_index":537,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.loaded.emit(entry",{"_index":1664,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.loader",{"_index":1120,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["this.loader.wait(login",{"_index":3289,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.loader.wait(registration",{"_index":4406,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.loader.wait(reset",{"_index":4038,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.loader.wait(this.promise",{"_index":1632,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.loaderservice.use(this.globalloader",{"_index":3110,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.wait(loading",{"_index":2383,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(new",{"_index":3112,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.wait(this.loadentry(item",{"_index":1119,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.loaderservice.wait(this.promises[key",{"_index":2372,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(this.uploadpromise",{"_index":4873,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.loadresourcelistactions",{"_index":4112,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.localloader",{"_index":3115,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.localloader.wait(new",{"_index":3116,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.lockform",{"_index":4034,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.login(this.form.value).then((res",{"_index":3368,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.map.setvalue(value",{"_index":3233,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.map.value",{"_index":3236,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.maploader.load().then",{"_index":2317,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.matches(change",{"_index":4254,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.meta",{"_index":2700,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.mode",{"_index":177,"title":{},"body":{"components/AceComponent.html":{},"components/ModalComponent.html":{}}}],["this.mode.replace(this.type",{"_index":3575,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.mode.split",{"_index":3573,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.model",{"_index":1086,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.modelconfig",{"_index":1096,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.modelconfig.getlightmodel(this.model).then((model",{"_index":1732,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.modelconfig.set('muffin",{"_index":5398,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.monthformat",{"_index":1345,"title":{},"body":{"interfaces/Day.html":{}}}],["this.mustreload(item",{"_index":1103,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.mute",{"_index":2707,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.muted",{"_index":2696,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.name",{"_index":2417,"title":{},"body":{"components/IconComponent.html":{}}}],["this.nestedcrudconfig",{"_index":4779,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.ngzone.run",{"_index":2296,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.noapi",{"_index":4340,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noapi(api",{"_index":4364,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noclientid",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notifications",{"_index":1110,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["this.notifications.add(notification",{"_index":3806,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.emit",{"_index":673,"title":{},"body":{"guards/AuthGuard.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{}}}],["this.notifications.remove(notification",{"_index":3810,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.removeall(notification.hide",{"_index":3797,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.defaulttime",{"_index":3794,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.emit",{"_index":1108,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["this.notificationservice.emitter$.subscribe((notification",{"_index":3795,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.emit",{"_index":2724,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.observeelement(el",{"_index":2309,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.oldassetgroupids.includes(assetgroupid",{"_index":2035,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.openurl(this.router.serializeurl(this.router.createurltree(path",{"_index":2733,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.options",{"_index":1627,"title":{},"body":{"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"components/UploadComponent.html":{}}}],["this.options.page",{"_index":1622,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.options.placeholder",{"_index":3410,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.pages",{"_index":3934,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pages.length",{"_index":3935,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pagination",{"_index":2834,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["this.pagination.getpage",{"_index":3976,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.parent",{"_index":3502,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getlevel(++level",{"_index":3507,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getpath(this.route",{"_index":3518,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.placeholder",{"_index":1978,"title":{},"body":{"classes/Field.html":{},"components/MediumEditorComponent.html":{}}}],["this.pop",{"_index":4197,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.create",{"_index":4198,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.edit(item.getbody",{"_index":4192,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.hide",{"_index":4869,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.pop.show",{"_index":4860,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.popservice.stack.add(this",{"_index":4077,"title":{},"body":{"components/PopComponent.html":{}}}],["this.popservice.stack.remove(this",{"_index":4080,"title":{},"body":{"components/PopComponent.html":{}}}],["this.promise",{"_index":534,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.promises[key",{"_index":2366,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.propagatechange",{"_index":194,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(++this.value",{"_index":5519,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(change",{"_index":2628,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this.editor.getvalue",{"_index":187,"title":{},"body":{"components/AceComponent.html":{}}}],["this.propagatechange(this.value",{"_index":3414,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["this.propagatechange(value",{"_index":3235,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.property",{"_index":1980,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{}}}],["this.property}_${date.now",{"_index":1977,"title":{},"body":{"classes/Field.html":{}}}],["this.ready",{"_index":175,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.ready.emit(this",{"_index":2624,"title":{},"body":{"components/InputComponent.html":{}}}],["this.ready.then",{"_index":4338,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.ready.then((editor",{"_index":184,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.redirect.next",{"_index":683,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.registry",{"_index":4566,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.relation",{"_index":4190,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.reload",{"_index":4162,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.remove(item",{"_index":980,"title":{},"body":{"classes/Collection.html":{}}}],["this.remove.subscribe((item",{"_index":405,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.removeall(undefined",{"_index":981,"title":{},"body":{"classes/Collection.html":{}}}],["this.resetfilter",{"_index":3019,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.resolve",{"_index":2420,"title":{},"body":{"components/IconComponent.html":{}}}],["this.resourceconfig.get('dmasset",{"_index":2017,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get('legacyasset",{"_index":2019,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get(relation",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.resourceconfig.get(relation).permissions",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceconfig.get(this.relation",{"_index":4205,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["this.resourceconfig.get(this.state.relation",{"_index":4154,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.resourceservice.change(filter",{"_index":1797,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.resourceservice.change({relation:'model.muffin",{"_index":1793,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.resourceservice.changes.next",{"_index":1816,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"interfaces/Upload.html":{}}}],["this.retrieve(key",{"_index":2913,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.root",{"_index":416,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.roots[this._api.datamanagerid",{"_index":4337,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.route",{"_index":3493,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["this.route.children",{"_index":3495,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":4619,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate",{"_index":4637,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate(['profile",{"_index":5394,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["this.router.navigate(path",{"_index":2734,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.router.url",{"_index":3504,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.indexof(path",{"_index":3506,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":2344,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.routes",{"_index":3494,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.schemarequests[model",{"_index":4366,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].api",{"_index":4367,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].request",{"_index":4369,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.accounts",{"_index":839,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.me",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.signup(email",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api",{"_index":531,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["this.sdk.api).then((res",{"_index":837,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.asset(unresolved[0]).then((asset",{"_index":2098,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.asset(value).then((asset",{"_index":2520,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.assetgrouplist",{"_index":2105,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.assetlist",{"_index":2099,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createasset(data",{"_index":2069,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createassets(data",{"_index":2070,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.dmasset(this.assetgroupid",{"_index":2526,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.entry(this.model",{"_index":1104,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.sdk.api.getfieldconfig(model).then((fieldconfig",{"_index":3681,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.api.logout",{"_index":842,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.me",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.modellist()).then((models",{"_index":3722,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.changesenvironment.subscribe(env",{"_index":4246,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.sdk.environment",{"_index":846,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.environment.clientid",{"_index":847,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.init",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then",{"_index":3721,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.sdk.ready.then((user",{"_index":672,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.sdk.ready.then(account",{"_index":4321,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.session",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.search.clear",{"_index":3232,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.search.searchinput.nativeelement.value",{"_index":3237,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.searchbar.clear",{"_index":404,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.searchbar.focusevent.emit(true",{"_index":1737,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.searchinput",{"_index":3253,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.searchinput.nativeelement.value",{"_index":3254,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.select(match",{"_index":4627,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.select(tab",{"_index":4631,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(event.url",{"_index":4620,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(this.router.url",{"_index":4632,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectday(moment",{"_index":1464,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selected",{"_index":1435,"title":{},"body":{"interfaces/Day.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["this.selected.deactivate",{"_index":4634,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.emit(selection",{"_index":2847,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selected.startof('day').diff(_moment",{"_index":1450,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selection",{"_index":414,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.selection.add(item",{"_index":399,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.getvalue",{"_index":439,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.isempty",{"_index":415,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.items[this.selection.items.length",{"_index":417,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.remove(item",{"_index":406,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.removeall",{"_index":419,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.select(this.list.items[index",{"_index":2856,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.toggle(item",{"_index":1736,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.selection.update$.subscribe((newlist",{"_index":3059,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.selection.update$.subscribe((selection",{"_index":2846,"title":{},"body":{"components/ListComponent.html":{}}}],["this.session",{"_index":4349,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.session.setclientid(environment.clientid",{"_index":4352,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.setdate",{"_index":1376,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(_moment",{"_index":1443,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(day.date.clone().subtract(1",{"_index":1375,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(moment",{"_index":1462,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date",{"_index":1396,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date.clone().add(value",{"_index":1461,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.selected",{"_index":1394,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setmode(this.mode",{"_index":178,"title":{},"body":{"components/AceComponent.html":{}}}],["this.sets[key",{"_index":4569,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.sets[object.keys(this.sets)[0",{"_index":4568,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.settheme(this.theme",{"_index":180,"title":{},"body":{"components/AceComponent.html":{}}}],["this.settings",{"_index":4703,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settings.setup",{"_index":4706,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settings.setup(editor",{"_index":4707,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settotal(total",{"_index":3932,"title":{},"body":{"classes/Pagination.html":{}}}],["this.setup.emit(editor",{"_index":4708,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setvalue(position",{"_index":3177,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.shouldbepartofform(field",{"_index":2234,"title":{},"body":{"injectables/FormService.html":{}}}],["this.show",{"_index":3133,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.show(e",{"_index":4074,"title":{},"body":{"components/PopComponent.html":{}}}],["this.showurlinput",{"_index":4911,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.signup(this.form.value).then((res",{"_index":4437,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.solo",{"_index":2849,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.sorttype[types[0",{"_index":4480,"title":{},"body":{"classes/Sorter.html":{}}}],["this.spanchanged.emit(this.timespan",{"_index":1356,"title":{},"body":{"interfaces/Day.html":{}}}],["this.stack.add(promise",{"_index":3132,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stack.items.length",{"_index":4102,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.items[this.stack.items.length",{"_index":4104,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.remove(latestpop",{"_index":4106,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.removeall",{"_index":3137,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.state",{"_index":4132,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.storagekeyresolver",{"_index":2920,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.store(key",{"_index":2926,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.submitted",{"_index":3366,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit",{"_index":4035,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.success.emit(_upload",{"_index":4867,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.success.emit(res",{"_index":3370,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit(user",{"_index":3285,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.symbol.resolve('datetime.local",{"_index":3698,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('entries.load.error",{"_index":1631,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.symbol.resolve('entry.load.error",{"_index":1665,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.symbol.resolve('error",{"_index":1848,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.symbol.resolve('error.input",{"_index":2658,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.input.invalid",{"_index":2659,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.load",{"_index":1114,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.symbol.resolve('error.upload",{"_index":4872,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('field.creator.ecuser",{"_index":4797,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('field.label.created",{"_index":3655,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.creator",{"_index":3663,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.id",{"_index":3651,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.modified",{"_index":3661,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('image",{"_index":2500,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.symbol.resolve('login.button.label",{"_index":3313,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.label",{"_index":3315,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.placeholder",{"_index":3318,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.error",{"_index":3286,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('login.password.label",{"_index":3322,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.password.placeholder",{"_index":3324,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.success",{"_index":3284,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('moment.format.date",{"_index":1290,"title":{},"body":{"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('moment.format.month",{"_index":1346,"title":{},"body":{"interfaces/Day.html":{}}}],["this.symbol.resolve('moment.format.time",{"_index":4795,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('resource",{"_index":2256,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('resource.generic",{"_index":2206,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('signup.button.label",{"_index":4410,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.error",{"_index":4405,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('signup.invite.placeholder",{"_index":4412,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.success",{"_index":4404,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('success.upload",{"_index":4868,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve(name",{"_index":4528,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["this.symbols.set(en",{"_index":4507,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["this.tabs",{"_index":4621,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.find((tab",{"_index":4624,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.foreach((tab",{"_index":4628,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.theme",{"_index":179,"title":{},"body":{"components/AceComponent.html":{}}}],["this.thumb",{"_index":2471,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.time",{"_index":3793,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.timeout",{"_index":3513,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.timespan",{"_index":1369,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timespan[1",{"_index":1421,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timestamp",{"_index":3135,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.total",{"_index":3938,"title":{},"body":{"classes/Pagination.html":{}}}],["this.trees",{"_index":2813,"title":{},"body":{"components/ListComponent.html":{}}}],["this.type",{"_index":3572,"title":{},"body":{"components/ModalComponent.html":{},"classes/Notification.html":{}}}],["this.typeconfig.displayaccount",{"_index":3664,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.displaydate",{"_index":3656,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.get(fieldconfig[field].type).inputviews",{"_index":3674,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.get(type",{"_index":3695,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.groupdate",{"_index":3657,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.isodate",{"_index":3658,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.set('location",{"_index":5542,"title":{},"body":{"additional-documentation/readme/location-readme.html":{}}}],["this.types.foreach((type",{"_index":3584,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.includes(this.type",{"_index":3574,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.join",{"_index":3578,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types[type",{"_index":4787,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.unmute",{"_index":2708,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.update",{"_index":1846,"title":{},"body":{"components/ErrorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.update(model",{"_index":1800,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.update(relation",{"_index":4259,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.update.asobservable",{"_index":914,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this",{"_index":975,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this.editor",{"_index":4718,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.updateaddress",{"_index":3234,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.upload(files",{"_index":4861,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploader.trigger(e",{"_index":4916,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploader.uploadfiles(urls",{"_index":4913,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploadfiles(e.target.files",{"_index":4853,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise",{"_index":4862,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise.then",{"_index":4874,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploads.emit(upload",{"_index":2066,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.url",{"_index":2475,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.urlstoupload",{"_index":4915,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.use(this.ecimage",{"_index":2464,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.use(this.sets[key",{"_index":4572,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.usedatamanager(environment.datamanagerid",{"_index":4355,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.usedesktopnotifications",{"_index":3850,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.uselist(list",{"_index":1629,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.user",{"_index":4357,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.value",{"_index":181,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.vanishdelay",{"_index":3516,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.view",{"_index":1985,"title":{},"body":{"classes/Field.html":{}}}],["this.visible",{"_index":3129,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.writevalue(this.value",{"_index":2635,"title":{},"body":{"components/InputComponent.html":{}}}],["this[occasion",{"_index":1984,"title":{},"body":{"classes/Field.html":{}}}],["those",{"_index":1971,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["three",{"_index":3610,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["through",{"_index":2350,"title":{},"body":{"injectables/HistoryService.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["throw",{"_index":532,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["throwerror",{"_index":3347,"title":{},"body":{"components/LoginFormComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["throwerror(err",{"_index":3363,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["throwing",{"_index":5861,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["thrown",{"_index":1845,"title":{},"body":{"components/ErrorComponent.html":{}}}],["throws",{"_index":3125,"title":{},"body":{"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{}}}],["thumb",{"_index":2441,"title":{},"body":{"directives/ImageDirective.html":{}}}],["tick",{"_index":4651,"title":{},"body":{"components/TinymceComponent.html":{}}}],["time",{"_index":882,"title":{},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["timeout",{"_index":3434,"title":{},"body":{"components/MenuComponent.html":{}}}],["times",{"_index":5463,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["timespan",{"_index":1309,"title":{},"body":{"interfaces/Day.html":{}}}],["timestamp",{"_index":3083,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tiny",{"_index":4656,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce",{"_index":4641,"title":{"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}},"body":{"components/TinymceComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tinymce'},{'name",{"_index":318,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tinymce.component.html",{"_index":4644,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.component.scss",{"_index":4643,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autolink",{"_index":4681,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autoresize",{"_index":4682,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/code",{"_index":4683,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/colorpicker",{"_index":4684,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/contextmenu",{"_index":4685,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/fullscreen",{"_index":4686,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/link",{"_index":4687,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/lists",{"_index":4688,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/paste",{"_index":4689,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/table",{"_index":4690,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/template",{"_index":4691,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/textcolor",{"_index":4692,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/visualblocks",{"_index":4693,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/themes/modern",{"_index":4694,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce",{"_index":4680,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce.component",{"_index":4725,"title":{},"body":{"modules/TinymceModule.html":{}}}],["tinymcecomponent",{"_index":317,"title":{"components/TinymceComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tinymcemodule",{"_index":4720,"title":{"modules/TinymceModule.html":{}},"body":{"modules/TinymceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["tinymcemoduleconfig",{"_index":4726,"title":{},"body":{"modules/TinymceModule.html":{},"coverage.html":{}}}],["tip",{"_index":5282,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["titel",{"_index":3650,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{}}}],["titel&#39",{"_index":3642,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["title",{"_index":375,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["titles",{"_index":5792,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["toast",{"_index":1694,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["today",{"_index":1305,"title":{},"body":{"interfaces/Day.html":{}}}],["todo",{"_index":631,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Config.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["todos",{"_index":5764,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["together",{"_index":1951,"title":{},"body":{"classes/Field.html":{}}}],["toggle",{"_index":900,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/ToggleComponent.html":{}}}],["toggle'},{'name",{"_index":320,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["toggle(e",{"_index":1716,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["toggle(item",{"_index":950,"title":{},"body":{"classes/Collection.html":{}}}],["toggle(resource",{"_index":2351,"title":{},"body":{"injectables/HistoryService.html":{}}}],["toggle.component.html",{"_index":4730,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle/toggle.component",{"_index":2178,"title":{},"body":{"modules/FormModule.html":{}}}],["togglecomponent",{"_index":319,"title":{"components/ToggleComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":4043,"title":{},"body":{"components/PopComponent.html":{}}}],["toggledfilterpop",{"_index":2949,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["toggledfilterpop(active",{"_index":2971,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["toggles",{"_index":952,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{},"components/ResourceListPopComponent.html":{},"components/ToggleComponent.html":{}}}],["toggleurlinput",{"_index":4885,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["togglevisibility",{"_index":2950,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["togglevisibility(field",{"_index":2973,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["token",{"_index":5357,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["top",{"_index":3612,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["total",{"_index":3878,"title":{},"body":{"classes/Pagination.html":{}}}],["total>0",{"_index":5870,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["touch",{"_index":4734,"title":{},"body":{"components/ToggleComponent.html":{}}}],["track",{"_index":2331,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"classes/Pagination.html":{}}}],["tracked",{"_index":2650,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["tracking",{"_index":3889,"title":{},"body":{"classes/Pagination.html":{}}}],["transform",{"_index":1279,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["transform(array",{"_index":3376,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["transform(fields",{"_index":4938,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["transform(items",{"_index":2325,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["transform(name",{"_index":4524,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["transform(value",{"_index":1280,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["transformation",{"_index":1941,"title":{},"body":{"classes/Field.html":{}}}],["transforming",{"_index":2288,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["transforms",{"_index":1946,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["translate",{"_index":3957,"title":{},"body":{"components/PaginationComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["translates",{"_index":4522,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["translation",{"_index":3969,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["tries",{"_index":3258,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["trigger",{"_index":2798,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{}}}],["trigger(e",{"_index":4832,"title":{},"body":{"components/UploadComponent.html":{}}}],["triggered",{"_index":3079,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["triggering",{"_index":4834,"title":{},"body":{"components/UploadComponent.html":{}}}],["triggers",{"_index":2786,"title":{},"body":{"components/ListComponent.html":{},"components/UploadComponent.html":{}}}],["triggerupload",{"_index":4886,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["triggerupload(e",{"_index":4900,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["true",{"_index":32,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ts",{"_index":4345,"title":{},"body":{"injectables/SdkService.html":{}}}],["tsconfig.json",{"_index":6002,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["tslib",{"_index":5170,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":2142,"title":{},"body":{"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["turn",{"_index":568,"title":{},"body":{"components/AssetListComponent.html":{}}}],["turned",{"_index":2878,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["turns",{"_index":1502,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{}}}],["tutorial",{"_index":5328,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["tutorials",{"_index":5379,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["twice",{"_index":5719,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["two",{"_index":3613,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["type",{"_index":68,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["type's",{"_index":4740,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["type.includes('asset",{"_index":3689,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["type.replace('a",{"_index":3690,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typealiases",{"_index":5256,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeconfig",{"_index":2031,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/readme/location-readme.html":{}}}],["typeconfig.inputview",{"_index":3700,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfig.placeholder",{"_index":3699,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfigservice",{"_index":1208,"title":{"injectables/TypeConfigService.html":{}},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["typeconfigservice#get",{"_index":3627,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typed",{"_index":1292,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typed.isvalid",{"_index":1294,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typeof",{"_index":426,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["types",{"_index":445,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"components/ModalComponent.html":{},"interfaces/SdkField.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["types.length",{"_index":4479,"title":{},"body":{"classes/Sorter.html":{}}}],["types.ts",{"_index":5059,"title":{},"body":{"coverage.html":{}}}],["types[0",{"_index":4481,"title":{},"body":{"classes/Sorter.html":{}}}],["typescript",{"_index":964,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["typical",{"_index":3774,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["typing",{"_index":5752,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["typo",{"_index":5671,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ui",{"_index":1040,"title":{"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ui/src/notifications/notification",{"_index":6008,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["ui/src/notifications/with",{"_index":6009,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["uimodule",{"_index":357,"title":{"modules/UiModule.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["uimoduleconfig",{"_index":4806,"title":{},"body":{"modules/UiModule.html":{},"coverage.html":{}}}],["ul",{"_index":3972,"title":{},"body":{"components/PaginationComponent.html":{}}}],["undefined",{"_index":1761,"title":{},"body":{"injectables/EntryService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["under",{"_index":2354,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/Symbol.html":{},"additional-documentation/adding-new-packages.html":{}}}],["underline",{"_index":3525,"title":{},"body":{"components/MenuComponent.html":{}}}],["ungültiges",{"_index":4773,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["unique",{"_index":916,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["unit",{"_index":5241,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["unmute",{"_index":2710,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["unresolved",{"_index":2084,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["unresolved.length",{"_index":2088,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["until",{"_index":3092,"title":{},"body":{"components/LoaderComponent.html":{}}}],["up",{"_index":1152,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/publishing.html":{}}}],["update",{"_index":548,"title":{"interfaces/Update.html":{}},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["update(model",{"_index":1778,"title":{},"body":{"injectables/EntryService.html":{}}}],["update(relation",{"_index":4236,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["updateaddress",{"_index":3209,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["updated",{"_index":1777,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["updateon",{"_index":2240,"title":{},"body":{"injectables/FormService.html":{}}}],["updates",{"_index":1456,"title":{},"body":{"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"injectables/HistoryService.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["updatesize",{"_index":3884,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["updatesize(size",{"_index":3920,"title":{},"body":{"classes/Pagination.html":{}}}],["updatesize(value",{"_index":3959,"title":{},"body":{"components/PaginationComponent.html":{}}}],["updating",{"_index":2242,"title":{},"body":{"injectables/FormService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["upgrade",{"_index":5259,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{}}],["upload",{"_index":324,"title":{"interfaces/Upload.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["upload'},{'name",{"_index":322,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["upload(files",{"_index":4835,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.assetgroup",{"_index":4875,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.browse",{"_index":4920,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.component.html",{"_index":4809,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.deduplicate",{"_index":4879,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.ignoreduplicates",{"_index":4878,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.includeassetidinpath",{"_index":4877,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.link",{"_index":4917,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.or",{"_index":4918,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.preservefilenames",{"_index":4876,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.url",{"_index":4919,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.url.start",{"_index":4921,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload/upload.component",{"_index":2129,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{}}}],["uploadassets(files",{"_index":2052,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["uploadcomponent",{"_index":321,"title":{"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uploaded",{"_index":2010,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["uploader",{"_index":4883,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadfiles",{"_index":4814,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploadfiles(files",{"_index":2068,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadfromurls",{"_index":4887,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadfromurls(urls",{"_index":4902,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploading",{"_index":2009,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadpromise",{"_index":4812,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploads",{"_index":1168,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadselectcomponent",{"_index":323,"title":{"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["upon",{"_index":1747,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["url",{"_index":1165,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/KeycommandsService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["url(url",{"_index":4622,"title":{},"body":{"components/TabsComponent.html":{}}}],["urls",{"_index":4904,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["urlstoupload",{"_index":4884,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["usage",{"_index":1952,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["use",{"_index":486,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["use(asset",{"_index":2457,"title":{},"body":{"directives/ImageDirective.html":{}}}],["use(loader",{"_index":3146,"title":{},"body":{"injectables/LoaderService.html":{}}}],["use(symbols",{"_index":4545,"title":{},"body":{"injectables/SymbolService.html":{}}}],["used",{"_index":72,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["usedatamanager",{"_index":4294,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedatamanager(shortid",{"_index":4310,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedesktopnotifications",{"_index":3819,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["useexisting",{"_index":29,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["useful",{"_index":3786,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["uselist",{"_index":1587,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["uselist(entrylist",{"_index":1608,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["user",{"_index":646,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["uses",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["usese",{"_index":4750,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["useset",{"_index":4531,"title":{},"body":{"injectables/SymbolService.html":{}}}],["useset(key",{"_index":4547,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usevalue",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/LocationModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["using",{"_index":500,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/LocationSearchComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["utility/focus/focus.interface",{"_index":1484,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["utility/keycommands/keycommands.service",{"_index":1486,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["utility/utility.module",{"_index":2184,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["utility/validators/field",{"_index":4434,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["utilitymodule",{"_index":2169,"title":{"modules/UtilityModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["utilitymoduleconfig",{"_index":4931,"title":{},"body":{"modules/UtilityModule.html":{},"coverage.html":{}}}],["utilizes",{"_index":3625,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["ux",{"_index":4002,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["v",{"_index":4151,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["v.name",{"_index":3676,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["valid",{"_index":4492,"title":{},"body":{"interfaces/Symbol.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validate",{"_index":1871,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validatefactory",{"_index":2199,"title":{},"body":{"injectables/FormService.html":{}}}],["validatefactory(field",{"_index":2220,"title":{},"body":{"injectables/FormService.html":{}}}],["validating",{"_index":5411,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validation",{"_index":1918,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["validationerrors",{"_index":2223,"title":{},"body":{"injectables/FormService.html":{}}}],["validatorfn",{"_index":2213,"title":{},"body":{"injectables/FormService.html":{}}}],["validators",{"_index":2212,"title":{},"body":{"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.push(this.validatefactory(field",{"_index":2251,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.push(validators.required",{"_index":2250,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.required",{"_index":3356,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.ts",{"_index":5148,"title":{},"body":{"coverage.html":{}}}],["validators/field",{"_index":3352,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["value",{"_index":45,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["value).then((asset",{"_index":2527,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.alt",{"_index":2512,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.hasownproperty(key",{"_index":1822,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["value.height",{"_index":2505,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.img",{"_index":2515,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.latitude",{"_index":4782,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.length",{"_index":1956,"title":{},"body":{"classes/Field.html":{}}}],["value.longitude",{"_index":4781,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.name",{"_index":4784,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.split",{"_index":4767,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.title",{"_index":4783,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.touppercase",{"_index":1955,"title":{},"body":{"classes/Field.html":{}}}],["value[key",{"_index":1823,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["values",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["vanishdelay",{"_index":3445,"title":{},"body":{"components/MenuComponent.html":{}}}],["var",{"_index":202,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["variable",{"_index":4606,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["variables",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["variables[key",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["various",{"_index":3078,"title":{},"body":{"components/LoaderComponent.html":{}}}],["verify",{"_index":2299,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["versendet",{"_index":4026,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["version",{"_index":5226,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["versions",{"_index":5217,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["via",{"_index":651,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["viable",{"_index":1968,"title":{},"body":{"classes/Field.html":{}}}],["video",{"_index":2025,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["view",{"_index":1321,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"directives/SlotHostDirective.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["viewchild",{"_index":153,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["viewchild('container",{"_index":125,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["viewchild('fileinput",{"_index":4839,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild('filterpop",{"_index":2979,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchild('globalloader",{"_index":3106,"title":{},"body":{"components/LoaderComponent.html":{}}}],["viewchild('imageloader",{"_index":2493,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["viewchild('localloader",{"_index":3108,"title":{},"body":{"components/LoaderComponent.html":{}}}],["viewchild('pagecontainer",{"_index":3970,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchild('search",{"_index":3250,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["viewchild(calendarcomponent",{"_index":1260,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["viewchild(entrylistcomponent",{"_index":1067,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(entrypopcomponent",{"_index":1063,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(loadercomponent",{"_index":1069,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{}}}],["viewchild(locationmapcomponent",{"_index":3227,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(locationsearchcomponent",{"_index":3230,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(popcomponent",{"_index":4843,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild(resourcelistcomponent",{"_index":4181,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(resourcepopcomponent",{"_index":4184,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(searchbarcomponent",{"_index":1722,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["viewchild(slothostdirective",{"_index":1571,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["viewchild(uploadcomponent",{"_index":4908,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["viewchildren",{"_index":3974,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchildren('page",{"_index":3964,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewcontainer",{"_index":4443,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["viewcontainerref",{"_index":1552,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/SlotHostDirective.html":{}}}],["viewcontainerref.clear",{"_index":1578,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactory",{"_index":1579,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewed",{"_index":1427,"title":{},"body":{"interfaces/Day.html":{}}}],["viewencapsulation",{"_index":2825,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["viewencapsulation.none",{"_index":2757,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["views",{"_index":1555,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/ModelConfigService.html":{}}}],["views.find((v",{"_index":3675,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["visibility",{"_index":2155,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["visible",{"_index":1058,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/UploadSelectComponent.html":{}}}],["visiblecolumns",{"_index":3023,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["visiblecolumns[visiblecolumns.length",{"_index":3026,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["visiblefields",{"_index":4937,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["visiblefieldspipe",{"_index":2166,"title":{"pipes/VisibleFieldsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["vm",{"_index":5299,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["void",{"_index":90,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["vscode",{"_index":5283,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["wait",{"_index":566,"title":{},"body":{"components/AssetListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["wait(promise",{"_index":3090,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["waited",{"_index":3093,"title":{},"body":{"components/LoaderComponent.html":{}}}],["want",{"_index":2588,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["warning",{"_index":2400,"title":{},"body":{"components/IconComponent.html":{},"components/ModalComponent.html":{}}}],["way",{"_index":76,"title":{},"body":{"components/AceComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{}}}],["webpack",{"_index":5302,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack.config.js",{"_index":5318,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack.config.js\"},notice",{"_index":5316,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack:browser",{"_index":5314,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["week",{"_index":1267,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weekdays",{"_index":1241,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weiteren",{"_index":4031,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["well",{"_index":1546,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{}}}],["werden",{"_index":679,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wether",{"_index":1892,"title":{},"body":{"classes/Field.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/data-readme.html":{}}}],["whenever",{"_index":2574,"title":{},"body":{"components/InputComponent.html":{}}}],["whitelistednonpeerdependencies",{"_index":6006,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["whole",{"_index":1970,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["whose",{"_index":4042,"title":{},"body":{"components/PopComponent.html":{}}}],["width",{"_index":1189,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{}}}],["wildcard",{"_index":1933,"title":{},"body":{"classes/Field.html":{}}}],["window",{"_index":3846,"title":{},"body":{"injectables/NotificationsService.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["window.addeventlistener('keydown",{"_index":4098,"title":{},"body":{"injectables/PopService.html":{}}}],["window.addeventlistener('keyup",{"_index":2695,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["window.addeventlistener('mousedown",{"_index":2699,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["window.location.origin).pathname.split",{"_index":4623,"title":{},"body":{"components/TabsComponent.html":{}}}],["window.notification(notification.title",{"_index":3862,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.permission",{"_index":3854,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.requestpermission().then((permission",{"_index":3855,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.open(url",{"_index":2730,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["withloader",{"_index":1017,"title":{"interfaces/WithLoader.html":{}},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{}}}],["withnotifications",{"_index":1018,"title":{"interfaces/WithNotifications.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/adding-new-packages.html":{}}}],["without",{"_index":1175,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["won't",{"_index":5368,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["wont",{"_index":1160,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/LoginFormComponent.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["work",{"_index":2809,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["workaround",{"_index":161,"title":{},"body":{"components/AceComponent.html":{},"injectables/NotificationsService.html":{}}}],["works",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{}}}],["workspaces",{"_index":5195,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["wrap",{"_index":5471,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wrapper",{"_index":1695,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wraps",{"_index":13,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["writes",{"_index":115,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["writevalue",{"_index":62,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["writevalue(value",{"_index":113,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wrong",{"_index":5768,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["wysiwyg",{"_index":5187,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["x",{"_index":834,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.ui",{"_index":3529,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["x.ui/src/_config",{"_index":5345,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui",{"_index":5346,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui.scss",{"_index":5540,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["x1f682;&#x1f683;&#x1f683;&#x1f683",{"_index":466,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["xlcss/sass/xlcss.scss",{"_index":5344,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["xxxxxxxx",{"_index":5355,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["yarn",{"_index":5194,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["yes",{"_index":502,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"pipes/DatetimePipe.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{}}}],["yields",{"_index":1710,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["you'll",{"_index":5464,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["yourself",{"_index":4285,"title":{},"body":{"injectables/SdkService.html":{}}}],["yyyy",{"_index":879,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["z",{"_index":3705,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["z0",{"_index":2044,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["za",{"_index":2043,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"interfaces/Upload.html":{}}}],["zone",{"_index":1503,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["zone.js",{"_index":5172,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":358,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["zurücksetzen",{"_index":4037,"title":{},"body":{"components/PasswordResetComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AceComponent.html":{"url":"components/AceComponent.html","title":"component - AceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ace/src/lib/ace.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps ace editor as angular component. Implements ControlValueAccessor!\nhttps://components.entrecode.de/misc/ace?e=1\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-ace\n            \n\n            \n                styleUrls\n                ace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                input\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setMode\n                            \n                            \n                                setTheme\n                            \n                            \n                                writeValue\n                            \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:47\n                            \n                        \n                \n                    \n                        mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:51\n                            \n                        \n                \n                    \n                        theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            creates new ace instance if not present and sets mode and theme if given \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Re-inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMode\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMode(mode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Sets the editor mode to the specified language (after ace/mode/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(theme: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Sets the editor theme to the specified theme (after ace/theme/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element for ace editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:29\n                            \n                        \n\n                \n                    \n                        The ace editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:39\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:37\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:33\n                            \n                        \n\n                \n                    \n                        The current value of the editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:20\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:22\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, Input, OnChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\n\nimport 'ace-builds/src-noconflict/ace';\nimport 'ace-builds/webpack-resolver';\n\n/** Workaround that expects ace to be imported somewhere else... */\ndeclare const ace: any;\n\n/** Wraps ace editor as angular component. Implements ControlValueAccessor!\n *\n * https://components.entrecode.de/misc/ace?e=1\n */\n@Component({\n  selector: 'ec-ace',\n  templateUrl: 'ace.component.html',\n  styleUrls: ['ace.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AceComponent),\n      multi: true,\n    },\n  ],\n})\nexport class AceComponent extends DefaultInputComponent implements ControlValueAccessor, OnInit, OnChanges {\n  /** The ace editor instance */\n  editor: any;\n  /**\n   * The current value of the editor\n   */\n  value = '';\n  /**\n   * Promise that resolves when the editor has been initialized.\n   */\n  ready: Promise;\n  /** Form input component */\n  input: InputComponent;\n  /**\n   * container element for ace editor\n   */\n  @ViewChild('container') container: ElementRef;\n  /**\n   * mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n   */\n  @Input() mode: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-modelist.js\n  /**\n   * theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n   */\n  @Input() theme: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-themelist.js\n\n  /** creates new ace instance if not present and sets mode and theme if given */\n  init() {\n    if (!this.editor) {\n      this.editor = ace.edit(this.container.nativeElement);\n    }\n    this.ready = Promise.resolve(this.editor);\n    if (this.mode) {\n      this.setMode(this.mode);\n    }\n    if (this.theme) {\n      this.setTheme(this.theme);\n    }\n    if (this.value) {\n      this.editor.setValue(this.value, 1);\n    }\n    this.ready.then((editor) => {\n      editor.on('change', (e) => {\n        this.propagateChange(this.editor.getValue());\n      });\n    });\n  }\n  /** Sets the editor mode to the specified language (after ace/mode/) */\n  setMode(mode: string) {\n    this.mode = mode;\n    if (!this.editor) {\n      return;\n    }\n    this.editor.session.setMode('ace/mode/' + this.mode);\n  }\n\n  /** Sets the editor theme to the specified theme (after ace/theme/) */\n  setTheme(theme: string) {\n    this.theme = theme;\n    if (!this.editor) {\n      return;\n    }\n    this.editor.setTheme('ace/theme/' + this.theme);\n  }\n\n  /** Inits the editor */\n  ngOnInit() {\n    this.init();\n  }\n  /** Re-inits the editor */\n  ngOnChanges() {\n    this.init();\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (!this.ready) {\n      return;\n    }\n    this.ready.then((editor) => {\n      editor.setValue(this.value, 1);\n    });\n  }\n\n  propagateChange = (_: any) => {};\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ace.component.scss\n                \n                .ec-ace {\n    min-height: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AceModule.html":{"url":"modules/AceModule.html","title":"module - AceModule","body":"\n                   \n\n\n\n\n    Modules\n    AceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_imports\n\n\n\ncluster_AceModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n AceComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n AceComponent), multi: true,\n}->AceComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}->AceComponent\n\n\n\n\n\nUiModule\n\nUiModule\n\nAceModule -->\n\nUiModule->AceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ace/src/lib/ace.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AceComponent } from './ace.component';\nimport { UiModule } from '@ec.components/ui';\n\nexport const aceModuleConfig = {\n  imports: [UiModule],\n  exports: [AceComponent],\n  declarations: [AceComponent],\n  entryComponents: [AceComponent],\n  providers: [],\n};\n\n@NgModule(aceModuleConfig)\nexport class AceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/actionbar/actionbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        select\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport type ActionFunction = (item?: Item | any, actionbar?: ActionbarComponent) => any;\n\nexport interface Action {\n  title: string;\n  id: string;\n  path?: string;\n  data?: any;\n  select?: boolean;\n  action?: ActionFunction;\n}\n\nexport interface ActionbarConfig extends ListConfig {}\n\n@Component({\n  selector: 'ec-actionbar',\n  templateUrl: '../select/select.component.html',\n})\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n  @Input() root = 'ROOT'; // id of root stack item\n  @Input() config: ActionbarConfig = {\n    label: 'title',\n    identifier: 'id',\n    fields: {\n      title: {},\n    },\n  };\n  @Input() actions: Action[];\n  actionStack: { [id: string]: Action[] } = {};\n\n  constructor(public elementRef: ElementRef, public cdr: ChangeDetectorRef) {\n    super(elementRef, cdr);\n    this.add.subscribe((item) => {\n      if (item.getBody().select !== false) {\n        this.selection.add(item);\n      }\n      if (item.getBody().action) {\n        item.getBody().action(item, this);\n      }\n      if (item.getBody().children) {\n        this.loadActions(item.getBody().children);\n      }\n      this.searchbar.clear();\n    });\n    this.remove.subscribe((item) => {\n      this.selection.remove(item);\n      this.loadActionsBefore();\n    });\n  }\n\n  loadActionsBefore() {\n    const actionsBefore = this.actionStack[this.currentID()];\n    if (actionsBefore) {\n      this.loadActions(actionsBefore);\n    }\n  }\n\n  ngOnInit() {\n    this.loadActions(this.actions);\n  }\n\n  currentID() {\n    if (!this.selection || this.selection.isEmpty()) {\n      return this.root;\n    }\n    return this.selection.items[this.selection.items.length - 1].id();\n  }\n\n  reset() {\n    this.selection.removeAll();\n    this.loadActions(this.actionStack[this.currentID()]);\n  }\n\n  currentActions() {\n    return this.actionStack[this.currentID()];\n  }\n\n  async loadActions(actions, addToStack = true) {\n    let resolved;\n    if (typeof actions === 'function') {\n      resolved = await Promise.resolve(actions(this.actionStack, this));\n    } else {\n      resolved = [].concat(actions);\n    }\n    if (addToStack) {\n      this.actionStack[this.currentID()] = actions;\n    }\n    this.list = new List(resolved, this.config);\n    if (!this.selection) {\n      this.initSelection();\n    }\n    setTimeout(() => {\n      if (this.dropdownList) {\n        this.dropdownList.focusFirst();\n      }\n    });\n  }\n\n  getPath() {\n    return this.selection.getValue();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionbarConfig.html":{"url":"interfaces/ActionbarConfig.html","title":"interface - ActionbarConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionbarConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/actionbar/actionbar.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport type ActionFunction = (item?: Item | any, actionbar?: ActionbarComponent) => any;\n\nexport interface Action {\n  title: string;\n  id: string;\n  path?: string;\n  data?: any;\n  select?: boolean;\n  action?: ActionFunction;\n}\n\nexport interface ActionbarConfig extends ListConfig {}\n\n@Component({\n  selector: 'ec-actionbar',\n  templateUrl: '../select/select.component.html',\n})\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n  @Input() root = 'ROOT'; // id of root stack item\n  @Input() config: ActionbarConfig = {\n    label: 'title',\n    identifier: 'id',\n    fields: {\n      title: {},\n    },\n  };\n  @Input() actions: Action[];\n  actionStack: { [id: string]: Action[] } = {};\n\n  constructor(public elementRef: ElementRef, public cdr: ChangeDetectorRef) {\n    super(elementRef, cdr);\n    this.add.subscribe((item) => {\n      if (item.getBody().select !== false) {\n        this.selection.add(item);\n      }\n      if (item.getBody().action) {\n        item.getBody().action(item, this);\n      }\n      if (item.getBody().children) {\n        this.loadActions(item.getBody().children);\n      }\n      this.searchbar.clear();\n    });\n    this.remove.subscribe((item) => {\n      this.selection.remove(item);\n      this.loadActionsBefore();\n    });\n  }\n\n  loadActionsBefore() {\n    const actionsBefore = this.actionStack[this.currentID()];\n    if (actionsBefore) {\n      this.loadActions(actionsBefore);\n    }\n  }\n\n  ngOnInit() {\n    this.loadActions(this.actions);\n  }\n\n  currentID() {\n    if (!this.selection || this.selection.isEmpty()) {\n      return this.root;\n    }\n    return this.selection.items[this.selection.items.length - 1].id();\n  }\n\n  reset() {\n    this.selection.removeAll();\n    this.loadActions(this.actionStack[this.currentID()]);\n  }\n\n  currentActions() {\n    return this.actionStack[this.currentID()];\n  }\n\n  async loadActions(actions, addToStack = true) {\n    let resolved;\n    if (typeof actions === 'function') {\n      resolved = await Promise.resolve(actions(this.actionStack, this));\n    } else {\n      resolved = [].concat(actions);\n    }\n    if (addToStack) {\n      this.actionStack[this.currentID()] = actions;\n    }\n    this.list = new List(resolved, this.config);\n    if (!this.selection) {\n      this.initSelection();\n    }\n    setTimeout(() => {\n      if (this.dropdownList) {\n        this.dropdownList.focusFirst();\n      }\n    });\n  }\n\n  getPath() {\n    return this.selection.getValue();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminEntryInputComponent.html":{"url":"components/AdminEntryInputComponent.html","title":"component - AdminEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/admin-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that require having the DatamanagerResource as api.\nThis is currently relevant for account and role fields which come from the ec.api.\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./admin-entry-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                    KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataManagerResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:20\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:22\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SdkService } from '../sdk/sdk.service';\nimport { Component } from '@angular/core';\nimport { DefaultInputComponent, FormService, KeycommandsService } from '@ec.components/ui';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** This component holds the input templates for all field types that require having the DatamanagerResource as api.\n * This is currently relevant for account and role fields which come from the ec.api.\n */\n@Component({\n  templateUrl: './admin-entry-input.component.html',\n})\nexport class AdminEntryInputComponent extends DefaultInputComponent {\n  api: DataManagerResource;\n  constructor(public sdk: SdkService, public formService: FormService, public keycommands: KeycommandsService) {\n    super(formService, keycommands);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AssetDirective.html":{"url":"directives/AssetDirective.html","title":"directive - AssetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AssetDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/asset/asset.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset by id to the template.\nassets/asset\nhttps://components.entrecode.de/assets/asset?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecAsset]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asset\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                sdk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetId\n                            \n                            \n                                autoload\n                            \n                            \n                                ecAsset\n                            \n                            \n                                levels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:26\n                            \n                        \n                \n                    \n                        The api to use. Defaults to sdk.api \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        assetId\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:18\n                            \n                        \n                \n                    \n                        The asset id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:22\n                            \n                        \n                \n                    \n                        Should the asset be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ecAsset\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:20\n                            \n                        \n                \n                    \n                        The asset id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                \n                \n                    \n                        Type :     number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:24\n                            \n                        \n                \n                    \n                        The levels to use. \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:28\n                            \n                        \n                \n                    \n                        Fires as soon as the asset has been loaded. \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:47\n                            \n                        \n\n\n                \n                    \n                            Loads the asset. Can be called from template when using autoload=false \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:36\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the asset will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                        The current loaded asset \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:16\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ecAsset\nThis directive can be used to load a single asset directly from the template:\n\n  id: {{myAsset.asset?.assetID}}\n  title: {{myAsset.asset?.title}}\n  tags: {{myAsset.asset?.tags}}\n  created: {{myAsset.asset?.created}}\n  type: {{myAsset.asset?.type}}\n  files: {{myAsset.asset?.files?.length}}\n\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SdkService } from '../../sdk/sdk.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset by id to the template.\n * assets/asset\n * https://components.entrecode.de/assets/asset?e=1\n */\n@Directive({\n  selector: '[ecAsset]',\n  exportAs: 'ecAsset',\n})\nexport class AssetDirective implements OnChanges {\n  /** The loading promise */\n  promise: any;\n  /** The asset id that should be loaded*/\n  @Input() assetId: string;\n  /** The asset id that should be loaded*/\n  @Input() ecAsset: string;\n  /** Should the asset be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** The api to use. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Fires as soon as the asset has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The current loaded asset */\n  public asset: any;\n\n  /** Injects the sdk */\n  constructor(public sdk: SdkService) {}\n\n  /** as soon as model and id are known, the asset will be loaded. */\n  ngOnChanges() {\n    if (this.ecAsset) {\n      this.assetId = this.ecAsset;\n    }\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the asset. Can be called from template when using autoload=false */\n  load(id?: string) {\n    this.assetId = id || this.assetId;\n    if (!this.assetId) {\n      return Promise.reject('cannot load asset: no assetId is set');\n    }\n    const api = this.api || this.sdk.api;\n    if (!api) {\n      throw new Error('cannot load asset: no api was set!');\n    }\n    this.promise = api.asset(this.assetId).then((asset) => {\n      this.asset = asset;\n      this.loaded.emit(asset);\n      return asset;\n    });\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetListComponent.html":{"url":"components/AssetListComponent.html","title":"component - AssetListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/asset-list/asset-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ResourceListComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-asset-list\n            \n\n\n\n\n            \n                templateUrl\n                ./asset-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                list\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                            \n                                resourceConfig\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                createList\n                            \n                            \n                                filter\n                            \n                            \n                                initFilterQuery\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                listResource\n                            \n                            \n                                loader\n                            \n                            \n                                loadWhen\n                            \n                            \n                                relation\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     Core\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:39\n                            \n                        \n                \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listResource\n                    \n                \n                \n                    \n                        Type :     ListResource\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:31\n                            \n                        \n                \n                    \n                        If listResource input is set, the given ListResource will be used directly and loading will be skipped. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:43\n                            \n                        \n                \n                    \n                        The loader that should be shown while the list is loaded. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loadWhen\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:35\n                            \n                        \n                \n                    \n                        If set to false, the list will wait for the flag to turn true before loading. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:41\n                            \n                        \n                \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:33\n                            \n                        \n                \n                    \n                        If true, only one item is selectable next \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/asset-list/asset-list.component.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createList()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:66\n                            \n                        \n\n\n                \n                    \n                            The method to create the list\n\n\n                            \n                                Returns :     Promise | ResourceList\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:127\n                            \n                        \n\n\n                \n                    \n                            This method will filter the list by a given property value and optional operator. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterQuery(fieldFilter: (property: string,value: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldFilter\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:118\n                            \n                        \n\n\n                \n                    \n                            When changing the model or the config, the list will update\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:82\n                            \n                        \n\n\n                \n                    \n                            Creates/Updates the list and subscribes Observables.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceList\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:37\n                            \n                        \n\n                \n                    \n                        The instance of an EntryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\n\n@Component({\n  selector: 'ec-asset-list',\n  templateUrl: './asset-list.component.html',\n})\nexport class AssetListComponent extends ResourceListComponent implements OnInit {\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                \n                    \n                \n                \n                    {{group.value}}\n                \n            \n             -->\n\n            \n            \n                \n                    \n                \n                {{item.getBody()}}\n             -->\n\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                    {{group.value}}                                         -->                                                                                            {{item.getBody()}}             -->            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetgroupSelectComponent.html":{"url":"components/AssetgroupSelectComponent.html","title":"component - AssetgroupSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetgroupSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-assetgroup-select\n            \n\n\n\n\n            \n                templateUrl\n                ./assetgroup-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                assetGroups\n                            \n                            \n                                disableLegacy\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroups\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableLegacy\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'select assetgroup..'\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FileService } from '../file.service';\n\n// TODO: add demo + doc\n\n@Component({\n  selector: 'ec-assetgroup-select',\n  templateUrl: './assetgroup-select.component.html',\n})\nexport class AssetgroupSelectComponent implements OnInit {\n  @Input() placeholder = 'select assetgroup..';\n  @Input() assetGroupID: string;\n  @Input() assetGroups: string[];\n  @Input() disableLegacy: boolean;\n  @Input() readOnly: boolean;\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n\n  constructor(public fileService: FileService) {}\n\n  ngOnInit() {\n    this.fileService.assetGroupList().then((assetGroups) => (this.assetGroups = assetGroups));\n  }\n}\n\n    \n\n    \n        \n    {{placeholder}}\n    {{assetGroup}}\n    legacy Assets -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{placeholder}}    {{assetGroup}}    legacy Assets -->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetgroupSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                packages/data/src/lib/auth/auth-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    This guard can be used on routes that only can be activated when a user is present in the SdkService.\nIf no user is found, an error message is shown. You can then react via the redirect output. \n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth-guard.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Checks if the sdk contains a user, if not an error message is shown. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { NotificationsService } from '@ec.components/ui';\nimport { Subject } from 'rxjs';\n\n/** This guard can be used on routes that only can be activated when a user is present in the SdkService.\n * If no user is found, an error message is shown. You can then react via the redirect output. */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /** Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) */\n  redirect: Subject = new Subject();\n\n  constructor(private sdk: SdkService, private notifications: NotificationsService) {}\n  /** Checks if the sdk contains a user, if not an error message is shown. */\n  canActivate() {\n    return this.sdk.ready.then((user) => {\n      if (!!user) {\n        return true;\n      }\n      this.notifications.emit({\n        type: 'error',\n        title: 'Diese Seite kann nicht angezeigt werden.',\n        message: 'Sie sind nicht eingeloggt.',\n      });\n      this.redirect.next();\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\ncookieFactory()\n\ncookieFactory()\n\nAuthModule -->\n\ncookieFactory()->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/auth/auth.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for all auth related components and services. \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordResetComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                        \n                            cookieFactory()\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordResetComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { CookieModule } from 'ngx-cookie';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\nimport { LoginComponent } from './login/login.component';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\nimport { SignupComponent } from './signup/signup.component';\n\n/** loads CookieModule */\nexport function cookieFactory(): ModuleWithProviders {\n  // https://github.com/auth0/angular2-jwt/issues/305\n  return CookieModule.forRoot();\n}\n/** Module for all auth related components and services. */\n@NgModule({\n  declarations: [PasswordResetComponent, LoginComponent, SignupComponent],\n  imports: [FormsModule, cookieFactory(), CommonModule, ReactiveFormsModule, UiModule],\n  exports: [ReactiveFormsModule, PasswordResetComponent, LoginComponent, SignupComponent],\n  providers: [AuthGuard, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPermission\n                            \n                            \n                                getAccount\n                            \n                            \n                                getAllowedModelMethods\n                            \n                            \n                                getAllowedResourceMethods\n                            \n                            \n                                getApi\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                noClientID\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resolveVariables\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckPermission(permission: string, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            checks given public permission for given api, defaults to this.sdk.api. Also works as ec user \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permission\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedModelMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedModelMethods(model: string, methods?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:128\n                            \n                        \n\n\n                \n                    \n                            Returns an array of all allowed methods for the given relation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedResourceMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedResourceMethods(relation: string, variables: Object, methods?: string[], api?: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApi\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApi(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:174\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Generic login that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout(api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:160\n                            \n                        \n\n\n                \n                    \n                            Generic logout that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noClientID\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoClientID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:190\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:149\n                            \n                        \n\n\n                \n                    \n                            Generic password reset that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveVariables\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveVariables(string: string, variables: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            replaces all variables by values in a string \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Generic Signup, works for accounts API and PublicAPI \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class AuthService {\n  /** Calls init and sets ready to true when finished. */\n  constructor(private resourceConfig: ResourceConfig, private sdk: SdkService) {}\n\n  /** Generic login that works with both public and admin API. */\n  login({ email, password }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.session;\n        return !_api ? Promise.reject('api_not_found') : _api.login(email, password);\n      })\n      .then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  /** Generic Signup, works for accounts API and PublicAPI */\n  signup({ email, password, invite }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api\n      ? api.signup(email, password, invite)\n      : this.sdk.api\n          .signup(email, password, invite)\n          .catch(() => this.sdk.accounts.signup(email, password, invite))\n          .then((res) => {\n            return this.sdk.init();\n          });\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.sdk.api) {\n    return api\n      .me()\n      .then((account) => {\n        return account || this.sdk.accounts.me();\n      })\n      .catch((err) => {\n        return this.sdk.api.me();\n      });\n  }\n\n  /** checks given public permission for given api, defaults to this.sdk.api. Also works as ec user */\n  checkPermission(permission: string, api?) {\n    return this.sdk.ready.then((user) => {\n      if (!user) {\n        return false;\n      }\n      api = api || this.sdk.api;\n      return api.checkPermission(permission);\n    });\n  }\n  /** replaces all variables by values in a string */\n  resolveVariables(string: string, variables: Object) {\n    Object.keys(variables).forEach((key) => {\n      string = string.replace(``, variables[key]);\n    });\n    return string;\n  }\n\n  /** Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. */\n  getAllowedResourceMethods(\n    relation: string,\n    variables: Object = {},\n    methods?: string[],\n    api?: Core,\n  ): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    if (!this.resourceConfig.get(relation) || !this.resourceConfig.get(relation).permissions) {\n      /* console.warn(`relation ${relation} has no defined permissions, defaulting to all methods available`); */\n      return Promise.resolve(['get', 'post', 'put', 'delete']);\n    }\n    const permissions = this.resourceConfig.get(relation).permissions;\n    return Object.keys(permissions)\n      .map((method) => (results) => {\n        return !permissions[method]\n          ? Promise.resolve(results)\n          : permissions[method] === true\n          ? Promise.resolve(results.concat(method))\n          : this.checkPermission(`${this.resolveVariables(permissions[method], variables)}`, api)\n              .then((res) => {\n                if (res) {\n                  results.push(method);\n                }\n                return results;\n              })\n              .catch((err) => {\n                return results;\n              });\n      })\n      .reduce((a, b) => a.then((r) => b(r)), Promise.resolve([]))\n      .then((_methods) => {\n        _methods.filter((x) => !!x);\n        return _methods;\n      });\n  }\n\n  /** Returns an array of all allowed methods for the given relation */\n  getAllowedModelMethods(model: string, methods?: string[]): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    return ['get', 'post', 'put', 'delete']\n      .map((method) => (results) =>\n        this.checkPermission(`${model}:${method}`, this.sdk.api).then((res) => {\n          if (res) {\n            results.push(method);\n          }\n          return results;\n        }),\n      )\n      .reduce((a, b) => a.then((r) => b(r)), Promise.resolve([]))\n      .then((_methods) => {\n        _methods.filter((x) => !!x);\n        return _methods;\n      });\n  }\n\n  /** Generic password reset that works with both public and admin API. */\n  resetPassword(email, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email)).then((resolvedAPI) => {\n      const _api = resolvedAPI || this.sdk.accounts;\n      return !_api ? Promise.reject('api_not_found') : _api.resetPassword(email);\n    });\n  }\n\n  /** Generic logout that works with both public and admin API. */\n  logout(api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api\n      ? api.logout()\n      : this.sdk.session\n          .logout()\n          .catch(() => this.sdk.api.logout())\n          .then(() => {\n            return this.sdk.init();\n          });\n  }\n\n  getApi(email: string) {\n    if (!this.sdk.api && !this.sdk.accounts) {\n      return Promise.reject('no_api_found');\n    }\n    return this.sdk.api\n      .emailAvailable(email)\n      .then((available) => {\n        if (!available) {\n          return this.sdk.api;\n        }\n      })\n      .catch(() => {\n        return;\n      });\n  }\n\n  noClientID() {\n    if (!this.sdk.environment || !this.sdk.environment.clientID) {\n      return `\nNo clientID set in environment! To enable all auth related functionalities,\nyou can create a client in your datamanager settings and provide it with your environment:\n\n  providers: [\n    {\n      provide: 'environment',\n      useValue: {\n        datamanagerID: '83cc6374',\n        clientID: 'myClient',\n      }\n    }\n  ]\n`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CalendarModule.html":{"url":"modules/CalendarModule.html","title":"module - CalendarModule","body":"\n                   \n\n\n\n\n    Modules\n    CalendarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_exports\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nCalendarModule -->\n\nDaterangeComponent->CalendarModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nCalendarModule -->\n\nDatetimePipe->CalendarModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nCalendarModule -->\n\nHeatmapComponent->CalendarModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nCalendarModule -->\n\nMonthComponent->CalendarModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nCalendarModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nCalendarModule->DaterangeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nCalendarModule->DatetimePipe \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nCalendarModule->HeatmapComponent \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nCalendarModule->MonthComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/calendar/src/lib/calendar.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module contains all calendar related components \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            DaterangeComponent\n                        \n                        \n                            DatetimePipe\n                        \n                        \n                            HeatmapComponent\n                        \n                        \n                            MonthComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            DaterangeComponent\n                        \n                        \n                            DatetimePipe\n                        \n                        \n                            HeatmapComponent\n                        \n                        \n                            MonthComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(formats: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/calendar/src/lib/calendar.module.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formats\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DatetimePipe } from './datetime.pipe';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { HeatmapComponent } from './heatmap/heatmap.component';\nimport { DaterangeComponent } from './daterange/daterange.component';\nimport { MonthComponent } from './calendar/month.component';\nimport { CommonModule } from '@angular/common';\n\nexport const calendarModuleConfig = {\n  imports: [CommonModule],\n  exports: [DatetimePipe, CalendarComponent, HeatmapComponent, DaterangeComponent, MonthComponent],\n  declarations: [DatetimePipe, CalendarComponent, HeatmapComponent, DaterangeComponent, MonthComponent],\n  providers: [\n    {\n      provide: 'moment.format.date',\n      useValue: 'DD.MM.YYYY',\n    },\n    {\n      provide: 'moment.format.time',\n      useValue: 'HH:mm',\n    },\n    {\n      provide: 'moment.format.month',\n      useValue: 'MMMM YYYY',\n    },\n  ],\n};\n\n/** This Module contains all calendar related components */\n@NgModule(calendarModuleConfig)\nexport class CalendarModule {\n  static forRoot(formats: { date?; time?; month? }): ModuleWithProviders {\n    return {\n      ngModule: CalendarModule,\n      providers: [\n        {\n          provide: 'moment.format.date',\n          useValue: formats.date,\n        },\n        {\n          provide: 'moment.format.time',\n          useValue: formats.time,\n        },\n        {\n          provide: 'moment.format.month',\n          useValue: formats.month,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/collection/collection.ts\n        \n\n            \n                Description\n            \n            \n                A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Public\n                                update$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addAll\n                            \n                            \n                                has\n                            \n                            \n                                hasAll\n                            \n                            \n                                index\n                            \n                            \n                                isEmpty\n                            \n                            \n                                move\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                replaceWith\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: Array)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/collection/collection.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs the collection with the given item Array (optional).\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                               *  const numbers = new Collection([1, 2, 3]);\n   *\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:10\n                            \n                        \n\n                \n                    \n                        The items must all have the same type T.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            update\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:12\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.update.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:14\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items change \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(item: T, unique?: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:71\n                            \n                        \n\n\n                \n                    \n                            Adds the given item to the Collection. If the unique flag is set, the item will only be added\nif it is not contained.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.add(4);\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAll\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAll(items: Array, unique: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:89\n                            \n                        \n\n\n                \n                    \n                            Adds the given items to the Collection. If the unique flag is set, only items that are not\ncontained will be added.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.addAll([5, 6, 7]);\n   *\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \nhas(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:42\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains the given item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.has(2); //true\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAll(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:53\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains all given items.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.has([1,2]); //true\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                            \n                        \n                    \n                \n                \n                    \nindex(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:31\n                            \n                        \n\n\n                \n                    \n                            Returns the index of the given item \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:160\n                            \n                        \n\n\n                \n                    \n                            Returns true if the collection is empty \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            move\n                            \n                            \n                        \n                    \n                \n                \n                    \nmove(item: T, index: number, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:165\n                            \n                        \n\n\n                \n                    \n                            Moves the given item to the given array index. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:106\n                            \n                        \n\n\n                \n                    \n                            Removes the given item from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.remove(4);\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll(items?: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:123\n                            \n                        \n\n\n                \n                    \n                            Removes all items from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.removeAll();\n   *\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replaceWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nreplaceWith(items: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:147\n                            \n                        \n\n\n                \n                    \n                            Replaces all current items with the given items. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:138\n                            \n                        \n\n\n                \n                    \n                            Toggles the item in and out of collection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Collection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n    \n\n    \n        import { Observable, Subject } from 'rxjs';\n\n/**\n * A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n */\nexport class Collection {\n  /**\n   * The items must all have the same type T.\n   */\n  public items: Array;\n  /** Subject that is nexted when the items update */\n  protected update: Subject> = new Subject();\n  /** Subject that is nexted when the items change */\n  public update$: Observable> = this.update.asObservable();\n\n  /**\n   * Constructs the collection with the given item Array (optional).\n   * @example\n   * ```typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   * ```\n   */\n  constructor(items: Array = []) {\n    this.items = [];\n    items.forEach((item) => {\n      this.items.push(item);\n    });\n  }\n\n  /** Returns the index of the given item */\n  index(item: T): number {\n    return this.items.indexOf(item);\n  }\n\n  /**\n   * Checks if the Collection contains the given item.\n   * @example\n   * ```typescript\n   * numbers.has(2); //true\n   * ```\n   */\n  has(item: T): boolean {\n    return this.index(item) !== -1;\n  }\n\n  /**\n   * Checks if the Collection contains all given items.\n   * @example\n   * ```typescript\n   * numbers.has([1,2]); //true\n   * ```\n   */\n  hasAll(items: Array = []): boolean {\n    if (items === null) {\n      // console.warn('has all fail', this, items);\n      return false;\n    }\n    return items.reduce((has, item) => {\n      return has && this.has(item);\n    }, true);\n  }\n\n  /**\n   * Adds the given item to the Collection. If the unique flag is set, the item will only be added\n   * if it is not contained.\n   * @example\n   * ```typescript\n   * numbers.add(4);\n   * ```\n   */\n  add(item: T, unique?: boolean, event: boolean = true) {\n    if (unique && this.has(item)) {\n      return false;\n    }\n    this.items.push(item);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Adds the given items to the Collection. If the unique flag is set, only items that are not\n   * contained will be added.\n   * @example\n   * ```typescript\n   * numbers.addAll([5, 6, 7]);\n   * ```\n   */\n  addAll(items: Array = [], unique: boolean = false, event: boolean = true) {\n    const length = this.items.length;\n    items.forEach((item) => {\n      this.add(item, unique, false);\n    });\n    if (this.items.length > length && event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes the given item from the Collection.\n   * @example\n   * ```typescript\n   * numbers.remove(4);\n   * ```\n   */\n  remove(item: T, event: boolean = true) {\n    if (!this.has(item)) {\n      return false;\n    }\n    this.items.splice(this.index(item), 1);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes all items from the Collection.\n   * @example\n   * ```typescript\n   * numbers.removeAll();\n   * ```\n   */\n  removeAll(items?: Array, event: boolean = true) {\n    const length = this.items.length;\n    if (items) {\n      items.forEach((item) => {\n        this.remove(item, false);\n      });\n    } else {\n      this.items.length = 0;\n    }\n    if (this.items.length , event: boolean = true) {\n    if (this.items && this.items.length) {\n      this.removeAll(undefined, false);\n    }\n    if (items.length) {\n      this.addAll(items, false, false);\n    }\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Returns true if the collection is empty */\n  isEmpty() {\n    return this.items.length === 0;\n  }\n\n  /** Moves the given item to the given array index. */\n  move(item: T, index: number, event: boolean = true) {\n    if (!this.has(item) || this.items.indexOf(item) === index) {\n      return;\n    }\n    this.items.splice(index, 0, this.items.splice(this.items.indexOf(item), 1)[0]);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/config/config.ts\n        \n\n            \n                Description\n            \n            \n                The Root class for all Configurations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/config/config.ts:5\n                            \n                        \n\n                \n                    \n                        The config object. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(key: string, property: string, config?: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/config/config.ts:13\n                            \n                        \n\n\n                \n                    \n                            This method is a getter and setter for configurations. The key stands for the config (e.g. model).\nThe property is a sub property if the config (e.g. fields => model.fields).\nIf no config is given, the method just returns the configuration for the given property.\nIf a config is given, the property config is merged via Object.assign. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Config {\n  // TODO use Map !!!! (like simi did in EventEmitter.ts)\n  /** The config object. */\n  private config: {\n    [key: string]: Object;\n  } = {};\n\n  /** This method is a getter and setter for configurations. The key stands for the config (e.g. model).\n   * The property is a sub property if the config (e.g. fields => model.fields).\n   * If no config is given, the method just returns the configuration for the given property.\n   * If a config is given, the property config is merged via Object.assign. */\n  public configure?(key: string, property: string, config?: Object) {\n    if (!this.config[key]) {\n      this.config[key] = {};\n    }\n    if (!config) {\n      return this.config[key][property];\n    }\n    if (!this.config[key][property]) {\n      this.config[key][property] = {};\n    }\n    Object.assign(this.config[key][property], config);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CrudComponent.html":{"url":"components/CrudComponent.html","title":"component - CrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/crud/crud.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * \n *https://components.entrecode.de/entries/crud?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./crud.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryPop\n                            \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                    Private\n                                loadEntry\n                            \n                            \n                                    Public\n                                mustReload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                selectEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, modelConfig: ModelConfigService, notificationService: NotificationsService, symbol: SymbolService, cdr: ChangeDetectorRef, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/crud/crud.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:32\n                            \n                        \n                \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:30\n                            \n                        \n                \n                    \n                        The model that should be crud'ed. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:34\n                            \n                        \n                \n                    \n                        The selection that should be used \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:42\n                            \n                        \n                \n                    \n                        Emits when a list element is clicked \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:44\n                            \n                        \n                \n                    \n                        Emits when the selection has changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadEntry(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mustReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mustReload(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Returns true if the visible fields in the list differ from the visible fields in the form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectEntry(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Is called when an item in the list is clicked. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryPop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryPopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EntryPopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:38\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EntryListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:36\n                            \n                        \n\n                \n                    \n                        The EntryList inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:40\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:46\n                            \n                        \n\n                \n                    \n                        Emitted Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CrudConfig } from './crud-config.interface';\nimport { EntryListComponent } from '../entry-list/entry-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { AuthService } from '../auth/auth.service';\nimport { EntryPopComponent } from '../entry-pop/entry-pop.component';\nimport { WithLoader } from '@ec.components/ui';\nimport { Notification, WithNotifications, SymbolService } from '@ec.components/ui';\nimport { ModelConfigService } from '../model-config/model-config.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * https://components.entrecode.de/entries/crud?e=1\n * */\n@Component({\n  selector: 'ec-crud',\n  templateUrl: './crud.component.html',\n})\nexport class CrudComponent implements OnInit, WithLoader, WithNotifications {\n  /** The model that should be crud'ed. */\n  @Input() model: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The EntryList inside the template. */\n  @ViewChild(EntryListComponent) list: EntryListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(EntryPopComponent) entryPop: EntryPopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Emitted Notifications */\n  notifications: Notification[] = [];\n\n  constructor(\n    private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private modelConfig: ModelConfigService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n    private cdr: ChangeDetectorRef,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute,\n  ) {\n    /* if (route) {\n      merge(route.data, route.params, route.queryParams)\n        .subscribe(({ model }) => {\n          if (model) {\n            this.model = model;\n          }\n        });\n    } */\n  }\n\n  ngOnInit() {\n    this.auth.getAllowedModelMethods(this.model, this.config.methods).then((methods) => {\n      this.config.methods = methods;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Returns true if the visible fields in the list differ from the visible fields in the form*/\n  public mustReload(item) {\n    return !Object.keys(item.config.fields).reduce((equal, property) => {\n      return equal && (item.config.fields[property].list !== false || item.config.fields[property].form === false);\n    }, true);\n  }\n\n  /** Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. */\n  private loadEntry(item) {\n    return this.modelConfig\n      .getMinLevel(this.model, this.config.fields)\n      .then((minLevel) => {\n        const levels = Math.max(minLevel, this.config.levels || 1);\n        if (!this.config.alwaysLoadEntry && !this.mustReload(item) && levels === 1) {\n          return item.getBody();\n        }\n        return this.sdk.api.entry(this.model, item.id(), levels);\n      })\n      .then((loadedEntry) => {\n        this.entryPop.edit(loadedEntry);\n        this.notificationService.emit({ hide: this.notifications });\n      })\n      .catch((err) => {\n        console.log('error while loading entry to edit', err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.load'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications,\n        });\n      });\n  }\n\n  /** Is called when an item in the list is clicked. */\n  public selectEntry(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.loaderService.wait(this.loadEntry(item), this.loader);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{config?.createLabel}}\n        \n          \n        \n      \n    \n  \n  \n    \n    \n  \n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{config?.createLabel}}                                                      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'CrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudConfig.html":{"url":"interfaces/CrudConfig.html","title":"interface - CrudConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/crud/crud-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                The CrudConfig allows a quick customization of an ec-crud component. \n\n            \n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysLoadEntry\n                                \n                                \n                                            Optional\n                                        createLabel\n                                \n                                \n                                            Optional\n                                        customUpload\n                                \n                                \n                                            Optional\n                                        deleteOnRemove\n                                \n                                \n                                            Optional\n                                        develop\n                                \n                                \n                                            Optional\n                                        disableCreatePop\n                                \n                                \n                                            Optional\n                                        disableListPop\n                                \n                                \n                                            Optional\n                                        disableRemove\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        disableSelectSwitch\n                                \n                                \n                                            Optional\n                                        disableUrlUpload\n                                \n                                \n                                            Optional\n                                        dropdownFields\n                                \n                                \n                                            Optional\n                                        fileOptions\n                                \n                                \n                                            Optional\n                                        hideAssetGroupSelect\n                                \n                                \n                                            Optional\n                                        keepPopOpen\n                                \n                                \n                                            Optional\n                                        levels\n                                \n                                \n                                            Optional\n                                        loader\n                                \n                                \n                                            Optional\n                                        methods\n                                \n                                \n                                            Optional\n                                        nestedPopActive\n                                \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        pluralLabel\n                                \n                                \n                                            Optional\n                                        popColumns\n                                \n                                \n                                            Optional\n                                        safeDelete\n                                \n                                \n                                            Optional\n                                        singularLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysLoadEntry\n                                    \n                                \n                                \n                                    \n                                        alwaysLoadEntry:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an entry is always loaded when opened, even with lvl1 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createLabel\n                                    \n                                \n                                \n                                    \n                                        createLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for the entry create button \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customUpload\n                                    \n                                \n                                \n                                    \n                                        customUpload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, a pop will open before upload to set up custom options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteOnRemove\n                                    \n                                \n                                \n                                    \n                                        deleteOnRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, selects will delete entries that are removed from the selection \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        develop\n                                    \n                                \n                                \n                                    \n                                        develop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an extra develop button will be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCreatePop\n                                    \n                                \n                                \n                                    \n                                        disableCreatePop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no create pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableListPop\n                                    \n                                \n                                \n                                    \n                                        disableListPop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no list pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRemove\n                                    \n                                \n                                \n                                    \n                                        disableRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, removal of items wont be possible (select) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be accessible \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSelectSwitch\n                                    \n                                \n                                \n                                    \n                                        disableSelectSwitch:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select mode switch will be shown \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableUrlUpload\n                                    \n                                \n                                \n                                    \n                                        disableUrlUpload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, assets cannot be upload via url \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdownFields\n                                    \n                                \n                                \n                                    \n                                        dropdownFields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The fields that are used in select dropdowns, defaults to label field only. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileOptions\n                                    \n                                \n                                \n                                    \n                                        fileOptions:     FileOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default options for file uploads \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideAssetGroupSelect\n                                    \n                                \n                                \n                                    \n                                        hideAssetGroupSelect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Hides the assetGroup select in asset-list-pop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepPopOpen\n                                    \n                                \n                                \n                                    \n                                        keepPopOpen:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the entry pop will remain open after the entry has been successfully saved. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levels\n                                    \n                                \n                                \n                                    \n                                        levels:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external loader component that should be used, falls back to internal. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methods\n                                    \n                                \n                                \n                                    \n                                        methods:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An Array of Methods that should be supported. Possible values are create, read, update and delete\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nestedPopActive\n                                    \n                                \n                                \n                                    \n                                        nestedPopActive:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, a nested pop will be active immediately \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     NotificationsComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NotificationsComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external notifications component that should be used, falls back to internal \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    maps the permissions to the methods post put create delete \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sets a placeholder. Used e.g. for empty entry-select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluralLabel\n                                    \n                                \n                                \n                                    \n                                        pluralLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for multiple entities \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popColumns\n                                    \n                                \n                                \n                                    \n                                        popColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines the column width of the pops used. Defaults to popService.defaultColumns \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeDelete\n                                    \n                                \n                                \n                                    \n                                        safeDelete:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, delete operations need confirmation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singularLabel\n                                    \n                                \n                                \n                                    \n                                        singularLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for one entity \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ListConfig, FieldConfig } from '@ec.components/core';\nimport { NotificationsComponent, LoaderComponent } from '@ec.components/ui';\nimport { FileOptions } from '../files/file.service';\n\n/** The CrudConfig allows a quick customization of an ec-crud component. */\nexport interface CrudConfig extends ListConfig {\n  /** The fields that are used in select dropdowns, defaults to label field only. */\n  dropdownFields?: FieldConfig;\n  /** The label for one entity */\n  singularLabel?: string;\n  /** The label for multiple entities */\n  pluralLabel?: string;\n  /** The label for the entry create button */\n  createLabel?: string;\n  /** An Array of Methods that should be supported. Possible values are create, read, update and delete*/\n  methods?: Array;\n  /** An external loader component that should be used, falls back to internal. */\n  loader?: LoaderComponent;\n  /** An external notifications component that should be used, falls back to internal */\n  notifications?: NotificationsComponent;\n  /** If true, an extra develop button will be shown*/\n  develop?: boolean;\n  /** If true, the entry pop will remain open after the entry has been successfully saved. */\n  keepPopOpen?: boolean;\n  /** With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)*/\n  levels?: number;\n  /** If true, an entry is always loaded when opened, even with lvl1 */\n  alwaysLoadEntry?: boolean;\n  /** maps the permissions to the methods post put create delete */\n  permissions?: { put?: string | boolean; post?: string | boolean; get?: string | boolean; delete?: string | boolean };\n  /** If true, no select mode switch will be shown */\n  disableSelectSwitch?: boolean;\n  /** If true, no list pop will be available at selects */\n  disableListPop?: boolean;\n  /** If true, assets cannot be upload via url */\n  disableUrlUpload?: boolean;\n  /** If true, no create pop will be available at selects */\n  disableCreatePop?: boolean;\n  /** If true, no dropdown will be accessible */\n  disableSearchbar?: boolean;\n  /** If true, removal of items wont be possible (select) */\n  disableRemove?: boolean;\n  /** If true, selects will delete entries that are removed from the selection */\n  deleteOnRemove?: boolean;\n  /** If true, delete operations need confirmation */\n  safeDelete?: boolean;\n  /** Hides the assetGroup select in asset-list-pop */\n  hideAssetGroupSelect?: boolean;\n  /** Default options for file uploads */\n  fileOptions?: FileOptions;\n  /** If true, a pop will open before upload to set up custom options */\n  customUpload?: boolean;\n  /** Defines the column width of the pops used. Defaults to popService.defaultColumns */\n  popColumns?: number;\n  /** If true, a nested pop will be active immediately */\n  nestedPopActive?: boolean;\n  /** Sets a placeholder. Used e.g. for empty entry-select */\n  placeholder?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nEntryService\n\nEntryService\n\nDataModule -->\n\nEntryService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/data.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminEntryInputComponent\n                        \n                        \n                            CrudComponent\n                        \n                        \n                            DefaultEntryInputComponent\n                        \n                        \n                            DefaultEntryOutputComponent\n                        \n                        \n                            EntriesDirective\n                        \n                        \n                            EntryDirective\n                        \n                        \n                            EntryFormComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntryPopComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdminEntryInputComponent\n                        \n                        \n                            DefaultEntryInputComponent\n                        \n                        \n                            DefaultEntryOutputComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            EntryService\n                        \n                        \n                            HistoryService\n                        \n                        \n                            ModelConfigService\n                        \n                        \n                            TypeConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CrudComponent\n                        \n                        \n                            EntriesDirective\n                        \n                        \n                            EntryDirective\n                        \n                        \n                            EntryFormComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntryPopComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forEnvironment(environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/data.module.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@ec.components/ui';\nimport { DndModule } from 'ngx-drag-drop';\nimport { AuthModule } from './auth/auth.module';\nimport { CrudComponent } from './crud/crud.component';\nimport { EntryService } from './entry/entry.service';\nimport { EntriesDirective } from './entries/entries.directive';\nimport { AdminEntryInputComponent } from './entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from './entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from './entry-form/default-entry-output.component';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { EntryListPopComponent } from './entry-list-pop/entry-list-pop.component';\nimport { EntryListComponent } from './entry-list/entry-list.component';\nimport { EntryPopComponent } from './entry-pop/entry-pop.component';\nimport { EntrySelectComponent } from './entry-select/entry-select.component';\nimport { EntryDirective } from './entry/entry.directive';\nimport { FilesModule } from './files/files.module';\nimport { ModelConfigService } from './model-config/model-config.service';\nimport { TypeConfigService } from './model-config/type-config.service';\nimport { ResourceModule } from './resource/resource.module';\nimport { HistoryService } from './sdk/history.service';\nimport { SdkModule } from './sdk/sdk.module';\nimport { EntryListSelectComponent } from './entry-list-select/entry-list-select.component';\n\nexport const dataModuleConfig = {\n  entryComponents: [\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntrySelectComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n  ],\n  declarations: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntryListSelectComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryListPopComponent,\n  ],\n  imports: [FormsModule, CommonModule, UiModule, SdkModule, FilesModule, AuthModule, ResourceModule, DndModule],\n  exports: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n    RouterModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule,\n  ],\n  providers: [\n    EntryService,\n    TypeConfigService,\n    ModelConfigService,\n    HistoryService,\n    {\n      provide: 'environment',\n      useValue: {\n        environment: 'live',\n        datamanagerID: '83cc6374',\n      },\n    },\n  ],\n};\n\n@NgModule(dataModuleConfig)\nexport class DataModule {\n  static forEnvironment(environment): ModuleWithProviders {\n    return {\n      ngModule: DataModule,\n      providers: [\n        {\n          provide: 'environment',\n          useValue: Object.assign(\n            {\n              environment: 'live',\n            },\n            environment,\n          ),\n        },\n      ],\n    };\n  }\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeComponent.html":{"url":"components/DatetimeComponent.html","title":"component - DatetimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/datetime/datetime.component.ts\n\n\n    \n        Description\n    \n    \n        Input for a datetime.\nhttps://components.entrecode.de/ui/datetime?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatetimeComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-datetime\n            \n\n\n\n\n            \n                templateUrl\n                datetime.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                disabled\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disableTime\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :     moment.Moment\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:24\n                            \n                        \n                \n                    \n                        The date that should be displayed at start. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableTime\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:32\n                            \n                        \n                \n                    \n                        If true, the time will not be displayed nor will be editable. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:26\n                            \n                        \n                \n                    \n                        The form control that holds the date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:34\n                            \n                        \n                \n                    \n                        The input's placeholder \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            registerOnChange implementation of ControlValueAccessor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            registerOnTouched implementation of ControlValueAccessor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDisabledState(isDisabled)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Selects the given Date when the model changes. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CalendarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CalendarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:28\n                            \n                        \n\n                \n                    \n                        The used calendar component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:36\n                            \n                        \n\n                \n                    \n                        If true, the time cannot be changed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:44\n                            \n                        \n\n                \n                    \n                        Change propagation for ControlValueAccessor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weekdays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:30\n                            \n                        \n\n                \n                    \n                        Array of the days of a week. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport moment from 'moment-es6';\nimport { CalendarComponent } from '@ec.components/calendar';\n\n/** Input for a datetime.\n *\n * https://components.entrecode.de/ui/datetime?e=1\n *\n */\n@Component({\n  selector: 'ec-datetime',\n  templateUrl: 'datetime.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatetimeComponent),\n      multi: true,\n    },\n  ],\n})\nexport class DatetimeComponent implements ControlValueAccessor {\n  /** The date that should be displayed at start. */\n  @Input() date: moment.Moment;\n  /** The form control that holds the date */\n  @Input() formControl: FormControl = new FormControl();\n  /** The used calendar component */\n  @ViewChild(CalendarComponent) calendar: CalendarComponent;\n  /** Array of the days of a week. */\n  public weekdays: string[];\n  /** If true, the time will not be displayed nor will be editable. */\n  @Input() disableTime: boolean;\n  /** The input's placeholder */\n  @Input() placeholder = '';\n  /** If true, the time cannot be changed */\n  disabled: boolean;\n\n  /** Selects the given Date when the model changes. */\n  writeValue(value: Date) {\n    this.calendar.writeValue(value);\n  }\n\n  /** Change propagation for ControlValueAccessor */\n  propagateChange = (_: any) => {};\n\n  /** registerOnChange implementation of ControlValueAccessor */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** registerOnTouched implementation of ControlValueAccessor */\n  registerOnTouched() {}\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n                \n            \n        \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DatetimePipe.html":{"url":"pipes/DatetimePipe.html","title":"pipe - DatetimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DatetimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/calendar/src/lib/datetime.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        datetime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: Date | string, pattern: string | string[], raw?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/calendar/src/lib/datetime.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date | string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pattern\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.dateFormat\n                                                        \n\n                                                \n                                                \n                                                        raw\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Inject } from '@angular/core';\nimport moment from 'moment-es6';\n/* import { SymbolService } from '../../symbol/symbol.service'; */\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'datetime',\n})\nexport class DatetimePipe implements PipeTransform {\n  constructor(@Inject('moment.format.date') private dateFormat /* private symbol: SymbolService */) {}\n  transform(\n    value: Date | string,\n    pattern: string | string[] = this.dateFormat /* this.symbol.resolve('moment.format.date') */,\n    raw?: string,\n  ): string {\n    if (!value) {\n      return '';\n    }\n    if (raw) {\n      console.log('raw', raw);\n    }\n    const typed = moment(value, pattern, true);\n    if (!typed.isValid()) {\n      return '';\n    }\n    if (Array.isArray(pattern)) {\n      pattern = pattern[0];\n    }\n    return moment(value).format(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/calendar/src/lib/calendar/month.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a day inside the a month.\nhttps://components.entrecode.de/ui/datetime?e=1\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        draggable\n                                \n                                \n                                        first\n                                \n                                \n                                        format\n                                \n                                \n                                            Optional\n                                        heat\n                                \n                                \n                                        index\n                                \n                                \n                                        last\n                                \n                                \n                                        today\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The moment that is represented by the day. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    determines if the day can be dragged to change the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the first in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The formatted day number. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heat\n                                    \n                                \n                                \n                                    \n                                        heat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cell index \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the last in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag that is true if the day is today. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can be given a type, to set a class. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output, Inject } from '@angular/core';\n/* import { SymbolService } from '../../symbol/symbol.service'; */\nimport moment from 'moment-es6';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n/** Interface for a day inside the a month.\n * https://components.entrecode.de/ui/datetime?e=1\n * */\nexport interface Day {\n  /** The cell index */\n  index: number;\n  /** The moment that is represented by the day. */\n  date: moment.Moment;\n  /** Can be given a type, to set a class. */\n  type?: string;\n  /** The formatted day number. */\n  format: string;\n  /** Flag that is true if the day is today. */\n  today: boolean;\n  /** if the day is the first in the timespan */\n  first: boolean;\n  /** if the day is the last in the timespan */\n  last: boolean;\n  /** determines if the day can be dragged to change the timespan */\n  draggable: boolean;\n  /** custom class */\n  heat?: string;\n}\n\n/** Displays the days of a month in a calendarish table. */\n@Component({\n  selector: 'ec-month',\n  templateUrl: 'month.component.html',\n})\nexport class MonthComponent implements OnInit, OnChanges {\n  dragged: any;\n  /** The current selected date */\n  @Input() selected: moment.Moment;\n  /** Color mapping for day cells. E.g. to view a month heatmap */\n  @Input() colors: Object;\n  /** Class mapping for day cells. E.g. to apply different background classes */\n  @Input() heatmap: Object;\n  /** Timespan that is reflected. Marks days inside the span */\n  @Input() timespan: moment.Moment[];\n  /** The current date (for showing month) */\n  @Input() date: moment.Moment;\n  /** The color of days that are inside the timespan */\n  @Input() spancolor = '#ccc';\n  /** If true, the timespan start cannot be dragged */\n  @Input() disableDragStart = false;\n  /** If true, the timespan end cannot be dragged */\n  @Input() disableDragEnd = false;\n  /** If true, nothing can be changed */\n  @Input() disabled;\n  /** The current month as string */\n  public formatted: string;\n  /** The cells containing the days */\n  public cells: Array;\n  /** Format for month in header */\n  public monthFormat = 'MMMM YYYY';\n  /** Emits when the selected day changes. */\n  @Output() dayClicked: EventEmitter = new EventEmitter();\n  /** Changed Timespan selection */\n  @Output() spanChanged: EventEmitter = new EventEmitter();\n\n  protected drag: Subject = new Subject();\n  protected changeSpan: Subject = new Subject();\n\n  /* public symbol: SymbolService */\n  constructor(@Inject('moment.format.month') protected defaultMonthFormat) {\n    /* this.monthFormat = this.symbol.resolve('moment.format.month') || this.monthFormat; */\n    this.monthFormat = this.defaultMonthFormat || this.monthFormat;\n    this.drag\n      .asObservable()\n      .pipe(debounceTime(100))\n      .subscribe((day) => this.dropDay(day));\n    this.changeSpan\n      .asObservable()\n      .pipe(debounceTime(800))\n      .subscribe((timespan) => this.spanChanged.emit(this.timespan));\n  }\n\n  dropDay(day: Day) {\n    if (!this.dragged || ((day.first && this.dragged.first) || (day.last && this.dragged.last))) {\n      return;\n    }\n    const newTimespan = [].concat(this.timespan);\n    newTimespan[this.dragged.first ? 0 : 1] = day.date.clone();\n    if (newTimespan[0].isAfter(newTimespan[1])) {\n      this.dragged.first = !this.dragged.first;\n      this.dragged.last = !this.dragged.last;\n      newTimespan.reverse();\n    }\n    this.timespan = newTimespan;\n    this.changeSpan.next(this.timespan);\n    /* if (this.cells[0] === day || this.cells[this.cells.length - 1] === day) {\n      // change month if dragging to edge\n      this.setDate(day.date.clone().subtract(1, 'days'));\n    } else {\n      this.setDate();\n    } */\n    this.setDate();\n  }\n\n  dragStart(day, e) {\n    if ((this.disableDragStart && day.first) || (this.disableDragEnd && day.last)) {\n      return;\n    }\n    this.dragged = day;\n    e.preventDefault();\n  }\n\n  mouseUp(day, e) {\n    if (!this.dragged) {\n      return;\n    }\n    delete this.dragged;\n    e.preventDefault();\n  }\n\n  mouseOver(day, e) {\n    if (!this.dragged || this.dragged === day) {\n      return;\n    }\n    e.preventDefault();\n    this.drag.next(day);\n  }\n\n  getDayColor(_moment: moment.Moment) {\n    if (this.colors && this.colors[_moment.toISOString()]) {\n      return this.colors[_moment.toISOString()];\n    }\n  }\n\n  getDayHeat(_moment: moment.Moment) {\n    if (this.heatmap && this.heatmap[_moment.toISOString()]) {\n      return this.heatmap[_moment.toISOString()];\n    }\n  }\n\n  /** Initializes the calendar. */\n  ngOnInit() {\n    this.setDate();\n  }\n\n  /** When changing the date or selected input, the calendar will update its view to display the month containing it. */\n  ngOnChanges(change) {\n    if (change.selected) {\n      this.setDate(this.selected);\n      return;\n    } else if (change.date) {\n      this.setDate(this.date);\n    } else if (change.timespan) {\n      this.setDate();\n    }\n    if (change.colors || change.heatmap) {\n      this.cells = this.getMonth(this.date.clone(), 'current');\n    }\n  }\n\n  /** Returns days of current month */\n  getMonth(day = moment(), type?: string): Array {\n    const begin = day\n      .clone()\n      .startOf('month')\n      .startOf('week'); // .subtract(weeksbefore * 7, 'days');\n    return new Array(42)\n      .fill(0)\n      .map((d, index) => begin.clone().add(index, 'days'))\n      .map((date, index) => {\n        const isStart =\n          this.timespan &&\n          date\n            .clone()\n            .startOf('day')\n            .isSame(this.timespan[0].clone().startOf('day'));\n        const isEnd =\n          this.timespan &&\n          date\n            .clone()\n            .startOf('day')\n            .isSame(this.timespan[1].clone().startOf('day'));\n        return {\n          index,\n          date,\n          type: date.format('MM YYYY') === day.format('MM YYYY') ? 'current' : 'other',\n          active: this.timespan && date.isBetween(this.timespan[0], this.timespan[1], 'days', '[]'),\n          first: isStart,\n          last: isEnd,\n          draggable: (!this.disableDragStart && isStart) || (!this.disableDragEnd && isEnd),\n          color: this.getDayColor(date),\n          heat: this.getDayHeat(date),\n          format: date.format('DD'),\n          today:\n            moment()\n              .startOf('day')\n              .diff(date, 'days') === 0,\n        };\n      });\n  }\n\n  /** Sets the calendars viewed date to the given moment's month. Renders always 42 cells to keep the layout consistent. */\n  setDate(date: moment.Moment = this.selected || this.date || moment()) {\n    if (this.disabled) {\n      return;\n    }\n    this.date = date.clone();\n    this.formatted = date.format(this.monthFormat);\n    this.cells = this.getMonth(date.clone(), 'current');\n  }\n\n  /** Selects the day of the given moment. */\n  selectDay(_moment: moment.Moment, emit = true): void {\n    if (this.disabled) {\n      return;\n    }\n    this.setDate(_moment);\n    this.selected = _moment;\n    if (emit) {\n      this.dayClicked.emit(_moment);\n    }\n  }\n\n  /** Clears the current selected date*/\n  clearSelection(): void {\n    delete this.selected;\n  }\n\n  /** Returns true if the given moment is currently selected (on a day basis) */\n  isSelected(_moment: moment.Moment): boolean {\n    if (!this.selected) {\n      return;\n    }\n    return this.selected.startOf('day').diff(_moment, 'days') === 0;\n  }\n\n  canAlter(value, span: string) {\n    if (!this.timespan) {\n      return true;\n    }\n    const newDate = this.date.clone().add(value, span);\n    return newDate.isBetween(this.timespan[0], this.timespan[1], 'months', '[]');\n  }\n\n  /** Updates the viewed date to reflect the given relative changes. */\n  alter(value, span: string): void {\n    if (!this.canAlter(value, span)) {\n      return;\n    }\n    this.setDate(this.date.clone().add(value, span));\n  }\n\n  /** Sets the current viewed date to today. */\n  today(): void {\n    this.setDate(moment());\n  }\n\n  /** Sets the current selected date to today. */\n  setToday(): void {\n    this.selectDay(moment());\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryInputComponent.html":{"url":"components/DefaultEntryInputComponent.html","title":"component - DefaultEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/default-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that can not be represented by the default input template. \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-entry-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                    KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:20\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:22\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DefaultInputComponent, FormService, KeycommandsService } from '@ec.components/ui';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** This component holds the input templates for all field types that can not be represented by the default input template. */\n@Component({\n  templateUrl: './default-entry-input.component.html',\n})\nexport class DefaultEntryInputComponent extends DefaultInputComponent {\n  constructor(public sdk: SdkService, public formService: FormService, public keycommands: KeycommandsService) {\n    super(formService, keycommands);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n    \n    \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                      🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryOutputComponent.html":{"url":"components/DefaultEntryOutputComponent.html","title":"component - DefaultEntryOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/default-entry-output.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all output types that cannot be represented by the default output component. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-entry-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-entry-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-output.component.ts:11\n                            \n                        \n\n                \n                    \n                        The field to output. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The item to display \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field, Item } from '@ec.components/core';\n\n/** This component holds the templates for all output types that cannot be represented by the default output component. */\n@Component({\n  selector: 'ec-default-entry-output',\n  templateUrl: './default-entry-output.component.html',\n})\nexport class DefaultEntryOutputComponent {\n  /** The field to output. */\n  field: Field;\n  /** The item to display */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n    JSON\n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} output coming soon!-->\n    {{item?.display(field.property)}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          JSON        🚂🚃🚃🚃 {{field.type}} output coming soon!-->    {{item?.display(field.property)}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultInputComponent.html":{"url":"components/DefaultInputComponent.html","title":"component - DefaultInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/default-input/default-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all basic field types. \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                Focus\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:22\n                            \n                        \n\n                \n                    \n                            Injects the services. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                    KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:20\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:14\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:22\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:18\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:16\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, AfterViewInit, OnChanges } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Field, Item } from '@ec.components/core';\nimport { Focus } from '../../utility/focus/focus.interface';\nimport { FormService } from '../form.service';\nimport { KeycommandsService } from '../../utility/keycommands/keycommands.service';\n\n/** This component holds the templates for all basic field types. */\n@Component({\n  templateUrl: './default-input.component.html',\n})\nexport class DefaultInputComponent implements AfterViewInit, Focus {\n  /** The field for which the input is meant. */\n  public field: Field;\n  /** The item that is targeted by the input */\n  public item: Item;\n  /** The form group that is used */\n  public group: FormGroup;\n  /** The form control that is used */\n  public control: FormControl;\n  /** Emitter to focus the input field */\n  focusEvent: EventEmitter = new EventEmitter();\n\n  /** Injects the services. */\n  constructor(public formService: FormService, public keycommands: KeycommandsService) {}\n\n  ngAfterViewInit() {\n    if (this.field && this.field.autofocus) {\n      this.focus();\n    }\n  }\n\n  focus(focus = true) {\n    setTimeout(() => {\n      this.focusEvent.emit(focus);\n    }, 100);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n\n  \n\n  \n    \n      \n    \n  \n\n  \n    \n    {{ field.placeholder }}\n  \n\n  \n\n  \n\n  \n  \n\n  \n\n  \n    \n      {{ field.getPlaceholder() }}\n      \n        {{ option.label ? option.label : option }}\n      \n    \n    \n  \n  \n    \n      {{ item?.display(field.property) }}\n    \n  \n\n  \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ field.placeholder }}                        {{ field.getPlaceholder() }}              {{ option.label ? option.label : option }}                            {{ item?.display(field.property) }}                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultOutputComponent.html":{"url":"components/DefaultOutputComponent.html","title":"component - DefaultOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/default-output/default-output.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the templates to output item field values. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-output/default-output.component.ts:11\n                            \n                        \n\n                \n                    \n                        The field that should be displayed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-output/default-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field, Item } from '@ec.components/core';\n\n/** Holds the templates to output item field values. */\n@Component({\n  selector: 'ec-default-output',\n  templateUrl: './default-output.component.html',\n})\nexport class DefaultOutputComponent {\n  /** The field that should be displayed */\n  field: Field;\n  /** The item that is targeted by the input */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n      {{label}}\n    \n    (field.maxItems||10)\">\n      &hellip;\n    \n  \n\n  {{item?.display(field.property)}}\n\n  \n    &#10004;\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    {{item?.display(field.property)}}\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    \n    {{item?.display(field.property)}}\n  \n\n  \n    \n  \n\n  \n    \n    {{item?.resolve(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n    {{item?.resolve(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    {{item?.display(field.property)}}\n    \n  \n\n  \n    \n    text\n  \n  \n    {{item?.display(field.property)}}-->\n    JSON\n  \n  \n    {{item?.display(field.property)}}\n    \n  \n  \n    {{item?.display(field.property)}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{label}}        (field.maxItems||10)\">      …        {{item?.display(field.property)}}      ✔        {{item?.display(field.property)}}        {{item?.display(field.property)}}        {{item?.display(field.property)}}            {{item?.display(field.property)}}                    {{item?.resolve(field.property)?.length}}                    {{item?.resolve(field.property)?.length}}                                {{item?.display(field.property)}}                text        {{item?.display(field.property)}}-->    JSON        {{item?.display(field.property)}}            {{item?.display(field.property)}}      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropzoneDirective.html":{"url":"directives/DropzoneDirective.html","title":"directive - DropzoneDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropzoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/dropzone/dropzone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that turns any element into a zone to drop files. TODO: demo \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecDropzone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecDropzone\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.is-active\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:11\n                            \n                        \n                \n                    \n                        If true the element acts normal \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ecDropzone\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:9\n                            \n                        \n                \n                    \n                        Emits when files are dropped \n\n                    \n                \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:7\n                            \n                        \n\n                \n                    \n                        The is-active class is bound to the host when dragover is active \n\n                    \n                \n\n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            dragleave\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragleave(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            flips active to false on dragleave \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragover(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:13\n                            \n                        \n\n\n                \n                    \n                            flips active to true on dragover \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drop\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndrop(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:24\n                            \n                        \n\n\n                \n                    \n                            emits dropped files and flips active to false on drop \n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n/** Directive that turns any element into a zone to drop files. TODO: demo */\n@Directive({ selector: '[ecDropzone]' })\nexport class DropzoneDirective {\n  /** The is-active class is bound to the host when dragover is active */\n  @HostBinding('class.is-active') public active: boolean;\n  /** Emits when files are dropped */\n  @Output() ecDropzone: EventEmitter = new EventEmitter();\n  /** If true the element acts normal */\n  @Input() disabled = false;\n  /** flips active to true on dragover */\n  @HostListener('dragover', ['$event']) onDragOver(e) {\n    if (this.disabled) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.active) {\n      this.active = true;\n    }\n  }\n  /** emits dropped files and flips active to false on drop */\n  @HostListener('drop', ['$event']) onDrop(e) {\n    if (this.disabled) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    if (!e.dataTransfer.files || !e.dataTransfer.files.length) {\n      return;\n    }\n    this.ecDropzone.emit(e);\n    this.active = false;\n  }\n  /** flips active to false on dragleave */\n  @HostListener('dragleave', ['$event']) onDragLeave(e) {\n    if (this.disabled) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.active) {\n      this.active = false;\n    }\n  }\n  constructor(private el: ElementRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicRackComponent.html":{"url":"components/DynamicRackComponent.html","title":"component - DynamicRackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicRackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./dynamic-rack.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver } from '@angular/core';\n\n// import { CustomFieldComponent } from './custom-field.component';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  // selector: 'ec-dynamic-rack',\n  templateUrl: './dynamic-rack.component.html',\n})\nexport class DynamicRackComponent {\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n}\n\n    \n\n    \n        \n  \n    -->\n    -->\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      -->    -->  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicRackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicSlotComponent.html":{"url":"components/DynamicSlotComponent.html","title":"component - DynamicSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicSlotComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-dynamic-slot\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewChild } from '@angular/core';\nimport { SlotHostDirective } from '../slot-host.directive';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-dynamic-slot',\n  templateUrl: './dynamic-slot.component.html',\n})\nexport class DynamicSlotComponent {\n  /** The FieldHostDirective will  be used to nest custom components into the field */\n  @ViewChild(SlotHostDirective) fieldHost: SlotHostDirective;\n\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(public componentFactoryResolver: ComponentFactoryResolver) {}\n\n  /** Loads the given component inside the fieldHost. Sets current item and field by default. */\n  loadComponent(component: Type, attributes: Object = {}): ComponentRef {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    const viewContainerRef = this.fieldHost.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    Object.assign(componentRef.instance, attributes);\n    return componentRef;\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntriesDirective.html":{"url":"directives/EntriesDirective.html","title":"directive - EntriesDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EntriesDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entries/entries.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entryList of a given model with the given config.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecEntries]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                entryList\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Private\n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                load\n                            \n                            \n                                next\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                prev\n                            \n                            \n                                useList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                endless\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entries/entries.directive.ts:35\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:30\n                            \n                        \n                \n                    \n                        Should the entries be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endless\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:28\n                            \n                        \n                \n                    \n                        If true, calling next will append the next page to the items, making the list grow.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:32\n                            \n                        \n                \n                    \n                        The loader that should be used. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:24\n                            \n                        \n                \n                    \n                        The model to load from. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:26\n                            \n                        \n                \n                    \n                        The filterOptions for loading. \n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                            \n                        \n                    \n                \n                \n                    \nentries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:111\n                            \n                        \n\n\n                \n                    \n                            This helper returns all items of the current entryList. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:58\n                            \n                        \n\n\n                \n                    \n                            Loads the entries \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:45\n                            \n                        \n\n\n                \n                    \n                            When the model is known, the entryList will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useList\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseList(entryList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entryList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryList\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:34\n                            \n                        \n\n                \n                    \n                        The current loaded entryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryResource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:22\n                            \n                        \n\n                \n                    \n                        The promise of the entryList call. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entries\nThis component can be used to load a list of entries from the template:\n\n  \n  {{muffin.name}}\n  \n\n    \n\n    \n        import { Directive, Input, OnChanges } from '@angular/core';\nimport { LoaderComponent, WithLoader, NotificationsService } from '@ec.components/ui';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\nimport { SymbolService } from '@ec.components/ui';\n\n// import { filterOptions } from 'ec.sdk/lib/resources/ListResource';\n\n/** Loads an entryList of a given model with the given config.\n * https://components.entrecode.de/entries/entries?e=1\n */\n@Directive({\n  selector: '[ecEntries]',\n  exportAs: 'ecEntries',\n})\nexport class EntriesDirective implements OnChanges, WithLoader {\n  /** The promise of the entryList call. */\n  private promise: any;\n  /** The model to load from. */\n  @Input() model: string;\n  /** The filterOptions for loading. */\n  @Input() options: any = {}; // TODO cannot import #simibug : filterOptions;\n  /** If true, calling next will append the next page to the items, making the list grow.*/\n  @Input() endless = false;\n  /** Should the entries be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entryList */\n  private entryList: EntryList;\n  public items: EntryResource[] = [];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService,\n  ) {}\n\n  /** When the model is known, the entryList will be loaded. */\n  ngOnChanges() {\n    if (!this.model) {\n      return;\n    }\n    if (this.endless && this.options.page && this.options.page > 1) {\n      console.warn('cannot init ecEntries on page!==1 with strategy=endless');\n    }\n    if (this.autoload !== false) {\n      this.load();\n    }\n  }\n\n  /** Loads the entries */\n  load() {\n    this.promise = this.sdk.api\n      .entryList(this.model, this.options)\n      .then((list) => this.useList(list))\n      .catch((error) =>\n        this.notificationService.emit({\n          title: this.symbol.resolve('entries.load.error'),\n          error,\n        }),\n      );\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n\n  useList(entryList) {\n    this.entryList = entryList;\n    const items = this.entryList.getAllItems();\n    if (this.endless) {\n      this.items = this.items.concat(items);\n      this.items = this.items.filter((item) => this.items.find((_item) => _item.id === item.id));\n    } else {\n      this.items = this.entryList.getAllItems();\n    }\n  }\n\n  next() {\n    this.promise = this.entryList.followNextLink().then((list) => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  prev() {\n    this.promise = this.entryList.followPrevLink().then((list) => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  isLast() {\n    return !this.entryList || !this.entryList.hasNextLink();\n  }\n\n  isFirst() {\n    if (this.endless) {\n      return true;\n    }\n    return !this.entryList || !this.entryList.hasFirstLink();\n  }\n\n  /** This helper returns all items of the current entryList. */\n  entries() {\n    if (!this.entryList) {\n      return [];\n    }\n    return this.entryList.getAllItems();\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntryDirective.html":{"url":"directives/EntryDirective.html","title":"directive - EntryDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EntryDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entry/entry.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entry by id to the template.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecEntry]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                entryId\n                            \n                            \n                                levels\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:25\n                            \n                        \n                \n                    \n                        Should the entry be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entryId\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:21\n                            \n                        \n                \n                    \n                        The entry id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                \n                \n                    \n                        Type :     number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:27\n                            \n                        \n                \n                    \n                        The levels to use. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:31\n                            \n                        \n                \n                    \n                        The loader that should be used. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:23\n                            \n                        \n                \n                    \n                        The model to load from \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:29\n                            \n                        \n                \n                    \n                        Fires as soon as the entry has been loaded. \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:51\n                            \n                        \n\n\n                \n                    \n                            Loads the entry. Can be called from template when using autoload=false \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:43\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the entry will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                        The current loaded entry \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:19\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entry\nThis directive can be used to load a single entry directly from the template:\n\n{{muffin.entry?.name}}\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent, NotificationsService } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui';\n\n/** Loads an entry by id to the template.\n * https://components.entrecode.de/entries/entries?e=1\n * */\n@Directive({\n  selector: '[ecEntry]',\n  exportAs: 'ecEntry',\n})\nexport class EntryDirective implements OnChanges, WithLoader {\n  /** The loading promise */\n  promise: any;\n  /** The entry id that should be loaded*/\n  @Input() entryId: string;\n  /** The model to load from */\n  @Input() model: string;\n  /** Should the entry be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** Fires as soon as the entry has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entry */\n  entry: any;\n\n  /** Injects the sdk */\n  constructor(\n    private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService,\n  ) {}\n\n  /** as soon as model and id are known, the entry will be loaded. */\n  ngOnChanges() {\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the entry. Can be called from template when using autoload=false */\n  load() {\n    if (!this.entryId || !this.model) {\n      return;\n    }\n    this.promise = this.sdk.api\n      .entry(this.model, this.entryId, this.levels)\n      .then((entry) => {\n        this.entry = entry;\n        this.loaded.emit(entry);\n        return entry;\n      })\n      .catch((error) =>\n        this.notificationService.emit({\n          title: this.symbol.resolve('entry.load.error'),\n          error,\n        }),\n      );\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListPopComponent.html":{"url":"components/EntryListPopComponent.html","title":"component - EntryListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop that contains an entry list. TODO: add demo \n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-entry-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./entry-list-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                modelConfig\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHeader\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelConfig: ModelConfigService, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'toast-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:30\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHeader(entryList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:88\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:58\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:72\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:63\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SearchbarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Item, Selection } from '@ec.components/core';\nimport { PopComponent, PopService, SearchbarComponent } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ModelConfigService } from '../model-config/model-config.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\n\n/** A Pop that contains an entry list. TODO: add demo */\n@Component({\n  selector: 'ec-entry-list-pop',\n  templateUrl: './entry-list-pop.component.html',\n})\nexport class EntryListPopComponent extends PopComponent implements OnChanges {\n  @Input() model: string;\n  @Input() config: CrudConfig;\n  @Input() selection: Selection;\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n  /** Set host class to make sure the type is used */\n  @HostBinding('class') class = 'toast-wrapper';\n  lightModel: any;\n\n  constructor(\n    public modelConfig: ModelConfigService,\n    public popService: PopService,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(popService, elementRef, cdr);\n  }\n\n  ngOnChanges() {\n    if (this.model) {\n      this.modelConfig.getLightModel(this.model).then((model) => (this.lightModel = model));\n    }\n    this.config = Object.assign({}, this.config || {}, { hidePagination: true, disableHeader: true });\n  }\n\n  /** emits columnClicked event or toggles selection if no observers. */\n  select(item) {\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    } else if (this.selection) {\n      this.selection.toggle(item);\n    }\n    // this.searchbar.focusEvent.emit(true);\n  }\n\n  getHeader(entryList) {\n    const label = this.config.singularLabel || entryList.model;\n    return `${label}`;\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{getHeader(entryList)}}\n         -->\n        \n    \n    \n        \n        \n        \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{getHeader(entryList)}}         -->                                                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntryService.html":{"url":"injectables/EntryService.html","title":"injectable - EntryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EntryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entry/entry.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resourceService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                save\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry/entry.service.ts:14\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, config?: ItemConfig, cleanReadOnly)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:76\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    ItemConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cleanReadOnly\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(model: string, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:100\n                            \n                        \n\n\n                \n                    \n                            Creates a new entry with the given value for the given model. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(model: string, entry: EntryResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            deletes the given entry and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(model: string, entryItem: Item, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entryItem\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        update(model, entryItem: Item, value: Object, safePut)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Updates the given entry with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        entryItem\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        safePut\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { Item, ItemConfig } from '@ec.components/core';\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class EntryService {\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public resourceService: ResourceService) {}\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: any): Observable {\n    if (filter.model) {\n      filter.relation = `model.${filter.model}`;\n      delete filter.model;\n    }\n    console.warn(`EntryService.change is deprecated! Use ResourceService.change instead!\n    Make sure to change the \"model\" property to \"relation\" with prefix \"model.\":\n\n    this.entryService.change({model:'muffin'}) // OLD\n    // CHANGE TO\n    this.resourceService.change({relation:'model.muffin'}) // NEW\n\n    The EntryService#change method will be removed in a future release!\n    `);\n    return this.resourceService.change(filter);\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entryItem: Item, value: Object) {\n    const entry = entryItem.getBody();\n    if (entry && entry.save) {\n      return this.update(model, entryItem, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  async update(model, entryItem: Item, value: Object, safePut = true): Promise {\n    const oldValues = {}; // save old values\n    const entry = entryItem.getBody();\n    Object.keys(value).forEach((key) => (oldValues[key] = entry[key]));\n    // TODO: EDITOR-263 get model config, clean readOnly fields too. Add custom filter argument to clean method\n    Object.assign(entry, this.clean(value, entryItem.config, true)); // assign new form values\n    return entry\n      .save(safePut)\n      .then((_entry) => {\n        this.resourceService.changes.next({ relation: `model.${model}`, resource: _entry, type: 'put' });\n        return _entry;\n      })\n      .catch((err) => {\n        Object.assign(entry, this.clean(oldValues)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' || ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object, config?: ItemConfig, cleanReadOnly = false): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') {\n          // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) {\n          // filter system properties\n          delete value[key];\n        }\n        if (config && config.fields && config.fields[key]) {\n          if (config.fields[key].immutable || (cleanReadOnly && config.fields[key].readOnly)) {\n            delete value[key];\n          } else if (config.fields[key].beforeSave) {\n            value[key] = config.fields[key].beforeSave(value[key], config.fields[key], value);\n          }\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api\n      .createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // TODO: make sure leveled entries are returned leveled\n        this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'post' });\n        return entry;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/notifications/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/error/error.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:12\n                            \n                        \n                \n                    \n                        The error that should be displayed \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            change update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            initial update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            updates error message  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  */\n@Component({\n  selector: 'ec-error',\n  templateUrl: './error.component.html',\n})\n/** Displays an error thrown by the SDK. */\nexport class ErrorComponent implements OnInit, OnChanges {\n  /** The error that should be displayed */\n  @Input() error: any;\n\n  constructor(private symbol: SymbolService) {}\n\n  /** initial update */\n  ngOnInit() {\n    this.update();\n  }\n  /** change update */\n  ngOnChanges() {\n    this.update();\n  }\n  /** updates error message  */\n  update() {\n    if (!this.error) {\n      return;\n    }\n    const message = this.symbol.resolve('error.' + this.error.code);\n    if (message) {\n      this.error.message = message;\n    }\n  }\n}\n\n    \n\n    \n        {{error.code}}\n{{error.dataPath}}\n{{error?.message}}\n{{error.detail}}{{error.verbose?': '+error.verbose:''}}\n\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{error.code}}{{error.dataPath}}{{error?.message}}{{error.detail}}{{error.verbose?\\': \\'+error.verbose:\\'\\'}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/field/field.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        FieldConfigProperty\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                autofocus\n                            \n                            \n                                    Optional\n                                beforeSave\n                            \n                            \n                                class\n                            \n                            \n                                    Optional\n                                filterable\n                            \n                            \n                                    Optional\n                                filterOperator\n                            \n                            \n                                    Optional\n                                filterPopClass\n                            \n                            \n                                    Optional\n                                form\n                            \n                            \n                                    Optional\n                                hidden\n                            \n                            \n                                    Optional\n                                hideFormLabel\n                            \n                            \n                                    Optional\n                                hideFormLabelIfEmpty\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                input\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                maxItems\n                            \n                            \n                                    Optional\n                                output\n                            \n                            \n                                    Optional\n                                placeholder\n                            \n                            \n                                    Optional\n                                property\n                            \n                            \n                                    Optional\n                                required\n                            \n                            \n                                    Optional\n                                sortable\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                validate\n                            \n                            \n                                values\n                            \n                            \n                                    Optional\n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColumns\n                            \n                            \n                                getComponent\n                            \n                            \n                                getLabel\n                            \n                            \n                                getPlaceholder\n                            \n                            \n                                getView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, config: FieldConfigProperty)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/field/field.ts:55\n                            \n                        \n\n                \n                    \n                            A Field is constructed by assigning the given config and the property to itself\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            autofocus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:13\n                            \n                        \n\n                \n                    \n                        If true, the field will autofocus after view init \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            beforeSave\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:21\n                            \n                        \n\n                \n                    \n                        Custom clean function to prepare for save \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:43\n                            \n                        \n\n                \n                    \n                        Class string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:49\n                            \n                        \n\n                \n                    \n                        if false, the field will not be filterable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterOperator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:31\n                            \n                        \n\n                \n                    \n                        The operator to use for filtering: exact, search, any etc.. see ec.sdk doc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterPopClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:33\n                            \n                        \n\n                \n                    \n                        Defines the class for the filter pop, e.g. in list header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:39\n                            \n                        \n\n                \n                    \n                        Wether or not the field should appear in default forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:11\n                            \n                        \n\n                \n                    \n                        If true, the field will not be visible anywhere \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hideFormLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:35\n                            \n                        \n\n                \n                    \n                        If true, the form input label will always be hidden \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hideFormLabelIfEmpty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:37\n                            \n                        \n\n                \n                    \n                        If true, the form input label will be hidden if no value is set \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:53\n                            \n                        \n\n                \n                    \n                        Icon name that should be associated with the field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:45\n                            \n                        \n\n                \n                    \n                        id for form labels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:23\n                            \n                        \n\n                \n                    \n                        Custom Component to display form input *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:29\n                            \n                        \n\n                \n                    \n                        Label for Inputs. Defaults to property name. If false, the label is empty. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:51\n                            \n                        \n\n                \n                    \n                        Defines the maximum of visible item (for tags view or similar). Defaults to 10 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:25\n                            \n                        \n\n                \n                    \n                        Custom Component to display value *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:27\n                            \n                        \n\n                \n                    \n                        Placeholder in inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the field's property \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:7\n                            \n                        \n\n                \n                    \n                        Tells if the field is required in forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:47\n                            \n                        \n\n                \n                    \n                        if false, the field will not be sortable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:15\n                            \n                        \n\n                \n                    \n                        The field's type \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:19\n                            \n                        \n\n                \n                    \n                        Custom Validation function \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:41\n                            \n                        \n\n                \n                    \n                        Possible Values e.g. in a select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:17\n                            \n                        \n\n                \n                    \n                        The field's view \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColumns()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:71\n                            \n                        \n\n\n                \n                    \n                            Returns the column class for data-col, based on configured columns \n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(occasion?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:86\n                            \n                        \n\n\n                \n                    \n                            Returns the component for the given occasion \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occasion\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLabel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:75\n                            \n                        \n\n\n                \n                    \n                            Returns the fields label \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlaceholder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlaceholder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:67\n                            \n                        \n\n\n                \n                    \n                            Returns placeholder if any \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getView\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetView(occasion?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:82\n                            \n                        \n\n\n                \n                    \n                            Returns the view for the given occasion \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occasion\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/field/field.ts:53\n                            \n                        \n                \n                    \n                        wildcard for custom config values \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n    \n        Field\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n    \n\n    \n        import { FieldConfigProperty } from '../config/field-config-property.interface';\n\nexport class Field implements FieldConfigProperty {\n  /** Tells if the field is required in forms */\n  required?: boolean;\n  /** The name of the field's property */\n  property?: string;\n  /** If true, the field will not be visible anywhere */\n  hidden?: boolean;\n  /** If true, the field will autofocus after view init */\n  autofocus?: boolean;\n  /** The field's type */\n  type?: string;\n  /** The field's view */\n  view?: string;\n  /** Custom Validation function */\n  validate?: (value, field) => any;\n  /** Custom clean function to prepare for save */\n  beforeSave?: (value?, field?, body?) => any;\n  /** Custom Component to display form input **/\n  input?: any;\n  /** Custom Component to display value **/\n  output?: any;\n  /** Placeholder in inputs */\n  placeholder?: string;\n  /** Label for Inputs. Defaults to property name. If false, the label is empty. */\n  label?: string | boolean;\n  /** The operator to use for filtering: exact, search, any etc.. see ec.sdk doc */\n  filterOperator?: string;\n  /** Defines the class for the filter pop, e.g. in list header. */\n  filterPopClass?: string;\n  /** If true, the form input label will always be hidden */\n  hideFormLabel?: boolean;\n  /** If true, the form input label will be hidden if no value is set */\n  hideFormLabelIfEmpty?: boolean;\n  /** Wether or not the field should appear in default forms */\n  form?: boolean;\n  /** Possible Values e.g. in a select */\n  values: any[] = [];\n  /** Class string */\n  class = '';\n  /** id for form labels */\n  id: string;\n  /** if false, the field will not be sortable in a list */\n  sortable?: boolean;\n  /** if false, the field will not be filterable in a list */\n  filterable?: boolean;\n  /** Defines the maximum of visible item (for tags view or similar). Defaults to 10 */\n  maxItems?: number;\n  /** Icon name that should be associated with the field */\n  icon?: string;\n  /** wildcard for custom config values */\n  [key: string]: any;\n\n  /** A Field is constructed by assigning the given config and the property to itself*/\n  constructor(property: string, config: FieldConfigProperty) {\n    if (config) {\n      Object.assign(this, config);\n    }\n    Object.assign(this, { property: property });\n    this.id = `${this.property}_${Date.now()}`;\n  }\n\n  /** Returns placeholder if any */\n  getPlaceholder() {\n    return this.placeholder || this.label || this.property;\n  }\n  /** Returns the column class for data-col, based on configured columns */\n  getColumns() {\n    return (this.columns || 12) + '-sm';\n  }\n  /** Returns the fields label */\n  getLabel() {\n    if (this.label === false) {\n      return '';\n    }\n    return this.label || this.property;\n  }\n  /** Returns the view for the given occasion */\n  getView(occasion?) {\n    return this[occasion + 'View'] || this.view;\n  }\n  /** Returns the component for the given occasion */\n  getComponent(occasion?) {\n    return this[occasion + 'Component'];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConfig.html":{"url":"interfaces/FieldConfig.html","title":"interface - FieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/config/field-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for list fields.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/config/field-config.interface.ts:6\n                            \n                        \n                \n                    \n                        Each field can be configured in the form of FieldConfigProperty. \n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { FieldConfigProperty } from './field-config-property.interface';\n\n/**\n * Configuration for list fields.\n */\nexport interface FieldConfig {\n  /** Each field can be configured in the form of FieldConfigProperty. */\n  [key: string]: FieldConfigProperty;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for file options used by new assets \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        deduplicate\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        fileName\n                                \n                                \n                                            Optional\n                                        ignoreDuplicates\n                                \n                                \n                                            Optional\n                                        includeAssetIDInPath\n                                \n                                \n                                            Optional\n                                        preserveFilenames\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deduplicate\n                                    \n                                \n                                \n                                    \n                                        deduplicate:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Deduplicate upload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom file form fieldName \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                    \n                                \n                                \n                                    \n                                        fileName:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional custom names for assets. Mapped by indices to assets. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreDuplicates\n                                    \n                                \n                                \n                                    \n                                        ignoreDuplicates:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ignores duplicates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeAssetIDInPath\n                                    \n                                \n                                \n                                    \n                                        includeAssetIDInPath:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Includes assetID in path \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFilenames\n                                    \n                                \n                                \n                                    \n                                        preserveFilenames:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Preserves Filenames \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the FileService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource;\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[];\n  /** The uploaded asset as item */\n  item?: Item;\n  /** The uploaded asset as item */\n  items?: Array>;\n  /** The list where it happened. */\n  list?: ResourceList;\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean;\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean;\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean;\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[];\n  /** Custom file form fieldName */\n  fieldName?: string;\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: [],\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig,\n  ) {}\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, config.filter || {}, {\n          type: assetGroupID,\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) => (only && (match && this.isNewAsset(a))) || (!only && (match || this.isNewAsset(a))),\n        only,\n      );\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id);\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n        if (key in options) {\n          formData.append(key, `${options[key]}`);\n        }\n      });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map((f) => f.url) : this.getFormData(files, options);\n    return api\n      .createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('dmAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve()\n      .then(\n        (): Promise Promise> => {\n          if (files.length === 1) {\n            return this.sdk.api.createAsset(data, {});\n          }\n          return this.sdk.api.createAssets(data, {});\n        },\n      )\n      .then((res) => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      })\n      .then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('legacyAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(\n    assets: Array,\n    assetGroupID?: string,\n  ): Promise> {\n    console.warn(\n      'FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.',\n    );\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) {\n      // new assets\n      return this.sdk.api\n        .dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then((dmAssetList) => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then(\n      (): any => {\n        if (unresolved.length === 1) {\n          return this.sdk.api.asset(unresolved[0]).then((asset) => {\n            return [asset];\n          });\n        }\n        return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 }).then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ? resolved.find((resource) => resource.assetID === asset) : asset,\n          );\n        });\n      },\n    );\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nAssetDirective\n\nAssetDirective\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nTagSelectComponent\n\nTagSelectComponent\n\nFilesModule -->\n\nTagSelectComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nTagSelectComponent \n\nTagSelectComponent \n\nTagSelectComponent  -->\n\nFilesModule->TagSelectComponent \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\n\n\nResourceModule\n\nResourceModule\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AssetDirective\n                        \n                        \n                            AssetListComponent\n                        \n                        \n                            AssetListPopComponent\n                        \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            DropzoneDirective\n                        \n                        \n                            ImageDirective\n                        \n                        \n                            ImageSelectPopComponent\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                        \n                            UploadSelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AssetDirective\n                        \n                        \n                            AssetListComponent\n                        \n                        \n                            AssetListPopComponent\n                        \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            DropzoneDirective\n                        \n                        \n                            ImageDirective\n                        \n                        \n                            ImageSelectPopComponent\n                        \n                        \n                            SdkModule\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                        \n                            UploadSelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { AssetListComponent } from '../asset-list/asset-list.component';\nimport { ResourceModule } from '../resource/resource.module';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { AssetListPopComponent } from './asset-list-pop/asset-list-pop.component';\nimport { AssetSelectComponent } from './asset-select/asset-select.component';\nimport { AssetDirective } from './asset/asset.directive';\nimport { AssetgroupSelectComponent } from './assetgroup-select/assetgroup-select.component';\nimport { DropzoneDirective } from './dropzone/dropzone.directive';\nimport { FileService } from './file.service';\nimport { ImageDirective } from './image/image.directive';\nimport { UploadComponent } from './upload/upload.component';\nimport { UploadSelectComponent } from './upload-select/upload-select.component';\nimport { ImageSelectPopComponent } from './image-select-pop/image-select-pop.component';\nimport { TagSelectComponent } from './tag-select/tag-select.component';\n\n@NgModule({\n  entryComponents: [AssetSelectComponent, AssetgroupSelectComponent, UploadComponent, TagSelectComponent],\n  declarations: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    ImageSelectPopComponent,\n    TagSelectComponent,\n  ],\n  imports: [CommonModule, FormsModule, UiModule, SdkModule, ResourceModule],\n  exports: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    SdkModule,\n    ImageSelectPopComponent,\n    TagSelectComponent,\n  ],\n  providers: [FileService],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Focus.html":{"url":"interfaces/Focus.html","title":"interface - Focus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Focus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/focus/focus.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        focusEvent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngAfterViewInit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.interface.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        focusEvent\n                                    \n                                \n                                \n                                    \n                                        focusEvent:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\n\nexport interface Focus {\n  focusEvent: EventEmitter;\n\n  ngAfterViewInit();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/focus/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecFocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                ecFocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ecFocus\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Input, OnInit, AfterViewInit } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ecFocus]',\n})\nexport class FocusDirective implements OnInit, AfterViewInit {\n  @Input() ecFocus: EventEmitter;\n  @Input() autofocus: boolean;\n\n  constructor(private element: ElementRef) {}\n\n  ngAfterViewInit() {\n    if (this.autofocus) {\n      this.ecFocus.emit(true);\n    }\n  }\n\n  ngOnInit() {\n    this.ecFocus.subscribe((event: boolean) => {\n      if (event) {\n        this.element.nativeElement.focus();\n      } else {\n        this.element.nativeElement.blur();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormConfig.html":{"url":"interfaces/FormConfig.html","title":"interface - FormConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/form/form-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                FormConfig is an extension of ItemConfig. \n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disableColumnFilter\n                                \n                                \n                                            Optional\n                                        hideSubmitButton\n                                \n                                \n                                            Optional\n                                        submitButtonLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableColumnFilter\n                                    \n                                \n                                \n                                    \n                                        disableColumnFilter:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the column visibility filter will not be visible \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideSubmitButton\n                                    \n                                \n                                \n                                    \n                                        hideSubmitButton:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no submit button will be rendered. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonLabel\n                                    \n                                \n                                \n                                    \n                                        submitButtonLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label of the submit button \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/** FormConfig is an extension of ItemConfig. */\nexport interface FormConfig extends ItemConfig {\n  /** If true, no submit button will be rendered. */\n  hideSubmitButton?: boolean;\n  /** The label of the submit button */\n  submitButtonLabel?: string;\n  /** If true, the column visibility filter will not be visible */\n  disableColumnFilter?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nFormModule->UtilityModule \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nCalendarModule\n\nCalendarModule\n\nFormModule -->\n\nCalendarModule->FormModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nFormModule -->\n\nUtilityModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DatetimeComponent\n                        \n                        \n                            DefaultInputComponent\n                        \n                        \n                            DefaultOutputComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            MaxItemsPipe\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            VisibleFieldsPipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DefaultInputComponent\n                        \n                        \n                            DefaultOutputComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CalendarModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            IoModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatetimeComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            IoModule\n                        \n                        \n                            MaxItemsPipe\n                        \n                        \n                            PopModule\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            UtilityModule\n                        \n                        \n                            VisibleFieldsPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopModule } from '../pop/pop.module';\nimport { FormService } from './form.service';\nimport { VisibleFieldsPipe } from './visible-fields.pipe';\nimport { IoModule } from '../io/io.module';\nimport { DatetimeComponent } from './datetime/datetime.component';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { IconModule } from '../icon/icon.module';\nimport { MaxItemsPipe } from './max-items.pipe';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { DefaultInputComponent } from './default-input/default-input.component';\nimport { DefaultOutputComponent } from './default-output/default-output.component';\nimport { CalendarModule } from '@ec.components/calendar';\nimport { UtilityModule } from '../utility/utility.module';\n\nexport const formModuleConfig = {\n  entryComponents: [DefaultInputComponent, DefaultOutputComponent],\n  declarations: [\n    FormComponent,\n    DatetimeComponent,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PopModule,\n    IoModule,\n    LoaderModule,\n    IconModule,\n    SymbolModule,\n    CalendarModule,\n    UtilityModule,\n  ],\n  exports: [\n    UtilityModule,\n    ReactiveFormsModule,\n    IoModule,\n    FormComponent,\n    DatetimeComponent,\n    PopModule,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n  ],\n  providers: [\n    FormService,\n    /* {\n      provide: 'moment.format.date',\n      useValue: SymbolService.resolve('moment.format.date')\n    },\n    {\n      provide: 'moment.format.time',\n      useValue: SymbolService.resolve('moment.format.time')\n    },\n    {\n      provide: 'moment.format.month',\n      useValue: SymbolService.resolve('moment.format.month')\n    } */\n  ],\n};\n\n@NgModule(formModuleConfig)\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/form/form.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the interface between Angular Forms and ec.components core classes. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addField\n                            \n                            \n                                getFormLabel\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                getValidators\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                    Public\n                                shouldBePartOfForm\n                            \n                            \n                                validateFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addField(field: Field, form: Form, group: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            adds a new field to a form. handles form group and control \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        group\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormLabel(form: FormComponent, label)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:85\n                            \n                        \n\n\n                \n                    \n                            Returns label for given form (e.g. Edit label) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.symbol.resolve('resource.generic')\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroup(form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Initializes the form group from the form fields\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidators(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Extracts all validators from a given Field instance. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReadOnly\n                            \n                            \n                        \n                    \n                \n                \n                    \nisReadOnly(field, form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:80\n                            \n                        \n\n\n                \n                    \n                            Returns true if the field should be readOnly, depending on its config and the form state. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldBePartOfForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldBePartOfForm(field, form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:14\n                            \n                        \n\n\n                \n                    \n                            Returns true if the field should be included in the form.\nDecides based on field config values form, edit and create \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateFactory(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Returns a Validation function from the given field (using field.validate) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationErrors | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Form, Field } from '@ec.components/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { SymbolService } from '../symbol/symbol.service';\nimport { FormComponent } from '../form/form.component';\n\n/** This service is the interface between Angular Forms and ec.components core classes. */\n@Injectable()\nexport class FormService {\n  constructor(public symbol: SymbolService) {}\n\n  /** Returns true if the field should be included in the form.\n   * Decides based on field config values form, edit and create */\n  public shouldBePartOfForm(field, form) {\n    if (field.create === false && !form.getBody()) {\n      return false;\n    }\n    if (field.edit === false && !!form.getBody()) {\n      return false;\n    }\n    return field.form !== false;\n  }\n\n  /** Initializes the form group from the form fields*/\n  public getGroup(form: Form) {\n    const controls = {};\n    form.fields\n      .filter((field) => this.shouldBePartOfForm(field, form))\n      .forEach((field) => {\n        const validators = this.getValidators(field);\n        controls[field.property] = new FormControl(\n          {\n            value: form.getValue(field.property),\n            disabled: this.isReadOnly(field, form),\n          },\n          validators,\n        );\n        // TODO use { updateOn: blur } when updating to angular 5.0.0\n        // see https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4\n      });\n    return new FormGroup(controls);\n  }\n\n  /** adds a new field to a form. handles form group and control */\n  public addField(field: Field, form: Form, group: FormGroup) {\n    console.warn('addField is experimental!');\n    const validators = this.getValidators(field);\n    const control = new FormControl({ value: form.getValue(field.property) }, validators);\n    group.addControl(field.property, control);\n  }\n\n  /** Extracts all validators from a given Field instance. */\n  getValidators(field: Field): ValidatorFn[] {\n    const validators = [];\n    if (field.required) {\n      validators.push(Validators.required);\n    }\n    if (field.validate) {\n      validators.push(this.validateFactory(field));\n    }\n    return validators;\n  }\n\n  /** Returns a Validation function from the given field (using field.validate) */\n  validateFactory(field: Field): ValidationErrors | null {\n    return (control: AbstractControl) => {\n      if (!field.validate) {\n        return;\n      }\n      const error = field.validate(control.value, field);\n      if (error) {\n        return {\n          custom: error,\n        };\n      }\n    };\n  }\n\n  /** Returns true if the field should be readOnly, depending on its config and the form state. */\n  isReadOnly(field, form) {\n    return field.immutable || (field.readOnly && form && !!form.getBody());\n  }\n\n  /** Returns label for given form (e.g. Edit label) */\n  getFormLabel(form: FormComponent, label = this.symbol.resolve('resource.generic')) {\n    if (!form || !form.form) {\n      return '';\n    }\n    return `${this.symbol.resolve('resource.' + (form.form.isEditing() ? 'edit' : 'create'))}\n    ${label} ${form.form.display() ? `\"${form.form.display()}\"` : ''}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/location/src/lib/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Wraps google maps api to handle geocode operations \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autocompleteAddress\n                            \n                            \n                                geocodeLatLng\n                            \n                            \n                                    Public\n                                getNearestAddress\n                            \n                            \n                                    Public\n                                observeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapLoader: MapsAPILoader, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/geocode.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapLoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autocompleteAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        autocompleteAddress(el)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Turns an input element to an maps autocomplete searchbar. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocodeLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocodeLatLng(geocoder, location)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Reverse address lookup for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocoder\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        location\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNearestAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNearestAddress(location: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the nearest address for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observeElement(el)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Observes a given input element, transforming it into an autocomplete \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from '@agm/core';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { from } from 'rxjs';\n\n/** declares google namespace */\ndeclare var google: any;\n\n/** Wraps google maps api to handle geocode operations */\n@Injectable()\nexport class GeocodeService {\n  constructor(private mapLoader: MapsAPILoader, private ngZone: NgZone) {}\n\n  /** Observes a given input element, transforming it into an autocomplete */\n  public observeElement(el) {\n    return new Observable((observer) => {\n      const autocomplete = new google.maps.places.Autocomplete(el, {\n        types: ['address'],\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          // get the place result\n          const place = autocomplete.getPlace();\n          // verify result\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n          const coords = {\n            latitude: place.geometry.location.lat(),\n            longitude: place.geometry.location.lng(),\n          };\n          observer.next(coords);\n          /* observer.complete(); */\n        });\n      });\n    });\n  }\n\n  /** Turns an input element to an maps autocomplete searchbar. */\n  public autocompleteAddress(el): Observable {\n    return from(this.mapLoader.load()).pipe(switchMap(() => this.observeElement(el)));\n  }\n\n  /** Reverse address lookup for a given location */\n  geocodeLatLng(geocoder, location): Promise {\n    return new Promise((resolve, reject) => {\n      geocoder.geocode({ location }, (results, status) => {\n        if (status === 'OK') {\n          resolve(results);\n        } else {\n          reject(status);\n        }\n      });\n    });\n  }\n\n  /** Returns the nearest address for a given location */\n  public getNearestAddress(location: { latitude: number; longitude: number }): Promise> {\n    return this.mapLoader.load().then(() => {\n      return this.geocodeLatLng(new google.maps.Geocoder(), {\n        lat: location.latitude,\n        lng: location.longitude,\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupPipe.html":{"url":"pipes/GroupPipe.html","title":"pipe - GroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/list/group.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        group\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: Array>, property: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/group.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Item } from '@ec.components/core';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'group',\n})\nexport class GroupPipe implements PipeTransform {\n  transform(items: Array>, property: string, value: any): any {\n    if (!property) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.group(property) === value;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/sdk/history.service.ts\n        \n\n            \n                Description\n            \n            \n                The HistoryService keeps track of live updates for models entries and datamanagers. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventSources\n                            \n                            \n                                    Public\n                                loaderService\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promises\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableUpdates\n                            \n                            \n                                enableUpdates\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService, loaderService: LoaderService, router: Router, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableUpdates(key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the event stream for the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \nenableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Enables Updates for the given resource. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            Toggles live updates on the resource and stores them under the given key.\nThe relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventSources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                        EventSources that are active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promises\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:15\n                            \n                        \n\n                \n                    \n                        Current loaded histories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport ModelResource from 'ec.sdk/lib/resources/datamanager/ModelResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { Router } from '@angular/router';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport * as EventSource from 'eventsource/lib/eventsource-polyfill';\n\n/** The HistoryService keeps track of live updates for models entries and datamanagers. */\n@Injectable()\nexport class HistoryService {\n  /** Current loaded histories */\n  promises: { [relation: string]: Promise } = {};\n  /** EventSources that are active */\n  eventSources: { [relation: string]: any } = {}; // EventSource[]\n\n  constructor(\n    public notificationService: NotificationsService,\n    public loaderService: LoaderService,\n    public router: Router,\n    public resourceService: ResourceService,\n  ) {}\n  /** Toggles live updates on the resource and stores them under the given key.\n   * The relation is passed through the Update instances on change. */\n  toggle(\n    resource: ModelResource | DataManagerResource | EntryResource,\n    relation: string,\n    key = this.router.url.split('?')[0],\n  ) {\n    if (this.promises[key] && !this.eventSources[relation]) {\n      return this.promises[key];\n    }\n    this.disableUpdates(key);\n    this.promises[key] = this.enableUpdates(resource, relation, key)\n      .then((source) => {\n        this.eventSources[key] = source;\n      })\n      .catch((error) => {\n        delete this.promises[key];\n      });\n    this.loaderService.wait(this.promises[key]);\n  }\n\n  /** Closes the event stream for the given key */\n  disableUpdates(key = this.router.url.split('?')[0]) {\n    if (this.eventSources[key]) {\n      this.eventSources[key].close();\n      delete this.promises[key];\n      delete this.eventSources[key];\n      return;\n    }\n  }\n\n  /** Enables Updates for the given resource. The relation is passed through the Update instances on change. */\n  enableUpdates(\n    resource: ModelResource | DataManagerResource | EntryResource,\n    relation: string,\n    key = this.router.url.split('?')[0],\n  ) {\n    if (!resource || !resource.newHistory) {\n      throw new Error('cannot get history: no newHistory method found on given resource');\n    }\n    if (this.promises[key]) {\n      return this.promises[key];\n    }\n    DataManager.enableHistoryEvents(EventSource);\n    const loading = resource\n      .newHistory()\n      .then((source) => {\n        source.addEventListener(\n          'entryUpdated',\n          (e) => {\n            const data = JSON.parse(e.data);\n            this.resourceService.changes.next({\n              relation,\n              type: 'put',\n              identifier: data ? data.entryID : '',\n            });\n          },\n          false,\n        );\n        source.addEventListener(\n          'entryCreated',\n          (e) => {\n            const data = JSON.parse(e.data);\n            this.resourceService.changes.next({\n              relation,\n              type: 'post',\n              identifier: data ? data.entryID : '',\n            });\n          },\n          false,\n        );\n        return source;\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: 'History Error',\n          error,\n        });\n      });\n    this.loaderService.wait(loading);\n    return loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        Displays icons by name. If the matching Icon (from registry contains a content, the content is shown.\nIf not, is is expected to be a ec-icon.\nhttps://components.entrecode.de/ui/icons?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/icon/icon.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                    IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:16\n                            \n                        \n                \n                    \n                        The name of the icon. An Icon with this name is expected to be present in the current iconService registry. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:18\n                            \n                        \n\n                \n                    \n                        The resolved icon (by name) \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Icon\nOpen Demo\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n    \n\n    \n        import { Component, OnInit, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { IconService } from './icon.service';\nimport { Symbol } from '../symbol/symbol.interface';\n\n/** Displays icons by name. If the matching Icon (from registry contains a content, the content is shown.\n * If not, is is expected to be a ec-icon.\n * https://components.entrecode.de/ui/icons?e=1\n */\n@Component({\n  selector: 'ec-icon',\n  templateUrl: './icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IconComponent implements OnInit, OnChanges {\n  /** The name of the icon. An Icon with this name is expected to be present in the current iconService registry. */\n  @Input() name: string;\n  /** The resolved icon (by name) */\n  icon: Symbol;\n  constructor(private iconService: IconService) {}\n  /** The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. */\n  resolve() {\n    this.icon = this.iconService.get(this.name);\n    if (!this.icon) {\n      console.warn(`Icon ${this.name} cannot be found. Using the following icon registry:`, this.iconService.registry);\n    }\n  }\n  ngOnInit() {\n    this.resolve();\n  }\n  ngOnChanges() {\n    this.resolve();\n  }\n}\n\n    \n\n    \n        \n{{icon.content}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{icon.content}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IconModule.html":{"url":"modules/IconModule.html","title":"module - IconModule","body":"\n                   \n\n\n\n\n    Modules\n    IconModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\n\nIconComponent\n\nIconComponent\n\n\n\nIconModule\n\nIconModule\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/icon/icon.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IconComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            IconService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IconComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconComponent } from './icon.component';\nimport { IconService } from './icon.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [IconComponent],\n  exports: [IconComponent],\n  providers: [IconService],\n})\nexport class IconModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/icon/icon.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons)\nhttps://components.entrecode.de/ui/icons?e=1\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : ecIcons\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.service.ts:11\n                            \n                        \n\n                \n                    \n                        The current icon set that is registered to the service. It will be used to resolve icons from. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ecIcons } from './ec-icons';\nimport { Symbol } from '../symbol/symbol.interface';\nimport { SymbolService } from '../symbol/symbol.service';\n/** Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons)\n * https://components.entrecode.de/ui/icons?e=1\n */\n@Injectable()\nexport class IconService extends SymbolService {\n  /** The current icon set that is registered to the service. It will be used to resolve icons from. */\n  public registry: Symbol[] = ecIcons;\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDirective.html":{"url":"directives/ImageDirective.html","title":"directive - ImageDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ImageDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/image/image.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        img [ecImage]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setUrl\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecImage\n                            \n                            \n                                size\n                            \n                            \n                                thumb\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/image/image.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecImage\n                    \n                \n                \n                    \n                        Type :     string | DMAssetResource\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:18\n                            \n                        \n                \n                    \n                        The assetID that should be loaded \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:16\n                            \n                        \n                \n                    \n                        The size that should be requested. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        thumb\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:14\n                            \n                        \n                \n                    \n                        If true, the image will be requested as thumb (square) \n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:27\n                            \n                        \n\n\n                \n                    \n                            Reads ecImage input as assetId and loads if autoload is not false \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(asset: PublicAssetResource | DMAssetResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                        \n                                                                    PublicAssetResource | DMAssetResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:20\n                            \n                        \n\n                \n                    \n                        Resolved asset url. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ecImage\nThis directive can be used to load an image:\n\nID: {{myImage.asset?.assetID}}\n    \n\n    \n        import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { AssetDirective } from '../asset/asset.directive';\nimport { SdkService } from '../../sdk/sdk.service';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\n\n/** Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. */\n@Directive({\n  selector: 'img [ecImage]',\n  exportAs: 'ecImage',\n})\nexport class ImageDirective extends AssetDirective implements OnChanges {\n  /** If true, the image will be requested as thumb (square) */\n  @Input() thumb: boolean;\n  /** The size that should be requested. */\n  @Input() size = 200;\n  /** The assetID that should be loaded */\n  @Input() ecImage: string | DMAssetResource;\n  /** Resolved asset url. */\n  url: string;\n\n  constructor(public sdk: SdkService, private elementRef: ElementRef) {\n    super(sdk);\n  }\n\n  /** Reads ecImage input as assetId and loads if autoload is not false */\n  ngOnChanges() {\n    if (typeof this.ecImage === 'string') {\n      this.assetId = this.ecImage;\n    } else if (this.ecImage && this.ecImage.assetID) {\n      this.use(this.ecImage);\n    }\n    if (this.autoload !== false && this.assetId) {\n      this.load();\n    }\n  }\n\n  /** Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) */\n  load(id?: string) {\n    return super.load(id).then(this.use.bind(this));\n  }\n\n  use(asset: PublicAssetResource | DMAssetResource) {\n    return Promise.resolve()\n      .then(() => {\n        if (asset.type !== 'image') {\n          return Promise.reject(`ecImage only works for assets of type image.\n        Loaded id ${asset.id} is of type ${asset.type}`);\n        }\n        if (asset instanceof DMAssetResource) {\n          // new asset\n          return asset.getFileVariant(this.size, this.thumb);\n        } else if (asset instanceof PublicAssetResource) {\n          // old asset\n          if (this.thumb) {\n            return asset.getImageThumbUrl(this.size, '');\n          }\n          return asset.getImageUrl(this.size, '');\n        }\n      })\n      .then(this.setUrl.bind(this));\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n    this.elementRef.nativeElement.src = this.url;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageSelectPopComponent.html":{"url":"components/ImageSelectPopComponent.html","title":"component - ImageSelectPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageSelectPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a pop with a form to add images. You can set an the alternative Text and the size.\nThe size inputs will keep the image ratio by default.  \n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-image-select-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./image-select-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                imageForm\n                            \n                            \n                                imageLoader\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                defaultSize\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, sdk: SdkService, symbol: SymbolService, fileService: FileService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:26\n                            \n                        \n                \n                    \n                        The assetGroupID to pick from \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultSize\n                    \n                \n                \n                    \n                        Default value : 400\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:28\n                            \n                        \n                \n                    \n                        The default size used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:30\n                            \n                        \n                \n                    \n                        Ouput that emits when image changes  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'dialog-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:36\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Inits the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:88\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:58\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:72\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:63\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:32\n                            \n                        \n\n                \n                    \n                        The instance of the imageForm  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('imageLoader')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:34\n                            \n                        \n\n                \n                    \n                        The loader that is shown after an image has been selected  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { FormConfig } from '@ec.components/core';\nimport { FormComponent, LoaderComponent, PopComponent, PopService, SymbolService } from '@ec.components/ui';\nimport { DefaultEntryInputComponent } from '../../entry-form/default-entry-input.component';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileService } from '../file.service';\n\n/** This component is a pop with a form to add images. You can set an the alternative Text and the size.\n * The size inputs will keep the image ratio by default.  */\n@Component({\n  selector: 'ec-image-select-pop',\n  templateUrl: './image-select-pop.component.html',\n})\nexport class ImageSelectPopComponent extends PopComponent implements OnInit {\n  /** The assetGroupID to pick from */\n  @Input() assetGroupID;\n  /** The default size used */\n  @Input() defaultSize = 400;\n  /** Ouput that emits when image changes  */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** The instance of the imageForm  */\n  imageForm: FormConfig;\n  /** The loader that is shown after an image has been selected  */\n  @ViewChild('imageLoader') imageLoader: LoaderComponent;\n  /** Set host class to make sure the type is used */\n  @HostBinding('class') class = 'dialog-wrapper';\n\n  constructor(\n    public popService: PopService,\n    public sdk: SdkService,\n    public symbol: SymbolService,\n    public fileService: FileService,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(popService, elementRef, cdr);\n  }\n  /** Inits the form */\n  ngOnInit() {\n    const isOldAssetGroupID = this.fileService.isOldAssetGroupID(this.assetGroupID);\n    this.imageForm = {\n      submitButtonLabel: this.symbol.resolve('image-select-pop.submitButtonLabel'),\n      onSave: (form, value: { img; height; width; alt }) => {\n        const size = Math.max(value.width, value.height);\n        if (isOldAssetGroupID) {\n          this.sdk.api\n            .asset(value.img)\n            .then((asset) => asset.getImageUrl(size, ''))\n            .then((url) => {\n              this.hide();\n              this.changed.emit({ url, alt: value.alt, size });\n            });\n        } else {\n          const loadImage = this.sdk.api\n            .dmAsset(this.assetGroupID, value.img)\n            .then((asset) => asset.getImageUrl(size))\n            .then((url) => {\n              this.hide();\n              this.changed.emit({ url, alt: value.alt, size });\n            });\n          this.imageLoader.wait(loadImage);\n        }\n      },\n      fields: {\n        img: {\n          label: ' ',\n          input: DefaultEntryInputComponent,\n          inputView: isOldAssetGroupID ? 'asset-select' : 'dmAsset-select',\n          relation: !isOldAssetGroupID ? this.assetGroupID : 'legacyAsset',\n          required: true,\n          changed: (value, form) => {\n            const loadImg = Promise.resolve()\n              .then(() => {\n                if (isOldAssetGroupID) {\n                  return this.sdk.api.asset(value).then((asset) => {\n                    const original = asset.getOriginalFile();\n                    const resolution = original.resolution;\n                    return { resolution, title: asset.title };\n                  });\n                } else {\n                  return this.sdk.api.dmAsset(this.assetGroupID, value).then((asset) => {\n                    const resolution = asset.file.resolution;\n                    return { resolution, title: asset.title };\n                  });\n                }\n              })\n              .then(({ resolution, title }) => {\n                const ratio = resolution.width / resolution.height;\n                const width = Math.min(this.defaultSize, resolution.width);\n                form.group.controls.width.setValue(width);\n                form.group.controls.alt.setValue(title);\n                form.group.controls.ratio.setValue(ratio);\n              });\n            this.imageLoader.wait(loadImg);\n          },\n        },\n        alt: {\n          label: this.symbol.resolve('image-select-pop.alt'),\n          view: 'string',\n        },\n        ratio: {\n          hideInForm: true,\n          view: 'number',\n        },\n        keepRatio: {\n          label: this.symbol.resolve('image-select-pop.keepRatio'),\n          view: 'boolean',\n          prefill: true,\n          changed: (value) => {\n            if (value === true) {\n              console.log('should fix ratio now...');\n            }\n          },\n        },\n        width: {\n          label: this.symbol.resolve('image-select-pop.width'),\n          view: 'number',\n          columns: 6,\n          changed: (value, form: FormComponent) => {\n            const ratio = form.getValue('ratio');\n            if (ratio && form.getValue('keepRatio')) {\n              form.group.controls.height.setValue(Math.round(value / ratio));\n            }\n          },\n        },\n        height: {\n          label: this.symbol.resolve('image-select-pop.height'),\n          view: 'number',\n          columns: 6,\n          changed: (value, form) => {\n            const ratio = form.getValue('ratio');\n            if (ratio && form.getValue('keepRatio')) {\n              form.group.controls.width.setValue(Math.round(value * ratio));\n            }\n          },\n        },\n      },\n    };\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{'image-select-pop.header' | symbol}}\n    \n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{\\'image-select-pop.header\\' | symbol}}                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImageSelectPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/input/input.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-input\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentInstance\n                            \n                            \n                                disabled\n                            \n                            \n                                focusEvent\n                            \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connectControl\n                            \n                            \n                                focus\n                            \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                config\n                            \n                            \n                                control\n                            \n                            \n                                debounce\n                            \n                            \n                                field\n                            \n                            \n                                group\n                            \n                            \n                                item\n                            \n                            \n                                lazy\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                ready\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:52\n                            \n                        \n                \n                    \n                        Overrides the default component \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:50\n                            \n                        \n                \n                    \n                        Config that should be used, only needed when not using field input \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     AbstractControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:36\n                            \n                        \n                \n                    \n                        The belonging form control. This is not required if you pass in a field and group. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:42\n                            \n                        \n                \n                    \n                        Debounce time in ms before the changed event emits. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :     Field\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:44\n                            \n                        \n                \n                    \n                        The instance of field that should be used in the template, can also be a property name. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        group\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:32\n                            \n                        \n                \n                    \n                        The belonging form group \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:48\n                            \n                        \n                \n                    \n                        The belonging item \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:54\n                            \n                        \n                \n                    \n                        If true, the input will never reinit/reload. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:46\n                            \n                        \n                \n                    \n                        The property name that is edited. Expects a form as item input \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:38\n                            \n                        \n                \n                    \n                        The changed ouput emits whenever the form control of the input changes. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:40\n                            \n                        \n                \n                    \n                        Emits when the component has been loaded \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectControl\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectControl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDisabledState(isDisabled)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:17\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:57\n                            \n                        \n\n                \n                    \n                        Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\nYou can access a form's InputComponents via FormComponent#inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:34\n                            \n                        \n\n                \n                    \n                        If true, the input is readonly. Is set by ControlValueAccessor#setDisabled \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:61\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:140\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:59\n                            \n                        \n\n                \n                    \n                        The current value of the input. Needs to be saved for the case the component is not yet loaded \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  Output,\n  Type,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, AbstractControl } from '@angular/forms';\nimport { FieldConfigProperty, Field, Form, Item } from '@ec.components/core';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { DefaultInputComponent } from '../../form/default-input/default-input.component';\nimport { debounceTime } from 'rxjs/operators';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-input',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class InputComponent extends DynamicSlotComponent implements ControlValueAccessor, OnChanges {\n  /** The belonging form group */\n  @Input() group: FormGroup;\n  /** If true, the input is readonly. Is set by ControlValueAccessor#setDisabled */\n  disabled: FormGroup;\n  /** The belonging form control. This is not required if you pass in a field and group. */\n  @Input() control: AbstractControl;\n  /** The changed ouput emits whenever the form control of the input changes. */\n  @Output() changed = new EventEmitter();\n  /** Emits when the component has been loaded */\n  @Output() ready = new EventEmitter();\n  /** Debounce time in ms before the changed event emits. */\n  @Input() debounce = 0;\n  /** The instance of field that should be used in the template, can also be a property name. */\n  @Input() field: Field;\n  /** The property name that is edited. Expects a form as item input */\n  @Input() property: string;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Config that should be used, only needed when not using field input */\n  @Input() config: FieldConfigProperty;\n  /** Overrides the default component */\n  @Input() component: Type;\n  /** If true, the input will never reinit/reload. */\n  @Input() lazy: boolean;\n  /** Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\n   * You can access a form's InputComponents via FormComponent#inputs */\n  componentInstance: InputComponent;\n  /** The current value of the input. Needs to be saved for the case the component is not yet loaded */\n  value: any;\n  /** Emitter to focus the input field */\n  focusEvent: EventEmitter = new EventEmitter();\n\n  ngOnChanges(changes?) {\n    if (!this.lazy || !this.componentInstance || changes.field) {\n      this.init();\n    }\n  }\n\n  focus(focus = true) {\n    if (this.componentInstance && this.componentInstance.focusEvent) {\n      this.componentInstance.focusEvent.emit(focus);\n    } else {\n      console.warn('could not focus component', this.componentInstance);\n    }\n  }\n\n  init() {\n    if (this.property && this.item instanceof Form) {\n      this.field = this.item.getField(this.property);\n    } else if (!this.field && this.config) {\n      this.field = new Field(this.property || 'input', this.config);\n    }\n    if (!this.field) {\n      return;\n    }\n    if (!this.control) {\n      this.control = this.group ? this.group.get(this.field.property) : new FormControl();\n    }\n    if (!this.group) {\n      this.group = new FormGroup({\n        [this.property || this.field.property || 'input']: this.control,\n      });\n    }\n    const data = {\n      group: this.group,\n      control: this.control || this.group ? this.group.get(this.field.property) : null,\n      item: this.item,\n      field: this.field,\n      input: this,\n      config: this.config || this.field.config || {},\n      focusEvent: this.focusEvent,\n    };\n    const componentRef = this.loadComponent(this.component || this.field.input || DefaultInputComponent, data);\n    this.componentInstance = componentRef.instance;\n    this.connectControl();\n    this.ready.emit(this);\n    if (this.componentInstance.control) {\n      this.componentInstance.control.valueChanges.pipe(debounceTime(this.debounce)).subscribe((change) => {\n        this.changed.emit(change);\n        this.propagateChange(change);\n      });\n    }\n    if (this.field && typeof this.field.init === 'function') {\n      this.field.init(this.componentInstance, this);\n    }\n  }\n\n  connectControl() {\n    if (!this.componentInstance) {\n      // console.warn('could not connect control: no instance loaded');\n      return;\n    }\n    this.componentInstance.disabled = this.disabled;\n    if (this.componentInstance.registerOnChange && this.propagateChange) {\n      this.componentInstance.registerOnChange(this.propagateChange);\n    }\n    if (this.value !== undefined) {\n      this.writeValue(this.value);\n    }\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    if (this.componentInstance && this.componentInstance.writeValue) {\n      this.componentInstance.writeValue(value);\n    }\n    this.value = value;\n  }\n\n  propagateChange = (_: any) => {};\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n    this.connectControl();\n  }\n\n  registerOnTouched() {}\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    if (this.componentInstance) {\n      if (this.componentInstance.setDisabledState) {\n        this.componentInstance.setDisabledState(isDisabled);\n      } else {\n        this.componentInstance.disabled = isDisabled;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputErrorsComponent.html":{"url":"components/InputErrorsComponent.html","title":"component - InputErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/input-errors/input-errors.component.ts\n\n\n    \n        Description\n    \n    \n        This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-input-errors\n            \n\n\n\n\n            \n                templateUrl\n                ./input-errors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:12\n                            \n                        \n\n                \n                    \n                            Imported error messages. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:12\n                            \n                        \n                \n                    \n                        The form control that should be tracked \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            This method will iterate over the control errors and generate objects for the template. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. */\n@Component({\n  selector: 'ec-input-errors',\n  templateUrl: './input-errors.component.html',\n})\nexport class InputErrorsComponent {\n  /** The form control that should be tracked */\n  @Input() control: FormControl;\n  /** Imported error messages. */\n  constructor(public symbol: SymbolService) {}\n\n  /** This method will iterate over the control errors and generate objects for the template. */\n  public getErrors() {\n    return Object.keys(this.control.errors).reduce((errs, key) => {\n      let message;\n      if (key === 'custom') {\n        message = this.control.errors[key];\n      } else {\n        message = this.symbol.resolve('error.input.' + key) || this.symbol.resolve('error.input.invalid');\n      }\n      errs.push({\n        key: key,\n        error: this.control.errors[key],\n        message,\n      });\n      return errs;\n    }, []);\n  }\n}\n\n    \n\n    \n        \n  {{error.message}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{error.message}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IoModule.html":{"url":"modules/IoModule.html","title":"module - IoModule","body":"\n                   \n\n\n\n\n    Modules\n    IoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\n\n\nIoModule\n\nIoModule\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/io/io.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DynamicRackComponent\n                        \n                        \n                            DynamicSlotComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                        \n                            SlotHostDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DynamicRackComponent\n                        \n                        \n                            DynamicSlotComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                        \n                            SlotHostDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DynamicSlotComponent } from './dynamic-slot/dynamic-slot.component';\nimport { SlotHostDirective } from './slot-host.directive';\nimport { OutputComponent } from './output/output.component';\nimport { InputComponent } from './input/input.component';\nimport { InputErrorsComponent } from './input-errors/input-errors.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicRackComponent } from './dynamic-rack/dynamic-rack.component';\n\n@NgModule({\n  entryComponents: [InputComponent, OutputComponent, InputErrorsComponent],\n  declarations: [\n    InputErrorsComponent,\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n  ],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n})\nexport class IoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemConfig.html":{"url":"interfaces/ItemConfig.html","title":"interface - ItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/item/item-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An ItemConfig describes an abstract entity with certain properties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classes\n                                \n                                \n                                            Optional\n                                        fields\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        identifierPattern\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        onEdit\n                                \n                                \n                                            Optional\n                                        onSave\n                                \n                                \n                                            Optional\n                                        parent\n                                \n                                \n                                            Optional\n                                        resolve\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                    \n                                \n                                \n                                    \n                                        classes:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Items field Config \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to identify items from another (e.g. in a selection). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierPattern\n                                    \n                                \n                                \n                                    \n                                        identifierPattern:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Pattern of the identifier field. Is used e.g. in the searchbar \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to display the item for humans \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEdit\n                                    \n                                \n                                \n                                    \n                                        onEdit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked before the item is edited \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSave\n                                    \n                                \n                                \n                                    \n                                        onSave:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked when the item is saved \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom resolve path function. It can be used e.g. to access subbranches of an Object. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For primitive values only: the title for the item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the Item. It determines how it will be displayed in different contexts \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Item } from './item';\nimport { FieldConfig } from '../config/field-config.interface';\n\n/** An ItemConfig describes an abstract entity with certain properties.*/\nexport interface ItemConfig {\n  /** For primitive values only: the title for the item */\n  title?: string;\n  /** The Property that is used to identify items from another (e.g. in a selection). */\n  identifier?: string;\n  /** Pattern of the identifier field. Is used e.g. in the searchbar */\n  identifierPattern?: RegExp;\n  /** The Property that is used to display the item for humans */\n  label?: string;\n  /** The Items field Config */\n  fields?: FieldConfig;\n  /** The type of the Item. It determines how it will be displayed in different contexts */\n  type?: string;\n  /** Custom resolve path function. It can be used e.g. to access subbranches of an Object. */\n  resolve?: (body: T) => any;\n  /** Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.*/\n  parent?: any;\n  /** Callback that is invoked when the item is saved */\n  onSave?: (item?: Item, value?: Object) => Promise | T; // TODO rename to save\n  /** Callback that is invoked before the item is edited */\n  onEdit?: (value?: T) => Promise | T; // TODO rename to save\n  /** This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class */\n  classes?: (item?: Item) => string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyAction.html":{"url":"interfaces/KeyAction.html","title":"interface - KeyAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                            Optional\n                                        canActivate\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canActivate\n                                    \n                                \n                                \n                                    \n                                        canActivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NotificationsService } from '../../notifications/notifications.service';\n\nexport interface KeyAction {\n  key: string;\n  description: string;\n  action: (e?) => void;\n  canActivate?: (e?) => boolean;\n}\n\n@Injectable()\nexport class KeycommandsService {\n  keys: { [key: string]: KeyAction } = {};\n  muted = false;\n  meta = false;\n\n  constructor(public router: Router, public notificationsService: NotificationsService) {\n    window.addEventListener('keyup', (e) => {\n      if (!this.muted && this.keys[e.key]) {\n        this.activate(this.keys[e.key], e);\n      }\n    });\n    window.addEventListener('mousedown', (e) => {\n      this.meta = e.metaKey;\n    });\n    // prevents shortcuts to be fired when inputs are focused\n    document.addEventListener(\n      'focus',\n      (e) => {\n        this.mute();\n      },\n      true,\n    );\n\n    document.addEventListener(\n      'blur',\n      (e) => {\n        this.unmute();\n      },\n      true,\n    );\n  }\n\n  mute() {\n    this.muted = true;\n  }\n\n  unmute() {\n    this.muted = false;\n  }\n\n  register(keyconfig: KeyAction) {\n    this.keys[keyconfig.key] = keyconfig;\n    return this;\n  }\n\n  activate(keyconfig: KeyAction, e?) {\n    if (!keyconfig.canActivate()) {\n      return;\n    }\n    keyconfig.action(e);\n  }\n\n  copyToClipBoard(value, label) {\n    const el = document.createElement('textarea');\n    el.value = value;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n\n    this.notificationsService.emit({\n      title: `${label} has been copied to the clipboard`,\n      message: value,\n      type: 'info',\n    });\n  }\n\n  copyCellToClipboard(label = 'Cell') {\n    return (item, property) => {\n      this.copyToClipBoard(JSON.stringify(item.resolve(property) || ''), label);\n    };\n  }\n\n  openUrl(url) {\n    window.open(url, '_blank');\n  }\n\n  navigate(path: string[], options = {}) {\n    if (this.meta) {\n      this.openUrl(this.router.serializeUrl(this.router.createUrlTree(path, options)));\n    } else {\n      this.router.navigate(path, options);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeycommandsService.html":{"url":"injectables/KeycommandsService.html","title":"injectable - KeycommandsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  KeycommandsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                keys\n                            \n                            \n                                meta\n                            \n                            \n                                muted\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                copyCellToClipboard\n                            \n                            \n                                copyToClipBoard\n                            \n                            \n                                mute\n                            \n                            \n                                navigate\n                            \n                            \n                                openUrl\n                            \n                            \n                                register\n                            \n                            \n                                unmute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate(keyconfig: KeyAction, e?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyconfig\n                                                        \n                                                                    KeyAction\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyCellToClipboard\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyCellToClipboard(label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'Cell'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (item: any, property: any) => void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyToClipBoard\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyToClipBoard(value, label)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mute\n                            \n                            \n                        \n                    \n                \n                \n                    \nmute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigate\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigate(path: string[], options: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUrl(url)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \nregister(keyconfig: KeyAction)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyconfig\n                                                        \n                                                                    KeyAction\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unmute\n                            \n                            \n                        \n                    \n                \n                \n                    \nunmute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            muted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NotificationsService } from '../../notifications/notifications.service';\n\nexport interface KeyAction {\n  key: string;\n  description: string;\n  action: (e?) => void;\n  canActivate?: (e?) => boolean;\n}\n\n@Injectable()\nexport class KeycommandsService {\n  keys: { [key: string]: KeyAction } = {};\n  muted = false;\n  meta = false;\n\n  constructor(public router: Router, public notificationsService: NotificationsService) {\n    window.addEventListener('keyup', (e) => {\n      if (!this.muted && this.keys[e.key]) {\n        this.activate(this.keys[e.key], e);\n      }\n    });\n    window.addEventListener('mousedown', (e) => {\n      this.meta = e.metaKey;\n    });\n    // prevents shortcuts to be fired when inputs are focused\n    document.addEventListener(\n      'focus',\n      (e) => {\n        this.mute();\n      },\n      true,\n    );\n\n    document.addEventListener(\n      'blur',\n      (e) => {\n        this.unmute();\n      },\n      true,\n    );\n  }\n\n  mute() {\n    this.muted = true;\n  }\n\n  unmute() {\n    this.muted = false;\n  }\n\n  register(keyconfig: KeyAction) {\n    this.keys[keyconfig.key] = keyconfig;\n    return this;\n  }\n\n  activate(keyconfig: KeyAction, e?) {\n    if (!keyconfig.canActivate()) {\n      return;\n    }\n    keyconfig.action(e);\n  }\n\n  copyToClipBoard(value, label) {\n    const el = document.createElement('textarea');\n    el.value = value;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n\n    this.notificationsService.emit({\n      title: `${label} has been copied to the clipboard`,\n      message: value,\n      type: 'info',\n    });\n  }\n\n  copyCellToClipboard(label = 'Cell') {\n    return (item, property) => {\n      this.copyToClipBoard(JSON.stringify(item.resolve(property) || ''), label);\n    };\n  }\n\n  openUrl(url) {\n    window.open(url, '_blank');\n  }\n\n  navigate(path: string[], options = {}) {\n    if (this.meta) {\n      this.openUrl(this.router.serializeUrl(this.router.createUrlTree(path, options)));\n    } else {\n      this.router.navigate(path, options);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        The ListComponent will render a list containing the given items or collection.\nhttps://components.entrecode.de/ui/list/basic?e=1\nhttps://components.entrecode.de/ui/list/transforms?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list\n            \n\n\n\n            \n                template\n                listTemplate\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                config\n                            \n                            \n                                focusItem\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                filter\n                            \n                            \n                                focusFirst\n                            \n                            \n                                focusNext\n                            \n                            \n                                focusPrev\n                            \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectIndex\n                            \n                            \n                                showHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoFocusFirst\n                            \n                            \n                                collection\n                            \n                            \n                                config\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                pagination\n                            \n                            \n                                paginationConfig\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                    ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoFocusFirst\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:58\n                            \n                        \n                \n                    \n                        If true, the first item in the list will always be focused after changed \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        collection\n                    \n                \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:42\n                            \n                        \n                \n                    \n                        The used collection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     ListConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:40\n                            \n                        \n                \n                    \n                        The visible items \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :     List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:52\n                            \n                        \n                \n                    \n                        The Instance of the List \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                \n                \n                    \n                        Type :     Pagination\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:54\n                            \n                        \n                \n                    \n                        Pagination that should be used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        paginationConfig\n                    \n                \n                \n                    \n                        Type :     PaginationConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:56\n                            \n                        \n                \n                    \n                        Custom PaginationConfig \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:44\n                            \n                        \n                \n                    \n                        The used selection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:46\n                            \n                        \n                \n                    \n                        If true, only one item is selectable next \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:62\n                            \n                        \n                \n                    \n                        emits after the list changed \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:48\n                            \n                        \n                \n                    \n                        Event emitter on item selection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:50\n                            \n                        \n                \n                    \n                        Event emitter on selection change \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Column click handler. Triggers select.emit(item) with fallback to selection.toggle\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:162\n                            \n                        \n\n\n                \n                    \n                            Filters the list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Selects the next item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusPrev\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusPrev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Selects the previous item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Changing items or collection will trigger reconstructing the list with the new items.\nChanging the selection will reconstruct the selection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIndex(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Selects the item with the given index \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Decides if the header should be visible or not \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:33\n                            \n                        \n\n                \n                    \n                        The current list config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:60\n                            \n                        \n\n                \n                    \n                        Current focus \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:36\n                            \n                        \n\n                \n                    \n                        Config input for List \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        List\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Collection, List, ListConfig, Selection, Pagination } from '@ec.components/core';\nimport { Item } from '@ec.components/core';\nimport { PaginationConfig } from './pagination/pagination-config.interface';\nimport { ListConfigService } from './list-config.service';\n\nimport { listTemplate } from './list.component.html';\n\n/**\n * The ListComponent will render a list containing the given items or collection.\n *\n * https://components.entrecode.de/ui/list/basic?e=1\n * https://components.entrecode.de/ui/list/transforms?e=1\n * */\n@Component({\n  selector: 'ec-list',\n  /* templateUrl: './list.component.html', */\n  template: listTemplate,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListComponent implements OnChanges {\n  /** The current list config */\n  config: ListConfig = {};\n  /** Config input for List */\n  /** Flag that flips true when loading. */\n  isLoading = false;\n  // tslint:disable-next-line:no-input-rename\n  @Input('config') configInput: ListConfig;\n  /** The visible items */\n  @Input() items: Array;\n  /** The used collection */\n  @Input() collection: Collection;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Event emitter on selection change */\n  @Output() selected: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Pagination that should be used */\n  @Input() pagination: Pagination;\n  /** Custom PaginationConfig */\n  @Input() paginationConfig: PaginationConfig;\n  /** If true, the first item in the list will always be focused after changed */\n  @Input() autoFocusFirst = false;\n  /** Current focus */\n  focusItem: Item;\n  /** emits after the list changed */\n  @Output() changed: EventEmitter> = new EventEmitter();\n\n  constructor(public listConfig: ListConfigService, public cdr: ChangeDetectorRef) {}\n\n  /** Changing items or collection will trigger reconstructing the list with the new items.\n   * Changing the selection will reconstruct the selection */\n  ngOnChanges(changes?) {\n    this.config = Object.assign(this.config || {}, this.configInput || {});\n    if (this.items) {\n      this.init(new List(this.items, this.config, this.pagination));\n    } else if (this.collection) {\n      this.init(new List(this.collection.items, this.config, this.pagination));\n    }\n  }\n\n  init(list: List) {\n    if (!list) {\n      console.warn('tried to init list.component with undefined list');\n      return;\n    }\n    this.list = list;\n    this.listConfig.applyConfig(this.list);\n    this.list.change$.subscribe(() => {\n      if (this.autoFocusFirst || this.list.isFiltered()) {\n        this.focusFirst();\n      } else {\n        delete this.focusItem;\n      }\n      this.cdr.markForCheck();\n      this.changed.emit(this.list);\n    });\n    if (!this.selection) {\n      this.selection = new Selection([], this.list.config);\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((selection: Selection) => {\n        this.selected.emit(selection);\n      });\n    }\n  }\n\n  /** Column click handler. Triggers select.emit(item) with fallback to selection.toggle*/\n  columnClick(item) {\n    if (this.list.config.selectMode && this.selection) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      return this.columnClicked.emit(item);\n    }\n  }\n  /** Decides if the header should be visible or not */\n  showHeader() {\n    return (\n      this.list &&\n      this.list.config &&\n      !this.list.config.disableHeader &&\n      (this.list.fields.length || this.list.config.title)\n    );\n    /* && (this.list.config.alwaysShowHeader || !this.list.isEmpty()); */\n  }\n\n  /** Selects the item with the given index */\n  selectIndex(index: number) {\n    if (!this.selection || this.list.isEmpty() || !this.list.items[index]) {\n      return;\n    }\n    this.selection.select(this.list.items[index]);\n  }\n\n  focusFirst() {\n    delete this.focusItem;\n    this.focusNext();\n  }\n\n  /** Selects the next item */\n  focusNext() {\n    if (!this.list) {\n      return;\n    }\n    let index = 0;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Selects the previous item */\n  focusPrev() {\n    if (!this.list) {\n      return;\n    }\n    let index = this.list.page.length - 1;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + this.list.page.length - 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Filters the list */\n  filter(property, value) {\n    this.list.filter(property, value);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'listTemplate'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListConfig.html":{"url":"interfaces/ListConfig.html","title":"interface - ListConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/list/list-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for List Classes.\n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysShowHeader\n                                \n                                \n                                            Optional\n                                        autoload\n                                \n                                \n                                            Optional\n                                        availableSizes\n                                \n                                \n                                            Optional\n                                        defaultFilter\n                                \n                                \n                                            Optional\n                                        desc\n                                \n                                \n                                            Optional\n                                        disableColumnFilter\n                                \n                                \n                                            Optional\n                                        disableDrag\n                                \n                                \n                                            Optional\n                                        disableDropdown\n                                \n                                \n                                            Optional\n                                        disableHeader\n                                \n                                \n                                            Optional\n                                        disableRemove\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        display\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        hidePagination\n                                \n                                \n                                            Optional\n                                        maxColumns\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        popColumns\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        selectMode\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        solo\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        storageKey\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysShowHeader\n                                    \n                                \n                                \n                                    \n                                        alwaysShowHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the header will also be shown when the list is empty. Defaults to false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoload\n                                    \n                                \n                                \n                                    \n                                        autoload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will automatically load on change \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availableSizes\n                                    \n                                \n                                \n                                    \n                                        availableSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The available sizes. If not set, the size cannot be changed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultFilter\n                                    \n                                \n                                \n                                    \n                                        defaultFilter:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, a filter input for the given field property will be shown by default \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set to true, the sorting will be descending \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableColumnFilter\n                                    \n                                \n                                \n                                    \n                                        disableColumnFilter:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no column filter will be shown in the list header \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDrag\n                                    \n                                \n                                \n                                    \n                                        disableDrag:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, select items cannot be dragged \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDropdown\n                                    \n                                \n                                \n                                    \n                                        disableDropdown:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be shown for a select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableHeader\n                                    \n                                \n                                \n                                    \n                                        disableHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will have no header. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRemove\n                                    \n                                \n                                \n                                    \n                                        disableRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, removal of items wont be possible (select) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select dropdown will be shown on ec-select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Transforms the Items before they are displayed, e.g. to apply a filter for the view *\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    tells the list to show only items that match the filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidePagination\n                                    \n                                \n                                \n                                    \n                                        hidePagination:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the default pagination will not be visible. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxColumns\n                                    \n                                \n                                \n                                    \n                                        maxColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximal visible columns. Defaults to 8 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current active page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popColumns\n                                    \n                                \n                                \n                                    \n                                        popColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    how many columns should the pop have? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    a query that will be turned in to a filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectMode\n                                    \n                                \n                                \n                                    \n                                        selectMode:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will show its checkboxes and will select on column click.\nThe columnClicked output will be ignored as long selectMode is active \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of items per page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solo\n                                    \n                                \n                                \n                                    \n                                        solo:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should the selection be solo? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of properties that is sorted after, experimental... \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The property name that is sorted after \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageKey\n                                    \n                                \n                                \n                                    \n                                        storageKey:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The key that should store the lists config in the local storage.\nIf set, the key will be populated on config changes. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For lists with primitive values only: the title of the list header \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\nimport { List } from '../list/list';\nimport { Item } from '../item/item';\n\n/**\n *  Configuration for List Classes.\n * */\nexport interface ListConfig extends ItemConfig {\n  /** For lists with primitive values only: the title of the list header */\n  title?: string;\n  /** The property name that is sorted after */\n  sortBy?: string;\n  /** Array of properties that is sorted after, experimental... */\n  sort?: string[];\n  /** If set to true, the sorting will be descending */\n  desc?: boolean;\n  /** If true, the list will show its checkboxes and will select on column click.\n   * The columnClicked output will be ignored as long selectMode is active */\n  selectMode?: boolean;\n  /** If true, no select dropdown will be shown on ec-select */\n  disableSearchbar?: boolean;\n  /** If true, the list will have no header. */\n  disableHeader?: boolean;\n  /** If true, the header will also be shown when the list is empty. Defaults to false */\n  alwaysShowHeader?: boolean;\n  /** If true, no dropdown will be shown for a select */\n  disableDropdown?: boolean;\n  /** If true, removal of items wont be possible (select) */\n  disableRemove?: boolean;\n  /** If true, no column filter will be shown in the list header */\n  disableColumnFilter?: boolean;\n  /** If true, select items cannot be dragged */\n  disableDrag?: boolean;\n  /** If true, the default pagination will not be visible. */\n  hidePagination?: boolean;\n  /** The current active page */\n  page?: number;\n  /** The number of items per page */\n  size?: number;\n  /** The available sizes. If not set, the size cannot be changed */\n  availableSizes?: number[];\n  /** Should the selection be solo? */\n  solo?: boolean;\n  /** tells the list to show only items that match the filter */\n  filter?: { [key: string]: any };\n  /** a query that will be turned in to a filter */\n  query?: { [key: string]: any };\n  /** Maximal visible columns. Defaults to 8 */\n  maxColumns?: number;\n  /** how many columns should the pop have? */\n  popColumns?: number;\n  /** If true, the list will automatically load on change */\n  autoload?: boolean;\n  /** The key that should store the lists config in the local storage.\n   * If set, the key will be populated on config changes. */\n  storageKey?: string | ((list: List) => string);\n  /** Transforms the Items before they are displayed, e.g. to apply a filter for the view **/\n  display?: (items: Item[]) => Item[];\n  /** If set, a filter input for the given field property will be shown by default */\n  defaultFilter?: string | boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListConfigService.html":{"url":"injectables/ListConfigService.html","title":"injectable - ListConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/list/list-config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                storageKeyResolver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyConfig\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                retrieve\n                            \n                            \n                                set\n                            \n                            \n                                store\n                            \n                            \n                                storeConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyConfig(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStorageKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStorageKey(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieve\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieve(key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(key, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \nstore(key, config)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreConfig(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storageKeyResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { List } from '@ec.components/core';\n\n@Injectable()\nexport class ListConfigService {\n  public storageKeyResolver: (list: List) => string;\n\n  retrieve(key) {\n    const config = localStorage.getItem(key);\n    return config ? JSON.parse(config) : null;\n  }\n\n  set(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  store(key, config) {\n    const existing = this.retrieve(key) || {};\n    localStorage.setItem(key, JSON.stringify(Object.assign(existing, config)));\n  }\n\n  getStorageKey(list: List) {\n    if (!list || !list.fields || !list.config || !list.config.storageKey) {\n      // console.log('cannot apply config: no storage key or list set');\n      return;\n    }\n    const resolveFn = list.config.storageKey || this.storageKeyResolver;\n    if (typeof resolveFn === 'function') {\n      return resolveFn(list);\n    }\n    return list.config.storageKey;\n  }\n\n  storeConfig(list: List) {\n    const key = this.getStorageKey(list);\n    if (!key) {\n      return;\n    }\n    const config = { hide: list.fields.filter((f) => f.hideInList).map((f) => f.property) };\n    this.store(key, config);\n  }\n\n  applyConfig(list: List) {\n    const key = this.getStorageKey(list);\n    if (!key) {\n      return;\n    }\n    const existing = this.retrieve(key);\n    if (existing && existing.hide) {\n      list.fields.forEach((field) => (field.hideInList = false));\n      existing.hide.forEach((property) => {\n        const field = list.fields.find((f) => f.property === property);\n        if (!field) {\n          console.warn('field ', property, ' not found');\n          return;\n        }\n        field.hideInList = true;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListHeaderComponent.html":{"url":"components/ListHeaderComponent.html","title":"component - ListHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list-header/list-header.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders, as the name states, the header of a list.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-header\n            \n\n\n\n\n            \n                templateUrl\n                ./list-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                filteredField\n                            \n                            \n                                filterForm\n                            \n                            \n                                filterFormConfig\n                            \n                            \n                                filterInput\n                            \n                            \n                                filterPop\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFilter\n                            \n                            \n                                    Public\n                                filterField\n                            \n                            \n                                initFilterForm\n                            \n                            \n                                inputReady\n                            \n                            \n                                isLastColumn\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                resetFilter\n                            \n                            \n                                setFilter\n                            \n                            \n                                toggledFilterPop\n                            \n                            \n                                    Public\n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                    ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :     List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:16\n                            \n                        \n                \n                    \n                        The list instance \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:18\n                            \n                        \n                \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterField(property)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            opens the given filter pop and closes all others \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterForm\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterForm(filterForm)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterForm\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputReady\n                            \n                            \n                        \n                    \n                \n                \n                    \ninputReady(input)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLastColumn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLastColumn(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Yields true if the given field is the last column of the current list header \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetFilter(field, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggledFilterPop\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggledFilterPop(active)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleVisibility(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Toggles the fields visibility in the list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterFormConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:22\n                            \n                        \n\n                \n                    \n                        The config for the filter form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterPop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('filterPop')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:20\n                            \n                        \n\n                \n                    \n                        The pop dropdowns that contain the filtering \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        List Header\nThis document conceptualizes the ec-list-header.\nIdea\nThe list-header displays the field labels in columns. If a fields are sortable or filterable, a clickeable icons will be shown.\nFiltering\nIf a field has the option \"filterable\" set to true, a search icon will be shown. When clicking the icon, an input field will appear above the list header which can be used to filter the list by the field property.\n\nThe input field will be autofocused\nNo validation errors should be shown\nWhen the input value changes, the list will load after a short debounce.\nWhen the input is closed, the filter will be cleared.\nWhen another field's search icon is clicked, all previous filters will be cleared.\n\n\n    \n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { Field, List, ListConfig, Selection } from '@ec.components/core';\nimport { FormComponent } from '../../form/form.component';\nimport { PopComponent } from '../../pop/pop.component';\nimport { ListConfigService } from '../list-config.service';\nimport { InputComponent } from '../../io/input/input.component';\n\n/** This component renders, as the name states, the header of a list.*/\n@Component({\n  selector: 'ec-list-header',\n  templateUrl: './list-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListHeaderComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** The pop dropdowns that contain the filtering */\n  @ViewChild('filterPop') filterPop: PopComponent;\n  /** The config for the filter form */\n  filterFormConfig: ListConfig;\n  filteredField: any;\n  filterForm: FormComponent;\n  filterInput: InputComponent;\n\n  constructor(public listConfig: ListConfigService, public cdr: ChangeDetectorRef) {}\n\n  setFilter(field, value) {\n    this.list.setFilter({ [field.property]: value });\n  }\n\n  inputReady(input) {\n    this.filterInput = input;\n    input.focus(true);\n  }\n\n  initFilterForm(filterForm) {\n    // is called when form is ready\n    this.filterForm = filterForm;\n    if (this.list.config.defaultFilter) {\n      this.filterField(this.list.config.defaultFilter);\n    }\n  }\n\n  ngOnChanges(changes?) {\n    if (!changes.list) {\n      return;\n    }\n    if (!this.list || !this.list.config || !this.list.config.fields) {\n      return;\n    }\n    /* this.list.change$.subscribe(() => {\n      if (this.filterInput) {\n        // this.filterInput.focus(true);\n      }\n    }); */\n    this.filterFormConfig = {\n      ...this.list.config,\n      fields: this.list.filterableFields().reduce((fields, field) => {\n        return {\n          ...fields,\n          [field.property]: {\n            ...this.list.config.fields[field.property],\n            view: field.getView('filter'),\n            required: false,\n            readOnly: false,\n            immutable: false,\n            create: true,\n            form: true,\n            autofocus: true,\n            nestedCrudConfig: {\n              ...field.nestedCrudConfig,\n              methods: ['get'],\n            },\n          },\n        };\n      }, {}),\n    };\n  }\n\n  /** opens the given filter pop and closes all others */\n  public filterField(property) {\n    if (this.filteredField) {\n      if (this.filteredField.property === property) {\n        /* this.filterPop.hide(); */\n        if (this.filterInput) {\n          this.filterInput.focus(true);\n        }\n        return;\n      }\n      this.clearFilter();\n    }\n    // patch current filter value to control\n    const control = this.filterForm.group.get(property);\n    if (!control) {\n      console.warn('no control found for ' + property + '. Is it filterable?', this.list.config, this.filterForm.group);\n      return;\n    }\n    this.filterForm.group.get(property).patchValue(this.list.getFilterValue(property));\n    this.filteredField = this.filterForm.form.getField(property);\n    setTimeout(() => this.filterPop.show());\n  }\n\n  resetFilter() {\n    if (!this.filteredField || !this.list || !this.list.isFiltered(this.filteredField.property)) {\n      return;\n    }\n    this.filterForm.group.get(this.filteredField.property).reset();\n    this.list.clearFilter();\n  }\n\n  clearFilter() {\n    if (!this.filteredField || !this.list.isFiltered(this.filteredField.property)) {\n      delete this.filteredField;\n      return;\n    }\n    this.resetFilter();\n    delete this.filteredField;\n  }\n\n  toggledFilterPop(active) {\n    if (!active) {\n      this.clearFilter();\n    }\n    if (this.filterInput) {\n      this.filterInput.focus(true);\n    }\n  }\n\n  /** Toggles the fields visibility in the list */\n  public toggleVisibility(field: Field) {\n    this.list.toggleVisibility(field);\n    this.listConfig.storeConfig(this.list);\n  }\n\n  /** Yields true if the given field is the last column of the current list header */\n  isLastColumn(field: Field) {\n    if (!this.list || !this.list.fields) {\n      return;\n    }\n    const visibleColumns = this.list.fields.filter((f) => !f.hideInList);\n    return field.property === visibleColumns[visibleColumns.length - 1].property;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{filteredField.getLabel()}}\n      \n      \n        \n          {{filteredField.getLabel()}}\n        \n      \n     -->\n    \n\n    \n       -->\n      \n    \n\n    \n      \n        \n      \n      \n        \n          \n            \n              \n              \n            \n            {{\n              field.getLabel()\n            }}\n          \n        \n      \n    \n  \n\n\n  \n  \n    \n      \n    \n    \n      \n      \n        \n      \n      \n        \n       -->\n\n      \n        {{ field.getLabel() }}\n      \n      \n        \n        \n      \n    \n\n    \n      &#9776;\n      \n        \n          \n            \n              {{\n                field.getLabel()\n              }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{filteredField.getLabel()}}                              {{filteredField.getLabel()}}                   -->               -->                                                                                                                          {{              field.getLabel()            }}                                                                                                   -->              {{ field.getLabel() }}                                                ☰                                                  {{                field.getLabel()              }}                                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemsComponent.html":{"url":"components/ListItemsComponent.html","title":"component - ListItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list-items/list-items.component.ts\n\n\n    \n        Description\n    \n    \n        The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\nIt can either be given an Array of Items or just the list parent to control the shown items. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-items\n            \n\n\n\n\n            \n                templateUrl\n                ./list-items.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                hasFocus\n                            \n                            \n                                isClickable\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focusItem\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        focusItem\n                    \n                \n                \n                    \n                        Type :     Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:22\n                            \n                        \n                \n                    \n                        The current focused item \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     Item[]\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:18\n                            \n                        \n                \n                    \n                        An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :     List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:14\n                            \n                        \n                \n                    \n                        The list instance \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:16\n                            \n                        \n                \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:20\n                            \n                        \n                \n                    \n                        If true, only one item is selectable next \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:24\n                            \n                        \n                \n                    \n                        Event emitter on item clicked \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: Item, e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Propagate clicked item to host or toggle selection. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasFocus\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasFocus(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            yields true if the item is focussed \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClickable\n                            \n                            \n                        \n                    \n                \n                \n                    \nisClickable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Checks for host and uses its list. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Item, List, Selection } from '@ec.components/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\n\n/** The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\n * It can either be given an Array of Items or just the list parent to control the shown items. */\n@Component({\n  selector: 'ec-list-items',\n  templateUrl: './list-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListItemsComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.*/\n  @Input() items: Item[];\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** The current focused item */\n  @Input() focusItem: Item;\n  /** Event emitter on item clicked */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n\n  constructor(public cdr: ChangeDetectorRef) {}\n  /** Checks for host and uses its list. */\n  ngOnChanges() {\n    if (!this.items && this.list) {\n      this.items = this.list.page;\n    }\n    if (this.list) {\n      this.list.change$.subscribe((newList) => {\n        this.cdr.markForCheck();\n      });\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((newList) => {\n        this.cdr.markForCheck();\n      });\n    }\n  }\n  /** yields true if the item is focussed */\n  hasFocus(item) {\n    return this.focusItem === item;\n  }\n\n  isClickable() {\n    return this.columnClicked.observers.length || (this.selection && this.list && this.list.config.selectMode);\n  }\n\n  /** Propagate clicked item to host or toggle selection. */\n  columnClick(item: Item, e: Event) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.selection && this.list && this.list.config.selectMode) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n    Modules\n    ListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\n\nGroupPipe\n\nGroupPipe\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/list/list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupPipe\n                        \n                        \n                            ListComponent\n                        \n                        \n                            ListHeaderComponent\n                        \n                        \n                            ListItemsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SearchbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ListConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormModule\n                        \n                        \n                            GroupPipe\n                        \n                        \n                            ListComponent\n                        \n                        \n                            ListHeaderComponent\n                        \n                        \n                            ListItemsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SearchbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormModule } from '../form/form.module';\nimport { IconModule } from '../icon/icon.module';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { UtilityModule } from '../utility/utility.module';\nimport { GroupPipe } from './group.pipe';\nimport { ListHeaderComponent } from './list-header/list-header.component';\nimport { ListItemsComponent } from './list-items/list-items.component';\nimport { ListComponent } from './list.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\nimport { ListConfigService } from './list-config.service';\nimport { FormsModule } from '@angular/forms';\n\nexport const listModuleConfig = {\n  declarations: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n  ],\n  imports: [CommonModule, FormsModule, FormModule, IconModule, SymbolModule, UtilityModule],\n  exports: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n    FormModule,\n  ],\n  providers: [ListConfigService],\n};\n\n@NgModule(listModuleConfig)\nexport class ListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        The ec-loader can be plugged into various components to be triggered when they load stuff.\nhttps://components.entrecode.de/ui/loader?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-loader\n            \n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stack\n                            \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                show\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                            Injects the host element. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\nMake sure the given promise is catched (so the loader will stop loading on error)! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Collection>\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                        The current stack of loading promises.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                        The timestamp of the last time a promise has been added to the stack. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                        The loader's visibility status. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Loader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n    \n\n    \n        import { Component, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Collection } from '@ec.components/core';\n\n/** The ec-loader can be plugged into various components to be triggered when they load stuff.\n * https://components.entrecode.de/ui/loader?e=1\n */\n@Component({\n  selector: 'ec-loader',\n  templateUrl: './loader.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent {\n  /** The current stack of loading promises.*/\n  private stack: Collection> = new Collection([]);\n  /** The loader's visibility status. */\n  private visible = false;\n  /** The timestamp of the last time a promise has been added to the stack. */\n  private timestamp;\n\n  /** Injects the host element. */\n  constructor(private host: ElementRef) {}\n\n  /** Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, */\n  private show() {\n    this.visible = true; // show loader\n    this.host.nativeElement.classList.add('is-active');\n  }\n\n  /** Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, */\n  private hide() {\n    this.visible = false; // show loader\n    this.host.nativeElement.classList.remove('is-active');\n  }\n\n  /** Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\n   * Make sure the given promise is catched (so the loader will stop loading on error)! */\n  wait(promise: Promise) {\n    this.stack.add(promise); // add promise to stack\n    this.show();\n    const timestamp = Date.now();\n    this.timestamp = timestamp; // get timestamp\n    Promise.all(this.stack.items).then(() => {\n      if (timestamp === this.timestamp) {\n        this.hide();\n        this.stack.removeAll();\n      }\n    });\n    return promise;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoaderModule.html":{"url":"modules/LoaderModule.html","title":"module - LoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    LoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\n\n\nLoaderModule\n\nLoaderModule\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/loader/loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoaderService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\nimport { LoaderService } from './loader.service';\n\n@NgModule({\n  declarations: [LoaderComponent],\n  imports: [CommonModule],\n  exports: [LoaderComponent],\n  providers: [LoaderService],\n})\nexport class LoaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/loader/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The loader service registers promises \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:11\n                            \n                        \n\n\n                \n                    \n                            Sets a global loader that can be triggered without having the reference. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise, loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.loader\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:8\n                            \n                        \n\n                \n                    \n                        The global loader that should be used if not loader is passed to wait. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\n\n/** The loader service registers promises */\n@Injectable()\nexport class LoaderService {\n  /** The global loader that should be used if not loader is passed to wait. */\n  loader: LoaderComponent;\n\n  /** Sets a global loader that can be triggered without having the reference. */\n  use(loader: LoaderComponent) {\n    this.loader = loader;\n  }\n\n  /** Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)*/\n  wait(promise: Promise, loader: LoaderComponent = this.loader) {\n    if (!loader || !promise) {\n      console.warn('cannot trigger loader: no promise or loader given');\n      return;\n    }\n    return loader.wait(promise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationMapComponent.html":{"url":"components/LocationMapComponent.html","title":"component - LocationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-map.component.ts\n\n\n    \n        Description\n    \n    \n        Shows Google Maps Map \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-map\n            \n\n            \n                styleUrls\n                ./location-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markerDragEnd\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                readOnly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { latitude: 48.8093253, longitude: 9.159388100000001 }\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:11\n                            \n                        \n                \n                    \n                        The desired map center \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:13\n                            \n                        \n                \n                    \n                        If true, no markers can be changed or set \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:17\n                            \n                        \n                \n                    \n                        Form input component \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:15\n                            \n                        \n                \n                    \n                        Emits when the marker has been changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerDragEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkerDragEnd(coords)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            changes value on marker dragend \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coords\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:23\n                            \n                        \n\n\n                \n                    \n                            sets the value cand changes the center \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/** Shows Google Maps Map */\n@Component({\n  selector: 'ec-location-map',\n  templateUrl: './location-map.component.html',\n  styleUrls: ['./location-map.component.scss'],\n})\nexport class LocationMapComponent {\n  /** The desired map center */\n  @Input() center: { longitude: any; latitude: any } = { latitude: 48.8093253, longitude: 9.159388100000001 };\n  /** If true, no markers can be changed or set */\n  @Input() readOnly: boolean;\n  /** Emits when the marker has been changed */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** Form input component */\n  @Input() value: {\n    longitude: number;\n    latitude: number;\n  };\n\n  /** sets the value cand changes the center */\n  setValue(value) {\n    this.value = value;\n    if (value) {\n      this.center = value;\n    }\n  }\n  /** changes value on marker dragend */\n  markerDragEnd(coords) {\n    if (!coords) {\n      console.warn('no coords');\n      return;\n    }\n    const position = { longitude: coords.lng, latitude: coords.lat };\n    this.setValue(position);\n    this.changed.emit(position);\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./location-map.component.scss\n                \n                :host {\n    height: 300px;\n}\nagm-map {\n    height: 300px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/location/src/lib/location.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module holds all location/map related components and services \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LocationMapComponent\n                        \n                        \n                            LocationPickerComponent\n                        \n                        \n                            LocationSearchComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            LOCATION_COMPONENTS\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GeocodeService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocationMapComponent\n                        \n                        \n                            LocationPickerComponent\n                        \n                        \n                            LocationSearchComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location.module.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationPickerComponent } from './location-picker.component';\nimport { LocationSearchComponent } from './location-search.component';\n/** The components of this module */\nconst LOCATION_COMPONENTS = [LocationMapComponent, LocationSearchComponent, LocationPickerComponent];\n\nexport const locationModuleConfig = {\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UiModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyAdgEUE1Yxo1F-qb1MrO56u5KATpX9j8o4',\n      libraries: ['places'],\n    }),\n  ],\n  exports: LOCATION_COMPONENTS,\n  declarations: LOCATION_COMPONENTS,\n  entryComponents: LOCATION_COMPONENTS,\n  providers: [GeocodeService],\n};\n/** This module holds all location/map related components and services */\n@NgModule(locationModuleConfig)\nexport class LocationModule {\n  static forRoot({ apiKey }): ModuleWithProviders {\n    return {\n      ngModule: LocationModule,\n      providers: [\n        {\n          provide: 'googlemaps.apiKey',\n          useValue: apiKey,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationPickerComponent.html":{"url":"components/LocationPickerComponent.html","title":"component - LocationPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-picker.component.ts\n\n\n    \n        Description\n    \n    \n        Component with map and autocomplete input to pick a location. Implements ControlValueAccessor \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => LocationPickerComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-location-picker\n            \n\n            \n                styleUrls\n                ./location-picker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-picker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                geocodeService\n                            \n                            \n                                input\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                            \n                                map\n                            \n                            \n                                propagateChange\n                            \n                            \n                                search\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                updateAddress\n                            \n                            \n                                writeValue\n                            \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                            \n                                showRawValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/location-picker.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                    KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:23\n                            \n                        \n                \n                    \n                        The form control that holds the location \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:27\n                            \n                        \n                \n                    \n                        Placeholder for search input \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showRawValue\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:25\n                            \n                        \n                \n                    \n                        If true, the raw location value will be visible\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value, fromSearch?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Sets value of map and propagates change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromSearch\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAddress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            updates the address string by reverse geo lookup  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geocodeService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GeocodeService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocationMapComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LocationMapComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:29\n                            \n                        \n\n                \n                    \n                        The nested LocationMapComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocationSearchComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LocationSearchComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:31\n                            \n                        \n\n                \n                    \n                        The nested LocationSearchComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:20\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:22\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent, FormService, KeycommandsService } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationSearchComponent } from './location-search.component';\n\n/** Component with map and autocomplete input to pick a location. Implements ControlValueAccessor */\n@Component({\n  selector: 'ec-location-picker',\n  templateUrl: './location-picker.component.html',\n  styleUrls: ['./location-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => LocationPickerComponent),\n      multi: true,\n    },\n  ],\n})\nexport class LocationPickerComponent extends DefaultInputComponent implements ControlValueAccessor {\n  /** The form control that holds the location */\n  @Input() formControl: FormControl;\n  /** If true, the raw location value will be visible*/\n  @Input() showRawValue = true;\n  /** Placeholder for search input */\n  @Input() placeholder;\n  /** The nested LocationMapComponent */\n  @ViewChild(LocationMapComponent) map: LocationMapComponent;\n  /** The nested LocationSearchComponent */\n  @ViewChild(LocationSearchComponent) search: LocationSearchComponent;\n  /** Form input component */\n  input: InputComponent;\n\n  constructor(\n    public geocodeService: GeocodeService,\n    public formService: FormService,\n    public keycommands: KeycommandsService,\n  ) {\n    super(formService, keycommands);\n  }\n\n  /** Sets value of map and propagates change */\n  setValue(value, fromSearch?: boolean) {\n    if (!value) {\n      this.search.clear();\n    }\n    this.map.setValue(value);\n    if (!fromSearch) {\n      this.updateAddress();\n    }\n    this.propagateChange(value);\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.map.setValue(value);\n    this.updateAddress();\n  }\n\n  /** updates the address string by reverse geo lookup  */\n  updateAddress() {\n    const value = this.map.value;\n    if (!value) {\n      this.search.searchInput.nativeElement.value = '';\n      return;\n    }\n    this.geocodeService.getNearestAddress(value).then((results) => {\n      if (results.length) {\n        this.search.searchInput.nativeElement.value = results[0].formatted_address;\n      } else {\n        this.search.searchInput.nativeElement.value = '';\n      }\n    });\n  }\n\n  propagateChange = (_: any) => {};\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n\n\n    \n\n{{map.value | json}}\n    \n\n    \n                \n                    ./location-picker.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{map.value | json}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationSearchComponent.html":{"url":"components/LocationSearchComponent.html","title":"component - LocationSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-search.component.ts\n\n\n    \n        Description\n    \n    \n        Google Maps Location Searchbar \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-search\n            \n\n\n\n\n            \n                templateUrl\n                ./location-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/location-search.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'Search Location...'\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:12\n                            \n                        \n                \n                    \n                        Placeholder for input \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:16\n                            \n                        \n                \n                    \n                        emits when the coords have been changed (after selecting a match) \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:20\n                            \n                        \n\n\n                \n                    \n                            Clears the searchbar input value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            subscribes to changes from the inputs autocomplete using geocodeService. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('search')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:14\n                            \n                        \n\n                \n                    \n                        The search input element \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, Input, NgZone, Output, ViewChild } from '@angular/core';\nimport {} from 'googlemaps';\nimport { GeocodeService } from './geocode.service';\n\n/** Google Maps Location Searchbar */\n@Component({\n  selector: 'ec-location-search',\n  templateUrl: './location-search.component.html',\n})\nexport class LocationSearchComponent implements AfterViewInit {\n  /** Placeholder for input */\n  @Input() placeholder = 'Search Location...';\n  /** The search input element */\n  @ViewChild('search') searchInput: ElementRef;\n  /** emits when the coords have been changed (after selecting a match) */\n  @Output() changed: EventEmitter = new EventEmitter();\n\n  constructor(private geocodeService: GeocodeService, private ngZone: NgZone) {}\n  /** Clears the searchbar input value */\n  clear() {\n    if (this.searchInput) {\n      this.searchInput.nativeElement.value = '';\n    }\n  }\n  /** subscribes to changes from the inputs autocomplete using geocodeService. */\n  ngAfterViewInit() {\n    this.geocodeService.autocompleteAddress(this.searchInput.nativeElement).subscribe((coords) => {\n      this.changed.emit(coords);\n    });\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/auth?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login\n            \n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:23\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:27\n                            \n                        \n                \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:25\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:29\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport {\n  SymbolService,\n  WithNotifications,\n  Notification,\n  LoaderComponent,\n  NotificationsService,\n  WithLoader,\n} from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport { AuthService } from '../auth.service';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/auth?e=1\n */\n@Component({\n  selector: 'ec-login',\n  templateUrl: 'login.component.html',\n})\nexport class LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Subject that is nexted when an error occurs. For custom error reactions */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  constructor(\n    public auth: AuthService,\n    public notificationService: NotificationsService,\n    public symbol: SymbolService,\n  ) {}\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  login({ email, password }) {\n    const login = this.auth\n      .login({ email, password }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('login.success'),\n          hide: this.notifications,\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('login.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications,\n        });\n        this.error.next(error);\n        console.log('could not login', error);\n      });\n    this.loader.wait(login);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login-form\n            \n\n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                            Injects the FormBuilder\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:42\n                            \n                        \n                \n                    \n                        Additional Button classes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.button.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:40\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:32\n                            \n                        \n                \n                    \n                        The Label of the Mail field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:34\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:28\n                            \n                        \n                \n                    \n                        The loader that should be shown during login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:36\n                            \n                        \n                \n                    \n                        The Label of the password field. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:38\n                            \n                        \n                \n                    \n                        The Placeholder of the password field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:30\n                            \n                        \n                \n                    \n                        If true, email and password wont have labels \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:26\n                            \n                        \n                \n                    \n                        Event that emits when calling showError. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:24\n                            \n                        \n                \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Login Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n    \n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { throwError } from 'rxjs';\nimport { LoaderComponent } from '../../loader/loader.component';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { SymbolService } from '../../symbol/symbol.service';\nimport { FieldValidators } from '../validators/field-validators';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n */\n@Component({\n  selector: 'ec-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, WithLoader {\n  /** The login's form group.*/\n  public form: FormGroup;\n  /** Flips true when submitted. */\n  protected submitted: boolean;\n  /** Contains possible error messages. */\n  public errorMessage: string;\n  /** Event that emits on succesful submit of the form, passing the login credentials. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Event that emits when calling showError. */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The loader that should be shown during login */\n  @Input() loader: LoaderComponent;\n  /** If true, email and password wont have labels */\n  @Input() showLabels = true;\n  /** The Label of the Mail field */\n  @Input() emailLabel = this.symbol.resolve('login.email.label');\n  /** The Placeholder of the mail Field */\n  @Input() emailPlaceholder = this.symbol.resolve('login.email.placeholder');\n  /** The Label of the password field. */\n  @Input() passwordLabel = this.symbol.resolve('login.password.label');\n  /** The Placeholder of the password field */\n  @Input() passwordPlaceholder = this.symbol.resolve('login.password.placeholder');\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('login.button.label');\n  /** Additional Button classes */\n  @Input() buttonClasses = '';\n  /** Recent error Notifications */\n  notifications: Notification[];\n\n  /** Injects the FormBuilder*/\n  constructor(protected fb: FormBuilder, public symbol: SymbolService) {}\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /** Shows the given error in the form. Clears the password field and emits the error event. */\n  showError(err): any {\n    this.errorMessage = err.message;\n    this.form.get('password').setValue('');\n    this.error.emit(err);\n    throwError(err);\n  }\n\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  login(value) {\n    // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.login(this.form.value).then((res) => {\n      this.form.reset();\n      this.success.emit(res);\n    });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    {{buttonLabel}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                Passwort                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MaxItemsPipe.html":{"url":"pipes/MaxItemsPipe.html","title":"pipe - MaxItemsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MaxItemsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/max-items.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe slices an array after the nth item \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        maxItems\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(array: Array, maxItems: number, start: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/max-items.pipe.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        maxItems\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        start\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/** This pipe slices an array after the nth item */\n@Pipe({\n  name: 'maxItems',\n})\nexport class MaxItemsPipe implements PipeTransform {\n  transform(array: Array = [], maxItems: number, start: number = 0): any {\n    return array.slice(start, maxItems);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediumEditorComponent.html":{"url":"components/MediumEditorComponent.html","title":"component - MediumEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediumEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/medium-editor/src/lib/medium-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps medium-editor to a reactive form component.\nhttps://components.entrecode.de/misc/medium-editor?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-medium-editor\n            \n\n            \n                styleUrls\n                ./medium-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                medium-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:35\n                            \n                        \n                \n                    \n                        data model \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:37\n                            \n                        \n                \n                    \n                        MediumEditor options \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:39\n                            \n                        \n                \n                    \n                        empty placeholder \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:41\n                            \n                        \n                \n                    \n                        change emitter \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            destroys editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            inits editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MediumEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:47\n                            \n                        \n\n                \n                    \n                        editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        ready promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:45\n                            \n                        \n\n                \n                    \n                        current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as MediumEditor from 'medium-editor/dist/js/medium-editor';\n\n/** Wraps medium-editor to a reactive form component.\n * https://components.entrecode.de/misc/medium-editor?e=1\n */\n@Component({\n  selector: 'ec-medium-editor',\n  styleUrls: ['./medium-editor.component.scss'],\n  templateUrl: 'medium-editor.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MediumEditorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class MediumEditorComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  /** data model */\n  @Input() model: any;\n  /** MediumEditor [options](https://github.com/yabwe/medium-editor#mediumeditor-options) */\n  @Input() options: any = {};\n  /** empty placeholder */\n  @Input() placeholder: string;\n  /** change emitter */\n  @Output() modelChange: EventEmitter = new EventEmitter();\n  /** container element */\n  @ViewChild('container') container: ElementRef;\n  /** current value */\n  value: any;\n  /** editor instance */\n  private editor: MediumEditor;\n  /** ready promise */\n  public ready: Promise;\n\n  /** inits editor */\n  ngOnInit() {\n    this.container.nativeElement.innerHTML = this.model || '';\n    this.options.placeholder = this.placeholder;\n    this.editor = new MediumEditor(this.container.nativeElement, this.options);\n    this.editor.subscribe('editableInput', () => {\n      this.value = this.editor.getContent();\n      this.propagateChange(this.value);\n    });\n    this.ready = Promise.resolve(this.editor);\n  }\n  /** destroys editor */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    this.ready.then((editor) => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => {};\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./medium-editor.component.scss\n                \n                @import '~medium-editor/src/sass/medium-editor.scss';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediumEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediumEditorModule.html":{"url":"modules/MediumEditorModule.html","title":"module - MediumEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    MediumEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediumEditorModule\n\n\n\ncluster_MediumEditorModule_declarations\n\n\n\ncluster_MediumEditorModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumEditorModule_exports\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumEditorModule\n\nMediumEditorModule\n\nMediumEditorModule -->\n\nMediumEditorComponent->MediumEditorModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumEditorModule->MediumEditorComponent \n\n\n\n MediumEditorComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n MediumEditorComponent), multi: true,\n}->MediumEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}->MediumEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/medium-editor/src/lib/medium-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MediumEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MediumEditorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediumEditorComponent } from './medium-editor.component';\n\nexport const mediumModuleConfig = {\n  imports: [CommonModule],\n  exports: [MediumEditorComponent],\n  declarations: [MediumEditorComponent],\n  providers: [],\n};\n\n@NgModule(mediumModuleConfig)\nexport class MediumEditorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        Renders a nested menu from a given routes Array (the same you would use for angular routing). \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-menu,[ec-menu]\n            \n\n            \n                styleUrls\n                ./menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hover\n                            \n                            \n                                    Private\n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimeout\n                            \n                            \n                                getColor\n                            \n                            \n                                getItemColor\n                            \n                            \n                                getLevel\n                            \n                            \n                                getPath\n                            \n                            \n                                hasActivePath\n                            \n                            \n                                hoverItem\n                            \n                            \n                                hoverOut\n                            \n                            \n                                isActive\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                hoverDelay\n                            \n                            \n                                parent\n                            \n                            \n                                route\n                            \n                            \n                                routes\n                            \n                            \n                                title\n                            \n                            \n                                vanishDelay\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Injects the Router. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4']\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:23\n                            \n                        \n                \n                    \n                        Color map of submenus. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hoverDelay\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:27\n                            \n                        \n                \n                    \n                        Delay before menu is shown on mouseover. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                \n                \n                    \n                        Type :     MenuComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:21\n                            \n                        \n                \n                    \n                        Parent Menu (when nested) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:17\n                            \n                        \n                \n                    \n                        The currently active route \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:15\n                            \n                        \n                \n                    \n                        Routes that should be used for the menu. You can use your angular router routes here. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:19\n                            \n                        \n                \n                    \n                        The title of the menu \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        vanishDelay\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:25\n                            \n                        \n                \n                    \n                        Delay before menu is hidden after mouseout. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimeout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Cancels the current timeout \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColor(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the current level. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemColor(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the given item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLevel(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the level of nesting (parent=0). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath(item, path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Returns the full path to an item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasActivePath\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasActivePath(item, parent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item or a child of it is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverItem(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Hovers the item after hoverDelay timeout. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Hovers out after vanishDelay \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(path)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is selected. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            updates the routes on change of route \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hover\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:29\n                            \n                        \n\n                \n                    \n                        The currently hovered Route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeout\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                        The timeout for delay handling \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router'; // TODO cannot import Route...\n\n/** Renders a nested menu from a given routes Array (the same you would use for angular routing). */\n@Component({\n  selector: 'ec-menu,[ec-menu]',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class MenuComponent implements OnChanges {\n  /** Routes that should be used for the menu. You can use your angular router routes here. */\n  @Input() routes; // : Route[];\n  /** The currently active route */\n  @Input() route; // : Route;\n  /** The title of the menu */\n  @Input() title: string;\n  /** Parent Menu (when nested) */\n  @Input() parent: MenuComponent;\n  /** Color map of submenus. */\n  @Input() colors: string[] = ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4'];\n  /** Delay before menu is hidden after mouseout. */\n  @Input() vanishDelay = 500;\n  /** Delay before menu is shown on mouseover. */\n  @Input() hoverDelay = 50;\n  /** The currently hovered Route*/\n  public hover; // : Route;\n  /** The timeout for delay handling */\n  private timeout;\n\n  /** Injects the Router. */\n  constructor(private router: Router) {}\n\n  /** updates the routes on change of route */\n  ngOnChanges() {\n    if (this.route) {\n      this.routes = this.route.children\n        .filter((route) => route.path && route.path.indexOf(':') === -1)\n        .filter((route) => !route.data || !route.data.hidden);\n      console.log('routes', this.routes);\n    }\n  }\n\n  /** Returns true if the item or a child of it is active. */\n  hasActivePath(item, parent = this) {\n    // this.parent\n    return parent.getPath(item) === this.router.url;\n  }\n\n  /** Returns true if the item is selected. */\n  isSelected(item) {\n    const path = this.getPath(item);\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n\n  /** Returns the level of nesting (parent=0). */\n  getLevel(level = 0) {\n    return this.parent ? this.parent.getLevel(++level) : level;\n  }\n\n  /** Returns the color for the current level. */\n  getColor(level = 0) {\n    return this.colors[this.getLevel(level) % this.colors.length];\n  }\n\n  /** Returns the color for the given item. */\n  getItemColor(item) {\n    return this.isActive(item) ? this.getColor(1) : 'initial';\n  }\n\n  /** Hovers the item after hoverDelay timeout. */\n  hoverItem(item) {\n    // : Route\n    if (!this.hover) {\n      this.hover = item;\n    }\n    this.timeout = setTimeout(() => {\n      this.hover = item;\n    }, this.hoverDelay);\n  }\n\n  /** Cancels the current timeout */\n  cancelTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  /** Hovers out after vanishDelay */\n  hoverOut() {\n    this.timeout = setTimeout(() => {\n      delete this.hover;\n    }, this.vanishDelay);\n  }\n\n  /** Returns the full path to an item. */\n  getPath(item, path: string = '') {\n    path = '/' + item.path + path;\n    if (!this.parent) {\n      return path;\n    }\n    return this.parent.getPath(this.route, path);\n  }\n\n  isActive(path) {\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{item.data?.title || item.path}}\n      \n      \n        \n          {{child.data?.title || child.path}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./menu.component.scss\n                \n                li.is-active>a {\n    text-decoration: underline;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{item.data?.title || item.path}}                              {{child.data?.title || child.path}}                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/modal/modal.component.ts\n\n\n    \n        Description\n    \n    \n        A modal is an extension of a pop. It adds different style options that apply x.ui markup.\nhttps://components.entrecode.de/ui/modal?e=1\nhttps://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                classes\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                templates\n                            \n                            \n                                types\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initMode\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animation\n                            \n                            \n                                backdrop\n                            \n                            \n                                body\n                            \n                            \n                                columns\n                            \n                            \n                                footer\n                            \n                            \n                                header\n                            \n                            \n                                mode\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/modal/modal.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructs the modal, injects pop service \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animation\n                    \n                \n                \n                    \n                        Default value : 'fadeIn 4'\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:33\n                            \n                        \n                \n                    \n                        Sets data-animate. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        backdrop\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:31\n                            \n                        \n                \n                    \n                        If true, the modal will have a dark backdrop that disables clicking outside. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:37\n                            \n                        \n                \n                    \n                        Body Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:43\n                            \n                        \n                \n                    \n                        Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        footer\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:39\n                            \n                        \n                \n                    \n                        Footer Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:35\n                            \n                        \n                \n                    \n                        Header Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:29\n                            \n                        \n                \n                    \n                        This property sets the mode + additional options.\nIt expects the type at first and non mandatory options like opens-left afterwards. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMode\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMode()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Is called on init and change. Parses mode input and throws warning if type is not supported. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            calls initMode \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            calls initMode \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:88\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:58\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:72\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:63\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            classes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:45\n                            \n                        \n\n                \n                    \n                        Will contain the classes (mode - type) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(TemplateRef)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:41\n                            \n                        \n\n                \n                    \n                        Templates for header body and footer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['dialog', 'overlay', 'deck', 'toast', 'snackbar']\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:26\n                            \n                        \n\n                \n                    \n                        all possible modes that can be set \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  ElementRef,\n  OnChanges,\n  TemplateRef,\n  ContentChildren,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { PopComponent } from '../pop/pop.component';\nimport { PopService } from '../pop/pop.service';\n\n/**\n * A modal is an extension of a pop. It adds different style options that apply x.ui markup.\n * https://components.entrecode.de/ui/modal?e=1\n *\n * https://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n */\n@Component({\n  selector: 'ec-modal',\n  templateUrl: './modal.component.html',\n})\nexport class ModalComponent extends PopComponent implements OnInit, OnChanges {\n  /** all possible modes that can be set */\n  types = ['dialog', 'overlay', 'deck', 'toast', 'snackbar'];\n  /** This property sets the mode + additional options.\n   * It expects the type at first and non mandatory options like opens-left afterwards. */\n  @Input() mode: string;\n  /** If true, the modal will have a dark backdrop that disables clicking outside. */\n  @Input() backdrop = false;\n  /** Sets data-animate. */\n  @Input() animation = 'fadeIn 4';\n  /** Header Template */\n  @Input() header: TemplateRef;\n  /** Body Template */\n  @Input() body: TemplateRef;\n  /** Footer Template */\n  @Input() footer: TemplateRef;\n  /** Templates for header body and footer */\n  @ContentChildren(TemplateRef) templates: TemplateRef[];\n  /** Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). */\n  @Input() columns: number | string;\n  /** Will contain the classes (mode - type) */\n  public classes: string;\n  /** Constructs the modal, injects pop service */\n  constructor(public popService: PopService, public elementRef: ElementRef, public cdr: ChangeDetectorRef) {\n    super(popService, elementRef, cdr);\n  }\n  /** Is called on init and change. Parses mode input and throws warning if type is not supported. */\n  initMode() {\n    this.mode = this.mode || 'dialog';\n    this.type = this.mode.split(' ')[0];\n    if (!this.types.includes(this.type)) {\n      const fallback = this.mode.replace(this.type, 'dialog');\n      console.warn(`ec-modal does not support the mode \"${this.type}\".\n            Use one of ${this.types.join(', ')}.\n            Falling back to ${fallback}.`);\n      this.type = fallback;\n    }\n    this.classes = this.mode\n      .split(' ')\n      .splice(1)\n      .join(' ');\n    this.types.forEach((type) => {\n      this.elementRef.nativeElement.classList.remove(`${type}-wrapper`);\n    });\n    if (this.backdrop) {\n      this.elementRef.nativeElement.classList.add(`${this.type}-wrapper`);\n    }\n  }\n\n  /** calls initMode */\n  ngOnInit() {\n    this.initMode();\n  }\n  /** calls initMode */\n  ngOnChanges() {\n    this.initMode();\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfig.html":{"url":"interfaces/ModelConfig.html","title":"interface - ModelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig } from '@ec.components/core';\n\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfig {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelConfigService.html":{"url":"injectables/ModelConfigService.html","title":"injectable - ModelConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The main class for configuring the behaviour of a model.\nBy default, everything is auto generated from the model's schema but can be overriden via the\nset method. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                omittedFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateConfig\n                            \n                            \n                                get\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getLightModel\n                            \n                            \n                                getMinLevel\n                            \n                            \n                                getSystemFields\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entryService: EntryService, sdk: SdkService, typeConfig: TypeConfigService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/model-config/model-config.service.ts:19\n                            \n                        \n\n                \n                    \n                            Injects EntryService and SdkService. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryService\n                                                  \n                                                        \n                                                                    EntryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            generateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateConfig(model: string, customFieldConfig?: FieldConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:210\n                            \n                        \n\n\n                \n                    \n                            Generates a CrudConfig for the given model.\nMerges three configurations into one:\n\ndefault field config, obtained by getFieldConfig\nglobal model config (if any) configured via with set\ncustomFieldConfig: any custom field config that is merged on top of the other two.\nThis enables the developer to either customize at a global scale to target all lists/forms,\nor just specific components. \n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        customFieldConfig\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Retrieves the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * ModelConfig.get(&#39;muffin&#39;); //returns muffin config;\n   *\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFieldConfig(model: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            Returns the default field config for the given model.\nUtilizes PublicAPI#getFieldConfig + TypeConfigService#get.\nThis config is meant to deliver the default behaviour when nothing else is configured. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLightModel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLightModel(model)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:241\n                            \n                        \n\n\n                \n                    \n                            Returns light model information \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMinLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMinLevel(model: string, customFieldConfig?: FieldConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:122\n                            \n                        \n\n\n                \n                    \n                            Parses config for fields that require leveled entries \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        customFieldConfig\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSystemFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSystemFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Returns the field config for all system fields \n\n\n                            \n                                Returns :     { id: { label: any; create: boolean; view: string; filterView: string; filterable: boolean; filte...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(property: string, config: CrudConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Sets the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    CrudConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * ModelConfig.set(&#39;muffin&#39;, {\n   *  fields: {\n   *    title: {\n   *      label: &#39;Muffin Titel&#39;\n   *    }\n   *  });\n   *\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            omittedFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'private', 'created', 'creator', 'modified']\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:19\n                            \n                        \n\n                \n                    \n                        Array of property names that are omitted by default. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Config, FieldConfig, Item } from '@ec.components/core';\nimport { SymbolService, DefaultInputComponent } from '@ec.components/ui';\nimport { fields } from 'ec.sdk/lib/PublicAPI';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { EntryService } from '../entry/entry.service';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from './type-config.service';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The main class for configuring the behaviour of a model.\n * By default, everything is auto generated from the model's schema but can be overriden via the\n * set method. */\n@Injectable()\nexport class ModelConfigService extends Config {\n  /** Array of property names that are omitted by default. */\n  omittedFields: Array = ['id', 'private', 'created', 'creator', 'modified'];\n\n  /** Injects EntryService and SdkService. */\n  constructor(\n    private entryService: EntryService,\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private symbol: SymbolService,\n  ) {\n    super();\n  }\n\n  /** Retrieves the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.get('muffin'); //returns muffin config;\n   * ```\n   * */\n  get(property: string): CrudConfig {\n    return this.configure('model', property);\n  }\n\n  /** Sets the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.set('muffin', {\n   *  fields: {\n   *    title: {\n   *      label: 'Muffin Titel'\n   *    }\n   *  });\n   * ```\n   * */\n  set(property: string, config: CrudConfig): CrudConfig {\n    return this.configure('model', property, config);\n  }\n\n  /** Returns the field config for all system fields */\n  getSystemFields() {\n    return {\n      id: {\n        label: this.symbol.resolve('field.label.id'),\n        create: false,\n        view: 'copy',\n        filterView: 'string',\n        filterable: true,\n        filterOperator: 'exact',\n        form: true,\n        immutable: true,\n        hideInList: true,\n        columns: 3,\n      },\n      _created: {\n        label: this.symbol.resolve('field.label.created'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        copy: this.typeConfig.isoDate(),\n        create: false,\n        form: true,\n        columns: 3,\n        view: 'copy',\n        immutable: true,\n        sortable: true,\n        hideInList: true,\n        rawFilter: true,\n      },\n      _modified: {\n        label: this.symbol.resolve('field.label.modified'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        copy: this.typeConfig.isoDate(),\n        create: false,\n        form: true,\n        columns: 3,\n        view: 'copy',\n        immutable: true,\n        sortable: true,\n        hideInList: false,\n        rawFilter: true,\n      },\n      _creator: {\n        label: this.symbol.resolve('field.label.creator'),\n        display: this.typeConfig.displayAccount(),\n        copy: (value) => value,\n        create: false,\n        type: 'account',\n        view: 'copy',\n        columns: 3,\n        form: true,\n        immutable: true,\n        hideInList: true,\n        filterable: true,\n        filterComponent: AdminEntryInputComponent,\n        formComponent: DefaultInputComponent,\n        output: DefaultEntryOutputComponent,\n        readOnly: true,\n        filterPopClass: 'ec-pop_dialog',\n        filterOperator: 'exact',\n      },\n    };\n  }\n\n  /** Parses config for fields that require leveled entries */\n  getMinLevel(model: string, customFieldConfig?: FieldConfig) {\n    return this.generateConfig(model, customFieldConfig).then((modelConfig) => {\n      const fieldConfig = modelConfig.fields;\n      return Object.keys(fieldConfig)\n        .filter((field) => !!fieldConfig[field].type)\n        .map((field) => {\n          const inputView = fieldConfig[field].inputView;\n          const views = this.typeConfig.get(fieldConfig[field].type).inputViews || [];\n          if (!inputView || !views) {\n            return 1;\n          }\n          const match = views.find((v) => v.name === inputView);\n          return match ? match.levels || 1 : 1;\n        })\n        .reduce((max, lvl) => Math.max(max, lvl), 1);\n    });\n  }\n\n  /** Returns the default field config for the given model.\n   * Utilizes PublicAPI#getFieldConfig + TypeConfigService#get.\n   * This config is meant to deliver the default behaviour when nothing else is configured. */\n  getFieldConfig(model: string): Promise {\n    return this.sdk.api.getFieldConfig(model).then((fieldConfig: fields) => {\n      const merged = {};\n      Object.assign(merged, this.getSystemFields());\n      Object.keys(fieldConfig)\n        .map((property) => fieldConfig[property])\n        .forEach(\n          ({ config, type, title, unique, mutable, readOnly, required, validation, description, localizable }) => {\n            /* type = type as string; */\n            config = config || {};\n            if (type.includes('asset')) {\n              type = type.replace('a', 'dmA');\n            }\n            // parse field config\n            const {\n              hideInList,\n              hideInForm,\n              hideOnCreate,\n              hideOnEdit,\n              placeholder,\n              inputView,\n              label,\n              classes,\n              columns = 12,\n            } = config;\n            const typeConfig = this.typeConfig.get(type);\n            // assign default values + merge customFieldConfig if given\n            merged[title] = Object.assign(\n              {\n                property: title,\n                label: label || title + (type === 'datetime' ? ` ${this.symbol.resolve('datetime.local')}` : ''),\n                placeholder,\n                description,\n                validation,\n                relation: validation,\n                immutable: !mutable,\n                readOnly,\n                hideInList,\n                hideInForm,\n                create: !hideOnCreate,\n                edit: !hideOnEdit,\n                classes,\n                unique,\n                required,\n                columns,\n                /* display: ((value) => value), */\n                localizable,\n              },\n              typeConfig,\n              {\n                placeholder: placeholder || typeConfig.placeholder,\n                inputView: inputView || typeConfig.inputView || type,\n              },\n            );\n          },\n        );\n      return merged;\n    });\n  }\n\n  /** Generates a CrudConfig for the given model.\n   * Merges three configurations into one:\n   * - default field config, obtained by getFieldConfig\n   * - global model config (if any) configured via with set\n   * - customFieldConfig: any custom field config that is merged on top of the other two.\n   * This enables the developer to either customize at a global scale to target all lists/forms,\n   * or just specific components. */\n  async generateConfig(model: string, customFieldConfig?: FieldConfig): Promise> {\n    const lightModel = await this.getLightModel(model);\n    // first step: merge global model config with default entry config\n    const modelConfig = Object.assign(this.get(model) || {}, {\n      identifier: 'id',\n      identifierPattern: /^[0-9A-Za-z-_]{7,14}$/, // shortID pattern\n      label: '_entryTitle',\n      defaultFilter: lightModel.titleField,\n      onSave: (item: Item, value) => this.entryService.save(model, item, value),\n    });\n    return this.getFieldConfig(model).then((fieldConfig: FieldConfig) => {\n      const modelConfigFields = modelConfig.fields || {};\n      const relevantKeys = Object.keys(customFieldConfig || modelConfigFields);\n      const mergedFields = {};\n      if (!relevantKeys.length) {\n        modelConfig.fields = fieldConfig;\n      } else {\n        relevantKeys.forEach((key) => {\n          mergedFields[key] = Object.assign(\n            {},\n            fieldConfig[key] || {},\n            modelConfigFields[key] || {},\n            (customFieldConfig || {})[key],\n          );\n        });\n        modelConfig.fields = mergedFields;\n      }\n      return modelConfig;\n    });\n  }\n  /** Returns light model information */\n  getLightModel(model) {\n    return this.sdk.ready.then(() => this.sdk.api.modelList()).then((models) => models[model]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfiguration.html":{"url":"interfaces/ModelConfiguration.html","title":"interface - ModelConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-configuration.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig } from '@ec.components/core';\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfiguration {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notification.ts\n        \n\n            \n                Description\n            \n            \n                A Notification is used inside NotificationService and NotificationComponent to display any information to the user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                append\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                hide\n                            \n                            \n                                    Optional\n                                host\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                replace\n                            \n                            \n                                    Optional\n                                sticky\n                            \n                            \n                                    Optional\n                                time\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notification: Notification)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                            The constructor just looks if an error is set, and if yes, sets the type to error. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                    Notification\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            append\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:22\n                            \n                        \n\n                \n                    \n                        If set, the notification will be appended to the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:18\n                            \n                        \n\n                \n                    \n                        If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:20\n                            \n                        \n\n                \n                    \n                        Notifications that should be hidden when this one gets active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            host\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:10\n                            \n                        \n\n                \n                    \n                        The host the is NotificationsComponent that should display the notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:8\n                            \n                        \n\n                \n                    \n                        The message is shown below the title and is meant for further description. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                        If set, the notification will replace all others in the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sticky\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:14\n                            \n                        \n\n                \n                    \n                        If true, the notification will stay forever \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:12\n                            \n                        \n\n                \n                    \n                        The amount of ms it should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:6\n                            \n                        \n\n                \n                    \n                        The title is the headline of a notification and the only value that is required. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:16\n                            \n                        \n\n                \n                    \n                        Determines the looks. Currently info, error and success are defined. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationsComponent } from './notifications.component';\n\n/** A Notification is used inside NotificationService and NotificationComponent to display any information to the user.*/\nexport class Notification {\n  /** The title is the headline of a notification and the only value that is required. */\n  title?: string;\n  /** The message is shown below the title and is meant for further description. */\n  message?: string;\n  /** The host the is NotificationsComponent that should display the notification. */\n  host?: NotificationsComponent;\n  /** The amount of ms it should be visible */\n  time?: number;\n  /** If true, the notification will stay forever */\n  sticky?: boolean;\n  /** Determines the looks. Currently info, error and success are defined. */\n  type?: string;\n  /** If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.*/\n  error?: any;\n  /** Notifications that should be hidden when this one gets active */\n  hide?: this[];\n  /** If set, the notification will be appended to the given array of Notifications when activated */\n  append?: this[];\n  /** If set, the notification will replace all others in the given array of Notifications when activated */\n  replace?: this[];\n\n  /** The constructor just looks if an error is set, and if yes, sets the type to error. */\n  constructor(notification: Notification) {\n    if (notification.error) {\n      this.type = 'error';\n    }\n    Object.assign(this, notification);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/notifications/notifications.component.ts\n\n\n    \n        Description\n    \n    \n        Displays any kind of Notification inside the DOM.\nIt listens on the notificationService.$emitter for notifications.\nhttps://components.entrecode.de/ui/notifications?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-notifications\n            \n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                            Listens on the NotificationService and shows each notification that has this component set as host, or none at all. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        time\n                    \n                \n                \n                    \n                        Type :     number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.component.ts:21\n                            \n                        \n                \n                    \n                        The default time for a notification to be visible. Will be ignored if the notification itself has a time set. \n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current stack of notifications that are visible. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Notifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n    \n\n    \n        import { Component, Input } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { Notification } from './notification';\nimport { NotificationsService } from './notifications.service';\n\n/** Displays any kind of Notification inside the DOM.\n * It listens on the notificationService.$emitter for notifications.\n * https://components.entrecode.de/ui/notifications?e=1\n * */\n@Component({\n  selector: 'ec-notifications',\n  templateUrl: './notifications.component.html',\n})\nexport class NotificationsComponent {\n  /** The current stack of notifications that are visible. */\n  notifications: Collection = new Collection([]);\n  /** The default time for a notification to be visible. Will be ignored if the notification itself has a time set. */\n  @Input() time: number;\n\n  /** Listens on the NotificationService and shows each notification that has this component set as host, or none at all. */\n  constructor(private notificationService: NotificationsService) {\n    this.time = this.time || this.notificationService.defaultTime;\n    this.notificationService.emitter$.subscribe((notification: Notification) => {\n      if (notification.hide) {\n        this.notifications.removeAll(notification.hide);\n      }\n      if (!notification.title && !notification.message) {\n        // console.warn('tried to emit notification without message and title', notification);\n        return;\n      }\n      if (notification.append) {\n        notification.append.push(notification);\n      }\n      if (notification.replace) {\n        notification.replace.length = 0;\n        notification.replace.push(notification);\n      }\n\n      if (!notification.host || notification.host === this) {\n        this.notifications.add(notification);\n        if (notification.sticky) {\n          if (notification.time) {\n            console.warn('notification.time is ignored because it was set sticky');\n          }\n          return;\n        }\n        setTimeout(() => this.notifications.remove(notification), notification.time || this.time);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{notification.title}}\n    {{notification.message}}\n    \n    \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{notification.title}}    {{notification.message}}                                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notifications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IconModule\n                        \n                        \n                            PopModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotificationsService } from './notifications.service';\nimport { PopModule } from '../pop/pop.module';\nimport { ErrorComponent } from './error/error.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [NotificationsComponent, ErrorComponent],\n  imports: [CommonModule, PopModule, IconModule],\n  exports: [NotificationsComponent, ErrorComponent],\n  providers: [\n    {\n      provide: 'useDesktopNotifications',\n      useValue: false,\n    },\n    NotificationsService,\n  ],\n})\nexport class NotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the main interaction layer for the developer to show notifications.\nYou can use desktop notifications by default by providing:\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }in your module's providers.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultTime\n                            \n                            \n                                    Private\n                                emitter\n                            \n                            \n                                    Public\n                                emitter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                desktopNotification\n                            \n                            \n                                emit\n                            \n                            \n                                getPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(useDesktopNotifications)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructors injects the useDesktopNotifications flag from the module.\nIf true, all notifications will be shown as desktop notifications instead. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        useDesktopNotifications\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktopNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \ndesktopNotification(notification: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:60\n                            \n                        \n\n\n                \n                    \n                            Emits a desktop notification after asking for permission (if not already granted). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit(notification: Notification, desktop?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        desktop\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPermission()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Asks for permission to show desktop notifications, if not already granted. \n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                        The default view time for a notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:22\n                            \n                        \n\n                \n                    \n                        The emitter subject to fire notifications. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.emitter.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when a new notification comes in. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Notification } from './notification';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/** Workaround to get window without typescript complaining */\ndeclare const window;\n\n/** This service is the main interaction layer for the developer to show notifications.\n * You can use desktop notifications by default by providing:\n * ```json\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }```\n * in your module's providers.\n *\n * */\n@Injectable()\nexport class NotificationsService {\n  /** The emitter subject to fire notifications. */\n  private emitter: Subject = new Subject();\n  /** Observable that is nexted when a new notification comes in. */\n  public emitter$: Observable = this.emitter.asObservable();\n  /** The default view time for a notification. */\n  public defaultTime = 5000;\n\n  /** The constructors injects the useDesktopNotifications flag from the module.\n   * If true, all notifications will be shown as desktop notifications instead. */\n  constructor(@Inject('useDesktopNotifications') private useDesktopNotifications) {}\n\n  /** Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.*/\n  emit(notification: Notification, desktop?: boolean) {\n    const instance = new Notification(notification);\n    if (desktop || this.useDesktopNotifications) {\n      this.desktopNotification(instance);\n    } else {\n      this.emitter.next(instance);\n    }\n    if (notification && notification.error) {\n      console.error(notification.error);\n    }\n    return instance;\n  }\n\n  /** Asks for permission to show desktop notifications, if not already granted. */\n  getPermission(): Promise {\n    if (window.Notification.permission === 'granted') {\n      return Promise.resolve();\n    }\n    return window.Notification.requestPermission().then((permission) => {\n      // If the user accepts, let's create a notification\n      if (permission !== 'granted') {\n        return Promise.reject('Desktop Notification Permission Denied!');\n      }\n    });\n  }\n\n  /** Emits a desktop notification after asking for permission (if not already granted). */\n  desktopNotification(notification: Notification) {\n    if (!('Notification' in window)) {\n      console.warn('This browser does not support desktop notification');\n    }\n    this.getPermission().then(() => {\n      const message = new window.Notification(notification.title, { body: notification.message });\n      if (notification.sticky) {\n        if (notification.time) {\n          console.warn('notification.time is ignored because it was set sticky');\n        }\n        return;\n      }\n      setTimeout(() => message.close(), notification.time || this.defaultTime);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutputComponent.html":{"url":"components/OutputComponent.html","title":"component - OutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/output/output.component.ts\n\n\n    \n        Description\n    \n    \n        Outputs the given field of the given item, rendering the component dynamically. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-output\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:24\n                            \n                        \n                \n                    \n                        Overrides the default component \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :     Field\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:20\n                            \n                        \n                \n                    \n                        The instance of field that should be used in the template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:22\n                            \n                        \n                \n                    \n                        The belonging item \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            The component is loade as soon as the field and item are known.\nIf the field has no output property set, the DefaultOutputComponent will be rendered. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:17\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  ChangeDetectionStrategy,\n  Type\n} from '@angular/core';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { Field, Item } from '@ec.components/core';\nimport { DefaultOutputComponent } from '../../form/default-output/default-output.component';\n\n/** Outputs the given field of the given item, rendering the component dynamically. */\n@Component({\n  selector: 'ec-output',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OutputComponent extends DynamicSlotComponent implements OnChanges {\n  /** The instance of field that should be used in the template */\n  @Input() field: Field;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Overrides the default component */\n  @Input() component: Type;\n\n  /** The component is loade as soon as the field and item are known.\n   * If the field has no output property set, the DefaultOutputComponent will be rendered. */\n  ngOnChanges() {\n    if (this.field && this.item) {\n      this.loadComponent(\n        this.component || this.field.output || DefaultOutputComponent,\n        {\n          item: this.item,\n          field: this.field\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'OutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/pagination/pagination.ts\n        \n\n            \n                Description\n            \n            \n                This class can be used to control the loading behaviour of external data. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Public\n                                change$\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Protected\n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                getPage\n                            \n                            \n                                getPages\n                            \n                            \n                                isActive\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                last\n                            \n                            \n                                    Protected\n                                load\n                            \n                            \n                                next\n                            \n                            \n                                params\n                            \n                            \n                                prev\n                            \n                            \n                                select\n                            \n                            \n                                setTotal\n                            \n                            \n                                slice\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: ListConfig, total?: number)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/pagination/pagination.ts:15\n                            \n                        \n\n                \n                    \n                            You can init each Pagination instance with an optional config.\nIf no config is provided, it will default to {page: 1, size: 25}. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ListConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:13\n                            \n                        \n\n                \n                    \n                        Subject for tracking changes. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            change$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.change.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:15\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when the pagination has changed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:9\n                            \n                        \n\n                \n                    \n                        The pagination config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:11\n                            \n                        \n\n                \n                    \n                        Array to iterate over the number of pages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:7\n                            \n                        \n\n                \n                    \n                        The total number of items that is being paginated. It can be changed via setTotal. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first\n                            \n                            \n                        \n                    \n                \n                \n                    \nfirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:97\n                            \n                        \n\n\n                \n                    \n                            Loads the first Page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:37\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current page \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:42\n                            \n                        \n\n\n                \n                    \n                            Retrieves the number of pages \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:111\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given page number is currently active.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:116\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the first one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:121\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the last one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                            \n                        \n                    \n                \n                \n                    \nlast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:102\n                            \n                        \n\n\n                \n                    \n                            Loads the last page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load(config?: ListConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:80\n                            \n                        \n\n\n                \n                    \n                            Merges config and fires next on change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ListConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:47\n                            \n                        \n\n\n                \n                    \n                            Loads the next page. Throws error if already on last page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \nparams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:134\n                            \n                        \n\n\n                \n                    \n                            Returns an object with all relevant infos about the current state of pagination \n\n\n                            \n                                Returns :     { page: number; pages: number; total: number; from: number; to: any; size: any; availableSizes: a...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:56\n                            \n                        \n\n\n                \n                    \n                            Loads the previous page. Throws error if already on first page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(page: number, silent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:88\n                            \n                        \n\n\n                \n                    \n                            Selects the given page number \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        silent\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTotal\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTotal(total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:67\n                            \n                        \n\n\n                \n                    \n                            Sets the total number of items and calculcates the page count.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slice\n                            \n                            \n                        \n                    \n                \n                \n                    \nslice(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:129\n                            \n                        \n\n\n                \n                    \n                            slices a given array according to the current pagination state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:146\n                            \n                        \n\n\n                \n                    \n                            updates the size of the pages.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Pagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n    \n\n    \n        import { Subject, Observable } from 'rxjs';\nimport { ListConfig } from '../list/list-config.interface';\n\n/** This class can be used to control the loading behaviour of external data. */\nexport class Pagination {\n  /** The total number of items that is being paginated. It can be changed via setTotal. */\n  protected total: number;\n  /** The pagination config */\n  protected config: ListConfig;\n  /** Array to iterate over the number of pages. */\n  public pages: Array;\n  /** Subject for tracking changes. */\n  private change = new Subject();\n  /** Observable that is nexted when the pagination has changed. */\n  public change$: Observable = this.change.asObservable();\n\n  /** You can init each Pagination instance with an optional config.\n   * If no config is provided, it will default to ```{page: 1, size: 25}```. */\n  constructor(config?: ListConfig, total?: number) {\n    this.config = { page: 1, size: 25 };\n    Object.assign(this.config, config);\n    Object.assign(this.config, {\n      availableSizes: Array.from(\n        new Set(\n          [this.config.size]\n            .concat(this.config.availableSizes || [10, 25, 50, 100], [this.config.size])\n            .sort((a, b) => a - b),\n        ),\n      ),\n    });\n    if (total) {\n      this.setTotal(total);\n    }\n  }\n\n  /** Retrieves the current page */\n  getPage(): number {\n    return this.config.page;\n  }\n\n  /** Retrieves the number of pages */\n  getPages(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /** Loads the next page. Throws error if already on last page. */\n  next(): void {\n    if (this.isLast()) {\n      return; // already last page\n    }\n    this.config.page += 1;\n    this.load();\n  }\n\n  /** Loads the previous page. Throws error if already on first page. */\n  prev(): void {\n    if (this.isFirst()) {\n      return; // already first page\n    }\n    this.config.page -= 1;\n    this.load();\n  }\n\n  /**\n   * Sets the total number of items and calculcates the page count.\n   * */\n  setTotal(total: number) {\n    /* if (this.total !== total) {\n      this.change.next(this.config);\n    } */\n    this.total = total;\n    this.pages = new Array(Math.ceil(this.total / this.config.size));\n    if (this.config.page !== 1 && this.config.page > this.pages.length) {\n      this.config.page = this.pages.length || 1;\n      this.load();\n    }\n  }\n\n  /** Merges config and fires next on change */\n  protected load(config?: ListConfig): void {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.change.next(this.config);\n  }\n\n  /** Selects the given page number */\n  select(page: number, silent = false): void {\n    if (page === this.config.page || silent) {\n      this.config.page = page;\n      return;\n    }\n    this.load({ page: page });\n  }\n\n  /** Loads the first Page */\n  first(): void {\n    this.load({ page: 1 });\n  }\n\n  /** Loads the last page */\n  last() {\n    if (!this.pages) {\n      throw new Error(`Cannot load last page without knowing the item count.\n        Call setTotal(itemCount) before loading.`);\n    }\n    this.load({ page: this.pages.length });\n  }\n\n  /** Returns true if the given page number is currently active.*/\n  isActive(page: number): boolean {\n    return this.config.page === page;\n  }\n\n  /** Returns true if the current page is the first one */\n  isFirst(): boolean {\n    return this.config.page === 1;\n  }\n\n  /** Returns true if the current page is the last one */\n  isLast(): boolean {\n    if (!this.pages) {\n      return true;\n    }\n    return this.config.page === this.pages.length;\n  }\n\n  /** slices a given array according to the current pagination state */\n  slice(items: Array): Array {\n    return items.slice((this.config.page - 1) * this.config.size, this.config.page * this.config.size);\n  }\n\n  /** Returns an object with all relevant infos about the current state of pagination */\n  params() {\n    return {\n      page: this.getPage(),\n      pages: this.getPages(),\n      total: this.total,\n      from: (this.getPage() - 1) * this.config.size + 1,\n      to: Math.min(this.getPage() * this.config.size, this.total),\n      size: this.config.size,\n      availableSizes: this.config.availableSizes,\n    };\n  }\n  /** updates the size of the pages.  */\n  updateSize(size: number) {\n    if (!size) {\n      return;\n    }\n    this.load({ size, page: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        The Pagination component renders a given instance of the Pagination class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pagination\n            \n\n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                pageContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     PaginationConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:23\n                            \n                        \n                \n                    \n                        The config that is used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                \n                \n                    \n                        Type :     Pagination\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:15\n                            \n                        \n                \n                    \n                        A Pagination Instance \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \nisVisible(page)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Determines if a page should be visible \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            As soon as the pagination is known, the change$ event is subscribed to translate the container on change.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Init config. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:17\n                            \n                        \n\n                \n                    \n                        The div container for the pages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('page')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pages li elements. The first one is used to determine the container translation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('pageContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:19\n                            \n                        \n\n                \n                    \n                        The ul around pages \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pagination\nTODO\n\n    \n\n    \n        import { Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Pagination } from '@ec.components/core';\nimport { PaginationConfig } from './pagination-config.interface';\n\n/**\n * The Pagination component renders a given instance of the Pagination class.\n */\n@Component({\n  selector: 'ec-pagination',\n  templateUrl: './pagination.component.html',\n})\nexport class PaginationComponent implements OnChanges, OnInit {\n  /** A Pagination Instance */\n  @Input() pagination: Pagination;\n  /** The div container for the pages*/\n  @ViewChild('container') private container: ElementRef;\n  /** The ul around pages */\n  @ViewChild('pageContainer') private pageContainer: ElementRef;\n  /** The pages li elements. The first one is used to determine the container translation. */\n  @ViewChildren('page') private page: QueryList;\n  /** The config that is used */\n  @Input() config: PaginationConfig;\n\n  /** Init config. */\n  ngOnInit() {\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** As soon as the pagination is known, the change$ event is subscribed to translate the container on change.*/\n  ngOnChanges() {\n    if (!this.pagination) {\n      return;\n    }\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** Determines if a page should be visible */\n  isVisible(page) {\n    const current = this.pagination.getPage();\n    return (\n      Math.abs(current - page) \n    \n\n    \n        \n  1&&!pagination?.isFirst()\">\n    \n      \n        {{'pagination.first' | symbol}}\n      \n    \n    \n      \n        {{'pagination.prev' | symbol}}\n      \n    \n  \n  1\">\n    \n      \n        \n          {{i+1}}\n        \n      \n    \n  \n  1&&!pagination?.isLast()\">\n    \n      \n        {{'pagination.next' | symbol}}\n      \n    \n    \n      \n        {{'pagination.last' | symbol}}\n      \n    \n  \n  \n    {{pagination?.params()?.from}} - {{pagination?.params()?.to}} {{ 'pagination.of' | symbol}} {{pagination?.params()?.total}}\n  \n  \n     1\" (change)=\"updateSize($event.target.value)\" class=\"input\">\n      \n        {{size}} {{'pagination.size' | symbol}}\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  1&&!pagination?.isFirst()\">                  {{\\'pagination.first\\' | symbol}}                            {{\\'pagination.prev\\' | symbol}}              1\">                            {{i+1}}                      1&&!pagination?.isLast()\">                  {{\\'pagination.next\\' | symbol}}                            {{\\'pagination.last\\' | symbol}}                  {{pagination?.params()?.from}} - {{pagination?.params()?.to}} {{ \\'pagination.of\\' | symbol}} {{pagination?.params()?.total}}         1\" (change)=\"updateSize($event.target.value)\" class=\"input\">              {{size}} {{\\'pagination.size\\' | symbol}}            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationConfig.html":{"url":"classes/PaginationConfig.html","title":"class - PaginationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/list/pagination/pagination-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for a pagination component \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideFirstLast\n                            \n                            \n                                hidePages\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: PaginationConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor assigns the config \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PaginationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideFirstLast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:9\n                            \n                        \n\n                \n                    \n                        Hides first and last Link \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                        Hides pages \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:7\n                            \n                        \n\n                \n                    \n                        Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\nNOTE: For a smoother UX, there are minimum 2 * range + 1 pages visible.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SymbolService } from '../../symbol/symbol.service';\n\n/** Configuration for a pagination component */\nexport class PaginationConfig {\n  /** Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\n   * NOTE: For a smoother UX, there are minimum ```2 * range + 1``` pages visible.*/\n  range = 2;\n  /** Hides first and last Link */\n  hideFirstLast: boolean;\n  /** Hides pages */\n  hidePages: boolean;\n  /** The constructor assigns the config */\n  constructor(config: PaginationConfig) {\n    Object.assign(this, config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/password-reset/password-reset.component.ts\n\n\n    \n        Description\n    \n    \n        Form to send password reset request.\nhttps://components.entrecode.de/auth/password-reset?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-password-reset\n            \n\n\n\n\n            \n                templateUrl\n                password-reset.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                email\n                            \n                            \n                                loader\n                            \n                            \n                                lockForm\n                            \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:20\n                            \n                        \n                \n                    \n                        Optional api to be used (if not using sdk.api instance) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'E-Mail Adresse...'\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:22\n                            \n                        \n                \n                    \n                        Custom placeholder for email field \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:24\n                            \n                        \n                \n                    \n                        Event after request was successful \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Sends request through AuthService and shows notifications + loader. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:18\n                            \n                        \n\n                \n                    \n                        The user email \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n                \n                    \n                        The loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:16\n                            \n                        \n\n                \n                    \n                        To ensure the user only sends one request, the form is locked after the request has been sent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\n\n/** Form to send password reset request.\n * https://components.entrecode.de/auth/password-reset?e=1\n *\n */\n@Component({\n  selector: 'ec-password-reset',\n  templateUrl: 'password-reset.component.html',\n})\nexport class PasswordResetComponent implements WithLoader {\n  /** To ensure the user only sends one request, the form is locked after the request has been sent */\n  lockForm: boolean;\n  /** The user email */\n  email: string;\n  /** Optional api to be used (if not using sdk.api instance) */\n  @Input() api: PublicAPI;\n  /** Custom placeholder for email field */\n  @Input() placeholder = 'E-Mail Adresse...';\n  /** Event after request was successful */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The loader */\n  @ViewChild(LoaderComponent) loader;\n\n  constructor(public auth: AuthService, public notifications: NotificationsService) {}\n  /** Sends request through AuthService and shows notifications + loader. */\n  reset() {\n    const reset = this.auth\n      .resetPassword(this.email, this.api)\n      .then(() => {\n        this.notifications.emit({\n          type: 'success',\n          title: 'Mail versendet',\n          message: 'Sie haben soeben eine Mail mit weiteren Anweisungen erhalten',\n          sticky: true,\n        });\n        this.lockForm = true;\n        this.success.emit();\n      })\n      .catch((error) => {\n        this.notifications.emit({\n          title: 'Fehler beim Passwort zurücksetzen',\n          error,\n          sticky: true,\n        });\n        console.log('could not reset password', error);\n      });\n    this.loader.wait(reset);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    {{'passwordReset.button' | symbol}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{\\'passwordReset.button\\' | symbol}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopComponent.html":{"url":"components/PopComponent.html","title":"component - PopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/pop/pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop is an area of content whose visibility can be toggled.\nIt can be used e.g as dialog, drawer or dialog.\nhttps://components.entrecode.de/ui/pop?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/pop/pop.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:38\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Pop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  HostBinding,\n  HostListener,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { PopService } from './pop.service';\n\n/** A Pop is an area of content whose visibility can be toggled.\n * It can be used e.g as dialog, drawer or dialog.\n * https://components.entrecode.de/ui/pop?e=1\n * */\n@Component({\n  selector: 'ec-pop',\n  templateUrl: './pop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PopComponent {\n  /** If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  */\n  @Input() @HostBinding('class.is-active') active: boolean;\n  /** Flip and stays true after first show */\n  activated = false;\n  /** The used type on the host element */\n  @Input() type: string;\n  /** If set to true, the pop will hide when a click happens outside the pop. */\n  @Input() hideOnClickOutside = false;\n  /** If set to false, esc will not close the pop */\n  @Input() hideOnEscape = true;\n  // tslint:disable-next-line:no-output-rename\n  @Output('toggle') _toggle: EventEmitter = new EventEmitter();\n\n  clickEvent;\n\n  /** Listens for document:click and hides */\n  @HostListener('document:click', ['$event']) clickedOutside($event) {\n    if (\n      this.hideOnClickOutside &&\n      this.active &&\n      (!this.clickEvent || $event !== this.clickEvent) && // to ensure the show event wont hide immediately\n      this.elementRef &&\n      this.isOutside($event.target)\n    ) {\n      this.hide();\n    }\n  }\n\n  constructor(protected popService: PopService, public elementRef: ElementRef, protected cdr: ChangeDetectorRef) {}\n\n  /** yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) */\n  isOutside(element) {\n    return !this.elementRef.nativeElement.contains(element) /*  ||\n      element === this.elementRef.nativeElement */;\n  } // active: boolean = !this.active, emit: boolean = false\n\n  /** Shows if not active, hides if active. */ public toggle(e?) {\n    if (this.active) {\n      this.hide();\n    } else {\n      this.show(e);\n    }\n  }\n\n  /** Shows the pop. Sets active true and adds pop to popService.stack */\n  public show(e?) {\n    this.active = true;\n    this.activated = true;\n    if (this.hideOnEscape) {\n      this.popService.stack.add(this);\n    }\n    if (e) {\n      this.clickEvent = e;\n    } else if (this.hideOnClickOutside) {\n      // console.warn('To use hideOnClickOutside, you need to pass the click event to the show method of ec-pop!');\n    }\n    this._toggle.emit(this.active);\n    this.cdr.markForCheck();\n  }\n\n  /** Hides the pop. Sets active false and removes pop from popService.stack */\n  public hide() {\n    if (this.hideOnEscape) {\n      this.popService.stack.remove(this);\n    }\n    this.active = false;\n    this._toggle.emit(this.active);\n    this.cdr.markForCheck();\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PopModule.html":{"url":"modules/PopModule.html","title":"module - PopModule","body":"\n                   \n\n\n\n\n    Modules\n    PopModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_imports\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/pop/pop.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            PopComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            PopService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IconModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            PopComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopComponent } from './pop.component';\nimport { PopService } from './pop.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { IconModule } from '../icon/icon.module';\n\nexport const popModuleConfig = {\n  declarations: [PopComponent, ModalComponent],\n  imports: [CommonModule, IconModule],\n  exports: [PopComponent, ModalComponent],\n  providers: [PopService],\n};\n\n@NgModule(popModuleConfig)\nexport class PopModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopService.html":{"url":"injectables/PopService.html","title":"injectable - PopService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/pop/pop.service.ts\n        \n\n            \n                Description\n            \n            \n                Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultColumns\n                            \n                            \n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                            Listens for escape keys and hides latest pop + removes the pop from stack \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 9\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                        default value for columns of any pop \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                        Stack of current opened pops \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { PopComponent } from './pop.component';\n\n/** Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. */\n@Injectable()\nexport class PopService {\n  /** default value for columns of any pop */\n  defaultColumns = 9;\n  /** Stack of current opened pops */\n  stack: Collection = new Collection();\n  /** Listens for escape keys and hides latest pop + removes the pop from stack */\n  constructor() {\n    window.addEventListener('keydown', (event) => {\n      if ((event.keyCode === 27 || event.key === 'Escape') && this.stack.items.length) {\n        const latestPop = this.stack.items[this.stack.items.length - 1];\n        latestPop.hide();\n        this.stack.remove(latestPop);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceActionbarState.html":{"url":"interfaces/ResourceActionbarState.html","title":"interface - ResourceActionbarState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResourceActionbarState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                        actionbar\n                                \n                                \n                                        api\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        relation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionbar\n                                    \n                                \n                                \n                                    \n                                        actionbar:     ActionbarComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionbarComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        api\n                                    \n                                \n                                \n                                    \n                                        api:     Core\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Core\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                    \n                                \n                                \n                                    \n                                        relation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ElementRef, Input, ChangeDetectorRef, EventEmitter, Output } from '@angular/core';\nimport { ActionbarComponent, Action, ActionFunction, selectTemplate } from '@ec.components/ui';\nimport { NotificationsService, ListComponent } from '@ec.components/ui';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport ListResource from 'ec.sdk/lib/resources/ListResource';\nimport Core from 'ec.sdk/lib/Core';\nimport { Item } from '@ec.components/core';\nimport { SdkService } from '../sdk/sdk.service';\n\nexport interface ResourceActionbarState {\n  api: Core;\n  relation: string;\n  actionbar: ActionbarComponent;\n  action?: ActionFunction;\n  options?: Object;\n}\n\n@Component({\n  selector: 'ec-resource-actionbar',\n  template: selectTemplate,\n})\nexport class ResourceActionbarComponent extends ActionbarComponent implements OnInit {\n  state: ResourceActionbarState;\n\n  @Output() create: EventEmitter = new EventEmitter();\n  @Output() select: EventEmitter> = new EventEmitter();\n\n  @Input() actions: Action[];\n\n  constructor(\n    public notificationService: NotificationsService,\n    public sdk: SdkService,\n    public resourceConfig: ResourceConfig,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(elementRef, cdr);\n  }\n\n  ngOnInit() {\n    const state = {\n      api: this.sdk.api,\n      relation: 'tags',\n    };\n    const { api, relation } = state;\n    this.sdk.ready.then(() => {\n      this.loadResourceListActions({\n        api,\n        relation,\n        actionbar: this,\n      });\n    });\n  }\n\n  getResourceListActions(listResource: ListResource, relation: string, action?: ActionFunction): Action[] {\n    const actions: Action[] = listResource.getAllItems().map((resource) => {\n      const { identifier, label } = this.resourceConfig.get(relation);\n      return {\n        id: resource[identifier],\n        title: resource[label] || '- no title -',\n        data: resource,\n        path: relation,\n        action: (item, bar) => {\n          if (action) {\n            action(item.getBody().data, bar);\n          } else {\n            console.log('no action specified..');\n          }\n        },\n      };\n    });\n    if (listResource.hasNextLink()) {\n      actions.push({\n        id: 'next-page',\n        title: `Load Page`,\n        path: null,\n        data: {},\n        select: false,\n        action: () => {\n          listResource.followNextLink().then((list) => {\n            const concatted = this.list.items\n              .map((i) => i.getBody())\n              .filter((i) => i.id !== 'next-page')\n              .concat(this.getResourceListActions(list, relation, action));\n            this.loadActions(concatted);\n          });\n        },\n      });\n    }\n    return actions;\n  }\n\n  reload() {\n    this.loadResourceListActions({\n      ...this.state,\n      options: {},\n    });\n  }\n\n  loadResourceListActions(state: ResourceActionbarState = this.state, stack = true): Promise {\n    const { api, relation, actionbar, action, options } = state;\n    this.state = {\n      ...this.state,\n      ...state,\n    };\n    const loading = api\n      .resourceList(relation, options)\n      .then((list) => {\n        return this.getResourceListActions(list, relation, action);\n      })\n      .then((actions) => {\n        if (actions) {\n          actionbar.loadActions(actions, stack);\n        }\n        return actions;\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: 'Error while loading Resources',\n          error,\n        });\n      })\n      .then((actions) => actions || []);\n    if (actionbar.dropdownLoader) {\n      actionbar.dropdownLoader.wait(loading);\n    }\n    return loading;\n  }\n\n  resourceAction({\n    relation,\n    title,\n    api,\n    action,\n    actionbar,\n    add,\n    path,\n  }: {\n    relation: string;\n    title: string;\n    api: Core;\n    action?: ActionFunction;\n    actionbar?: ActionbarComponent;\n    add?: boolean;\n    path?: string;\n  }) {\n    return {\n      id: path || relation,\n      title: title,\n      add,\n      action: () => this.loadResourceListActions({ api, relation, actionbar, action }),\n    };\n  }\n\n  filterDropdownList(listComponent: ListComponent, query) {\n    const paths = this.currentActions()\n      .map((a) => a.path)\n      .filter((value, index, self) => self.indexOf(value) === index)\n      .filter((v) => !!v);\n    if (!paths.length) {\n      return super.filterDropdownList(listComponent, query);\n    }\n    const { identifier, label } = this.resourceConfig.get(this.state.relation);\n    this.loadResourceListActions(\n      {\n        ...this.state,\n        options: {\n          [label + '~']: { exact: query },\n        },\n      },\n      false,\n    ).then((actions) => {\n      if (actions.length === 0) {\n        this.loadActions(\n          [\n            {\n              title: `\"${query}\" erstellen`,\n              id: 'createnew',\n              select: false,\n              action: () => {\n                if (this.create.observers.length) {\n                  this.create.emit(query);\n                } else {\n                  const item = new Item(\n                    {\n                      id: Date.now() + '',\n                      title: query,\n                    },\n                    this.config,\n                  );\n                  this.addItem(item);\n                  this.searchbar.clear();\n                  this.reload();\n                }\n              },\n            },\n          ],\n          false,\n        );\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceCrudComponent.html":{"url":"components/ResourceCrudComponent.html","title":"component - ResourceCrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceCrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/resource-crud/resource-crud.component.ts\n\n\n    \n        Description\n    \n    \n        The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * \n *\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-crud.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                initMethods\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                createClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     Core\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:29\n                            \n                        \n                \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:33\n                            \n                        \n                \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:31\n                            \n                        \n                \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:35\n                            \n                        \n                \n                    \n                        The selection that should be used \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:43\n                            \n                        \n                \n                    \n                        Emits when a list element is clicked \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        createClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:47\n                            \n                        \n                \n                    \n                        Output that is nexted when pressing the create button \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:45\n                            \n                        \n                \n                    \n                        Emits when the selection has changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMethods()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Called on list columnClicked \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ResourceListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:37\n                            \n                        \n\n                \n                    \n                        The ResourceListComponent inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourcePopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ResourcePopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:39\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { LoaderService } from '@ec.components/ui';\nimport { NotificationsService } from '@ec.components/ui';\nimport { AuthService } from '../auth/auth.service';\nimport { WithLoader } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport Core from 'ec.sdk/lib/Core';\n\n/** The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * */\n@Component({\n  selector: 'ec-resource-crud',\n  templateUrl: './resource-crud.component.html',\n})\nexport class ResourceCrudComponent implements OnInit, WithLoader {\n  /** The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors */\n  @Input() api: Core; // sdk api connector\n  /** The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) */\n  @Input() relation: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The ResourceListComponent inside the template. */\n  @ViewChild(ResourceListComponent) list: ResourceListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(ResourcePopComponent) pop: ResourcePopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Output that is nexted when pressing the create button */\n  @Output() createClicked: EventEmitter = new EventEmitter();\n\n  constructor(\n    private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.initMethods();\n  }\n\n  initMethods() {\n    if (!this.relation) {\n      return;\n    }\n    this.auth.getAllowedResourceMethods(this.relation, {}, this.config.methods).then((methods) => {\n      this.config.methods = methods;\n    });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Called on list columnClicked */\n  select(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.pop.edit(item.getBody());\n    // TODO: check CrudComponent#loadEntry for further inspiration\n  }\n\n  /** Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. */\n  create() {\n    if (this.createClicked.observers.length) {\n      this.createClicked.next();\n    } else if (this.pop) {\n      this.pop.create();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{config?.createLabel}}\n                \n                    \n                \n            \n            \n                \n            \n        \n    \n    \n        \n    \n    \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{config?.createLabel}}                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceCrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceListPopComponent.html":{"url":"components/ResourceListPopComponent.html","title":"component - ResourceListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts\n\n\n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-list-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                    Public\n                                resourceConfig\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                pasted\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     Core\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     ListConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pasted\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'toast-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:88\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:58\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:72\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:63\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SearchbarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Item, ListConfig, Selection } from '@ec.components/core';\nimport { PopComponent, PopService, SearchbarComponent } from '@ec.components/ui';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n@Component({\n  selector: 'ec-resource-list-pop',\n  templateUrl: './resource-list-pop.component.html',\n})\nexport class ResourceListPopComponent extends PopComponent implements OnChanges {\n  @Input() relation: string;\n  @Input() api: Core;\n  @Input() config: ListConfig;\n  @Input() selection: Selection;\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  @Output() pasted: EventEmitter> = new EventEmitter();\n  @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n  /** Set host class to make sure the type is used */\n  @HostBinding('class') class = 'toast-wrapper';\n  lightModel: any;\n\n  constructor(\n    public resourceConfig: ResourceConfig,\n    public popService: PopService,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(popService, elementRef, cdr);\n  }\n\n  ngOnChanges() {\n    if (this.relation) {\n      this.config = Object.assign({}, this.config || {}, this.resourceConfig.get(this.relation));\n    }\n    if (this.config) {\n      this.config = Object.assign({ hidePagination: true, disableHeader: true }, this.config);\n    }\n  }\n\n  /** emits columnClicked event or toggles selection if no observers. */\n  select(item) {\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    } else if (this.selection) {\n      this.selection.toggle(item);\n    }\n    // this.searchbar.focusEvent.emit(true);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n         -->\n        \n    \n    \n        \n        \n            \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         -->                                                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceModule.html":{"url":"modules/ResourceModule.html","title":"module - ResourceModule","body":"\n                   \n\n\n\n\n    Modules\n    ResourceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_imports\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\n\nApiActionbarComponent\n\nApiActionbarComponent\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nApiActionbarComponent->ResourceModule\n\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nApiActionbarComponent \n\nApiActionbarComponent \n\nApiActionbarComponent  -->\n\nResourceModule->ApiActionbarComponent \n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/resource/resource.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiActionbarComponent\n                        \n                        \n                            ResourceActionbarComponent\n                        \n                        \n                            ResourceCrudComponent\n                        \n                        \n                            ResourceDeletePopComponent\n                        \n                        \n                            ResourceFormComponent\n                        \n                        \n                            ResourceListComponent\n                        \n                        \n                            ResourceListPopComponent\n                        \n                        \n                            ResourcePopComponent\n                        \n                        \n                            ResourceSelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ResourceListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ResourceConfig\n                        \n                        \n                            ResourceService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiActionbarComponent\n                        \n                        \n                            ResourceActionbarComponent\n                        \n                        \n                            ResourceCrudComponent\n                        \n                        \n                            ResourceDeletePopComponent\n                        \n                        \n                            ResourceFormComponent\n                        \n                        \n                            ResourceListComponent\n                        \n                        \n                            ResourceListPopComponent\n                        \n                        \n                            ResourcePopComponent\n                        \n                        \n                            ResourceSelectComponent\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from '../resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from '../resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from '../resource-select/resource-select.component';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceListPopComponent } from '../resource-list-pop/resource-list-pop.component';\nimport { ResourceActionbarComponent } from '../resource-actionbar/resource-actionbar.component';\nimport { ApiActionbarComponent } from '../resource-actionbar/api-actionbar.component';\n\n@NgModule({\n  entryComponents: [ResourceListComponent],\n  declarations: [\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent,\n    ApiActionbarComponent,\n  ],\n  imports: [CommonModule, FormsModule, UiModule, SdkModule],\n  exports: [\n    UiModule,\n    SdkModule,\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent,\n    ApiActionbarComponent,\n  ],\n  providers: [ResourceService, ResourceConfig],\n})\nexport class ResourceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changes\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, config: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-config/resource.service.ts:35\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, setEmptyStringsToNull, deleteNullProperties)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        setEmptyStringsToNull\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        deleteNullProperties\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(relation: string, value: Object, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:122\n                            \n                        \n\n\n                \n                    \n                            Creates a new resource with the given value for the given relation. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(relation: string, resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:135\n                            \n                        \n\n\n                \n                    \n                            deletes the given resource and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:97\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(item: Item, value: Object, relation: string, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Saves the given resource with the given value. If the resource is not yet existing,\nit will be created.Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(relation, resource: Resource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:80\n                            \n                        \n\n\n                \n                    \n                            Updates the given resource with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:35\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an resource is created or updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Subject, Observable } from 'rxjs';\nimport { filter as rxFilter } from 'rxjs/operators';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the ResourceService. */\nexport interface Update {\n  /** The relation that has been updated. */\n  relation: string | string[];\n  /** The relevant resource. */\n  resource?: Resource;\n  /** The list where it happened. */\n  list?: ResourceList;\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete';\n  /** An identifier associated with the update e.g. an entryID */\n  identifier?: string;\n  /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n  broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n  /** The changes event is emitted everytime an resource is created or updated. */\n  public changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public config: ResourceConfig) {\n    /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return change.broadcast || Object.keys(filter).reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().pipe(rxFilter((change: Update) => this.matches(change, filter)));\n  }\n\n  /** Saves the given resource with the given value. If the resource is not yet existing,\n   * it will be created.Otherwise it will be updated. */\n  save(item: Item, value: Object, relation: string, api: Core): Promise {\n    const resource = item.getBody();\n    if (item.config.onSave) {\n      return Promise.resolve(item.config.onSave(item, value));\n    }\n    item.deleteImmutableProperties(value);\n    if (resource && resource.save) {\n      return this.update(relation, resource, value);\n    }\n    return this.create(relation, value, api)\n      .then((_resource) => {\n        return _resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given resource with the new value. Fires the \"update\" change. */\n  update(relation, resource: Resource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => (oldValues[key] = resource[key]));\n    Object.assign(resource, this.clean(value, false, false)); // assign new form values\n    return resource\n      .save()\n      .then((_resource) => {\n        this.changes.next({ relation, resource: _resource, type: 'put' });\n        return _resource;\n      })\n      .catch((err) => {\n        Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' || ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (setEmptyStringsToNull && value[key] === '') {\n          // clear empty strings\n          value[key] = null;\n        }\n        if (deleteNullProperties && value[key] === null) {\n          delete value[key];\n        }\n        if (this.isImmutableProperty(key)) {\n          // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n  create(relation: string, value: Object, api: Core): Promise {\n    return api\n      .create(relation, this.clean(value))\n      .then((resource: Resource) => {\n        this.changes.next({ relation, resource, type: 'post' });\n        return resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given resource and emits the \"delete\" change. */\n  del(relation: string, resource: Resource) {\n    return resource.del().then((res) => {\n      this.changes.next({ relation, resource, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SdkField.html":{"url":"interfaces/SdkField.html","title":"interface - SdkField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SdkField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/sdk-field.ts\n        \n\n            \n                Description\n            \n            \n                Field Config as obtained by PublicAPI#getFieldConfig.\nSee https://doc.entrecode.de/data_manager/#field-data-types for more info\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        localizable\n                                \n                                \n                                        mutable\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                                \n                                        unique\n                                \n                                \n                                        validation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    further field config options (like columns etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Default value that is returned for a newly created required field on old entries \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Description. Used for placeholders \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizable\n                                    \n                                \n                                \n                                    \n                                        localizable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Not implemented yet. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutable\n                                    \n                                \n                                \n                                    \n                                        mutable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tells if the field value can be changed. If true, the field is a system field  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field can only be altered when creating. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field must have a value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    System Title \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Type \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique: each entry has a unique value for that field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Validation info, depends on field type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SdkField {\n  /** further field config options (like columns etc.) */\n  config: Object;\n  /** Field Type */\n  type: string;\n  /** System Title */\n  title: string;\n  /** Unique: each entry has a unique value for that field */\n  unique: boolean;\n  /** Default value that is returned for a newly created required field on old entries */\n  default: string;\n  /** Tells if the field value can be changed. If true, the field is a system field  */\n  mutable: boolean;\n  /** If true, the field can only be altered when creating. */\n  readOnly: boolean;\n  /** If true, the field must have a value */\n  required: boolean;\n  /** Validation info, depends on field type. */\n  validation: string;\n  /** Field Description. Used for placeholders */\n  description: string;\n  /** Not implemented yet. */\n  localizable: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SdkModule.html":{"url":"modules/SdkModule.html","title":"module - SdkModule","body":"\n                   \n\n\n\n\n    Modules\n    SdkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\n\nSdkService\n\nSdkService\n\n\n\nSdkModule\n\nSdkModule\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/sdk/sdk.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SdkService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SdkService } from './sdk.service';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [SdkService],\n})\nexport class SdkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SdkService.html":{"url":"injectables/SdkService.html","title":"injectable - SdkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SdkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/sdk/sdk.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n {\n   provide: 'environment',\n   useValue: {\n     datamanagerID: '83cc6374',\n     environment: 'stage',\n     clientID: 'rest',\n     // init: false\n     // the init option will prevent automatically initing the sdk.\n     // you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n   }\n }The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _api\n                            \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                apiResolved\n                            \n                            \n                                    Public\n                                changesEnvironment\n                            \n                            \n                                    Public\n                                datamanager\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                roots\n                            \n                            \n                                    Private\n                                schemaRequests\n                            \n                            \n                                    Public\n                                session\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                            \n                                getSchema\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                noApi\n                            \n                            \n                                useDatamanager\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    root\n                                \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/sdk/sdk.service.ts:80\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. Omits init if environment has set init: false \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.accounts\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSchema(model, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Returns a schema for the given model. Caches the promise. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Creates all the API instances and determines the current user. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noApi\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoApi(api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useDatamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseDatamanager(shortID: string, environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Uses the given datamanager and optional short id to init api.\nIf you set \"datamanagerID\" in your environment, this method is called automatically. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        shortID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        environment\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PublicAPI\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:53\n                            \n                        \n\n                \n                    \n                        Current Public API instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Accounts\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:51\n                            \n                        \n\n                \n                    \n                        Current Accounts instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiResolved\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:34\n                            \n                        \n\n                \n                    \n                        Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changesEnvironment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:55\n                            \n                        \n\n                \n                    \n                        Emits when the env changes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datamanager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:69\n                            \n                        \n\n                \n                    \n                        Current DataManager instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject('environment')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:80\n                            \n                        \n\n                \n                    \n                        Promise that should be used before using any auth related stuff:\n   * this.sdk.ready.then(account => {});\n   *\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roots\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:36\n                            \n                        \n\n                \n                    \n                        Collects different datamanager root instances \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            schemaRequests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:73\n                            \n                        \n\n                \n                    \n                        Pending schema requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:49\n                            \n                        \n\n                \n                    \n                        Current Session instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AccountResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:71\n                            \n                        \n\n                \n                    \n                        Current User \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n\n                \n                    \n                        getroot()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:57\n                                \n                            \n                    \n                        \n                                getter for api. Throws error if no api present. \n\n\n                                \n                                    Returns :     PublicAPI\n\n                                \n                        \n                    \n\n                \n                    \n                        setapi(api)\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:64\n                                \n                            \n                    \n                        \n                                Sets the public api \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            api\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport Accounts from 'ec.sdk/lib/Accounts';\nimport Core, { environment as env } from 'ec.sdk/lib/Core';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport Session from 'ec.sdk/lib/Session';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport { Subject } from 'rxjs';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: 'environment',\n   useValue: {\n     datamanagerID: '83cc6374',\n     environment: 'stage',\n     clientID: 'rest',\n     // init: false\n     // the init option will prevent automatically initing the sdk.\n     // you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class SdkService {\n  /** Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) */\n  apiResolved: boolean;\n  /** Collects different datamanager root instances */\n  roots: { [id: string]: Promise } = {};\n  get root(): Promise {\n    if (!this._api) {\n      throw new Error('no api');\n    }\n    if (!this.roots[this._api.dataManagerID]) {\n      this.roots[this._api.dataManagerID] = this.ready.then(() =>\n        this.datamanager.dataManager(this._api.dataManagerID),\n      );\n    }\n    return this.roots[this._api.dataManagerID];\n  }\n  /** Current Session instance */\n  public session: Session;\n  /** Current Accounts instance */\n  public accounts: Accounts;\n  /** Current Public API instance */\n  public _api: PublicAPI;\n  /** Emits when the env changes */\n  public changesEnvironment: Subject = new Subject();\n  /** getter for api. Throws error if no api present. */\n  get api(): PublicAPI {\n    if (this.noApi()) {\n      throw new Error('get api: ' + this.noApi());\n    }\n    return this._api;\n  }\n  /** Sets the public api */\n  set api(api: PublicAPI) {\n    this._api = api;\n    this._api.resolve().then(() => (this.apiResolved = true));\n  }\n  /** Current DataManager instance */\n  public datamanager: DataManager;\n  /** Current User */\n  public user: AccountResource;\n  /** Pending schema requests */\n  private schemaRequests = {};\n  /** Promise that should be used before using any auth related stuff:\n   *\n   * ```ts\n   * this.sdk.ready.then(account => {});\n   * ```\n   * */\n  public ready: Promise;\n\n  /** Calls init and sets ready to true when finished. Omits init if environment has set init: false */\n  constructor(@Inject('environment') public environment) {\n    if (!environment || environment.init !== false) {\n      this.init();\n    }\n  }\n\n  /** Creates all the API instances and determines the current user. */\n  public init(environment = this.environment): Promise {\n    if (environment !== this.environment) {\n      this.changesEnvironment.next(environment);\n    }\n    this.environment = environment;\n    this.session = new Session(environment.environment);\n    if (environment.clientID) {\n      this.session.setClientID(environment.clientID);\n    }\n    this.accounts = new Accounts(environment.environment);\n    if (environment.datamanagerID) {\n      this.useDatamanager(environment.datamanagerID, environment);\n    }\n    this.ready = this.getAccount().then((user) => {\n      this.user = user;\n      this.datamanager = new DataManager(environment.environment);\n      return this.user;\n    });\n    return this.ready;\n  }\n  /** Uses the given datamanager and optional short id to init api.\n   * If you set \"datamanagerID\" in your environment, this method is called automatically. */\n  useDatamanager(shortID: string, environment = this.environment) {\n    this.apiResolved = false;\n    this._api = new PublicAPI(shortID, environment.environment, true);\n    if (environment.clientID) {\n      this._api.setClientID(environment.clientID);\n    }\n    return this._api.resolve().then((api) => {\n      this.apiResolved = true;\n      return api;\n    });\n  }\n\n  /** Returns a schema for the given model. Caches the promise. */\n  getSchema(model, api = this._api) {\n    if (this.noApi(api)) {\n      return Promise.reject('getSchema: ' + this.noApi(api));\n    }\n    if (!this.schemaRequests[model] || this.schemaRequests[model].api !== api) {\n      this.schemaRequests[model] = { request: api.getSchema(model), api };\n    }\n    return this.schemaRequests[model].request;\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.accounts) {\n    if (this.noApi(api)) {\n      /* return Promise.reject('getAccount: ' + this.noApi(api)); */\n      return Promise.resolve();\n    }\n    return api\n      .me()\n      .then((account) => {\n        return account || this._api.me();\n      })\n      .catch((error) => {\n        return this._api && this._api.getToken() ? this._api.me() : null;\n      });\n  }\n\n  noApi(api: Core = this._api) {\n    if (!api) {\n      return `No API was initialized. Either set datamanagerID in your environment or call useDatamanager with your shortID`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectModule.html":{"url":"modules/SelectModule.html","title":"module - SelectModule","body":"\n                   \n\n\n\n\n    Modules\n    SelectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_imports\n\n\n\ncluster_SelectModule_exports\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n SelectComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n SelectComponent), multi: true,\n}->SelectComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}->SelectComponent\n\n\n\n\n\nListModule\n\nListModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/select/select.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionbarComponent\n                        \n                        \n                            SelectComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionbarComponent\n                        \n                        \n                            ListModule\n                        \n                        \n                            SelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DndModule } from 'ngx-drag-drop';\nimport { ListModule } from '../list/list.module';\nimport { SelectComponent } from './select.component';\nimport { ActionbarComponent } from '../actionbar/actionbar.component';\nimport { LoaderModule } from '../loader/loader.module';\n\nexport const selectModuleConfig = {\n  imports: [CommonModule, ListModule, DndModule, LoaderModule],\n  declarations: [SelectComponent, ActionbarComponent],\n  exports: [ListModule, SelectComponent, ActionbarComponent, DndModule],\n  providers: [],\n};\n\n@NgModule(selectModuleConfig)\nexport class SelectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/signup?e=1\n\n    \n\n    \n        Extends\n    \n    \n            LoginComponent\n    \n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup\n            \n\n\n\n\n            \n                templateUrl\n                signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                invite\n                            \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:16\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:18\n                            \n                        \n                \n                    \n                        Invite code to use. If set, the invite form field will be hidden. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:23\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:20\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:27\n                            \n                        \n                \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:25\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:39\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:22\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:24\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:29\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:31\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { LoginComponent } from '../login/login.component';\nimport { WithNotifications, LoaderComponent, WithLoader, Notification } from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/signup?e=1\n */\n@Component({\n  selector: 'ec-signup',\n  templateUrl: 'signup.component.html',\n})\nexport class SignupComponent extends LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Invite code to use. If set, the invite form field will be hidden. */\n  @Input() invite = '';\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  signup({ email, password, invite }) {\n    const registration = this.auth\n      .signup({ email, password, invite }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('signup.success'),\n          hide: this.notifications,\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('signup.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications,\n        });\n        this.error.next(error);\n        console.log('could not signup', error);\n      });\n    this.loader.wait(registration);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupFormComponent.html":{"url":"components/SignupFormComponent.html","title":"component - SignupFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/signup-form/signup-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n    \n        Extends\n    \n    \n            LoginFormComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup-form\n            \n\n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonLabel\n                            \n                            \n                                invite\n                            \n                            \n                                invitePlaceholder\n                            \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('signup.button.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:16\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:20\n                            \n                        \n                \n                    \n                        If set, the invite field will be hidden and the given code will be used for signup \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invitePlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('signup.invite.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:18\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:42\n                            \n                        \n                \n                    \n                        Additional Button classes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.button.label')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:40\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.label')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:32\n                            \n                        \n                \n                    \n                        The Label of the Mail field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.placeholder')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:34\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:28\n                            \n                        \n                \n                    \n                        The loader that should be shown during login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.label')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:36\n                            \n                        \n                \n                    \n                        The Label of the password field. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.placeholder')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:38\n                            \n                        \n                \n                    \n                        The Placeholder of the password field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:30\n                            \n                        \n                \n                    \n                        If true, email and password wont have labels \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:26\n                            \n                        \n                \n                    \n                        Event that emits when calling showError. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:24\n                            \n                        \n                \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:66\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:50\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:58\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FieldValidators } from '../../utility/validators/field-validators';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { LoginFormComponent } from '../login-form/login-form.component';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n */\n@Component({\n  selector: 'ec-signup-form',\n  templateUrl: './signup-form.component.html',\n})\nexport class SignupFormComponent extends LoginFormComponent implements OnInit, WithLoader {\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('signup.button.label');\n  /** The Placeholder of the mail Field */\n  @Input() invitePlaceholder = this.symbol.resolve('signup.invite.placeholder');\n  /** If set, the invite field will be hidden and the given code will be used for signup */\n  @Input() invite = '';\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  signup(value) {\n    // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n      invite: [this.invite, [Validators.required]], // FieldValidators.uuid\n    });\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.signup(this.form.value).then((res) => {\n      // this.form.reset();\n      this.success.emit(res);\n    });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    Invite\n    \n    \n  \n\n  \n    {{buttonLabel}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                Passwort                Invite                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SlotHostDirective.html":{"url":"directives/SlotHostDirective.html","title":"directive - SlotHostDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SlotHostDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/io/slot-host.directive.ts\n        \n\n            \n                Description\n            \n            \n                The field host is a helper to load components inside its view container.\nsee https://angular.io/guide/dynamic-component-loader\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecSlotHost]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/slot-host.directive.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor exposes the viewContainer that is used to load components into from outside.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/slot-host.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n/** The field host is a helper to load components inside its view container.\n * see https://angular.io/guide/dynamic-component-loader\n * */\n@Directive({\n  selector: '[ecSlotHost]',\n})\nexport class SlotHostDirective {\n  /** The constructor exposes the viewContainer that is used to load components into from outside.*/\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sorter.html":{"url":"classes/Sorter.html","title":"class - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sorter\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/sorter/sorter.ts\n        \n\n            \n                Description\n            \n            \n                The Sorter is a singleton that handles all kinds of sorting operations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sortType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getAlgorithm\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sortType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    string: sortString,\n    number: sortNumber,\n    boolean: sortBoolean,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:24\n                            \n                        \n\n                \n                    \n                        Contains sorting methods for different value types. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getAlgorithm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAlgorithm(items: Array>, property?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:31\n                            \n                        \n\n\n                \n                    \n                            Returns the sorting algorithm for the given item array. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sort(items: Array>, property?: string, desc?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:60\n                            \n                        \n\n\n                \n                    \n                            Sorts a given Array of items after a given property.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of arbitrary content.\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional property to sort after (For Objects)\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional Flag that will reverse sort the result (descending).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Sorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n    \n\n    \n        import { Item } from '../item/item';\n\n/** Used for natural sorting of strings */\nconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\n/** Sorts strings (naturally) */\nexport function sortString(a, b) {\n  return collator.compare(a, b);\n}\n\n/** Sorts numbers */\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\n/** Sorts booleans */\nexport function sortBoolean(a, b) {\n  return a ? -1 : 1;\n}\n\n/** The Sorter is a singleton that handles all kinds of sorting operations. */\nexport abstract class Sorter {\n  /** Contains sorting methods for different value types. */\n  static sortType = {\n    string: sortString,\n    number: sortNumber,\n    boolean: sortBoolean,\n  };\n\n  /** Returns the sorting algorithm for the given item array. */\n  private static getAlgorithm(items: Array>, property?: string): (a, b) => number {\n    if (!items.length) {\n      return;\n    }\n    if (property && !items.reduce((has, item) => has && item.sort(property) !== undefined, true)) {\n      console.warn('cannot sort property \"' + property + '\" because not all items have that property', items);\n      return;\n    }\n    const types = items\n      .map((item) => typeof item.sort(property))\n      .filter((item, index, _items) => _items.indexOf(item) === index);\n    if (types.length > 1) {\n      console.warn('cannot sort items because they contain multiple types:', types);\n      return;\n    }\n    if (!this.sortType[types[0]]) {\n      console.warn('cannot sort items because no algorithm was found for type', types[0]);\n      return;\n    }\n    return this.sortType[types[0]];\n  }\n\n  /** Sorts a given Array of items after a given property.\n   * @param items Array of arbitrary content.\n   * @param property Optional property to sort after (For Objects)\n   * @param desc Optional Flag that will reverse sort the result (descending).\n   * @param resolve Optional resolve function to expose relevant the part of object that contains\n   *   the given property. */\n\n  static sort(items: Array>, property?: string, desc?: boolean): Array {\n    const algorithm = this.getAlgorithm(items, property);\n    if (!algorithm) {\n      return;\n    }\n    items.sort((a, b) => {\n      if (!property) {\n        return algorithm(a.resolve(), b.resolve());\n      }\n      return algorithm(a.sort(property), b.sort(property));\n    });\n    if (desc) {\n      items.reverse();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Symbol.html":{"url":"interfaces/Symbol.html","title":"interface - Symbol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Symbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.interface.ts\n        \n\n            \n                Description\n            \n            \n                A Symbol is specified with a unique name and an optional string content.  \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name under which the symbol is accessible. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Symbol {\n  /** The name under which the symbol is accessible. */\n  name: string;\n  /** Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. */\n  content?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SymbolModule.html":{"url":"modules/SymbolModule.html","title":"module - SymbolModule","body":"\n                   \n\n\n\n\n    Modules\n    SymbolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_declarations\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\n\nSymbolPipe\n\nSymbolPipe\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nSymbolPipe->SymbolModule\n\n\n\n\n\nSymbolPipe \n\nSymbolPipe \n\nSymbolPipe  -->\n\nSymbolModule->SymbolPipe \n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        README\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Collects all localization related components and services.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SymbolPipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SymbolService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SymbolPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n    \n        Localization\nYou can setup localization via the SymbolService:\nimport en from './en';\n\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}It is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\nmoment.locale(this.symbols.resolve('moment.locale'));Using symbols in templates\nTo translate symbols in a template, use the symbol pipe:\n{{'symbol.language' | symbol}} Overwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n    \n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SymbolService } from './symbol.service';\nimport { SymbolPipe } from './symbol.pipe';\n\n/**\n * Collects all localization related components and services.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SymbolPipe],\n  exports: [SymbolPipe],\n  providers: [SymbolService],\n})\nexport class SymbolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolPipe.html":{"url":"injectables/SymbolPipe.html","title":"injectable - SymbolPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymbolPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The symbol pipe translates Symbol names to their content.\n * {{ 'entry.saved' | symbol }}\n *See SymbolService for more info about Symbols.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.pipe.ts:21\n                            \n                        \n\n\n                \n                    \n                            Calls SymbolService.resolve with the given name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, Injectable, PipeTransform } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { SymbolService } from './symbol.service';\n\n/** The symbol pipe translates Symbol names to their content.\n *\n * ```html\n * {{ 'entry.saved' | symbol }}\n * ```\n *\n * See SymbolService for more info about Symbols.\n */\n@Pipe({\n  name: 'symbol',\n})\n@Injectable()\nexport class SymbolPipe implements PipeTransform {\n  /** Depends on the SymbolService */\n  constructor(private symbol: SymbolService) {}\n  /** Calls SymbolService.resolve with the given name */\n  transform(name: string): string {\n    if (!name) {\n      return '';\n    }\n    return this.symbol.resolve(name) || '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolService.html":{"url":"injectables/SymbolService.html","title":"injectable - SymbolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register symbols for localization. The default set is de.\nhttps://components.entrecode.de/ui/symbols?e=1\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                registry\n                            \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Static\n                                sets\n                            \n                            \n                                    Public\n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                get\n                            \n                            \n                                    Static\n                                resolve\n                            \n                            \n                                resolve\n                            \n                            \n                                    Static\n                                set\n                            \n                            \n                                set\n                            \n                            \n                                use\n                            \n                            \n                                useSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/symbol/symbol.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(name: string, registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:70\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(name: string, registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            resolves a symbols content by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(symbols: Symbol[], registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set. Replaces registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseSet(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            uses the set with the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : Object.keys(SymbolService.sets).length\n    ? SymbolService.sets[Object.keys(SymbolService.sets)[0]]\n    : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    en,\n    de,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:12\n                            \n                        \n\n                \n                    \n                        The current symbol set that is registered to the service. It will be used to resolve strings from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    en,\n    de,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { de } from './de';\nimport { en } from './en';\n/** Service to register symbols for localization. The default set is de.\n * https://components.entrecode.de/ui/symbols?e=1\n */\n// https://github.com/ng-packagr/ng-packagr/issues/696\n@Injectable()\nexport class SymbolService {\n  /** The current symbol set that is registered to the service. It will be used to resolve strings from. */\n  public static sets: { [key: string]: Symbol[] } = {\n    en,\n    de,\n  };\n  public static registry: Symbol[] = Object.keys(SymbolService.sets).length\n    ? SymbolService.sets[Object.keys(SymbolService.sets)[0]]\n    : [];\n\n  public registry: Symbol[];\n  public sets: { [key: string]: Symbol[] } = {\n    en,\n    de,\n  };\n\n  /** finds a symbol in the registry by name */\n  static get(name: string, registry = SymbolService.registry): Symbol {\n    const symbol = registry.find((s) => s.name === name);\n    return symbol;\n  }\n\n  static resolve(name: string, registry = SymbolService.registry): string {\n    const symbol = SymbolService.get(name, registry);\n    if (symbol) {\n      return symbol.content;\n    }\n    return null;\n  }\n  /** Uses the given symbol set to enhance the current registry.\n   * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n  static set(symbols: Symbol[] = [], registry = SymbolService.registry) {\n    symbols.map((symbol) => {\n      const index = registry.indexOf(this.get(symbol.name));\n      if (index === -1) {\n        registry.push(symbol);\n      } else {\n        registry[index] = symbol;\n      }\n    });\n  }\n\n  constructor() {\n    this.registry = Object.keys(this.sets).length ? this.sets[Object.keys(this.sets)[0]] : [];\n  }\n\n  /** Uses the given symbol set. Replaces registry. */\n  use(symbols: Symbol[]) {\n    this.registry = symbols;\n  }\n\n  /** uses the set with the given key */\n  useSet(key: string) {\n    if (!this.sets[key]) {\n      throw new Error('the symbol set with the key \"' + key + '\" does not exist');\n    }\n    this.use(this.sets[key]);\n  }\n\n  /** finds a symbol in the registry by name */\n  get(name: string): Symbol {\n    return SymbolService.get(name, this.registry);\n  }\n\n  /** resolves a symbols content by name */\n  resolve(name: string): string {\n    return SymbolService.resolve(name, this.registry);\n  }\n\n  /** Uses the given symbol set to enhance the current registry.\n   * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n  set(symbols: Symbol[] = []) {\n    SymbolService.set(symbols, this.registry);\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/tab/tab.component.ts\n\n\n    \n        Description\n    \n    \n        A Tab is meant to be placed inside TabsComponent \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tab\n            \n\n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                route\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                deactivated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor adds the tab itself to its TabsComponent parent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:11\n                            \n                        \n                \n                    \n                        The tab's label \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:15\n                            \n                        \n                \n                    \n                        If set, the tab will be selected when the given (relative) route is active. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:13\n                            \n                        \n                \n                    \n                        If set to true, the tab will be selected at start. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        activated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:17\n                            \n                        \n                \n                    \n                        Output that emits when the tab is activated \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        deactivated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:19\n                            \n                        \n                \n                    \n                        Output that emits when the tab is deactivated \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Selects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Deselects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TabsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                        The parent TabsComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { TabsComponent } from '../tabs/tabs.component';\n\n/** A Tab is meant to be placed inside TabsComponent */\n@Component({\n  selector: 'ec-tab',\n  templateUrl: './tab.component.html',\n})\nexport class TabComponent {\n  /** The tab's label */\n  @Input() label: string;\n  /** If set to true, the tab will be selected at start. */\n  @Input() selected: boolean;\n  /** If set, the tab will be selected when the given (relative) route is active. */\n  @Input() route: string;\n  /** Output that emits when the tab is activated */\n  @Output() activated: EventEmitter = new EventEmitter();\n  /** Output that emits when the tab is deactivated */\n  @Output() deactivated: EventEmitter = new EventEmitter();\n  /** The parent TabsComponent */\n  parent: TabsComponent;\n\n  /** The constructor adds the tab itself to its TabsComponent parent. */\n  constructor(public el: ElementRef) {}\n  /** Selects the tab and nexts activated */\n  activate() {\n    this.selected = true;\n    this.activated.next();\n  }\n  /** Deselects the tab and nexts activated */\n  deactivate() {\n    this.selected = false;\n    this.deactivated.next();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/tabs/tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The TabsComponent holds serveral instances of TabComponent.\nhttps://components.entrecode.de/ui/tabs?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tabs\n            \n\n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTabs\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                select\n                            \n                            \n                                selectByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     TabComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:16\n                            \n                        \n                \n                    \n                        You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(tab: TabComponent, skipRoute)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Selects the given tab (Component). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        skipRoute\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectByUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Selects the tab associated with the route present in the given url \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(TabComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:14\n                            \n                        \n\n                \n                    \n                        The nested Tabs \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Tabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n    \n\n    \n        import { AfterContentInit, Component, ContentChildren, Input, QueryList } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { TabComponent } from '../tab/tab.component';\n\n/** The TabsComponent holds serveral instances of TabComponent.\n * https://components.entrecode.de/ui/tabs?e=1\n */\n@Component({\n  selector: 'ec-tabs',\n  templateUrl: './tabs.component.html',\n})\nexport class TabsComponent implements AfterContentInit {\n  /** The nested Tabs */\n  @ContentChildren(TabComponent) tabs: QueryList;\n  /** You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) */\n  @Input() selected: TabComponent;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.selectByUrl(event.url);\n      }\n    });\n  }\n\n  /** Selects the tab associated with the route present in the given url */\n  selectByUrl(url: string) {\n    if (!url || !this.tabs) {\n      return;\n    }\n    const paths = new URL(url, window.location.origin).pathname.split('/');\n    const match = this.tabs.find((tab) => paths[paths.length - 1].indexOf(tab.route) !== -1);\n    if (match) {\n      this.select(match, true);\n    }\n  }\n\n  initTabs() {\n    this.tabs.forEach((tab) => {\n      tab.parent = this;\n      if (tab.el.nativeElement.getAttribute('selected') !== null) {\n        this.select(tab);\n      }\n    });\n    this.selectByUrl(this.router.url);\n  }\n\n  ngAfterContentInit() {\n    this.initTabs();\n  }\n\n  /** Selects the given tab (Component). */\n  select(tab: TabComponent, skipRoute = false) {\n    if (this.selected) {\n      this.selected.deactivate();\n    }\n    this.selected = tab;\n    tab.activate();\n    if (tab.route && !skipRoute) {\n      this.router.navigate(['../' + tab.route], { relativeTo: this.route });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{tab.label}}\n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}              '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TinymceComponent.html":{"url":"components/TinymceComponent.html","title":"component - TinymceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TinymceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/tinymce/src/lib/tinymce/tinymce.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps tinymce as a control input.\nhttps://components.entrecode.de/misc/tinymce?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TinymceComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-tinymce\n            \n\n            \n                styleUrls\n                ./tinymce.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tinymce.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                update\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImageByUrl\n                            \n                            \n                                destroy\n                            \n                            \n                                init\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                            \n                                lazy\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:72\n                            \n                        \n\n                \n                    \n                            Subscribes for changes and propagates them + calling application tick manually :( \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:61\n                            \n                        \n                \n                    \n                        Debounce time for value change processing \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:65\n                            \n                        \n                \n                    \n                        If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:63\n                            \n                        \n                \n                    \n                        TinyMCE Settings. Get Object.assigned to the default settings \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:67\n                            \n                        \n                \n                    \n                        Output that emits when the value has been changed by the user \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        setup\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:70\n                            \n                        \n                \n                    \n                        Output that is emitted when the setup is being made.\nPasses the editor instance. Intended to be used for custom controls  \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addImageByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \naddImageByUrl(url: string, caption: string, size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:134\n                            \n                        \n\n\n                \n                    \n                            adds an image by url to the editor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        caption\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                200\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Destroys the editor. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Initializes the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            calls init \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            calls destroy \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:57\n                            \n                        \n\n                \n                    \n                        The container where the editor is rendered \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:55\n                            \n                        \n\n                \n                    \n                        The current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:145\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:53\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:59\n                            \n                        \n\n                \n                    \n                        Subject that is nexted on editor change \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:72\n                            \n                        \n\n                \n                    \n                        Current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ApplicationRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport tinymce from 'tinymce/tinymce';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/autoresize';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/colorpicker';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/themes/modern';\n\nimport { editorSettings } from './tinymce-settings';\nimport { debounceTime } from 'rxjs/operators';\n\n/** Wraps tinymce as a control input.\n * https://components.entrecode.de/misc/tinymce?e=1\n */\n@Component({\n  selector: 'ec-tinymce',\n  templateUrl: './tinymce.component.html',\n  styleUrls: ['./tinymce.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TinymceComponent),\n      multi: true,\n    },\n  ],\n})\nexport class TinymceComponent implements AfterViewInit, OnDestroy, ControlValueAccessor, OnDestroy {\n  /** Promise that resolves when the editor has been initialized */\n  ready: Promise;\n  /** The current editor instance */\n  public editor: any;\n  /** The container where the editor is rendered */\n  @ViewChild('container') container: ElementRef;\n  /** Subject that is nexted on editor change */\n  update: Subject = new Subject();\n  /** Debounce time for value change processing */\n  @Input() debounce = 200;\n  /** TinyMCE Settings. Get Object.assigned to the default settings */\n  @Input() settings: any = {};\n  /** If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks */\n  @Input() lazy = false;\n  /** Output that emits when the value has been changed by the user */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** Output that is emitted when the setup is being made.\n   * Passes the editor instance. Intended to be used for custom controls  */\n  @Output() setup: EventEmitter = new EventEmitter();\n  /** Current value */\n  public value = '';\n\n  /** Subscribes for changes and propagates them + calling application tick manually :( */\n  constructor(private app: ApplicationRef) {\n    this.update\n      .asObservable()\n      .pipe(debounceTime(this.debounce))\n      .subscribe((editor) => {\n        if (!this.editor) {\n          return;\n        }\n        this.value = editor.getContent();\n        this.propagateChange(this.value);\n        this.changed.emit(this.value);\n        this.app.tick();\n      });\n  }\n  /** calls init */\n  ngAfterViewInit() {\n    if (!this.lazy) {\n      this.init();\n    }\n  }\n  /** Destroys the editor. */\n  destroy() {\n    if (this.editor) {\n      this.editor.remove();\n      delete this.editor;\n    }\n  }\n  /** calls destroy */\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  /** Initializes the editor */\n  init() {\n    const settings = Object.assign({}, editorSettings, this.settings, {\n      target: this.container.nativeElement,\n      setup: (editor) => {\n        editorSettings.setup(editor);\n        if (this.settings && this.settings.setup) {\n          this.settings.setup(editor);\n        }\n        this.setup.emit(editor);\n      },\n    });\n    this.ready = new Promise((resolve, reject) => setTimeout(() => resolve(tinymce.init(settings))));\n    this.ready.then((editor) => {\n      this.editor = editor[0];\n      this.editor.setContent(this.value || '');\n      this.editor.on('dblclick', (e) => {\n        if (e.target.localName === 'img') {\n          this.editor.buttons.image.onclick(true, e.toElement);\n        }\n      });\n      this.editor.on('change keyup', (res) => this.update.next(this.editor));\n      return this.editor;\n    });\n  }\n\n  /** adds an image by url to the editor */\n  addImageByUrl(url: string, caption = '', size = 200) {\n    this.editor.execCommand('mceInsertContent', false, ``);\n  }\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (this.editor) {\n      this.editor.setContent(this.value);\n    }\n  }\n\n  propagateChange = (_: any) => {};\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./tinymce.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TinymceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TinymceModule.html":{"url":"modules/TinymceModule.html","title":"module - TinymceModule","body":"\n                   \n\n\n\n\n    Modules\n    TinymceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/tinymce/src/lib/tinymce.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TinymceComponent } from './tinymce/tinymce.component';\n\nexport const tinymceModuleConfig = {\n  declarations: [TinymceComponent],\n  entryComponents: [TinymceComponent],\n  exports: [TinymceComponent],\n};\n\n@NgModule(tinymceModuleConfig)\nexport class TinymceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The toggle component is an alternative to the default boolean checkbox with fancier style.\nIt is used in the default input template for the view 'toggle'. \n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ToggleComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-toggle\n            \n\n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                toggle\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:21\n                            \n                        \n                \n                    \n                        The toggles placeholder (currently not in use) \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Register Touch \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            Toggles the value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            writes incoming value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/** The toggle component is an alternative to the default boolean checkbox with fancier style.\n * It is used in the default input template for the view 'toggle'. */\n@Component({\n  selector: 'ec-toggle',\n  templateUrl: './toggle.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ToggleComponent),\n      multi: true,\n    },\n  ],\n})\nexport class ToggleComponent implements ControlValueAccessor {\n  /** The current value */\n  value: boolean;\n  /** The toggles placeholder (currently not in use) */\n  @Input() placeholder: string;\n\n  /** Toggles the value */\n  toggle() {\n    this.value = !this.value;\n    this.propagateChange(this.value);\n  }\n  /** writes incoming value */\n  writeValue(value: boolean) {\n    this.value = value;\n  }\n  /* Propagates change*/\n  propagateChange = (_: any) => {};\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /** Register Touch */\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeConfigService.html":{"url":"injectables/TypeConfigService.html","title":"injectable - TypeConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/type-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The TypeConfig holds each field type's specific behaviour in certain situations \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nestedCrudConfig\n                            \n                            \n                                    Private\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayAccount\n                            \n                            \n                                displayDate\n                            \n                            \n                                get\n                            \n                            \n                                groupDate\n                            \n                            \n                                isoDate\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/model-config/type-config.service.ts:175\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:212\n                            \n                        \n\n\n                \n                    \n                            Returns an account display function \n\n\n                            \n                                Returns :     (value: any, entry: any, property: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayDate(time)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:205\n                            \n                        \n\n\n                \n                    \n                            Returns a date display function. If time is true, the time will be displayed too.\nUsese 'moment.format.date' and 'moment.format.time' symbols. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (value: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:179\n                            \n                        \n\n\n                \n                    \n                            Returns the base FieldConfig for the given type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FieldConfigProperty\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngroupDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:217\n                            \n                        \n\n\n                \n                    \n                            Returns a date group function. Uses 'moment.format.month' symbol \n\n\n                            \n                                Returns :     (value: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isoDate\n                            \n                            \n                        \n                    \n                \n                \n                    \nisoDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:222\n                            \n                        \n\n\n                \n                    \n                            Returns a date iso formatter \n\n\n                            \n                                Returns :     (value: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(type: string, config: FieldConfigProperty)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:195\n                            \n                        \n\n\n                \n                    \n                            Assigns the given config to the type, e.g. to change the default template of a type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nestedCrudConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CrudConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /* size: 5, */\n    // methods: ['get']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:15\n                            \n                        \n\n                \n                    \n                        The default config for nested crud lists, as passed to entry-select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: {\n      view: 'label',\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n      filterOperator: 'exact',\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true,\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    email: {},\n    phone: {\n      view: 'string',\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date')),\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-select',\n      inputViews: [\n        {\n          name: 'entries-select',\n        },\n        {\n          name: 'entry-list-select',\n          levels: 2,\n        },\n      ],\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? JSON.stringify(value) : ''),\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog',\n    },\n    account: {\n      display: (value) => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    role: {\n      display: (value) => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n    },\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:23\n                            \n                        \n\n                \n                    \n                        Defines the base configuration of each type.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FieldConfig, FieldConfigProperty } from '@ec.components/core';\nimport { DefaultInputComponent, DefaultOutputComponent, SymbolService } from '@ec.components/ui';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport moment from 'moment-es6';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from '../entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The TypeConfig holds each field type's specific behaviour in certain situations */\n@Injectable()\nexport class TypeConfigService {\n  /** The default config for nested crud lists, as passed to entry-select */\n  private nestedCrudConfig: CrudConfig = {\n    /* size: 5, */\n    // methods: ['get']\n  };\n\n  // TODO check if filterPopClass: '' is still needed\n\n  /** Defines the base configuration of each type.*/\n  private types: FieldConfig = {\n    id: {\n      view: 'label',\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n      filterOperator: 'exact',\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true,\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    email: {},\n    phone: {\n      view: 'string',\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date')),\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-select',\n      inputViews: [\n        {\n          name: 'entries-select',\n        },\n        {\n          name: 'entry-list-select',\n          levels: 2,\n        },\n      ],\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? JSON.stringify(value) : ''),\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog',\n    },\n    account: {\n      display: (value) => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    role: {\n      display: (value) => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n    },\n  };\n  constructor(private symbol: SymbolService) {}\n\n  /** Returns the base FieldConfig for the given type. */\n  get(type: string): FieldConfigProperty {\n    const config = this.types[type];\n    if (!config) {\n      console.error('missing config for type', type);\n      return {};\n    }\n    Object.assign(config, {\n      type,\n      view: config.view || type,\n      input: config.input || DefaultInputComponent,\n      output: config.output || DefaultOutputComponent,\n    });\n    return config;\n  }\n\n  /** Assigns the given config to the type, e.g. to change the default template of a type. */\n  set(type: string, config: FieldConfigProperty) {\n    if (!this.types[type]) {\n      console.error('cannot configure non existing type', type);\n      return;\n    }\n    Object.assign(this.types[type], config);\n  }\n\n  /** Returns a date display function. If time is true, the time will be displayed too.\n   * Usese 'moment.format.date' and 'moment.format.time' symbols. */\n  displayDate(time = true) {\n    const format =\n      this.symbol.resolve('moment.format.date') + (time ? ' ' + this.symbol.resolve('moment.format.time') : '');\n    return (value) => (value ? moment(value).format(format) : '');\n  }\n\n  /** Returns an account display function */\n  displayAccount() {\n    return (value, entry, property) => entry.getTitle(property) || this.symbol.resolve('field.creator.ecuser');\n  }\n\n  /** Returns a date group function. Uses 'moment.format.month' symbol */\n  groupDate() {\n    return (value) => moment(value).format(this.symbol.resolve('moment.format.month'));\n  }\n\n  /** Returns a date iso formatter */\n  isoDate() {\n    return (value) => moment(value).toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n    Modules\n    UiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\n\n\nListModule\n\nListModule\n\nUiModule -->\n\nListModule->UiModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\n\n\nSelectModule\n\nSelectModule\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SelectModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SelectModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ListModule } from './list/list.module';\nimport { PopModule } from './pop/pop.module';\nimport { LoaderModule } from './loader/loader.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { UtilityModule } from './utility/utility.module';\nimport { SelectModule } from './select/select.module';\nimport { IconModule } from './icon/icon.module';\nimport { SymbolModule } from './symbol/symbol.module';\nimport { FormModule } from './form/form.module';\n\nexport const uiModuleConfig = {\n  imports: [\n    UtilityModule,\n    NotificationsModule,\n    PopModule,\n    LoaderModule,\n    FormModule,\n    ListModule,\n    SelectModule,\n    IconModule,\n    SymbolModule,\n  ],\n  exports: [\n    UtilityModule,\n    PopModule,\n    NotificationsModule,\n    LoaderModule,\n    ListModule,\n    FormModule,\n    SelectModule,\n    IconModule,\n    SymbolModule,\n  ],\n};\n\n@NgModule(uiModuleConfig)\nexport class UiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Update.html":{"url":"interfaces/Update.html","title":"interface - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the ResourceService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        broadcast\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        list\n                                \n                                \n                                        relation\n                                \n                                \n                                            Optional\n                                        resource\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        broadcast\n                                    \n                                \n                                \n                                    \n                                        broadcast:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An identifier associated with the update e.g. an entryID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                    \n                                \n                                \n                                    \n                                        relation:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The relation that has been updated. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                    \n                                \n                                \n                                    \n                                        resource:     Resource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Resource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant resource. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of update. (create/read/update/delete) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Subject, Observable } from 'rxjs';\nimport { filter as rxFilter } from 'rxjs/operators';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the ResourceService. */\nexport interface Update {\n  /** The relation that has been updated. */\n  relation: string | string[];\n  /** The relevant resource. */\n  resource?: Resource;\n  /** The list where it happened. */\n  list?: ResourceList;\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete';\n  /** An identifier associated with the update e.g. an entryID */\n  identifier?: string;\n  /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n  broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n  /** The changes event is emitted everytime an resource is created or updated. */\n  public changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public config: ResourceConfig) {\n    /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return change.broadcast || Object.keys(filter).reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().pipe(rxFilter((change: Update) => this.matches(change, filter)));\n  }\n\n  /** Saves the given resource with the given value. If the resource is not yet existing,\n   * it will be created.Otherwise it will be updated. */\n  save(item: Item, value: Object, relation: string, api: Core): Promise {\n    const resource = item.getBody();\n    if (item.config.onSave) {\n      return Promise.resolve(item.config.onSave(item, value));\n    }\n    item.deleteImmutableProperties(value);\n    if (resource && resource.save) {\n      return this.update(relation, resource, value);\n    }\n    return this.create(relation, value, api)\n      .then((_resource) => {\n        return _resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given resource with the new value. Fires the \"update\" change. */\n  update(relation, resource: Resource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => (oldValues[key] = resource[key]));\n    Object.assign(resource, this.clean(value, false, false)); // assign new form values\n    return resource\n      .save()\n      .then((_resource) => {\n        this.changes.next({ relation, resource: _resource, type: 'put' });\n        return _resource;\n      })\n      .catch((err) => {\n        Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' || ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (setEmptyStringsToNull && value[key] === '') {\n          // clear empty strings\n          value[key] = null;\n        }\n        if (deleteNullProperties && value[key] === null) {\n          delete value[key];\n        }\n        if (this.isImmutableProperty(key)) {\n          // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n  create(relation: string, value: Object, api: Core): Promise {\n    return api\n      .create(relation, this.clean(value))\n      .then((resource: Resource) => {\n        this.changes.next({ relation, resource, type: 'post' });\n        return resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given resource and emits the \"delete\" change. */\n  del(relation: string, resource: Resource) {\n    return resource.del().then((res) => {\n      this.changes.next({ relation, resource, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the FileService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asset\n                                \n                                \n                                            Optional\n                                        assets\n                                \n                                \n                                            Optional\n                                        item\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset\n                                    \n                                \n                                \n                                    \n                                        asset:     PublicAssetResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant asset. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                    \n                                \n                                \n                                    \n                                        assets:     PublicAssetResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant assets (when uploading multiple). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     Item\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Item\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the FileService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource;\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[];\n  /** The uploaded asset as item */\n  item?: Item;\n  /** The uploaded asset as item */\n  items?: Array>;\n  /** The list where it happened. */\n  list?: ResourceList;\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean;\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean;\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean;\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[];\n  /** Custom file form fieldName */\n  fieldName?: string;\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: [],\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig,\n  ) {}\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, config.filter || {}, {\n          type: assetGroupID,\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) => (only && (match && this.isNewAsset(a))) || (!only && (match || this.isNewAsset(a))),\n        only,\n      );\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id);\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n        if (key in options) {\n          formData.append(key, `${options[key]}`);\n        }\n      });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map((f) => f.url) : this.getFormData(files, options);\n    return api\n      .createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('dmAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve()\n      .then(\n        (): Promise Promise> => {\n          if (files.length === 1) {\n            return this.sdk.api.createAsset(data, {});\n          }\n          return this.sdk.api.createAssets(data, {});\n        },\n      )\n      .then((res) => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      })\n      .then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('legacyAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(\n    assets: Array,\n    assetGroupID?: string,\n  ): Promise> {\n    console.warn(\n      'FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.',\n    );\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) {\n      // new assets\n      return this.sdk.api\n        .dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then((dmAssetList) => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then(\n      (): any => {\n        if (unresolved.length === 1) {\n          return this.sdk.api.asset(unresolved[0]).then((asset) => {\n            return [asset];\n          });\n        }\n        return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 }).then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ? resolved.find((resource) => resource.assetID === asset) : asset,\n          );\n        });\n      },\n    );\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/upload/upload.component.ts\n\n\n    \n        Description\n    \n    \n        This component will render an input field to upload files to the datamanager. TODO: demo \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload\n            \n\n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                fileInput\n                            \n                            \n                                    Public\n                                filesToUpload\n                            \n                            \n                                notifications\n                            \n                            \n                                pop\n                            \n                            \n                                uploadPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clear\n                            \n                            \n                                setGroup\n                            \n                            \n                                trigger\n                            \n                            \n                                upload\n                            \n                            \n                                uploadFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetGroupID\n                            \n                            \n                                custom\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, fileService: FileService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/upload/upload.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:36\n                            \n                        \n                \n                    \n                        The api to use for the upload. Defaults to sdk.api \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:30\n                            \n                        \n                \n                    \n                        The asset group to upload into. If not defined, old assets will be used! \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:32\n                            \n                        \n                \n                    \n                        If true, a pop to rename files + customize flags will appear before uploading. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:28\n                            \n                        \n                \n                    \n                        The loader that should be used while uploading\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     FileOptions\n\n                    \n                \n                \n                    \n                        Default value : Object.assign({}, this.fileService.defaultOptions)\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:34\n                            \n                        \n                \n                    \n                        Upload options \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:26\n                            \n                        \n                \n                    \n                        The input placeholder\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:40\n                            \n                        \n                \n                    \n                        emits when the group has been set from the upload pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:38\n                            \n                        \n                \n                    \n                        Emits when an upload is complete. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(e, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Uploads the files from the input event. Handles loader and notifications. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            clears the file input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            opens the system upload window by triggering the input \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \nupload(files, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Triggers upload of current selected files \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFiles(files, e, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fileInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference to the input[type=file] element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filesToUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:46\n                            \n                        \n\n                \n                    \n                        Error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(PopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:44\n                            \n                        \n\n                \n                    \n                        Pop child for new asset options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport {\n  LoaderComponent,\n  LoaderService,\n  Notification,\n  NotificationsService,\n  PopComponent,\n  SymbolService,\n  WithLoader,\n  WithNotifications,\n} from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileOptions, FileService, Upload } from '../file.service';\n\n/** This component will render an input field to upload files to the datamanager. TODO: demo */\n@Component({\n  selector: 'ec-upload',\n  templateUrl: './upload.component.html',\n})\nexport class UploadComponent implements WithLoader, WithNotifications {\n  event: any;\n  uploadPromise: Promise;\n  public filesToUpload: any;\n  /** The input placeholder*/\n  @Input() placeholder: string;\n  /** The loader that should be used while uploading*/\n  @Input() loader: LoaderComponent;\n  /** The asset group to upload into. If not defined, old assets will be used! */\n  @Input() assetGroupID: string;\n  /** If true, a pop to rename files + customize flags will appear before uploading. */\n  @Input() custom: boolean;\n  /** Upload options */\n  @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n  /** The api to use for the upload. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Emits when an upload is complete. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** emits when the group has been set from the upload pop */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Reference to the input[type=file] element */\n  @ViewChild('fileInput') fileInput: ElementRef;\n  /** Pop child for new asset options. */\n  @ViewChild(PopComponent) pop: PopComponent;\n  /** Error Notifications */\n  notifications: Notification[] = [];\n\n  constructor(\n    private sdk: SdkService,\n    private fileService: FileService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n  ) {}\n  /** opens the system upload window by triggering the input */\n  trigger(e) {\n    if (!this.fileInput) {\n      console.error('cannot trigger upload: file input element not found!');\n      return;\n    }\n    /* this.clear(); */\n    this.fileInput.nativeElement.click();\n  }\n\n  /** Sets the asset group to upload to */\n  setGroup(group) {\n    this.assetGroupID = group;\n    this.groupChanged.emit(group);\n  }\n\n  /** Uploads the files from the input event. Handles loader and notifications. */\n  change(e, api = this.sdk.api) {\n    if (!e || !e.target || !e.target.files || !e.target.files.length) {\n      return;\n    }\n    return this.uploadFiles(e.target.files, e, api);\n  }\n\n  /** clears the file input */\n  clear() {\n    if (!this.fileInput) {\n      return;\n    }\n    this.fileInput.nativeElement.value = ''; // clear input to eventually trigger change on same file\n  }\n\n  uploadFiles(files, e, api = this.sdk.api) {\n    files = typeof files === 'string' ? files.split('\\n').map((url) => ({ name: url, url })) : files;\n    if (files[0].url && this.fileService.isOldAssetGroupID(this.assetGroupID)) {\n      delete this.assetGroupID;\n    }\n    this.filesToUpload = files;\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.custom || !this.assetGroupID) {\n      this.event = e;\n      this.pop.show();\n      return Promise.resolve();\n    }\n    return this.upload(files, api);\n  }\n\n  /** Triggers upload of current selected files */\n  upload(files, api = this.sdk.api) {\n    this.uploadPromise = (this.fileService.isNewAssetGroupID(this.assetGroupID)\n      ? this.fileService.uploadAssets(files, this.assetGroupID, this.options, api)\n      : this.fileService.uploadFiles(files)\n    )\n      .then((_upload) => {\n        this.success.emit(_upload);\n        this.notificationService.emit({\n          title: this.symbol.resolve('success.upload'),\n          type: 'success',\n          hide: this.notifications,\n        });\n        this.pop.hide();\n        return _upload;\n      })\n      .catch((err) => {\n        console.error(err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.upload'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          append: this.notifications,\n        });\n      });\n    this.loaderService.wait(this.uploadPromise, this.loader);\n    this.uploadPromise.then(() => {\n      delete this.uploadPromise;\n    });\n    return this.uploadPromise;\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n    \n        \n            {{'upload.assetGroup' | symbol}}\n            \n        \n        \n            \n                \n                \n                    \n                    {{'upload.preserveFilenames' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.includeAssetIDInPath' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.ignoreDuplicates' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.deduplicate' | symbol}}\n                \n            \n            \n                {{ f.name }}\n                \n                    \n                \n            \n        \n        Upload\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{\\'upload.assetGroup\\' | symbol}}                                                                                                                {{\\'upload.preserveFilenames\\' | symbol}}                                                                                                                {{\\'upload.includeAssetIDInPath\\' | symbol}}                                                                                                                {{\\'upload.ignoreDuplicates\\' | symbol}}                                                                                                                {{\\'upload.deduplicate\\' | symbol}}                                                        {{ f.name }}                                                                                Upload    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadSelectComponent.html":{"url":"components/UploadSelectComponent.html","title":"component - UploadSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/upload-select/upload-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload-select\n            \n\n\n\n\n            \n                templateUrl\n                ./upload-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                    Public\n                                focusEvent\n                            \n                            \n                                showUrlInput\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                uploader\n                            \n                            \n                                urlsToUpload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setGroup\n                            \n                            \n                                toggleUrlInput\n                            \n                            \n                                triggerUpload\n                            \n                            \n                                uploadFromUrls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                config\n                            \n                            \n                                custom\n                            \n                            \n                                disableDrop\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                browse\n                            \n                            \n                                groupChanged\n                            \n                            \n                                uploaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDrop\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     FileOptions\n\n                    \n                \n                \n                    \n                        Default value : Object.assign({}, this.fileService.defaultOptions)\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        browse\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:22\n                            \n                        \n                \n                    \n                        emits when the group has been set from the upload pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        uploaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:24\n                            \n                        \n                \n                    \n                        Emits when an upload is complete. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleUrlInput\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleUrlInput()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            triggerUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \ntriggerUpload(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFromUrls\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFromUrls(urls, e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urls\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:34\n                            \n                        \n\n                \n                    \n                        The event that focuses the url input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showUrlInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:32\n                            \n                        \n\n                \n                    \n                        Wether or not the url input should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UploadComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(UploadComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:28\n                            \n                        \n\n                \n                    \n                        The nested upload component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlsToUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:30\n                            \n                        \n\n                \n                    \n                        The Url to upload from \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { CrudConfig } from '../../crud/crud-config.interface';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SymbolService } from '@ec.components/ui';\nimport { UploadComponent } from '../upload/upload.component';\nimport { Upload, FileOptions, FileService } from '../file.service';\n\n@Component({\n  selector: 'ec-upload-select',\n  templateUrl: './upload-select.component.html',\n})\nexport class UploadSelectComponent implements OnInit {\n  @Input() readOnly: boolean;\n  @Input() custom: boolean;\n  @Input() disableDrop: boolean;\n  @Input() assetGroupID: string;\n  @Input() loader: LoaderComponent;\n  @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n  /** emits when the group has been set from the upload pop */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Emits when an upload is complete. */\n  @Output() uploaded: EventEmitter = new EventEmitter();\n  @Output() browse: EventEmitter = new EventEmitter();\n  @Input() config: CrudConfig;\n  /** The nested upload component */\n  @ViewChild(UploadComponent) uploader: UploadComponent;\n  /** The Url to upload from */\n  urlsToUpload = '';\n  /** Wether or not the url input should be visible */\n  showUrlInput = false;\n  /** The event that focuses the url input */\n  public focusEvent: EventEmitter = new EventEmitter();\n\n  constructor(public symbol: SymbolService, public fileService: FileService) {}\n\n  ngOnInit() {}\n\n  /** Sets the asset group to upload to */\n  setGroup(group) {\n    this.assetGroupID = group;\n    this.groupChanged.emit(group);\n  }\n\n  toggleUrlInput() {\n    this.showUrlInput = !this.showUrlInput;\n    setTimeout(() => {\n      this.focusEvent.emit(true);\n    });\n  }\n\n  uploadFromUrls(urls, e) {\n    this.uploader.uploadFiles(urls, e).then(() => {\n      this.urlsToUpload = '';\n      this.showUrlInput = false;\n    });\n  }\n  triggerUpload(e) {\n    this.uploader.trigger(e);\n  }\n}\n\n    \n\n    \n        \n    Drop to upload\n    \n    {{'upload.link' | symbol}}\n     {{'upload.or' | symbol}}\n        {{'upload.url' | symbol}}\n    \n     {{'upload.or' | symbol}}\n        {{'upload.browse' | symbol}}\n    \n    \n        \n        {{'upload.url.start' | symbol}}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Drop to upload        {{\\'upload.link\\' | symbol}}     {{\\'upload.or\\' | symbol}}        {{\\'upload.url\\' | symbol}}         {{\\'upload.or\\' | symbol}}        {{\\'upload.browse\\' | symbol}}                        {{\\'upload.url.start\\' | symbol}}    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_imports\n\n\n\ncluster_UtilityModule_exports\n\n\n\ncluster_UtilityModule_providers\n\n\n\n\nFocusDirective\n\nFocusDirective\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nIoModule\n\nIoModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nKeycommandsService\n\nKeycommandsService\n\nUtilityModule -->\n\nKeycommandsService->UtilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/utility/utility.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FocusDirective\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            SignupFormComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            KeycommandsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FocusDirective\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            SignupFormComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IoModule } from '../io/io.module';\nimport { FocusDirective } from './focus/focus.directive';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { SignupFormComponent } from './signup-form/signup-form.component';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { KeycommandsService } from './keycommands/keycommands.service';\n\nexport const utilityModuleConfig = {\n  entryComponents: [],\n  declarations: [TabsComponent, TabComponent, MenuComponent, LoginFormComponent, SignupFormComponent, FocusDirective],\n  imports: [FormsModule, ReactiveFormsModule, IoModule, CommonModule, RouterModule],\n  exports: [\n    /* FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    */\n    TabsComponent,\n    TabComponent,\n    MenuComponent,\n    LoginFormComponent,\n    SignupFormComponent,\n    FocusDirective,\n    RouterModule,\n  ],\n  providers: [KeycommandsService],\n};\n\n@NgModule(utilityModuleConfig)\nexport class UtilityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/VisibleFieldsPipe.html":{"url":"pipes/VisibleFieldsPipe.html","title":"pipe - VisibleFieldsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  VisibleFieldsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/visible-fields.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        visibleFields\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(fields: Array, form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/visible-fields.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n                            Filters out all fields that should not be displayed in a regular form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/visible-fields.pipe.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Field, Form } from '@ec.components/core';\nimport { FormService } from './form.service';\n\n/** The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. */\n@Pipe({\n  name: 'visibleFields',\n})\nexport class VisibleFieldsPipe implements PipeTransform {\n  constructor(public formService: FormService) {}\n  /** Filters out all fields that should not be displayed in a regular form */\n  transform(fields: Array, form: Form): any {\n    return fields.filter((field) => this.formService.shouldBePartOfForm(field, form) && !field.hideInForm);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithLoader.html":{"url":"interfaces/WithLoader.html","title":"interface - WithLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/loader/with-loader.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses a loader. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The loader that is contacted on any kind of loading operation. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoaderComponent } from './loader.component';\n/** This interface can be used on a component that uses a loader. */\nexport interface WithLoader {\n  /** The loader that is contacted on any kind of loading operation. */\n  loader: LoaderComponent;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithNotifications.html":{"url":"interfaces/WithNotifications.html","title":"interface - WithNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/with-notifications.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses notifications. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        silent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     Notification[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Notification[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores notification history for later access. E.g. stores errors that should be hidden later. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silent\n                                    \n                                \n                                \n                                    \n                                        silent:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no notifications will be emitted \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Notification } from './notification';\n\n/** This interface can be used on a component that uses notifications. */\nexport interface WithNotifications {\n  /** Stores notification history for later access. E.g. stores errors that should be hidden later. */\n  notifications?: Notification[];\n  /** If true, no notifications will be emitted */\n  silent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nEach package has its own changelog:\n\n@ec.components/data\n@ec.components/ui\n@ec.components/core\n@ec.components/calendar\n@ec.components/style\n@ec.components/ace\n@ec.components/location\n@ec.components/medium-editor\n@ec.components/tinymce\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                packages/ace/src/lib/ace.component.ts\n            \n            component\n            AceComponent\n            \n                76 %\n                (20/26)\n            \n        \n        \n            \n                \n                packages/ace/src/lib/ace.component.ts\n            \n            variable\n            ace\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ace/src/lib/ace.module.ts\n            \n            variable\n            aceModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ace/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ace/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar.module.ts\n            \n            variable\n            calendarModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                75 %\n                (44/58)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/month.component.ts\n            \n            component\n            MonthComponent\n            \n                69 %\n                (25/36)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/month.component.ts\n            \n            interface\n            Day\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/daterange/daterange.component.ts\n            \n            component\n            DaterangeComponent\n            \n                68 %\n                (26/38)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/datetime.pipe.ts\n            \n            pipe\n            DatetimePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/heatmap/heatmap.component.ts\n            \n            component\n            HeatmapComponent\n            \n                68 %\n                (30/44)\n            \n        \n        \n            \n                \n                packages/calendar/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/collection/collection.ts\n            \n            class\n            Collection\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/config.ts\n            \n            class\n            Config\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/field-config-property.interface.ts\n            \n            interface\n            FieldConfigProperty\n            \n                100 %\n                (43/43)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/field-config.interface.ts\n            \n            interface\n            FieldConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/field/field.ts\n            \n            class\n            Field\n            \n                96 %\n                (30/31)\n            \n        \n        \n            \n                \n                packages/core/src/lib/form/form-config.interface.ts\n            \n            interface\n            FormConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/core/src/lib/form/form.ts\n            \n            class\n            Form\n            \n                93 %\n                (29/31)\n            \n        \n        \n            \n                \n                packages/core/src/lib/item/item-config.interface.ts\n            \n            interface\n            ItemConfig\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/core/src/lib/item/item.ts\n            \n            class\n            Item\n            \n                91 %\n                (22/24)\n            \n        \n        \n            \n                \n                packages/core/src/lib/list/list-config.interface.ts\n            \n            interface\n            ListConfig\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                packages/core/src/lib/list/list.ts\n            \n            class\n            List\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                packages/core/src/lib/pagination/pagination.ts\n            \n            class\n            Pagination\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                packages/core/src/lib/selection/selection.ts\n            \n            class\n            Selection\n            \n                94 %\n                (47/50)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            class\n            Sorter\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortNumber\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            variable\n            collator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/core/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/asset-list/asset-list.component.ts\n            \n            component\n            AssetListComponent\n            \n                61 %\n                (11/18)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth-guard.service.ts\n            \n            guard\n            AuthGuard\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth.module.ts\n            \n            function\n            cookieFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/email-available.validator.ts\n            \n            variable\n            emailAvailable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/errors.ts\n            \n            variable\n            backendErrorCodes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/errors.ts\n            \n            variable\n            errors\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/password-reset/password-reset.component.ts\n            \n            component\n            PasswordResetComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                packages/data/src/lib/crud/crud-config.interface.ts\n            \n            interface\n            CrudConfig\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                packages/data/src/lib/crud/crud.component.ts\n            \n            component\n            CrudComponent\n            \n                77 %\n                (14/18)\n            \n        \n        \n            \n                \n                packages/data/src/lib/data.module.ts\n            \n            variable\n            dataModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entries/entries.directive.ts\n            \n            directive\n            EntriesDirective\n            \n                60 %\n                (12/20)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/admin-entry-input.component.ts\n            \n            component\n            AdminEntryInputComponent\n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/default-entry-input.component.ts\n            \n            component\n            DefaultEntryInputComponent\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/default-entry-output.component.ts\n            \n            component\n            DefaultEntryOutputComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/entry-form.component.ts\n            \n            component\n            EntryFormComponent\n            \n                90 %\n                (40/44)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts\n            \n            component\n            EntryListPopComponent\n            \n                44 %\n                (13/29)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list-select/entry-list-select.component.ts\n            \n            component\n            EntryListSelectComponent\n            \n                68 %\n                (32/47)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list/entry-list.component.ts\n            \n            component\n            EntryListComponent\n            \n                60 %\n                (15/25)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list/entry-list.ts\n            \n            class\n            EntryList\n            \n                86 %\n                (20/23)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-pop/entry-pop.component.ts\n            \n            component\n            EntryPopComponent\n            \n                71 %\n                (30/42)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-select/entry-select.component.ts\n            \n            component\n            EntrySelectComponent\n            \n                68 %\n                (64/94)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry/entry.directive.ts\n            \n            directive\n            EntryDirective\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry/entry.service.ts\n            \n            injectable\n            EntryService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset-list-pop/asset-list-pop.component.ts\n            \n            component\n            AssetListPopComponent\n            \n                59 %\n                (25/42)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset-select/asset-select.component.ts\n            \n            component\n            AssetSelectComponent\n            \n                64 %\n                (54/84)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset/asset.directive.ts\n            \n            directive\n            AssetDirective\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts\n            \n            component\n            AssetgroupSelectComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/dropzone/dropzone.directive.ts\n            \n            directive\n            DropzoneDirective\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            injectable\n            FileService\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            interface\n            FileOptions\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            interface\n            Upload\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts\n            \n            component\n            ImageSelectPopComponent\n            \n                64 %\n                (18/28)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/image/image.directive.ts\n            \n            directive\n            ImageDirective\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/mime-types.ts\n            \n            variable\n            mimeTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/tag-select/tag-select.component.ts\n            \n            component\n            TagSelectComponent\n            \n                60 %\n                (57/95)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/upload-select/upload-select.component.ts\n            \n            component\n            UploadSelectComponent\n            \n                30 %\n                (7/23)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/upload/upload.component.ts\n            \n            component\n            UploadComponent\n            \n                77 %\n                (17/22)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-config.interface.ts\n            \n            interface\n            ModelConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-config.service.ts\n            \n            injectable\n            ModelConfigService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-configuration.interface.ts\n            \n            interface\n            ModelConfiguration\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/sdk-field.ts\n            \n            interface\n            SdkField\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/type-config.service.ts\n            \n            injectable\n            TypeConfigService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/api-actionbar.component.ts\n            \n            component\n            ApiActionbarComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n            \n            component\n            ResourceActionbarComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n            \n            interface\n            ResourceActionbarState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource-config.service.ts\n            \n            injectable\n            ResourceConfig\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource.service.ts\n            \n            injectable\n            ResourceService\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource.service.ts\n            \n            interface\n            Update\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-crud/resource-crud.component.ts\n            \n            component\n            ResourceCrudComponent\n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-delete-pop/resource-delete-pop.component.ts\n            \n            component\n            ResourceDeletePopComponent\n            \n                61 %\n                (22/36)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-form/resource-form.component.ts\n            \n            component\n            ResourceFormComponent\n            \n                86 %\n                (40/46)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-form/resource-form.ts\n            \n            class\n            ResourceForm\n            \n                85 %\n                (30/35)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts\n            \n            component\n            ResourceListPopComponent\n            \n                40 %\n                (12/30)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list/resource-list.component.ts\n            \n            component\n            ResourceListComponent\n            \n                77 %\n                (34/44)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list/resource-list.ts\n            \n            class\n            ResourceList\n            \n                91 %\n                (56/61)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-pop/resource-pop.component.ts\n            \n            component\n            ResourcePopComponent\n            \n                72 %\n                (29/40)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-select/resource-select.component.ts\n            \n            component\n            ResourceSelectComponent\n            \n                67 %\n                (58/86)\n            \n        \n        \n            \n                \n                packages/data/src/lib/sdk/history.service.ts\n            \n            injectable\n            HistoryService\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/sdk/sdk.service.ts\n            \n            injectable\n            SdkService\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                packages/data/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/geocode.service.ts\n            \n            injectable\n            GeocodeService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                packages/location/src/lib/geocode.service.ts\n            \n            variable\n            google\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-map.component.ts\n            \n            component\n            LocationMapComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-picker.component.ts\n            \n            component\n            LocationPickerComponent\n            \n                57 %\n                (15/26)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-search.component.ts\n            \n            component\n            LocationSearchComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location.module.ts\n            \n            variable\n            LOCATION_COMPONENTS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location.module.ts\n            \n            variable\n            locationModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/lib/medium-editor.component.ts\n            \n            component\n            MediumEditorComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/lib/medium-editor.module.ts\n            \n            variable\n            mediumModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce.module.ts\n            \n            variable\n            tinymceModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce/tinymce-settings.ts\n            \n            variable\n            editorSettings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce/tinymce.component.ts\n            \n            component\n            TinymceComponent\n            \n                85 %\n                (18/21)\n            \n        \n        \n            \n                \n                packages/tinymce/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            component\n            ActionbarComponent\n            \n                53 %\n                (35/66)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            interface\n            ActionbarConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/datetime/datetime.component.ts\n            \n            component\n            DatetimeComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/default-input/default-input.component.ts\n            \n            component\n            DefaultInputComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/default-output/default-output.component.ts\n            \n            component\n            DefaultOutputComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.component.html.ts\n            \n            variable\n            formTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.component.ts\n            \n            component\n            FormComponent\n            \n                91 %\n                (32/35)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.module.ts\n            \n            variable\n            formModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/max-items.pipe.ts\n            \n            pipe\n            MaxItemsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/visible-fields.pipe.ts\n            \n            pipe\n            VisibleFieldsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/ec-icons.ts\n            \n            variable\n            ecIcons\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/emoji-icons.ts\n            \n            variable\n            emojiIcons\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/icon.service.ts\n            \n            injectable\n            IconService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts\n            \n            component\n            DynamicRackComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts\n            \n            component\n            DynamicSlotComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/input-errors/input-errors.component.ts\n            \n            component\n            InputErrorsComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                71 %\n                (20/28)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/output/output.component.ts\n            \n            component\n            OutputComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/slot-host.directive.ts\n            \n            directive\n            SlotHostDirective\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/group.pipe.ts\n            \n            pipe\n            GroupPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-config.service.ts\n            \n            injectable\n            ListConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-header/list-header.component.ts\n            \n            component\n            ListHeaderComponent\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-items/list-items.component.ts\n            \n            component\n            ListItemsComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.component.html.ts\n            \n            variable\n            listTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.component.ts\n            \n            component\n            ListComponent\n            \n                78 %\n                (22/28)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.module.ts\n            \n            variable\n            listModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/pagination/pagination-config.interface.ts\n            \n            class\n            PaginationConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/searchbar/searchbar.component.ts\n            \n            component\n            SearchbarComponent\n            \n                78 %\n                (29/37)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/with-loader.interface.ts\n            \n            interface\n            WithLoader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                80 %\n                (25/31)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notification.ts\n            \n            class\n            Notification\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.component.ts\n            \n            component\n            NotificationsComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.service.ts\n            \n            injectable\n            NotificationsService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.service.ts\n            \n            variable\n            window\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/with-notifications.interface.ts\n            \n            interface\n            WithNotifications\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.component.ts\n            \n            component\n            PopComponent\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.module.ts\n            \n            variable\n            popModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.service.ts\n            \n            injectable\n            PopService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.component.html.ts\n            \n            variable\n            selectTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                67 %\n                (36/53)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.module.ts\n            \n            variable\n            selectModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/de.ts\n            \n            variable\n            de\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/en.ts\n            \n            variable\n            en\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.interface.ts\n            \n            interface\n            Symbol\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.pipe.ts\n            \n            injectable\n            SymbolPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.pipe.ts\n            \n            pipe\n            SymbolPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.service.ts\n            \n            injectable\n            SymbolService\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/ui.module.ts\n            \n            variable\n            uiModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/focus/focus.directive.ts\n            \n            directive\n            FocusDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/focus/focus.interface.ts\n            \n            interface\n            Focus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n            \n            injectable\n            KeycommandsService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n            \n            interface\n            KeyAction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                95 %\n                (21/22)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/signup-form/signup-form.component.ts\n            \n            component\n            SignupFormComponent\n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/tab/tab.component.ts\n            \n            component\n            TabComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/utility.module.ts\n            \n            variable\n            utilityModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/validators/email.validator.ts\n            \n            variable\n            emailValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/validators/field-validators.ts\n            \n            variable\n            FieldValidators\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : 1.0.0-beta.5\n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ec.components/ace : *\n        \n            @ec.components/calendar : *\n        \n            @ec.components/core : *\n        \n            @ec.components/data : *\n        \n            @ec.components/location : *\n        \n            @ec.components/medium-editor : *\n        \n            @ec.components/style : *\n        \n            @ec.components/tinymce : *\n        \n            @ec.components/ui : *\n        \n            x.ui : ^9.1.3\n        \n            ace-builds : ^1.4.3\n        \n            core-js : ^2.6.5\n        \n            ec.sdk : ^0.21.4\n        \n            googlemaps : ^1.12.0\n        \n            lerna : ^3.13.1\n        \n            medium-editor : ^5.23.2\n        \n            moment-es6 : ^1.0.0\n        \n            ngx-cookie : ^2.0.1\n        \n            ngx-drag-drop : ^1.1.0\n        \n            rxjs : ~6.3.3\n        \n            tinymce : ^4.9.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieFactory   (packages/.../auth.module.ts)\n                        \n                        \n                            sortBoolean   (packages/.../sorter.ts)\n                        \n                        \n                            sortNumber   (packages/.../sorter.ts)\n                        \n                        \n                            sortString   (packages/.../sorter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/data/src/lib/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cookieFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ncookieFactory()\n                    \n                \n\n\n\n\n                \n                    \n                            loads CookieModule \n\n\n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                    \n                \n            \n        \n\n    packages/core/src/lib/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBoolean(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts booleans \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortNumber(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts numbers \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortString\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortString(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts strings (naturally) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nec.components\nThis project contains all sorts of angular components for creating data driven applications.\nIt is mainly used for entrecode admin applications in combination with the entrecode using ec.sdk.\nPackages\nMain Packages\n\n@ec.components/core: contains core typescript classes (no angular/datamanager)\n@ec.components/ui: contains core ui components (not datamanager specific)\n@ec.components/data: contains ui components for datamanager.\n@ec.components/style: contains styles for all components, built on x.ui.\n\nThe dependencies stack up from core to data (data > ui > core). You could also omit data, using just the ui components.\nOptional Packages\n\n@ec.components/calendar: contains calendar components, uses moment.\n@ec.components/location: wraps angular-google-maps.\n@ec.components/tinymce: wraps tinymce wysiwyg editor.\n@ec.components/medium-editor: wraps medium wysiwyg editor.\n@ec.components/ace: wraps ace code editor.\n\nDocumentation\nThe main documentation is located at entrecode.github.io/ec.components. You can find a getting started guide there.\nDemo\nA Demo is available at components.entrecode.de.\nDeveloping with Lerna + Yarn Workspaces\nThe repository is a monorepo, managed by lerna and yarn workspaces.\nAll folders inside dist + packages/style will be used as symlinks in node_modules/@ec.components/*.\nYou can update the symlinks by running yarn (e.g. after adding a new package).\nDev Setup\nAfter a fresh clone of the repo, run this:\nyarn install\nnpm run dev-setup\nnpm run startThe dev-setup script builds all packages and symlinks them to the node_modules.\nReleasing\nRun release task and select versions:\nnpm run releaseTo publish a new package for the first time, make sure you run npm publish --access=public before running lerna. See add-new-package for more info on creating a new package.\nAlso make sure to use Conventional Commits for proper changelogging.\nDefault README\nThis project was generated with Angular CLI version 7.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:1337/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CalendarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IconModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediumEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PopModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SdkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SymbolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TinymceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_imports\n\n\n\ncluster_AceModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_exports\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MediumEditorModule\n\n\n\ncluster_MediumEditorModule_declarations\n\n\n\ncluster_MediumEditorModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumEditorModule_exports\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_exports\n\n\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_declarations\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_exports\n\n\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_exports\n\n\n\ncluster_UtilityModule_providers\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n AceComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n AceComponent), multi: true,\n}->AceComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}->AceComponent\n\n\n\n\n\nUiModule\n\nUiModule\n\nAceModule -->\n\nUiModule->AceModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\ncookieFactory()\n\ncookieFactory()\n\nAuthModule -->\n\ncookieFactory()->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nCalendarModule -->\n\nDaterangeComponent->CalendarModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nCalendarModule -->\n\nDatetimePipe->CalendarModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nCalendarModule -->\n\nHeatmapComponent->CalendarModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nCalendarModule -->\n\nMonthComponent->CalendarModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nCalendarModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nCalendarModule->DaterangeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nCalendarModule->DatetimePipe \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nCalendarModule->HeatmapComponent \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nCalendarModule->MonthComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarModule->FormModule\n\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nTagSelectComponent \n\nTagSelectComponent \n\nTagSelectComponent  -->\n\nFilesModule->TagSelectComponent \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nApiActionbarComponent \n\nApiActionbarComponent \n\nApiActionbarComponent  -->\n\nResourceModule->ApiActionbarComponent \n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nEntryService\n\nEntryService\n\nDataModule -->\n\nEntryService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\nAssetDirective\n\nAssetDirective\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nTagSelectComponent\n\nTagSelectComponent\n\nFilesModule -->\n\nTagSelectComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\nUtilityModule  -->\n\nFormModule->UtilityModule \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nSymbolPipe \n\nSymbolPipe \n\nSymbolPipe  -->\n\nSymbolModule->SymbolPipe \n\n\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\nFormModule -->\n\nUtilityModule->FormModule\n\n\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nGroupPipe\n\nGroupPipe\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\nUiModule -->\n\nListModule->UiModule\n\n\n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumEditorModule\n\nMediumEditorModule\n\nMediumEditorModule -->\n\nMediumEditorComponent->MediumEditorModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumEditorModule->MediumEditorComponent \n\n\n\n MediumEditorComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n MediumEditorComponent), multi: true,\n}->MediumEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}->MediumEditorComponent\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\nApiActionbarComponent\n\nApiActionbarComponent\n\nResourceModule -->\n\nApiActionbarComponent->ResourceModule\n\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\nSdkService\n\nSdkService\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n SelectComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n SelectComponent), multi: true,\n}->SelectComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}->SelectComponent\n\n\n\n\n\nSymbolPipe\n\nSymbolPipe\n\nSymbolModule -->\n\nSymbolPipe->SymbolModule\n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nKeycommandsService\n\nKeycommandsService\n\nUtilityModule -->\n\nKeycommandsService->UtilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        21 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    68 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (packages/.../actionbar.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ui/src/lib/actionbar/actionbar.component.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/angular-7-upgrade-guide.html":{"url":"additional-documentation/angular-7-upgrade-guide.html","title":"additional-page - Angular 7 Upgrade Guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAngular7 update: BREAKING changes\nThe following breaking changes need to be considered when updating the components with angular 7. This update guide is just for @ec.components and angular 7. A whole angular 7 update guide can be found here.\nAngular 7 is used since the following versions:\n\n@ec.components/ace@0.6.0\n@ec.components/calendar@0.2.0\n@ec.components/core@0.19.0\n@ec.components/data@0.42.0\n@ec.components/location@0.18.0\n@ec.components/medium-editor@0.4.0\n@ec.components/style@0.21.0\n@ec.components/tinymce@0.5.0\n@ec.components/ui@0.36.0\n\nIt is recommended you use the most recent versions. Also add @ec.components/calendar to your package.json if you use datetime pipe or calendars / date pickers.\n1. All imports now go from the packages roots\nold:\nimport { EntryForm } from '@ec.components/data/src/entry-form/entry-form.component'new:\nimport { EntryForm } from '@ec.components/data'=> make sure you never import anything from src, since this folder no longer exists in the package\nPRO TIP\nUse VSCode \"Search: Replace in Files\" with the following Regex:\n\nSearch: _'@ec.components/(\\w+).*'_\nReplace: _'@ec.components/$1'_\n\n2. SCSS import changes\nold:\n@import '~@ec.components/style/components';new:\n@import '~@ec.components/style/scss/components';3. MediumModule has been renamed to MediumEditorModule\n4. Build Errors\nIf you are getting this:\nERROR in ./node_modules/eventsource/lib/eventsource.js\nModule not found: Error: Can't resolve 'http' in '/your-project/node_modules/eventsource/lib'\nERROR in ./node_modules/eventsource/lib/eventsource.js\nModule not found: Error: Can't resolve 'https' in 'your-project/node_modules/eventsource/lib'\nERROR in ./node_modules/jsonpath-plus/lib/jsonpath.js\nModule not found: Error: Can't resolve 'vm' in 'your-project/node_modules/jsonpath-plus/lib'To fix it, you need a custom webpack config. Eject is not available any more so we need to use angular-builders:\nnpm i @angular-builders/custom-webpack @angular-builders/dev-server @angular-devkit/build-angular --save-devThe following versions were used in this guide:\n\"@angular-builders/custom-webpack\": \"^7.2.0\",\n\"@angular-builders/dev-server\": \"^7.2.1\",\n\"@angular-devkit/build-angular\": \"^0.12.3\",In angular.json make following changes -\n\"architect\": {\n    \"build\": {\n        \"builder\": \"@angular-builders/custom-webpack:browser\",\n        \"options\": {\n        \"customWebpackConfig\": {\"path\": \"./custom-webpack.config.js\"},Notice change in builder and new option customWebpackConfig. Also change\n\"serve\": {\n    \"builder\": \"@angular-builders/dev-server:generic\",Now create a custom-webpack.config.js file in the root directory, containing:\nconst path = require(\"path\");\nmodule.exports = {\n    node: {\n        crypto: 'empty',\n        fs: 'empty',\n        http: 'empty',\n        https: 'empty',\n    }\n};Check this for more info.\nOther Problems you might run into\n\nCan't bind to 'ngModel' since it isn't a known property of 'input'\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial.html":{"url":"additional-documentation/project-setup-tutorial.html","title":"additional-page - Project Setup Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a new project with ec.components\nThis tutorial will show you how to set up a new project with the ec.components.\n1. Prequisites\nInstall angular-cli globally:\nnpm install -g @angular/cliThe following versions have been used for this tutorial:\n\n@angular/cli: 1.3.2\n@angular/animations: 4.3.6\n@angular/common: 4.3.6\n@angular/compiler: 4.3.6\n@angular/core: 4.3.6\n@angular/forms: 4.3.6\n@angular/http: 4.3.6\n@angular/platform-browser: 4.3.6\n@angular/platform-browser-dynamic: 4.3.6\n@angular/router: 4.3.6\n@angular/cli: 1.3.2\n@angular/compiler-cli: 4.3.6\n@angular/language-service: 4.3.6\ntypescript: 2.4.2\n\nYou can lookup your versions with ng --version\n2. Generate new Project\nng new ec-project --prefix ec-admin --routing true --style scssMake sure you replace ec-project with your project name and the prefix ec-admin with a project related shorthand symbol.\nMore info on the options for new.\n3. Install @ec.components/data\ncd ec-project\nyarn add @ec.components/data --save\nyarn add @ec.components/style --saveThis will install the data package which depends on ui and core packages.\nThe style package contains styles for ui and data.\n4. Import Styles\nInto your styles.scss, import the following styles:\n@import \"~xlcss/sass/xlcss.scss\";\n@import \"~x.ui/src/_config\";\n@import \"~x.ui/src/x.ui-sandbox.scss\";\n@import \"~@ec.components/style/components.scss\";5. Setup environment\nIn src/environments, you can find the different environment files.\nBy Default, there is a dev and a prod environment. For this tutorial, those two should be enough. We will use the dev environment for dev and staging and the prod environment for live. You could also add more environments, for more information, look here. \nsrc/environments/environment.ts:\nexport const environment = {\n  production: false,\n  environment: 'stage', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-dev-client' // your clientID\n};src/environments/environment.prod.ts:\nexport const environment = {\n  production: true,\n  environment: 'live', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-live-client' // your clientID\n};The .prod environment will be used when running ng build for production.\nThe client should use token method body. The callback URL does not matter.\n6. Add DataModule\nGo to src/app/app.module and add DataModule to your imports:\nimport { DataModule } from '@ec.components/data';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataModule.forEnvironment(environment),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Here we are importing the DataModule along with the environment to then import it into our AppModule with the forEnvironment method.\n7. Add --ssl flag\nin your package.json, edit your start script to look like this:\n\"start\": \"ng serve --ssl\",Without the --ssl flag, the authorization won't work, because it enforces https.\n8. Add a component\ne.g. add to src/app/app.component.html:\nThis assumes that the model muffin exists inside the datamanager provided through your environment.\n9. Run the fun\nThats it! Now you can run the app using:\nnpm run startnow navigate to https://localhost:4200\n10. Add Notifications\nTo your app.component, you can add a global notification component, outside of your routing:\nThis will display all messages sent by the components or your own modules.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/routes.html":{"url":"additional-documentation/project-setup-tutorial/routes.html","title":"additional-page - Routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Routes\nThis short tutorial demonstrates how to quickly generate routes with components.\nIn the following tutorials, refer to this when you are called to create a new route.\n1. Create Component\nGenerate a new component\nng generate component muffinsAdd template to src/app/muffins/muffins.component.html\n2. Add a Route\nsrc/app/app-routing.module.ts:\nimport { MuffinsComponent } from './muffins/muffins.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  },\n  {\n    path: 'muffins',\n    component: MuffinsComponent\n  }\n];3. Run the Route\nNow you can access the muffin crud at https://localhost:4200/muffins\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/authorization.html":{"url":"additional-documentation/project-setup-tutorial/authorization.html","title":"additional-page - Authorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/localization.html":{"url":"additional-documentation/project-setup-tutorial/localization.html","title":"additional-page - Localization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocalization\nYou can setup localization via the SymbolService:\nimport en from './en';\n\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}It is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\nmoment.locale(this.symbols.resolve('moment.locale'));Using symbols in templates\nTo translate symbols in a template, use the symbol pipe:\n{{'symbol.language' | symbol}} Overwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{"url":"additional-documentation/project-setup-tutorial/custom-fields-config.html","title":"additional-page - Custom Fields Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Field Configuration\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nExample\nYou can configure a models behaviour over the ModelConfigService.\nIt is recommended to configure a model in a parent component of all possible ec-crud lists or nested forms.\nSee the related doc links for default values / possible config values.\nexport class MuffinsComponent {\n  constructor(private modelConfig: ModelConfigService) {\n    moment.locale('de'); //set moment locale\n\n    this.modelConfig.set('muffin', {\n      fields: {\n        pictures: {\n          label: 'Bilder' //this label is shown above the form field and in the table header\n        },\n        name: {\n          label: 'Muffin Name',\n          group: (name) => {\n            return name[0].toUpperCase() //the return value is used to show group headers in a sorted list\n          },\n          required: true //when required, a new entry form cannot be saved without a value set for the field\n        },\n        _created: { //you can also access the system properties\n          label: 'Erstellt',\n          form: false, //this will hide the field inside the form\n          group: (value) => moment(value).format('YYYY')\n        },\n        amazement_factor: {\n          label: 'Amazement Faktor',\n          display: (value) => { //this will transform the value for output e.g. in a list cell\n            return (value * 10) + '%'\n          },\n          group: (value) => {\n            return value > 5 ? 'Größer als 50%' : 'Kleiner als 50%';\n          },\n          validate: (value) => { //this function will run when validating the value inside a form\n            if (typeof value !== 'number') {\n              return; //value is valid\n            }\n            if (value  10) {\n              return 'Darf maximal 10 sein';\n            }\n          }\n        },\n      }\n    });\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-list.html","title":"additional-page - Custom Entry List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nec-entry-list\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nEntry Lists load multiple entries from a model and display them in a paginated list. It supports load error notifications, loader, filtering, sorting and automatic reloading + many customizations.\nDefault Usage\nThe above snippet will either consume the config for muffin in ModelConfigService, or if no config is found, generate one from the model schema.\nPassing a Config\nThe following snippet will assign the given config to the model/schema config:\ncolumnClicked output\nYou can react to column clicks via the columnClicked output:\nselect(item) {\n    console.log('entry',item.getBody(),item.id());\n}Seperated header/items/pagination markup\nIf you need a seperation of the list-header -items and -pagination, you can use the sub components of list.component:\n\n\n\n\nCreate Custom Cells via transform methods\nIf you want to custom cell values that do not require a custom markup, you can use transforms\ndisplay\nThe display transform method is used to display the value (say what?).\nIt is called from inside ec-output, which is used in list-cells and form readOnly fields.\nYou can change the display behaviour like this:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            display: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});group\nYou can use grouping to get a clearer outline over sorted data:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            group: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});The syntax is the same as for display but the result is used as a group label when the property is sorted.\nresolve\nThe value that is passed to the transform methods like display, group etc. can be changed beforehand with the resolve method. NOTE: the params are different than for the transform methods:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            resolve: (body, item) => {\n                if(body.amazement_factor === -1) {\n                    return 0;\n                }\n                return body.amazement_factor;\n            }\n        }\n    }\n});this will also affect your forms!\npseudo properties via resolve\nYou can also define pseudo properties, meaning properties that do not exist on the original object:\nthis.modelConfig.set('muffin', {\n    fields: {\n        ranking: {\n            resolve: (body, item) => body.amazement_factor*body.flavour/body.price\n        }\n    }\n});This comes in handy when you want to display a often combined value out of multiple values.\nNOTE: pseudo properties should not be passed to the backend...\nCustom Cells via custom output component\nIf you want to custom cell values that do require a custom markup, you can use a custom output component:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            output: StrongComponent\n        }\n    }\n});In your strong.component.ts, you can inherit OutputComponent, giving you access to the field and item of your cell:\n@Component({\n  selector: 'app-strong',\n  template: `{{item.resolve(field.property)}}`\n})\nexport class StrongComponent extends OutputComponent {}NOTE: customizing the output component will also change the look of forms using that config, if the property is set readOnly.\nFiltering Lists\nBy default, each column that hosts a filterable property contains a search icon in its header. If the property is filterable is defined either by the field config (filterable) or falls back to the backend types that support filters. The search icon will open a pop with a field type specific filter input inside.\nCustom Filtering\nIf you do not want that (currently pretty clunky) pop filters, you can set filterable to false and manually call list.load with the desired filter:\n\n    show amazing muffins\n\nClicking the link will now show all muffins with exactly amazement_factor 10.\nCustom filter operators\nBy default, the entry-list will filter the property by its default filterOperator (see type config). If you want to change the default operator you can set it in the config:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            filterOperator: 'from'\n        }\n    }\n});\n    show amazing muffins\n\nIf you now click the link, all muffins with amazement_factor>=5 will be loaded.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-forms.html","title":"additional-page - Custom Entry Forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEntry Forms\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nEntry forms can edit and create entries. They support notifications, loader, validation error handling and dynamic config generation out of the box.\nNOTE: it is expected you have placed a ec-notifications tag somewhere in your root component.\nDefault Behaviour\nCreate\nsubmitting the form will create a new entry and then switch to edit mode.\nEdit\nDynamic Edit/Create from template\nYou can also access the form from the template and call edit or create:\n\n\n    \n      {{muffin.name}}\n    \n  \nCreate new MuffinConfiguration\nIf nothing else is configured, the form will parse the schema of muffin and generate a generic field config.\nIf you configured the model via ModelConfigService (see Custom Fields), the form will use that config.\nAlternatively, you can also pass a config directly:\nThe given config will be Object.assigned to the possible preexisting modelConfig.\nCustom Markup with ec-input/ec-output\nMost times, you'll want more freedom over your forms markup etc. This is where ec-input and ec-output come into play:\n  \n    \n    Title\n        \n    \n    \n    Amazement Factor\n    \n    Submit\n  As soon as the ec-entry-form contains elements (or you pass empty=true, as meantioned below), the contents will be rendered instead of the default form.\nFeatures you have to add manually (if needed)\n\nsubmit button\nfield.readOnly handling (show ec-output instead of ec-input)\nlocal ec-loader\n\nNOTE: dont wrap labels around complex input components, because they fire ghost clicks!\nCustom input/output markup\nOf course you can remove another layer of abstraction to further customize the form:\n  \n    \n    Title\n    \n    \n    \n    Amazement Factor\n    {{form.display('amazement_factor')}}\n\n    Submit\n  Features you have to add manually:\n\nhandling of input errors (ec-input-errors)\nmaking sure your markup handles the field type correctly\nmaking sure your markup handles the field value correctly\n\nIt is generally recommended to use ec-input over hard coded forms.\nThe empty flag\nYou can also place the ec-input elements somewhere else and just tell the ec-entry-form that it shouldn't render the default form with the empty flag:\n\nNOTE: Always make sure the property accessed by ec-input is also present in your config (or you dont use a config at all). Otherwise, the input wont know what to render.\nCreating custom inputs\n1. Create Custom Input Component\nng g c custom-inputThis component will serve as a container for all possible custom input fields.\n2. Extend InputComponent (custom-input.component.ts)\nTo make the current field information available to the template, you need to extend InputComponent from @ec.components/ui:\nimport { Component } from '@angular/core';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'clubapp-custom-input',\n  templateUrl: './custom-input.component.html',\n  styleUrls: ['./custom-input.component.scss']\n})\nexport class CustomInputComponent extends InputComponent {\n}CMD+Click on InputComponent to see which properties you can now use!\n3. Add Markup (custom-input.component.html)\nNow we can decide which custom input should be used, based on e.g. the fields view value:\n\n  \n  \n    \n  \n  \n     -->\n  \nOf course you could also switch based on property name or type, depending on your application.\nThe id property of field is referenced in the label of the form. By adding it to the input makes sure your label click enters the input.\n4. Add CustomInputComponent to entryComponents:\nBecause the custom component will be loaded dynamically, your module needs to declare it as entryComponent:\n@NgModule({\n  entryComponents: [\n    CustomInputComponent\n  ]\n  /** more stuff **/\n})\nexport class AppModule {\n}5. Add CustomInputComponent to field config:\nNow you can add the Component as input to your field config:\nthis.modelConfig.set('muffin', {\n      fields: {\n        url: {\n          label: 'URL',\n          view: 'speakingurl',\n          input: CustomInputComponent\n        },\n        openingHours: {\n          label: 'Öffnungszeiten',\n          view: 'openingHours',\n          input: CustomInputComponent\n        }\n})By changing the view option, we can now decide which case will be met!\nCustom Form Controls\nNow what if you want to use a custom form control that does not rely on primitve inputs like number or text?\nIn the above custom-input.component template, we use  with a formControl input.\nTo have access to the form control's value, you need to provide a ControlValueAccessor:\nimport { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'ec-opening-hours',\n  templateUrl: './opening-hours.component.html',\n  styleUrls: ['./opening-hours.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpeningHoursComponent),\n      multi: true\n    }\n  ]\n})Now you can implement your own logic and call propagateChange when you change the value from your component, and react to change via the writeValue method!\nYou now could also use your component with ngModel or formControl in another context!\nMore information on this pattern: https://blog.thoughtram.io/angular/2016/07/27/custom-form-controls-in-angular-2.html\nCustom Fields without wrapper\nYou can also use custom components as input directly without needing to wrap them in \"CustomFieldsComponent\".\nJust make sure you implement ControlValueAccessor like above. When changes occur from the template, call propagateChange. You can react to outside model changes in writeValue.\nimport { Component, OnInit, Input } from '@angular/core';\nimport { InputComponent } from '../../../packages/ui';\nimport { ControlValueAccessor } from '@angular/forms';\n\n@Component({\n    selector: 'ec-counter',\n    templateUrl: './counter.component.html'\n})\n\nexport class CounterComponent extends InputComponent implements ControlValueAccessor {\n\n    value = 0;\n\n    increment() {\n        this.propagateChange(++this.value);\n    }\n\n    decrement() {\n        this.propagateChange(--this.value);\n    }\n\n    writeValue(value: any) {\n        this.value = value;\n        console.log('received value', value);\n    }\n\n    propagateChange = (_: any) => {\n    };\n\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme.html":{"url":"additional-documentation/readme.html","title":"additional-page - README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nec.components\nThis project contains all sorts of angular components for creating data driven applications.\nIt is mainly used for entrecode admin applications in combination with the entrecode using ec.sdk.\nPackages\nMain Packages\n\n@ec.components/core: contains core typescript classes (no angular/datamanager)\n@ec.components/ui: contains core ui components (not datamanager specific)\n@ec.components/data: contains ui components for datamanager.\n@ec.components/style: contains styles for all components, built on x.ui.\n\nThe dependencies stack up from core to data (data > ui > core). You could also omit data, using just the ui components.\nOptional Packages\n\n@ec.components/calendar: contains calendar components, uses moment.\n@ec.components/location: wraps angular-google-maps.\n@ec.components/tinymce: wraps tinymce wysiwyg editor.\n@ec.components/medium-editor: wraps medium wysiwyg editor.\n@ec.components/ace: wraps ace code editor.\n\nDocumentation\nThe main documentation is located at entrecode.github.io/ec.components. You can find a getting started guide there.\nDemo\nA Demo is available at components.entrecode.de.\nDeveloping with Lerna + Yarn Workspaces\nThe repository is a monorepo, managed by lerna and yarn workspaces.\nAll folders inside dist + packages/style will be used as symlinks in node_modules/@ec.components/*.\nYou can update the symlinks by running yarn (e.g. after adding a new package).\nDev Setup\nAfter a fresh clone of the repo, run this:\nyarn install\nnpm run dev-setup\nnpm run startThe dev-setup script builds all packages and symlinks them to the node_modules.\nReleasing\nRun release task and select versions:\nnpm run releaseTo publish a new package for the first time, make sure you run npm publish --access=public before running lerna. See add-new-package for more info on creating a new package.\nAlso make sure to use Conventional Commits for proper changelogging.\nDefault README\nThis project was generated with Angular CLI version 7.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:1337/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/data-readme.html":{"url":"additional-documentation/readme/data-readme.html","title":"additional-page - data README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/data\nThis package contains all ec.datamanager related components.\nBeing wether framework agnostic nor backend agnostic, it is lowest fruit on the abstraction tree.\nIt extends the classes of the core module to create datamanager specific classes that are then used in the components.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/data --save2. Add Module\nimport { DataModule } from '@ec.components/data';\n\n@NgModule({\n  imports: [\n    DataModule\n  ]\n})\nexport class AppModule {\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/ui-readme.html":{"url":"additional-documentation/readme/ui-readme.html","title":"additional-page - ui README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ui\nThis package contains all angular components that have no ec.datamanager references.\nIt utilizes the classes of the @ec.components/core package.\nBeing the middle layer in the abstraction tree, it is still backend agnostic but not framework agnostic.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/ui --save2. Add Module\nimport { UiModule } from '@ec.components/ui';\n\n@NgModule({\n  imports: [\n    UiModule\n  ]\n})\nexport class AppModule {\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/core-readme.html":{"url":"additional-documentation/readme/core-readme.html","title":"additional-page - core README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/core\nThis package contains all the core typescript classes.\nIt is the highest abstraction layer and is therefor framework and backend agnostic.\nThis means it contains no angular or ec.datamanager references.\nOverview\n\nCHANGELOG\nAvailable Classes\n\nInstallation\nnpm i @ec.components/coreimport { Item } from '@ec.components/core';\nconst primitive = new Item('a');\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/style-readme.html":{"url":"additional-documentation/readme/style-readme.html","title":"additional-page - style README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/style\nThis package contains all scss styles for the ec.components packages.\nOverview\n\nCHANGELOG\nx.ui\n\nInstallation\nMethod A: With prebuilt CSS styles\nIf you are not using scss or you just want to add styles without hassle, just add this css to your index.html:\nMethod B: Custom Styles with SCSS\nIf you want to use your own styles, you can use scss to import and build the styles with x.ui:\n1. Install package\nnpm install @ec.components/style --saveThis will also install x.ui.\n3. Add styles\nDetails on how to setup your config can be found in the x.ui README.\n@import 'config';\n@import '~x.ui/src/x.ui.scss';\n@import '~@ec.components/style/scss/components';\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/calendar-readme.html":{"url":"additional-documentation/readme/calendar-readme.html","title":"additional-page - calendar README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/calendar\nThis package provides calendar and date components as part of ec.components.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/calendar --save2. Add Module\nimport { CalendarModule } from '@ec.components/calendar';\n\n@NgModule({\n  imports: [\n    CalendarModule\n  ]\n})\nexport class AppModule {\n}3. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/location-readme.html":{"url":"additional-documentation/readme/location-readme.html","title":"additional-page - location README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/location\nThis package wraps the angular-google-maps to be suitable for forms.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/location --save2. Add Module\nimport { LocationModule } from '@ec.components/location';\n\n@NgModule({\n  imports: [\n    LocationModule\n  ]\n})\nexport class AppModule {\n}3. Use it as default input for location fields\n  constructor(private typeConfig: TypeConfigService) {\n    this.typeConfig.set('location', {\n      input: LocationPickerComponent\n    });\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/ace-readme.html":{"url":"additional-documentation/readme/ace-readme.html","title":"additional-page - ace README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ace\nThis package wraps the ace editor as an Angular Component.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/ace --save2. Add Module\nimport { AceModule } from '@ec.components/ace';\n\n@NgModule({\n  imports: [\n    AceModule\n  ]\n})\nexport class AppModule {\n}3. Add CDN\nEither add the cdn src to your index.html:\n  \n`Or import from ace-builds (in app.module):\nimport 'ace-builds/src-noconflict/ace.js';When importing, you also need to import all extensions/modes/themes that you want to use manually.\n4. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/medium-editor-readme.html":{"url":"additional-documentation/readme/medium-editor-readme.html","title":"additional-page - medium-editor README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/medium-editor\nThis package wraps the medium-editor as an Angular Directive.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/medium-editor --save2. Add Module\nimport { MediumModule } from '@ec.components/medium-editor';\n\n@NgModule({\n  imports: [\n    MediumModule\n  ]\n})\nexport class AppModule {\n}3. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/tinymce-readme.html":{"url":"additional-documentation/readme/tinymce-readme.html","title":"additional-page - tinymce README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/tinymce\nThis package wraps the tinymce editor as an Angular Component.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/tinymce --save2. Add Module\nimport { TinymceModule } from '@ec.components/tinymce';\n\n@NgModule({\n  imports: [\n    TinymceModule\n  ]\n})\nexport class AppModule {\n}3. Add styles files to angular.json\n\"styles\": [\n  \"node_modules/tinymce/skins/lightgray/skin.min.css\",\n  \"node_modules/tinymce/skins/lightgray/content.min.css\"\n],4. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog.html":{"url":"additional-documentation/changelog.html","title":"additional-page - CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nEach package has its own changelog:\n\n@ec.components/data\n@ec.components/ui\n@ec.components/core\n@ec.components/calendar\n@ec.components/style\n@ec.components/ace\n@ec.components/location\n@ec.components/medium-editor\n@ec.components/tinymce\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/data-changelog.html":{"url":"additional-documentation/changelog/data-changelog.html","title":"additional-page - data CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.48.6 (2019-05-24)\nNote: Version bump only for package @ec.components/data\n0.48.5 (2019-05-24)\nNote: Version bump only for package @ec.components/data\n0.48.4 (2019-05-24)\nBug Fixes\n\ndisabled state for select inputs (ac83326)\nmissing readonly states (52dc850)\n\n0.48.3 (2019-05-24)\nBug Fixes\n\nEDITOR-364 (62162b7)\n\n0.48.2 (2019-05-03)\nBug Fixes\n\njson + location now really reverted (3fe4aaf)\n\n0.48.1 (2019-05-03)\nBug Fixes\n\njson + location (01d1130)\n\n0.48.0 (2019-05-03)\nBug Fixes\n\ncan now edit json + location (388924d)\n\nFeatures\n\nbeforeSave for entry fields (846039a)\ncan now set different purpose components (2d2e536)\n\n0.47.9 (2019-05-03)\nBug Fixes\n\nCOM-259 boolean readonly (cb43986)\nEDITOR-348 (336ba95)\ntag select EDITOR-343 (7dcaf42)\n\n0.47.8 (2019-04-26)\nBug Fixes\n\ncreator filter + resource-select focus (b461540)\n\n0.47.7 (2019-04-26)\nBug Fixes\n\nEDITOR-293 (b900b38)\n\n0.47.6 (2019-04-26)\nBug Fixes\n\ngetAccount would crash without _api (a2b4ace)\n\n0.47.5 (2019-04-26)\nNote: Version bump only for package @ec.components/data\n0.47.4 (2019-04-12)\nBug Fixes\n\nEDITOR-293 (bd766bf)\nEDITOR-330 => ids are now filterable (ee3518f)\npublic user auth flow after sdk update (efa26a0)\n\n0.47.3 (2019-04-08)\nNote: Version bump only for package @ec.components/data\n0.47.2 (2019-04-05)\nBug Fixes\n\nremove log (45b12e4)\n\n0.47.1 (2019-04-05)\nBug Fixes\n\nadd creator + fixed extending inputs (0dd22f6)\n\n0.47.0 (2019-04-05)\nFeatures\n\nnow showing copyable system fields (5af4631)\n\n0.46.8 (2019-04-05)\nNote: Version bump only for package @ec.components/data\n0.46.7 (2019-04-05)\nNote: Version bump only for package @ec.components/data\n0.46.6 (2019-04-01)\nNote: Version bump only for package @ec.components/data\n0.46.5 (2019-03-29)\nNote: Version bump only for package @ec.components/data\n0.46.4 (2019-03-29)\nNote: Version bump only for package @ec.components/data\n0.46.3 (2019-03-29)\nBug Fixes\n\nshowHeader back to list template (ea4ba17)\n\n0.46.2 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nrevert test task running (cbe9627)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.46.2 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.46.1 (2019-03-29)\nBug Fixes\n\ncircular dependency in resource-config (d8ad11d)\n\n0.46.0 (2019-03-29)\nBug Fixes\n\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\nno default filter for tag-select (dd83e20)\nremove model config cache after sdk fix (2e97a10)\nresource-pop hasMethod could throw error (7f99383)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\nadded dropdownFields option to CrudConfig (0256008)\n\n0.45.6 (2019-03-22)\nBug Fixes\n\nmodel config is now only requested once (a542c43)\nnow using sdk 0.18.7 (ac3bb86)\n\n0.45.5 (2019-03-22)\nBug Fixes\n\nentry-list-select undefined array (bc9bb53)\npass readOnly + config to asset-select (b7d33e2)\n\n0.45.4 (2019-03-14)\nBug Fixes\n\nEDITOR-277 + started COM-237 (b5a578d)\n\n0.45.3 (2019-03-08)\nNote: Version bump only for package @ec.components/data\n0.45.2 (2019-03-01)\nBug Fixes\n\nadd resource-list to data public_api (2b0b354)\n\n0.45.1 (2019-02-25)\nNote: Version bump only for package @ec.components/data\n0.45.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.44.2 (2019-02-15)\nBug Fixes\n\nresource-select focus searchbar + fire editItem if puttable (b2cf446)\n\n0.44.1 (2019-02-15)\nBug Fixes\n\ntypo in resource-select (4650da9)\n\n0.44.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.43.10 (2019-02-15)\nNote: Version bump only for package @ec.components/data\n0.43.9 (2019-02-15)\nBug Fixes\n\nresource-select config merging + ec-output-tags are now oneline (c483625)\n\n0.43.8 (2019-02-08)\nBug Fixes\n\nfixed asset-list-pop search + set inital size to 24 (651f1de)\n\n0.43.7 (2019-02-04)\nBug Fixes\n\nresource-select stop propagation on item click (68f12f5)\n\n0.43.6 (2019-02-04)\nBug Fixes\n\nresource-select click item (42301aa)\n\n0.43.5 (2019-02-04)\nBug Fixes\n\ncan now set itemClick in field config + fix resouce-select config (9e23457)\n\n0.43.4 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.43.3 (2019-02-01)\nBug Fixes\n\nresource-select#togglePop now really fixed (8abc48b)\n\n0.43.2 (2019-02-01)\nNote: Version bump only for package @ec.components/data\n0.43.1 (2019-02-01)\nBug Fixes\n\nresource-select#togglePop (79c1a6d)\n\n0.43.0 (2019-02-01)\nFeatures\n\nResourceConfig#set (ba52443)\n\n0.42.16 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.15 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.14 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.13 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.12 (2019-01-28)\nBug Fixes\n\nadd missing exports (d7fa72b)\n\n0.42.11 (2019-01-25)\nBug Fixes\n\nlanguage imports (6e961b8)\n\n0.42.10 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.9 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.8 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.7 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.6 (2019-01-21)\nNote: Version bump only for package @ec.components/data\n0.42.5 (2019-01-21)\nNote: Version bump only for package @ec.components/data\n0.42.4 (2019-01-21)\nBug Fixes\n\nauth.service clientID check + removed broadcast load on env switch (def9084)\ncalling entry-pop create twice would edit the first entry (d5dc292)\nclear searchbar when changing asset group (1cfc328)\nclientID if statement (43c7da5)\nconfig generation for empty forms was bugged since last commit (789e7ca)\ncould not define custom components for entry field types (0b433be)\ncould not pass config to entry-list seperately (4a14246)\ncould not set custom asset list config (06b615c)\ndndDraggable stringify error (a992381)\nEDITOR-187 (de51159)\nendless ecEntries could concat same page multiple times (fed2c52)\nentry-list.component (431e3fd)\nfiles index (bcbefd1)\nfilterOperators of entry and asset + default filterPopClass of nested types is now modal (9e671b9)\nfocus asset list pop searchbar when changing group (24868b9)\nform without config would bug (5892365)\ngroup resource-config (020e689)\nlinter bug (b4d03eb)\nModelConfigService now using CrudConfig instead of ItemConfig (eb506da)\nnew assets on entry create + removed hacks from input.component (04fffbd)\nparseType would not recognize relations with \"-\" (a08a9d6)\nquery could be overwritten while typing + fixed asset select (1c382d1)\nrelative path in data.module (fcfdf32)\nremoveItem still activated entry-select + entry-select demo (364482b)\nresource-list.component (2826ac4)\nselect assetGroup if legacyAsset and url upload (7580583)\nselection was broken for ec-entry-select list (121566c)\nstop select pop event bubbling + selectMode in select component (47a7930)\ntodos (9bf067d)\nwhen using objects as prefill, the next prefilled value would return the reference of the one before (c89591a)\nwrong method reference (f3590a7)\n\nFeatures\n\nsdk changesEnvironment + resource service env update broadcast (ad58c68)\nsearchbar, ecFocus + added searchbar to asset-list-pop (8236caf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/ui-changelog.html":{"url":"additional-documentation/changelog/ui-changelog.html","title":"additional-page - ui CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.43.4 (2019-05-24)\nBug Fixes\n\nCOM-259 (b6ec56b)\n\n0.43.3 (2019-05-24)\nBug Fixes\n\nconnect disabled state COM-259 (bbe7ba3)\n\n0.43.2 (2019-05-24)\nBug Fixes\n\ndisabled state for select inputs (ac83326)\nmissing readonly states (52dc850)\n\n0.43.1 (2019-05-24)\nBug Fixes\n\nEDITOR-363 (80eecab)\n\n0.43.0 (2019-05-03)\nFeatures\n\ncan now seperate inputView and outputView (2e0756e)\ncan now set different purpose components (2d2e536)\n\n0.42.5 (2019-05-03)\nBug Fixes\n\nCOM-259 boolean readonly (cb43986)\n\n0.42.4 (2019-04-26)\nBug Fixes\n\nCOM-261 (af10188)\ntab routing EDITOR-267 (b0c6065)\n\n0.42.3 (2019-04-12)\nBug Fixes\n\nEDITOR-330 => ids are now filterable (ee3518f)\n\n0.42.2 (2019-04-08)\nNote: Version bump only for package @ec.components/ui\n0.42.1 (2019-04-05)\nBug Fixes\n\nadd creator + fixed extending inputs (0dd22f6)\n\n0.42.0 (2019-04-05)\nFeatures\n\nadded keycommands service (80b8030)\nnow showing copyable system fields (5af4631)\n\n0.41.6 (2019-04-05)\nBug Fixes\n\nselect readonly input (77a8486)\n\n0.41.5 (2019-04-01)\nNote: Version bump only for package @ec.components/ui\n0.41.4 (2019-03-29)\nBug Fixes\n\nadd titles with original field names (0dbce91)\n\n0.41.3 (2019-03-29)\nBug Fixes\n\nset form true in list header (7664cb2)\nset immutable false for filtering (8ab4791)\n\n0.41.2 (2019-03-29)\nBug Fixes\n\nshowHeader back to list template (ea4ba17)\n\n0.41.1 (2019-03-29)\nBug Fixes\n\ndesc/asc icon reversed in field dropdown (add3ee6)\nrevert test task running (cbe9627)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.41.1 (2019-03-29)\nBug Fixes\n\ndesc/asc icon reversed in field dropdown (add3ee6)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.41.0 (2019-03-29)\nBug Fixes\n\nformControl Input for select (bcbbc51)\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\nlist-header: could not retoggle list-filter (041cd83)\nrxjs throwError import (c0c7f17)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\nhideOnEscape option for pop (7d50c5f)\nready emitter for input component (e2bbf1a)\nreworked list-header (ea24c06)\n\n0.40.0 (2019-03-22)\nBug Fixes\n\nEDITOR-289 list-header filter inputs autofocus (9915311)\n\nFeatures\n\nDefaultEntryInputComponent#autofocus (cea52fc)\nField#autofocus + InputComponent#focus (8f56fb2)\n\n0.39.3 (2019-03-14)\nBug Fixes\n\nEDITOR-277 + started COM-237 (b5a578d)\n\n0.39.2 (2019-03-08)\nBug Fixes\n\nCOM-232 datetime safari cursor jump issue of death (0777809)\n\n0.39.1 (2019-03-01)\nBug Fixes\n\nadded lazy option for new input/form behaviour (878e9df)\n\n0.39.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.38.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.37.4 (2019-02-15)\nNote: Version bump only for package @ec.components/ui\n0.37.3 (2019-02-15)\nNote: Version bump only for package @ec.components/ui\n0.37.2 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.37.1 (2019-02-01)\nBug Fixes\n\ndefault input config to empty object (46d4a1f)\n\n0.37.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\nnow passing field config to input component (25a36aa)\n\n0.36.15 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.14 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.13 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.12 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.11 (2019-01-28)\nBug Fixes\n\nadd missing exports (d7fa72b)\n\n0.36.10 (2019-01-25)\nBug Fixes\n\nlanguage imports (6e961b8)\n\n0.36.9 (2019-01-25)\nBug Fixes\n\nnow exporting languages by name (7733151)\n\n0.36.8 (2019-01-25)\nBug Fixes\n\nexport de + en from ui package barrel (c950461)\n\n0.36.7 (2019-01-25)\nNote: Version bump only for package @ec.components/ui\n0.36.6 (2019-01-21)\nNote: Version bump only for package @ec.components/ui\n0.36.5 (2019-01-21)\nNote: Version bump only for package @ec.components/ui\n0.36.4 (2019-01-21)\nBug Fixes\n\nclear searchbar when changing asset group (1cfc328)\ncontrol binding (fd41ccc)\ndndDraggable stringify error (a992381)\ndynamic-slot make inject public to be able to call super (b7460e6)\nec-input bug (1d9e231)\nfilterOperators of entry and asset + default filterPopClass of nested types is now modal (9e671b9)\nfirst tab selection was throwing an error (50e2d98)\nfocus asset list pop searchbar when changing group (24868b9)\nform.create would not reinstantiate with config being undefined (f7b65f4)\ninit control in input.component (3fb8f47)\nlint errors (1cb8b1c)\nlinter errors (70d5e24)\nnew assets on entry create + removed hacks from input.component (04fffbd)\nonly show size select if total>0 (7a88da8)\nquery could be overwritten while typing + fixed asset select (1c382d1)\nstop select pop event bubbling + selectMode in select component (47a7930)\ntodos (9bf067d)\nwrong import (b760780)\n\nFeatures\n\nsearchbar, ecFocus + added searchbar to asset-list-pop (8236caf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/core-changelog.html":{"url":"additional-documentation/changelog/core-changelog.html","title":"additional-page - core CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.26.0 (2019-05-03)\nFeatures\n\nbeforeSave for entry fields (846039a)\ncan now set different purpose components (2d2e536)\n\n0.25.2 (2019-04-12)\nBug Fixes\n\nEDITOR-330 => ids are now filterable (ee3518f)\n\n0.25.1 (2019-04-05)\nBug Fixes\n\nadd creator + fixed extending inputs (0dd22f6)\n\n0.25.0 (2019-04-05)\nFeatures\n\nnow showing copyable system fields (5af4631)\n\n0.24.3 (2019-04-01)\nNote: Version bump only for package @ec.components/core\n0.24.2 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.24.1 (2019-03-29)\nNote: Version bump only for package @ec.components/core\n0.24.0 (2019-03-29)\nBug Fixes\n\nkeep list header filter form immutable (6f53065)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\ndefaultFilter setting for listConfig (efb984e)\n\n0.23.0 (2019-03-22)\nFeatures\n\nField#autofocus + InputComponent#focus (8f56fb2)\n\n0.22.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.21.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.20.2 (2019-02-15)\nNote: Version bump only for package @ec.components/core\n0.20.1 (2019-02-15)\nNote: Version bump only for package @ec.components/core\n0.20.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\n\n0.19.12 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.11 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.10 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.9 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.8 (2019-01-25)\nNote: Version bump only for package @ec.components/core\n0.19.7 (2019-01-21)\nNote: Version bump only for package @ec.components/core\n0.19.6 (2019-01-21)\nBug Fixes\n\nlinter errors (70d5e24)\nselection has + docs (e8b0e49)\nselection.toggle would emit change twice sometimes (b3e8115)\ntodos (9bf067d)\nwhen using objects as prefill, the next prefilled value would return the reference of the one before (c89591a)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/style-changelog.html":{"url":"additional-documentation/changelog/style-changelog.html","title":"additional-page - style CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.22.7 (2019-05-03)\nNote: Version bump only for package @ec.components/style\n0.22.6 (2019-04-01)\nNote: Version bump only for package @ec.components/style\n0.22.5 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.22.4 (2019-03-29)\nNote: Version bump only for package @ec.components/style\n0.22.3 (2019-03-29)\nBug Fixes\n\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\n\n0.22.2 (2019-02-15)\nBug Fixes\n\nresource-select config merging + ec-output-tags are now oneline (c483625)\n\n0.22.1 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.22.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\n\n0.21.6 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.5 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.4 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.3 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.2 (2019-01-25)\nNote: Version bump only for package @ec.components/style\n0.21.1 (2019-01-21)\nNote: Version bump only for package @ec.components/style\n0.21.0 (2019-01-21)\nBug Fixes\n\nadded optional to btn._clear extension (373bebf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/calendar-changelog.html":{"url":"additional-documentation/changelog/calendar-changelog.html","title":"additional-page - calendar CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.2.17 (2019-05-24)\nBug Fixes\n\nmissing readonly states (52dc850)\n\n0.2.16 (2019-05-03)\nNote: Version bump only for package @ec.components/calendar\n0.2.15 (2019-04-08)\nBug Fixes\n\nEDITOR-229 (b603867)\n\n0.2.14 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.2.14 (2019-03-29)\nNote: Version bump only for package @ec.components/calendar\n0.2.13 (2019-03-08)\nBug Fixes\n\nCOM-232 datetime safari cursor jump issue of death (0777809)\nCOM-255 (ac4aec3)\n\n0.2.12 (2019-02-15)\nNote: Version bump only for package @ec.components/calendar\n0.2.11 (2019-02-15)\nNote: Version bump only for package @ec.components/calendar\n0.2.10 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.9 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.8 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.7 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.6 (2019-01-25)\nNote: Version bump only for package @ec.components/calendar\n0.2.5 (2019-01-21)\nNote: Version bump only for package @ec.components/calendar\n0.2.4 (2019-01-21)\nNote: Version bump only for package @ec.components/calendar\n0.2.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/location-changelog.html":{"url":"additional-documentation/changelog/location-changelog.html","title":"additional-page - location CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.18.15 (2019-05-03)\nNote: Version bump only for package @ec.components/location\n0.18.14 (2019-04-26)\nBug Fixes\n\nlocation picker spec (65fa558)\nlocation-picker keycommands injection (600d7ac)\n\n0.18.13 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nrevert test task running (cbe9627)\n\n0.18.13 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\n\n0.18.12 (2019-02-25)\nNote: Version bump only for package @ec.components/location\n0.18.11 (2019-02-15)\nNote: Version bump only for package @ec.components/location\n0.18.10 (2019-02-15)\nNote: Version bump only for package @ec.components/location\n0.18.9 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.8 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.7 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.6 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.5 (2019-01-25)\nNote: Version bump only for package @ec.components/location\n0.18.4 (2019-01-21)\nNote: Version bump only for package @ec.components/location\n0.18.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/ace-changelog.html":{"url":"additional-documentation/changelog/ace-changelog.html","title":"additional-page - ace CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.6.14 (2019-05-03)\nNote: Version bump only for package @ec.components/ace\n0.6.13 (2019-04-26)\nBug Fixes\n\nace test (95f8cc1)\n\n0.6.12 (2019-03-29)\nBug Fixes\n\nace ui dependency (cd90ef7)\nrevert test task running (cbe9627)\n\n0.6.12 (2019-03-29)\nNote: Version bump only for package @ec.components/ace\n0.6.11 (2019-02-15)\nNote: Version bump only for package @ec.components/ace\n0.6.10 (2019-02-15)\nNote: Version bump only for package @ec.components/ace\n0.6.9 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.8 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.7 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.6 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.5 (2019-01-25)\nNote: Version bump only for package @ec.components/ace\n0.6.4 (2019-01-21)\nNote: Version bump only for package @ec.components/ace\n0.6.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/medium-editor-changelog.html":{"url":"additional-documentation/changelog/medium-editor-changelog.html","title":"additional-page - medium-editor CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.4.13 (2019-05-03)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.12 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.4.12 (2019-03-29)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.11 (2019-02-15)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.10 (2019-02-15)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.9 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.8 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.7 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.6 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.5 (2019-01-25)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.4 (2019-01-21)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/tinymce-changelog.html":{"url":"additional-documentation/changelog/tinymce-changelog.html","title":"additional-page - tinymce CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.5.14 (2019-05-03)\nNote: Version bump only for package @ec.components/tinymce\n0.5.13 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.5.13 (2019-03-29)\nNote: Version bump only for package @ec.components/tinymce\n0.5.12 (2019-02-15)\nNote: Version bump only for package @ec.components/tinymce\n0.5.11 (2019-02-15)\nNote: Version bump only for package @ec.components/tinymce\n0.5.10 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.9 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.8 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.7 (2019-01-28)\nBug Fixes\n\ntinymce fix version 4.7.4 due to angular-cli/issues/11041 (b365847)\n\n0.5.6 (2019-01-25)\nNote: Version bump only for package @ec.components/tinymce\n0.5.5 (2019-01-25)\nNote: Version bump only for package @ec.components/tinymce\n0.5.4 (2019-01-21)\nNote: Version bump only for package @ec.components/tinymce\n0.5.3 (2019-01-21)\nBug Fixes\n\ncould not writeValue before init component (00a2e2e)\ntinyMCE promise error (8fab72f)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/adding-new-packages.html":{"url":"additional-documentation/adding-new-packages.html","title":"additional-page - Adding New Packages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a new Package in 10 easy steps\nThe following steps need to be done to generate a new library that is standards compliant.\nJust replace the example name \"data\" with the new package name.\n1. Run CLI command to generate a new library\nng generate library data -p ecThis will create a new folder under packages/ (see newProjectRoot in angular.json).\n2. Prefix packages/data/package.json#name with @ec.components\nalso make sure the version is correct\n3. Prefix root tsconfig.json paths \"data\" and \"data/*\" with @ec.components\nalso change value to \"packages/data/dist/*\"\n4. Move src files to packages/data/lib\n5. add dependencies (e.g. ec.sdk) to both root and lib package.json\n6. add whitelistedNonPeerDependencies and dest to ng-package.json\n  \"dest\": \"./dist\",\n  \"whitelistedNonPeerDependencies\": [\n    \".\"\n  ]7. fix relative imports\nimport { Notification } from '../../../../ui/src/notifications/notification';\nimport { WithNotifications } from '../../../../ui/src/notifications/with-notifications.interface';\n// replace with\nimport { WithNotifications, Notification } from '@ec.components/ui';8. fix rxjs imports\nimport { Subject } from 'rxjs/Subject';\n// to\nimport { Subject } from 'rxjs';9. fix other lint errors like semicolon stuff\nbuild it\nng build datarun yarn to link dist/data to node_modules\n10. add dependency to root package.json\n11. add CHANGELOG.md of package to summary.json (like others)\n11. add link to package changelog page to CHANGELOG.md (like others)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/stackblitz.html":{"url":"additional-documentation/stackblitz.html","title":"additional-page - Stackblitz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStackblitz Demos\n\nCreate Angular Stackblitz\nimport styles to index.html:\n\n\n\nAdd @ec.components package(s):\n\n\"@ec.components/calendar\": \"^0.2.6\",\n/** any other components module */\nimport module(s):\n\nimport { CalendarModule } from '@ec.components/calendar';\n@NgModule({\n  imports:      [ /* .. */ CalendarModule ],\n  /* ... */\n})\nexport class AppModule { }\nuse component(s) in app.component.html:\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/publishing.html":{"url":"additional-documentation/publishing.html","title":"additional-page - Publishing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
