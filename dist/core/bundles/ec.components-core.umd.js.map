{"version":3,"file":"ec.components-core.umd.js.map","sources":["ng://@ec.components/core/lib/collection/collection.ts","ng://@ec.components/core/lib/field/field.ts","ng://@ec.components/core/lib/config/config.ts","node_modules/tslib/tslib.es6.js","ng://@ec.components/core/lib/item/item.ts","ng://@ec.components/core/lib/form/form.ts","ng://@ec.components/core/lib/pagination/pagination.ts","ng://@ec.components/core/lib/sorter/sorter.ts","ng://@ec.components/core/lib/list/list.ts","ng://@ec.components/core/lib/selection/selection.ts"],"sourcesContent":["import { Observable, Subject } from 'rxjs';\n\n/**\n * A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n */\nexport class Collection<T> {\n  /**\n   * The items must all have the same type T.\n   */\n  public items: Array<T>;\n  /** Subject that is nexted when the items update */\n  protected update: Subject<Collection<T>> = new Subject();\n  /** Subject that is nexted when the items change */\n  public update$: Observable<Collection<T>> = this.update.asObservable();\n\n  /**\n   * Constructs the collection with the given item Array (optional).\n   * @example\n   * ```typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   * ```\n   */\n  constructor(items: Array<T> = []) {\n    this.items = [];\n    items.forEach((item) => {\n      this.items.push(item);\n    });\n  }\n\n  /** Returns the index of the given item */\n  index(item: T): number {\n    return this.items.indexOf(item);\n  }\n\n  /**\n   * Checks if the Collection contains the given item.\n   * @example\n   * ```typescript\n   * numbers.has(2); //true\n   * ```\n   */\n  has(item: T): boolean {\n    return this.index(item) !== -1;\n  }\n\n  /**\n   * Checks if the Collection contains all given items.\n   * @example\n   * ```typescript\n   * numbers.has([1,2]); //true\n   * ```\n   */\n  hasAll(items: Array<T> = []): boolean {\n    if (items === null) {\n      // console.warn('has all fail', this, items);\n      return false;\n    }\n    return items.reduce((has, item) => {\n      return has && this.has(item);\n    }, true);\n  }\n\n  /**\n   * Adds the given item to the Collection. If the unique flag is set, the item will only be added\n   * if it is not contained.\n   * @example\n   * ```typescript\n   * numbers.add(4);\n   * ```\n   */\n  add(item: T, unique?: boolean, event: boolean = true) {\n    if (unique && this.has(item)) {\n      return false;\n    }\n    this.items.push(item);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Adds the given items to the Collection. If the unique flag is set, only items that are not\n   * contained will be added.\n   * @example\n   * ```typescript\n   * numbers.addAll([5, 6, 7]);\n   * ```\n   */\n  addAll(items: Array<T> = [], unique: boolean = false, event: boolean = true) {\n    const length = this.items.length;\n    items.forEach((item) => {\n      this.add(item, unique, false);\n    });\n    if (this.items.length > length && event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes the given item from the Collection.\n   * @example\n   * ```typescript\n   * numbers.remove(4);\n   * ```\n   */\n  remove(item: T, event: boolean = true) {\n    if (!this.has(item)) {\n      return false;\n    }\n    this.items.splice(this.index(item), 1);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes all items from the Collection.\n   * @example\n   * ```typescript\n   * numbers.removeAll();\n   * ```\n   */\n  removeAll(items?: Array<T>, event: boolean = true) {\n    const length = this.items.length;\n    if (items) {\n      items.forEach((item) => {\n        this.remove(item, false);\n      });\n    } else {\n      this.items.length = 0;\n    }\n    if (this.items.length < length && event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Toggles the item in and out of collection */\n  toggle(item: T, event: boolean = true) {\n    if (this.has(item)) {\n      this.remove(item, event);\n    } else {\n      this.add(item, event);\n    }\n  }\n\n  /** Replaces all current items with the given items. */\n  replaceWith(items: Array<T>, event: boolean = true) {\n    if (this.items && this.items.length) {\n      this.removeAll(undefined, false);\n    }\n    if (items.length) {\n      this.addAll(items, false, false);\n    }\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Returns true if the collection is empty */\n  isEmpty() {\n    return this.items.length === 0;\n  }\n\n  /** Moves the given item to the given array index. */\n  move(item: T, index: number, event: boolean = true) {\n    if (!this.has(item) || this.items.indexOf(item) === index) {\n      return;\n    }\n    this.items.splice(index, 0, this.items.splice(this.items.indexOf(item), 1)[0]);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n}\n","/** A Field acts as a property of an Item. It holds a single Property config. */\n\nimport { FieldConfigProperty } from '../config/field-config-property.interface';\n\nexport class Field implements FieldConfigProperty {\n  /** Tells if the field is required in forms */\n  required?: boolean;\n  /** The name of the field's property */\n  property?: string;\n  /** If true, the field will not be visible anywhere */\n  hidden?: boolean;\n  /** The field's type */\n  type?: string;\n  /** The field's view */\n  view?: string;\n  /** Custom Validation function */\n  validate?: (value, field) => any;\n  /** Custom Component to display form input **/\n  input?: any;\n  /** Custom Component to display value **/\n  output?: any;\n  /** Placeholder in inputs */\n  placeholder?: string;\n  /** Label for Inputs. Defaults to property name. If false, the label is empty. */\n  label?: string | boolean;\n  /** The operator to use for filtering: exact, search, any etc.. see ec.sdk doc */\n  filterOperator?: string;\n  /** Defines the class for the filter pop, e.g. in list header. */\n  filterPopClass?: string;\n  /** Wether or not the field should appear in default forms */\n  form?: boolean;\n  /** Possible Values e.g. in a select */\n  values: any[] = [];\n  /** Class string */\n  class = '';\n  /** id for form labels */\n  id: string;\n  /** if false, the field will not be sortable in a list */\n  sortable?: boolean;\n  /** if false, the field will not be filterable in a list */\n  filterable?: boolean;\n  /** Defines the maximum of visible item (for tags view or similar). Defaults to 10 */\n  maxItems?: number;\n  /** Icon name that should be associated with the field */\n  icon?: string;\n  /** wildcard for custom config values */\n  [key: string]: any;\n\n  /** A Field is constructed by assigning the given config and the property to itself*/\n  constructor(property: string, config: FieldConfigProperty) {\n    if (config) {\n      Object.assign(this, config);\n    }\n    Object.assign(this, { property: property });\n    this.id = `${this.property}_${Date.now()}`;\n  }\n\n  /** Returns placeholder if any */\n  getPlaceholder() {\n    return this.placeholder || this.label || this.property;\n  }\n  /** Returns the column class for data-col, based on configured columns */\n  getColumns() {\n    return (this.columns || 12) + '-sm';\n  }\n}\n","/** The Root class for all Configurations. */\nexport abstract class Config {\n  // TODO use Map !!!! (like simi did in EventEmitter.ts)\n  /** The config object. */\n  private config: {\n    [key: string]: Object,\n  } = {};\n\n  /** This method is a getter and setter for configurations. The key stands for the config (e.g. model).\n   * The property is a sub property if the config (e.g. fields => model.fields).\n   * If no config is given, the method just returns the configuration for the given property.\n   * If a config is given, the property config is merged via Object.assign. */\n  public configure?(key: string, property: string, config?: Object) {\n    if (!this.config[key]) {\n      this.config[key] = {};\n    }\n    if (!config) {\n      return this.config[key][property];\n    }\n    if (!this.config[key][property]) {\n      this.config[key][property] = {};\n    }\n    Object.assign(this.config[key][property], config);\n    return this;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ItemConfig } from './item-config.interface';\n\n/** An Item basically wraps an Object and provides a config with metadata and helper methods to access the object. */\nexport class Item<T> {\n  /** The value body of the item. This can be either a primitive value or an Object. */\n  public body: T;\n  /** The config of the item. */\n  public config: ItemConfig<T>;\n\n  /** Each item is constructed with its body and an optional config. */\n  constructor(body: T, config: ItemConfig<T> = {}) {\n    this.body = body;\n    this.config = config || this.generateConfig();\n  }\n\n  /** Generates a config from the body by setting view to the properties type. */\n  protected generateConfig(): ItemConfig<T> {\n    const config = { fields: {} };\n    if (this.body === undefined) {\n      return config;\n    }\n    this.getProperties().forEach((property) => {\n      config.fields[property] = {\n        view: typeof this.body[property],\n        type: typeof this.body[property],\n      };\n      if (config.fields[property].view === 'object' && Array.isArray(this.body[property])) {\n        config.fields[property].view = 'array';\n        config.fields[property].values = this.body[property];\n        // config.fields[property].solo = true;\n      }\n    });\n    return config;\n  }\n\n  /** Returns the item's body */\n  getBody() {\n    return this.body;\n  }\n\n  /** Returns true if the body is defined and not null*/\n  hasBody() {\n    return this.body !== undefined && this.body !== null;\n  }\n\n  /** deletes the item body */\n  clear() {\n    delete this.body;\n  }\n\n  /** Assigns the given config to the existing via Object.assign */\n  useConfig(config: ItemConfig<T>) {\n    this.config = (<any>Object).assign(this.config, config);\n  }\n\n  /** Returns the item's config */\n  getConfig() {\n    return this.config;\n  }\n\n  /** Returns an Array of properties possessed by the body. */\n  getProperties(): Array<string> {\n    if (!this.body || typeof this.body !== 'object') {\n      if (typeof this.body !== 'object') {\n        return [this.config && this.config.title ? this.config.title : 'body'];\n      }\n      return [];\n    }\n    return Object.keys(this.body);\n  }\n\n  /** Returns the value of the the Item's identifier property. */\n  id(): any {\n    if (!this.config.identifier) {\n      throw new Error('cannot get id of item without identifier!');\n    }\n    return this.resolve(this.config.identifier);\n  }\n\n  /** Returns either the whole body (if no property is given) or the value of the given property.\n   * This method will traverse the body via the config.resolve function (if given). */\n  resolve(property?: string): any {\n    if (!this.hasBody()) {\n      return;\n    }\n    if (typeof this.body !== 'object') {\n      return this.body;\n    }\n    if (!this.config) {\n      return property ? this.body[property] : this.body;\n    }\n    if (!property) {\n      if (this.config.resolve) {\n        return this.config.resolve(this.body);\n      }\n      return this.body;\n    }\n    if (this.config.fields && this.config.fields[property] && this.config.fields[property].resolve) {\n      return this.config.fields[property].resolve(this.body, this, property);\n    }\n    if (!this.config.resolve) {\n      return this.body[property];\n    }\n    const v = this.config.resolve(this.body);\n    return v ? v[property] : null;\n  }\n\n  /** The main method for transformation functions like resolve, display and group.\n   * If you dont set the third parameter, the current item value will be used.\n   * The third parameter can be used to transform a value that is not yet possesed (e.g. to\n   * serialize) */\n  private transform(action: string, property: string, value: any = this.resolve(property), defaultValue: any = this.resolve(property)) {\n    if (!this.hasBody()) {\n      return;\n    }\n    if (this.config.fields && this.config.fields[property] && this.config.fields[property][action]) {\n      return this.config.fields[property][action](value, this.body, property);\n    }\n    return defaultValue;\n  }\n\n  /** Returns the output of the config.group transformation function with the given property value.\n   * If no group function is set, it will just return the property value.*/\n  group(property: string): any {\n    return this.transform('group', property);\n  }\n\n  /** If no property given: Returns the output of the config.classes method or ''.\n   * If property given: Returns the output of the config.fields[property].classes method or '' */\n  classes(property?: string): string {\n    if (property) {\n      return this.transform('classes', property, this.resolve(property), '') || '';\n    }\n    if (!this.config || !this.config.classes) {\n      return '';\n    }\n    return this.config.classes(this);\n  }\n\n  /** Returns the output of the config.display transformation function with the given property value.\n   * If no display function is set, it will just return the property value.*/\n  display(property?: string): any {\n    if (!property) {\n      return this.transform('display', this.config.label || this.getProperties()[0]); // Object.keys(this.resolve())[0]\n    }\n    return this.transform('display', property);\n  }\n\n  /** Transforms the given field's value for sorting */\n  sort(property: string): any {\n    return this.transform('sort', property);\n  }\n\n  /** Returns value with all readOnly properties removed */\n  pickWriteOnly(value = this.body) {\n    return (<any>Object).assign({}, ...Object.keys(value)\n      .map(property => {\n        if (this.config.fields[property].readOnly) {\n          return;\n        }\n        return { [property]: value[property] };\n      }).filter(v => !!v));\n\n  }\n\n  isImmutableProperty(property: string): boolean {\n    if (this.config && this.config.fields && this.config.fields[property] && typeof this.config.fields[property].immutable === 'function') {\n      return this.config.fields[property].immutable(this);\n    }\n    return this.config.fields[property].immutable;\n  }\n\n  deleteImmutableProperties(value: Object = this.body) {\n    Object.keys(this.config.fields).forEach(property => {\n      if (value.hasOwnProperty(property) && this.isImmutableProperty(property)) {\n        delete value[property];\n      }\n    });\n  }\n\n  /** Transforms the given field's value for serialization when saving. */\n  serialize(value, put: boolean = false): any {\n    if (put) {\n      value = this.pickWriteOnly(value);\n    }\n    this.deleteImmutableProperties(value);\n    /** Run the remaining properties through serializers */\n    Object.keys(value).map((property) => {\n      (<any>Object).assign(value, {\n        [property]: this.transform('serialize', property, value[property]) // TODO: fix\n      });\n    });\n    return value;\n\n    /** Run the remaining properties through serializers */\n    /*return Object.keys(value).reduce((serialized, property) => {\n      return Object.assign(serialized, {\n        [property]: this.transform('serialize', property, value[property])\n      });\n    }, {});*/\n  }\n\n  /** Saves the given value. Run serializers before assigning the new value. */\n  save(value: T = this.body): Promise<Item<T>> {\n    if (this.config.onSave) {\n      return Promise.resolve(this.config.onSave(this, value))\n        .then((_value: T) => {\n          this.body = _value;\n          return this;\n        });\n    }\n    this.body = (<any>Object).assign(this.resolve() || {}, value);\n    return Promise.resolve(this);\n  }\n  /** Action method that is meant to be called on a button click or similar.\n   * Calls the config#action method with the item and the property name */\n  action(property, e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.config.fields[property].action) {\n      this.config.fields[property].action(this, property);\n    }\n  }\n}\n","/** A Form is an extension of an Item. In advance to an Item it will create an Array of fields that is either extracted\n * from config.fields or directly from the item body. */\n\nimport { FieldConfigProperty } from '../config/field-config-property.interface';\nimport { Field } from '../field/field';\nimport { Item } from '../item/item';\nimport { FormConfig } from './form-config.interface';\n\n/** The Form class is an Item with additional info about its properties (Fields). */\nexport class Form<T> extends Item<T> {\n  /** Array of fields. It will be populated automatically when the form is constructed. */\n  public fields: Field[];\n  /** The configuration of the form. It is an extension of ItemConfig. */\n  public config: FormConfig<T>;\n\n  /** The constructor will populate the fields array.\n   * If config.fields is set only the configured fields will be created.\n   * If not, all properties of the given body will be used as fields. */\n  constructor(body: T, config?: FormConfig<T>) {\n    super(body, config);\n    this.fields = [];\n    if (!this.config || !this.config.fields) {\n      return;\n    }\n    Object.keys(this.config.fields)\n      .forEach((property) => {\n        this.fields.push(new Field(property, this.config.fields[property]));\n      });\n  }\n\n  /** creates and adds a single field to the form */\n  createField(property: string, config: FieldConfigProperty): Field | undefined {\n    if (!config) {\n      return;\n    }\n    if (!property) {\n      return;\n    }\n    if (this.config.fields[property]) {\n      console.error('cannot create field \"', property, '\". Property name already taken.');\n      return;\n    }\n    this.config.fields[property] = config;\n    const field = new Field(property, this.config.fields[property]);\n    this.fields = this.fields.concat([field]);\n    return field;\n  }\n\n  /** returns the field instance of the given property */\n  getField(property: string) {\n    return this.fields.find((field) => field.property === property);\n  }\n\n  /** Returns the original value of the property, if any. */\n  getValue(property: string) {\n    if (!this.body && this.config.fields && this.config.fields[property]) {\n      // If the prefill is not a primitive, return a clone to stay pristine\n      if (Array.isArray(this.config.fields[property].prefill)) {\n        return this.config.fields[property].prefill.slice(0);\n      } else if (typeof this.config.fields[property].prefill === 'object') {\n        return Object.assign({}, this.config.fields[property].prefill);\n      }\n      // if no body is present, the prefills are used\n      return this.config.fields[property].prefill;\n    } else {\n      return this.resolve(property);\n    }\n  }\n\n  /** Returns true if the form is currently in edit mode (has a body set) */\n  isEditing() {\n    return !!this.getBody();\n  }\n\n  /** Returns true if the form is currently in create mode (has not a body set) */\n  isCreating() {\n    return !this.isEditing();\n  }\n}\n","import { Subject, Observable } from 'rxjs';\nimport { ListConfig } from '../list/list-config.interface';\n\n/** This class can be used to control the loading behaviour of external data. */\nexport class Pagination<T> {\n  /** The total number of items that is being paginated. It can be changed via setTotal. */\n  protected total: number;\n  /** The pagination config */\n  protected config: ListConfig<T>;\n  /** Array to iterate over the number of pages. */\n  public pages: Array<any>;\n  /** Subject for tracking changes. */\n  private change = new Subject();\n  /** Observable that is nexted when the pagination has changed. */\n  public change$: Observable<any> = this.change.asObservable();\n\n  /** You can init each Pagination instance with an optional config.\n   * If no config is provided, it will default to ```{page: 1, size: 25}```. */\n  constructor(config?: ListConfig<T>, total?: number) {\n    this.config = { page: 1, size: 25 };\n    Object.assign(this.config, config);\n    Object.assign(this.config, {\n      availableSizes: Array.from(new Set([this.config.size]\n        .concat(this.config.availableSizes || [10, 25, 50, 100], [this.config.size])\n        .sort(((a, b) => a - b))))\n    });\n    if (total) {\n      this.setTotal(total);\n    }\n  }\n\n  /** Retrieves the current page */\n  getPage(): number {\n    return this.config.page;\n  }\n\n  /** Retrieves the number of pages */\n  getPages(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /** Loads the next page. Throws error if already on last page. */\n  next(): void {\n    if (this.isLast()) {\n      return; // already last page\n    }\n    this.config.page += 1;\n    this.load();\n  }\n\n  /** Loads the previous page. Throws error if already on first page. */\n  prev(): void {\n    if (this.isFirst()) {\n      return; // already first page\n    }\n    this.config.page -= 1;\n    this.load();\n  }\n\n  /**\n   * Sets the total number of items and calculcates the page count.\n   * */\n  setTotal(total: number) {\n    /* if (this.total !== total) {\n      this.change.next(this.config);\n    } */\n    this.total = total;\n    this.pages = new Array(Math.ceil(this.total / this.config.size));\n    if (this.config.page !== 1 && this.config.page > this.pages.length) {\n      this.config.page = this.pages.length || 1;\n      this.load();\n    }\n  }\n\n  /** Merges config and fires next on change */\n  protected load(config?: ListConfig<T>): void {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.change.next(this.config);\n  }\n\n  /** Selects the given page number */\n  select(page: number, silent = false): void {\n    if (page === this.config.page || silent) {\n      this.config.page = page;\n      return;\n    }\n    this.load({ page: page });\n  }\n\n  /** Loads the first Page */\n  first(): void {\n    this.load({ page: 1 });\n  }\n\n  /** Loads the last page */\n  last() {\n    if (!this.pages) {\n      throw new Error(`Cannot load last page without knowing the item count.\n        Call setTotal(itemCount) before loading.`);\n    }\n    this.load({ page: this.pages.length });\n  }\n\n  /** Returns true if the given page number is currently active.*/\n  isActive(page: number): boolean {\n    return this.config.page === page;\n  }\n\n  /** Returns true if the current page is the first one */\n  isFirst(): boolean {\n    return this.config.page === 1;\n  }\n\n  /** Returns true if the current page is the last one */\n  isLast(): boolean {\n    if (!this.pages) {\n      return true;\n    }\n    return this.config.page === this.pages.length;\n  }\n\n  /** slices a given array according to the current pagination state */\n  slice(items: Array<any>): Array<any> {\n    return items.slice((this.config.page - 1) * this.config.size, (this.config.page) * this.config.size);\n  }\n\n  /** Returns an object with all relevant infos about the current state of pagination */\n  params() {\n    return {\n      page: this.getPage(),\n      pages: this.getPages(),\n      total: this.total,\n      from: (this.getPage() - 1) * this.config.size + 1,\n      to: Math.min(this.getPage() * this.config.size, this.total),\n      size: this.config.size,\n      availableSizes: this.config.availableSizes,\n    };\n  }\n  /** updates the size of the pages.  */\n  updateSize(size: number) {\n    if (!size) {\n      return;\n    }\n    this.load({ size, page: 1 });\n  }\n}\n","import { Item } from '../item/item';\n\n/** Used for natural sorting of strings */\nconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\n/** Sorts strings (naturally) */\nexport function sortString(a, b) {\n  return collator.compare(a, b);\n}\n\n/** Sorts numbers */\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\n/** Sorts booleans */\nexport function sortBoolean(a, b) {\n  return a ? -1 : 1;\n}\n\n/** The Sorter is a singleton that handles all kinds of sorting operations. */\nexport abstract class Sorter<T> {\n\n  /** Contains sorting methods for different value types. */\n  static sortType = {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  };\n\n  /** Returns the sorting algorithm for the given item array. */\n  private static getAlgorithm(items: Array<Item<any>>, property?: string): (a, b) => number {\n    if (!items.length) {\n      return;\n    }\n    if (property && !items\n      .reduce((has, item) => has && item.sort(property) !== undefined, true)) {\n      console.warn('cannot sort property \"' + property + '\" because not all items have that property', items);\n      return;\n    }\n    const types = items\n      .map(item => typeof item.sort(property))\n      .filter((item, index, _items) => _items.indexOf(item) === index);\n    if (types.length > 1) {\n      console.warn('cannot sort items because they contain multiple types:', types);\n      return;\n    }\n    if (!this.sortType[types[0]]) {\n      console.warn('cannot sort items because no algorithm was found for type', types[0]);\n      return;\n    }\n    return this.sortType[types[0]];\n  }\n\n  /** Sorts a given Array of items after a given property.\n   * @param items Array of arbitrary content.\n   * @param property Optional property to sort after (For Objects)\n   * @param desc Optional Flag that will reverse sort the result (descending).\n   * @param resolve Optional resolve function to expose relevant the part of object that contains\n   *   the given property. */\n\n  static sort(items: Array<Item<any>>, property?: string, desc?: boolean): Array<any> {\n    const algorithm = this.getAlgorithm(items, property);\n    if (!algorithm) {\n      return;\n    }\n    items.sort((a, b) => {\n      if (!property) {\n        return algorithm(a.resolve(), b.resolve());\n      }\n      return algorithm(a.sort(property), b.sort(property));\n    });\n    if (desc) {\n      items.reverse();\n    }\n  }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { Collection } from '../collection/collection';\nimport { Field } from '../field/field';\nimport { Item } from '../item/item';\nimport { Pagination } from '../pagination/pagination';\nimport { Sorter } from '../sorter/sorter';\nimport { ListConfig } from './list-config.interface';\n\n/**\n * A more sophisticated Collection of Objects with arbitrary content.\n * It comes with features like resolve functions, identifiers, display formatting and sorting.\n */\nexport class List<T> extends Collection<Item<T>> {\n  /**\n   * Array of Properties that are relevant for each item. The fields are populated on construction\n   * via getFields method.\n   */\n  public fields: Array<Field>;\n  /**\n   * The List Configuration, click on ListConfig for details. Can be given an optional ListConfig.\n   */\n  public config: ListConfig<T>;\n  /**\n   * Current Value Groups (Different Unique Values).\n   */\n  groups = [];\n  /** The list's pagination (Optional) */\n  public pagination: Pagination<T>;\n  /** The items of the current page */\n  public page: Array<Item<T>> = [];\n  /** Subject that should be nexted when loading is finished */\n  protected change: Subject<List<T>> = new Subject();\n  /** Observable that is nexted when the list has changed. */\n  public change$: Observable<List<T>> = this.change.asObservable();\n\n  /** Getter for items, calls transform */\n  get display() {\n    if (!this.config || !this.config.display) {\n      return this.items;\n    }\n    return this.config.display(this.items);\n  }\n\n  /**\n   * Constructs the List. Populates the items and instantiates the fields.\n   */\n  constructor(values?: Array<T>, config: ListConfig<T> = {}, pagination?: Pagination<T>) {\n    super([]);\n    if (values) {\n      super.addAll(values.map(value => new Item(value, Object.assign({}, config))), false, false);\n    }\n    this.config = Object.assign({ page: 1, maxColumns: 8 }, config || {});\n    this.fields = this.getFields();\n    this.hideOverflowFields();\n    this.pagination = pagination || new Pagination(this.config, this.items.length);\n    this.change$.subscribe(() => {\n      this.pagination.select(this.config.page || 1, true);\n    });\n    if (!pagination) { // load if no custom pagination was given\n      this.pagination.change$.pipe(debounceTime(200))\n        .subscribe(_config => this.load(_config));\n      this.load();\n    }\n  }\n\n  /** Loads the list page with the given config or, if none given, uses the current config.\n   * Reapplies grouping (if any) and calls the change Subject. */\n  public load(config?: ListConfig<T>) {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.page = this.pagination.slice(this.items);\n    this.groupBy(this.config.sortBy);\n    this.change.next(this);\n  }\n\n  /** Adds the given item to the list and assigns the list config to the item*/\n  add(item: Item<T>, unique?: boolean, event: boolean = true) {\n    item.useConfig(this.config);\n    return super.add(item, unique, event);\n  }\n\n  /**\n   * Distills Array of item properties. Either uses keys of config.fields or parses the item\n   * properties directly.\n   */\n  protected getFields(): Array<Field> {\n    if (this.config && this.config.fields) {\n      return Object.keys(this.config.fields)\n        .filter((key) => this.config.fields[key].list !== false)\n        .map((field) => new Field(field, this.config.fields[field]));\n    }\n    const fields = [];\n    this.items.forEach((item) => {\n      item.getProperties().forEach(property => {\n        if (!fields.find((f) => f.property === property)) {\n          fields.push(new Field(property, { type: typeof item.resolve(property) }));\n        }\n      });\n    });\n    return fields;\n  }\n\n  public toggleVisibility(field) {\n    field.hideInList = !field.hideInList;\n    this.change.next(this);\n  }\n\n  /** Sets all fields that exceed the maxColumns to hidden */\n  protected hideOverflowFields() {\n    if (this.config && this.config.maxColumns) {\n      this.fields.filter(f => !f.hideInList).forEach((field, index) => {\n        if (index >= this.config.maxColumns && field.hideInList === undefined) {\n          field.hideInList = true;\n        }\n      });\n    }\n  }\n\n  /**\n   * Resolves the item with the given Array index or identifier (if configured)\n   */\n  id(identifier: any): Item<T> {\n    if (identifier === undefined) {\n      throw new Error(`cannot get item with identifier \"${identifier}\"`);\n    }\n    return this.items.find((item, key) => {\n      if (!item.config.identifier) {\n        return false;\n      }\n      return item.id() === identifier;\n    }) || this.items[identifier];\n  }\n\n  /** Filters the list after the given property and value */\n  public filter(property: string, value: any = '', operator: string = 'exact') {\n    this.config.filter = { [property]: value };\n    if (value === null) {\n      this.load();\n      return;\n      // this.page = [].concat(this.items);\n    }\n    // TODO find way to filter with pagination and without loosing filtered out items\n    this.page = this.items.filter((item) => {\n      return item.resolve(property).toLowerCase().includes(value.toLowerCase()); // TODO: better filter\n    }).slice(0, this.config.size || 100);\n  }\n\n  /** Clears the filter for given property or all properties if none given. */\n  clearFilter(property?: string) {\n    if (property) {\n      return this.filter(property, null);\n    }\n    this.load({\n      page: 1,\n      filter: {}\n    });\n  }\n\n  /** Helper function. Returns true if the given query value is empty (also recognizes empty array) */\n  isEmptyFilter(query: null | undefined | string | Array<any>) {\n    return query === '' ||\n      query === null ||\n      query === undefined ||\n      (Array.isArray(query) && !query.length);\n  }\n\n  /** Returns true if the given property has a filter set. If no property is given it returns true when no property has a filter. */\n  isFiltered(property?: string) {\n    if (!this.config.filter) {\n      return false;\n    }\n    if (!property) {\n      return Object.keys(this.config.filter)\n        .filter(key => !this.isEmptyFilter(this.config.filter[key]))\n        .length > 0;\n    }\n    return !this.isEmptyFilter(this.config.filter[property]);\n  }\n\n  /** Returns the filter */\n  getFilterValue(property?: string) {\n    if (!property) {\n      property = this.config.label;\n    }\n    if (!this.config.filter || !property) {\n      return undefined;\n    }\n    return this.config.filter[property];\n  }\n\n  /** Changes the config's sort variables to reflect the given sorting */\n  protected sortProperty(property: string, desc?: boolean) {\n    if (property !== this.config.sortBy) {\n      delete this.config.desc;\n      this.config.sortBy = property;\n    } else if (this.config.desc) {\n      delete this.config.sortBy;\n    }\n    this.config.desc = this.config.desc === undefined ? desc || false : !this.config.desc;\n  }\n\n  /** Returns true if the given sort state is active. You can either just check for a property + desc flag */\n  public isSorted(property: string, desc?: boolean) {\n    if (typeof desc === 'undefined') {\n      return this.config.sortBy === property;\n    }\n    return this.config.sortBy === property && this.config.desc === desc;\n  }\n\n  /** Sorts with given sorting, using the Sorter */\n  toggleSort(property: string, desc?: boolean) {\n    this.sortProperty(property, desc);\n    Sorter.sort(this.items, property, this.config.desc);\n    this.load(this.config);\n  }\n  /** Toggles selectMode of list config */\n  toggleSelectMode() {\n    this.config = Object.assign({}, this.config, {\n      selectMode: !this.config.selectMode\n    });\n    this.change.next(this);\n  }\n\n  /** Returns an Array of all unique values of the given property */\n  groupBy(property) {\n    delete this.groups;\n    const page = this.pagination ? this.pagination.getPage() : 0;\n    if (!property || !this.config.fields || !this.config.fields[property] || !this.config.fields[property].group) {\n      this.groups = [{\n        page,\n        sortBy: this.config.sortBy,\n        desc: this.config.desc\n      }];\n      return;\n    }\n    const groups = [];\n    this.page.forEach(item => {\n      const value = item.group(property);\n      if (!groups.find((g) => g.value === value)) {\n        groups.push({\n          value,\n          page,\n          property: this.config.sortBy,\n          desc: this.config.desc\n        });\n      }\n    });\n    this.groups = groups;\n  }\n\n  /** Item tracking for *ngFor. */\n  public trackItem(index, item) {\n    return index;\n  }\n  /** Returns an array of all sortable fields */\n  public sortableFields() {\n    return this.fields.filter(field => field.sortable);\n  }\n  /** Returns true if the given field index in the visible fields is higher than maxColumns.  */\n  public isOverTheMax(field: Field) {\n    return this.fields.filter(f => !f.hideInList).indexOf(field) >= this.config.maxColumns;\n  }\n}\n","import { Item } from '../item/item';\nimport { List } from '../list/list';\n\n/**\n * Extension of List that keeps track of selected items. It can keep track of items via identifier\n * property even if the object references are being replaced, e.g. when reloading a set if items.\n * It supports solo and multiple selection.\n */\nexport class Selection<T> extends List<T> {\n\n  /** Adds item to selection. If solo is true, all other items will be removed. */\n  select(item: Item<T>, solo = this.config.solo) {\n    if (solo) {\n      this.removeAll();\n      this.add(item);\n    } else {\n      this.add(item, true);\n    }\n  }\n\n  /** Returns the index of the given item or an item that has the same identifier or value. */\n  index(item: Item<T>): number {\n    if (this.config.identifier) {\n      return this.items.indexOf(this.id(item.resolve(this.config.identifier)));\n    }\n    return this.items.indexOf(this.items.find(i => i.resolve() === item.resolve()));\n  }\n\n  has(item: Item<T>) {\n    return super.has(item) || this.index(item) !== -1;\n  }\n\n  /** Toggle item in and out of selection.\n   * The solo property will change the behaviour like you would expect it to behave :) */\n  toggle(item: Item<T>, solo = this.config.solo, event: boolean = true) {\n    if (!item) {\n      console.warn('toggle malicious item', item);\n      return;\n    }\n    if (!this.has(item)) {\n      if (solo) {\n        return this.replaceWith([item], event);\n      }\n      this.add(item, event);\n    } else if (solo) {\n      if (this.items.length > 1) {\n        // if multiple are selected => keep item\n        return this.replaceWith([item], event);\n      }\n      this.removeAll();\n    } else {\n      this.remove(item, event);\n    }\n  }\n\n  /** Toggle multiple items. You can control if the items should be kept, flipped, or be kept unique*/\n  toggleAll(items: Array<Item<T>>, flip?: boolean, keep?: boolean) {\n    items = items || [];\n    // items = Array.isArray(items) ? items : [items];\n    if (!flip && !keep && this.hasAll(items)) {\n      this.removeAll(items);\n      return this;\n    }\n    items.forEach((item) => {\n      if (flip) {\n        this.toggle(item, this.config.solo, false);\n      } else if (!this.hasAll(items)) {\n        this.add(item, true, false);\n      }\n    });\n    this.update.next(this);\n    return this;\n  }\n\n  /** Flips all items. */\n  flipAll(items) {\n    return this.toggleAll(items, true);\n  }\n\n  /** Returns an Array containing the current value. If an identifier is set, the array will consist of the identifier values,\n   * if not, it will resolve the item contents. */\n  getValue(solo: boolean = this.config.solo) {\n    const value = this.items.map((item) => this.config.identifier ? item.id() : item.resolve());\n    if (solo) {\n      return value.length ? value[0] : null;\n    }\n    return value;\n  }\n\n}\n"],"names":["Subject","tslib_1.__extends","debounceTime"],"mappings":"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"}
