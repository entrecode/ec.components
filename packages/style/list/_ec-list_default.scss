//scss-lint:disable NestingDepth

.ec-list {
  .ec-list__select {
    padding: rem(8);
  }

  .ec-output_avatar {
    width: em(32);
    height: em(32);
  }

  .is-sorted-asc {
    .ec-list-sortable-indicator {
      &::after {
        border-top-color: getColor(text);
      }
    }
  }

  .is-sorted-desc {
    .ec-list-sortable-indicator {
      &::before {
        border-bottom-color: getColor(text);
      }
    }
  }

  .ec-output_tags-list {
    .tag {
      font-size: 0.75em;
    }
  }
}

.ec-list-cell {
  padding: rem(8);
}

.ec-list-group {
  .ec-list-group-header {
    margin-top: rem($base-padding);

    .ec-list-group-header__title {
      font-weight: bold;
      text-align: center;
      font-size: 0.875em;
    }
  }
}

.ec-list-header {
  font-size: 0.875em;
  position: relative;

  .ec-list-cell {
    font-weight: bold;

    .ec-list-field__title {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    &.is-sortable {
      &.is-sorted {
        font-weight: bold;
      }
    }

    &.is-filterable {
      cursor: pointer;
    }
  }
}

.ec-list-item {
  transition: all 0.4s;

  &.is-selected,
  &:hover {
    background-color: getColor(state, hover);
  }
}

.ec-list-sortable-indicator {
  margin-left: rem(8);
  height: rem(12);
  position: relative;
  width: rem(12);
  align-self: center;
  flex-grow: 0;

  &::after,
  &::before {
    content: '';
    position: absolute;
    border: rem(4) solid transparent;
    left: 50%;
    margin-left: rem(-4);
  }

  &::before {
    border-bottom-color: getColor(text, lightest);
    top: rem(-4);
  }

  &::after {
    border-top-color: getColor(text, lightest);
    bottom: rem(-4);
  }
}
