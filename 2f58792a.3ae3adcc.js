(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{108:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return c})),a.d(n,"rightToc",(function(){return o})),a.d(n,"default",(function(){return l}));var t=a(1),r=(a(0),a(179));const c={id:"monorepo",title:"Approaches to build a monorepo",sidebar_label:"Monorepo"},o=[{value:"1. Using workspaces with src folder",id:"1-using-workspaces-with-src-folder",children:[]},{value:"2. Using different folders for lerna/workspaces",id:"2-using-different-folders-for-lernaworkspaces",children:[]}],s={rightToc:o};function l({components:e,...n}){return Object(r.b)("wrapper",Object(t.a)({},s,n,{components:e,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"1-using-workspaces-with-src-folder"},"1. Using workspaces with src folder"),Object(r.b)("p",null,"This approach will symlink the package folders directly. When doing so, lerna will be able to tell the changed packages. A problem will be the correct importing of built/non-built files."),Object(r.b)("p",null,"lerna.json"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n  "version": "independent",\n  "useWorkspaces": true,\n  "npmClient": "yarn"\n}\n')),Object(r.b)("p",null,"package.json"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'"workspaces": [\n  "packages/*"\n],\n')),Object(r.b)("p",null,"To ensure correct module resolving, we set the each packages main file to its public_api.ts:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n  "name": "@ec.components/calendar",\n  "main": "src/public_api.ts",\n}\n')),Object(r.b)("p",null,"when running ",Object(r.b)("inlineCode",{parentName:"p"},"ng build calendar"),", the package.json will be copied to dist/package.json with the main field replaced by ",Object(r.b)("inlineCode",{parentName:"p"},"bundles/ec.components-calendar.umd.js"),"."),Object(r.b)("p",null,"PROBLEM:"),Object(r.b)("p",null,"as soon as building a package that depends on another package, like ui, the compiler complains:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-sh"}),"error TS6059: File '/Users/felix/entrecode/ec.components/packages/calendar/src/lib/calendar.module.ts' is not under 'rootDir' '/Users/felix/entrecode/ec.components/packages/ui/src'. 'rootDir' is expected to contain all source files.\n")),Object(r.b)("p",null,"ngc (which wraps tsc) hits the source files of the calendar module.\nSee ",Object(r.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/ng-packagr/ng-packagr/issues/987"}),"https://github.com/ng-packagr/ng-packagr/issues/987"),"."),Object(r.b)("h2",{id:"2-using-different-folders-for-lernaworkspaces"},"2. Using different folders for lerna/workspaces"),Object(r.b)("p",null,"Use dist for symlinking:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'  "workspaces": [\n    "packages/*/dist"\n  ],\n')),Object(r.b)("p",null,"Build calendar (which has no internal dependencies) first:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"ng build calendar")),Object(r.b)("p",null,"create symlink of calendar dist folder to @ec.components/calendar:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-sh"}),"cd node_modules\nmkdir @ec.components && cd \\@ec.components\nln -s ../../packages/calendar/dist calendar\n")),Object(r.b)("p",null,"This process can be automated by a script:"),Object(r.b)("p",null,"symlink-package.sh"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-sh"}),"cd node_modules/\\@ec.components\nln -s ../../packages/$1/dist $1\n")),Object(r.b)("p",null,"build-package.hs:"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-sh"}),"ng build $1\nsh scripts/symlink-package.sh $1\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-sh"}),"sh scripts/build-package.sh ui\n")),Object(r.b)("p",null,"In lerna.json, we add the root package folders (as opposed to dist folders in package.json):"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n  "version": "independent",\n  "useWorkspaces": false,\n  "npmClient": "yarn",\n  "packages": [\n    "packages/ace",\n    "packages/calendar",\n    "packages/core",\n    "packages/data",\n    "packages/location",\n    "packages/medium-editor",\n    "packages/tinymce",\n    "packages/ui"\n  ]\n}\n')),Object(r.b)("p",null,"Note that it only works when settings useWorkspaces to false!"))}l.isMDXComponent=!0},179:function(e,n,a){"use strict";a.d(n,"a",(function(){return b})),a.d(n,"b",(function(){return g}));var t=a(0),r=a.n(t);function c(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){c(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},c=Object.keys(e);for(t=0;t<c.length;t++)a=c[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)a=c[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),i=function(e){var n=r.a.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):s({},n,{},e)),a},b=function(e){var n=i(e.components);return r.a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=Object(t.forwardRef)((function(e,n){var a=e.components,t=e.mdxType,c=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=i(a),d=t,g=b["".concat(o,".").concat(d)]||b[d]||u[d]||c;return a?r.a.createElement(g,s({ref:n},p,{components:a})):r.a.createElement(g,s({ref:n},p))}));function g(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var c=a.length,o=new Array(c);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:t,o[1]=s;for(var p=2;p<c;p++)o[p]=a[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);