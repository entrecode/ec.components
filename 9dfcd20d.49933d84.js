(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{140:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"rightToc",(function(){return r})),n.d(t,"default",(function(){return l}));var i=n(1),c=(n(0),n(179));const a={id:"entry-list",title:"Entry List",sidebar_label:"Entry List"},r=[{value:"Basic Example",id:"basic-example",children:[]},{value:"Methods",id:"methods",children:[{value:"load",id:"load",children:[]}]},{value:"Outputs",id:"outputs",children:[{value:"columnClicked",id:"columnclicked",children:[]}]},{value:"Inputs",id:"inputs",children:[{value:"config",id:"config",children:[]},{value:"config.hidePagination",id:"confighidepagination",children:[]},{value:"config.disableHeader",id:"configdisableheader",children:[]},{value:"config.fields",id:"configfields",children:[]}]}],o={rightToc:r};function l({components:e,...t}){return Object(c.b)("wrapper",Object(i.a)({},o,t,{components:e,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Entry Lists load multiple entries from a model and display them in a paginated list. It supports load error notifications, loader, filtering, sorting and automatic reloading + many customizations."),Object(c.b)("h2",{id:"basic-example"},"Basic Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-html"}),'<ec-entry-list model="muffin"></ec-entry-list>\n')),Object(c.b)("p",null,"The above snippet will either consume the config for muffin in ModelConfigService, or if no config is found, generate one from the model schema."),Object(c.b)("h2",{id:"methods"},"Methods"),Object(c.b)("h3",{id:"load"},"load"),Object(c.b)("p",null,"params:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"config")),Object(c.b)("p",null,"(Re)Loads the list."),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-html"}),'<ec-entry-list #muffinList model="muffin"></ec-entry-list>\n')),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"this.muffinList.load();\n")),Object(c.b)("h4",{id:"loadconfig"},"load#config"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"this.muffinList.load({ sortBy: 'amazement_factor' });\n")),Object(c.b)("h2",{id:"outputs"},"Outputs"),Object(c.b)("h3",{id:"columnclicked"},"columnClicked"),Object(c.b)("p",null,"The columnClicked Output will be emitted when an entry is clicked. You get an Item containing the clicked entry as ",Object(c.b)("em",{parentName:"p"},"$event"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-html"}),'<ec-crud model="muffin" (columnClicked)="clickedMuffin($event)"></ec-crud>\n')),Object(c.b)("p",null,"now you could e.g. navigate to a detail page:"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"clickedMuffin(muffin: Item<EntryResource>) {\n  this.router.navigate(['muffin', muffin.id()]);\n}\n")),Object(c.b)("p",null,"See ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/core-concepts/items"}),"Items")," for more info on the emitted object."),Object(c.b)("p",null,"If you do not use the columnClicked Output, nothing will happen on click by default. If you want to edit the entry without a custom route/form, consider using ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/components/crud"}),"crud.component"),"."),Object(c.b)("h2",{id:"inputs"},"Inputs"),Object(c.b)("h3",{id:"config"},"config"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-html"}),'<ec-entry-list model="muffin" [config]="muffinListConfig"></ec-entry-list>\n')),Object(c.b)("p",null,"See ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/core-concepts/config-pipeline"}),"Config Pipeline")," for other ways to pass configuration."),Object(c.b)("h3",{id:"confighidepagination"},"config.hidePagination"),Object(c.b)("p",null,"If true, no pagination will be visible. Expects you to use ec-pagination somewhere else:"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-html"}),'<ec-entry-list #muffinList model="muffin" [config]="{hidePagination: true}"></ec-entry-list>\n\x3c!-- --\x3e\n<ec-pagination [pagination]="muffinList?.list?.pagination"></ec-pagination>\n')),Object(c.b)("h3",{id:"configdisableheader"},"config.disableHeader"),Object(c.b)("p",null,"If true, no list-header will be visible. This way you can render the list header on a different spot in your markup:"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-html"}),'<ec-list-header [list]="muffinList?.list"></ec-list-header>\n\x3c!-- --\x3e\n<ec-entry-list #muffinList model="deal" [config]="{disableHeader: true}"></ec-entry-list>\n')),Object(c.b)("h3",{id:"configfields"},"config.fields"),Object(c.b)("p",null,"See ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"../core-concepts/fields.md"}),"Fields Config"),".\nThe fields option defines which fields should be visible, and how they should look and behave."))}l.isMDXComponent=!0},179:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return f}));var i=n(0),c=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,c=function(e,t){if(null==e)return{};var n,i,c={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var u=c.a.createContext({}),s=function(e){var t=c.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},b=function(e){var t=s(e.components);return c.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},p=Object(i.forwardRef)((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,r=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),b=s(n),p=i,f=b["".concat(r,".").concat(p)]||b[p]||d[p]||a;return n?c.a.createElement(f,o({ref:t},u,{components:n})):c.a.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var u=2;u<a;u++)r[u]=n[u];return c.a.createElement.apply(null,r)}return c.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);