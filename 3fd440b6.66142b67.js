(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{112:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return i}));var r=n(1),c=(n(0),n(179));const a={id:"accounts",title:"Accounts & Rights",sidebar_label:"Accounts & Rights"},o=[{value:"Account Systems",id:"account-systems",children:[{value:"Public Users",id:"public-users",children:[]},{value:"EC Users",id:"ec-users",children:[]}]},{value:"In the Components",id:"in-the-components",children:[{value:"Methods",id:"methods",children:[]}]}],s={rightToc:o};function i({components:e,...t}){return Object(c.b)("wrapper",Object(r.a)({},s,t,{components:e,mdxType:"MDXLayout"}),Object(c.b)("p",null,"This document is a quick and simplified introduction to the entrecode account systems. For a full description, refer to the entrecode API docs ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.entrecode.de/account_server/"}),"about the account server")," and the ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.entrecode.de/data_manager/#user-management"}),"user management"),"."),Object(c.b)("h2",{id:"account-systems"},"Account Systems"),Object(c.b)("p",null,"The access entrecode API is governed by two types of account systems: Public Users and EC Users."),Object(c.b)("h3",{id:"public-users"},"Public Users"),Object(c.b)("p",null,Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.entrecode.de/data_manager/#user-management"}),"Public Users")," only have access to the Public APIs, meaning just model entries and assets. The access is controlled by ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.entrecode.de/resources/dm-role/"}),"Roles")," and ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.entrecode.de/data_manager/#permission-policies"}),"Policies"),"."),Object(c.b)("h3",{id:"ec-users"},"EC Users"),Object(c.b)("p",null,Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.entrecode.de/resources/account/"}),"EC Users"),' have access to the Public APIs and all other entrecode "private" APIs like models, datamanagers, apps and more. The access is controlled by ',Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.entrecode.de/resources/group/"}),"Groups")," and Permissions."),Object(c.b)("h2",{id:"in-the-components"},"In the Components"),Object(c.b)("p",null,"The components will decide to hide or show specific UI elements such as delete buttons, based on the current users access rights."),Object(c.b)("h3",{id:"methods"},"Methods"),Object(c.b)("p",null,"The components abstraction of the two account systems is management via methods:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"get: user can read the data entries"),Object(c.b)("li",{parentName:"ul"},"post: user can create new data entries"),Object(c.b)("li",{parentName:"ul"},"put: user can modify existing data entries"),Object(c.b)("li",{parentName:"ul"},"delete: user can delete existing data entries")),Object(c.b)("p",null,"The available methods for the current user are determined by ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/entrecode/ec.components/blob/master/packages/data/src/lib/auth/auth.service.ts#L128"}),"AuthService#getAllowedModelMethods")," and ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/entrecode/ec.components/blob/master/packages/data/src/lib/auth/auth.service.ts#L89"}),"AuthService#getAllowedResourceMethods"),"."))}i.isMDXComponent=!0},179:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),c=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var u=c.a.createContext({}),l=function(e){var t=c.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},d=function(e){var t=l(e.components);return c.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},p=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(n),p=r,m=d["".concat(o,".").concat(p)]||d[p]||b[p]||a;return n?c.a.createElement(m,s({ref:t},u,{components:n})):c.a.createElement(m,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);